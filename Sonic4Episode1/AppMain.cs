// Decompiled with JetBrains decompiler
// Type: AppMain
// Assembly: Sonic4 ep I, Version=1.2.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 093CE2FC-33E2-4332-B0FE-1EA1E44D3AE7
// Assembly location: C:\Users\wamwo\Documents\GitHub\Sonic4Ep1-WP7-Decompilation\XAP\Sonic4 ep I.dll

using System;
using System.Collections;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.IO.IsolatedStorage;
using System.Linq;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using accel;
using dbg;
using er;
using er.web;
using gs;
using gs.backup;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Audio;
using Microsoft.Xna.Framework.Content;
using Microsoft.Xna.Framework.Graphics;
using Microsoft.Xna.Framework.Graphics.PackedVector;
using Microsoft.Xna.Framework.Input;
using Microsoft.Xna.Framework.Media;
using mpp;
using setting;

public partial class AppMain
{

    #region data
    public float[] nngSinCosTbl = new float[1025]
    {
    0.0f,
    0.001534f,
    0.003068f,
    0.004602f,
    0.006136f,
    0.00767f,
    0.009204f,
    0.010738f,
    0.012272f,
    0.013805f,
    0.015339f,
    0.016873f,
    0.018407f,
    0.01994f,
    0.021474f,
    0.023008f,
    0.024541f,
    0.026075f,
    0.027608f,
    0.029142f,
    0.030675f,
    0.032208f,
    0.033741f,
    0.035274f,
    0.036807f,
    0.03834f,
    0.039873f,
    0.041406f,
    0.042938f,
    0.044471f,
    0.046003f,
    0.047535f,
    0.049068f,
    0.0506f,
    0.052132f,
    0.053664f,
    0.055195f,
    0.056727f,
    0.058258f,
    0.05979f,
    0.061321f,
    0.062852f,
    0.064383f,
    0.065913f,
    0.067444f,
    0.068974f,
    0.070505f,
    0.072035f,
    0.073565f,
    0.075094f,
    0.076624f,
    0.078153f,
    0.079682f,
    0.081211f,
    0.08274f,
    0.084269f,
    0.085797f,
    0.087326f,
    0.088854f,
    0.090381f,
    0.091909f,
    0.093436f,
    0.094963f,
    0.09649f,
    0.098017f,
    0.099544f,
    0.10107f,
    0.102596f,
    0.104122f,
    0.105647f,
    0.107172f,
    0.108697f,
    0.110222f,
    0.111747f,
    0.113271f,
    0.114795f,
    0.116319f,
    0.117842f,
    0.119365f,
    0.120888f,
    0.122411f,
    0.123933f,
    0.125455f,
    0.126977f,
    0.128498f,
    0.130019f,
    0.13154f,
    0.133061f,
    0.134581f,
    0.136101f,
    0.13762f,
    0.139139f,
    0.140658f,
    0.142177f,
    0.143695f,
    0.145213f,
    0.14673f,
    0.148248f,
    0.149765f,
    0.151281f,
    0.152797f,
    0.154313f,
    0.155828f,
    0.157343f,
    0.158858f,
    0.160372f,
    0.161886f,
    0.1634f,
    20f * (float) Math.PI / 381f,
    0.166426f,
    0.167938f,
    0.16945f,
    0.170962f,
    0.172473f,
    0.173984f,
    0.175494f,
    0.177004f,
    0.178514f,
    0.180023f,
    0.181532f,
    0.18304f,
    0.184548f,
    0.186055f,
    0.187562f,
    0.189069f,
    0.190575f,
    0.19208f,
    0.193586f,
    0.19509f,
    0.196595f,
    0.198098f,
    0.199602f,
    0.201105f,
    0.202607f,
    0.204109f,
    0.20561f,
    0.207111f,
    0.208612f,
    0.210112f,
    0.211611f,
    0.21311f,
    0.214609f,
    0.216107f,
    0.217604f,
    0.219101f,
    0.220598f,
    0.222094f,
    0.223589f,
    0.225084f,
    0.226578f,
    0.228072f,
    0.229565f,
    0.231058f,
    0.23255f,
    0.234042f,
    0.235533f,
    0.237024f,
    0.238514f,
    0.240003f,
    0.241492f,
    0.24298f,
    0.244468f,
    0.245955f,
    0.247442f,
    0.248928f,
    0.250413f,
    0.251898f,
    0.253382f,
    0.254866f,
    0.256349f,
    0.257831f,
    0.259313f,
    0.260794f,
    0.262275f,
    0.263755f,
    0.265234f,
    0.266713f,
    0.268191f,
    0.269668f,
    0.271145f,
    0.272621f,
    0.274097f,
    0.275572f,
    0.277046f,
    0.27852f,
    0.279993f,
    0.281465f,
    0.282937f,
    0.284408f,
    0.285878f,
    0.287347f,
    0.288816f,
    0.290285f,
    0.291752f,
    0.293219f,
    0.294685f,
    0.296151f,
    0.297616f,
    0.29908f,
    0.300543f,
    0.302006f,
    0.303468f,
    0.304929f,
    0.30639f,
    0.30785f,
    0.309309f,
    0.310767f,
    0.312225f,
    0.313682f,
    0.315138f,
    0.316593f,
    0.318048f,
    0.319502f,
    0.320955f,
    0.322408f,
    0.323859f,
    0.32531f,
    0.32676f,
    0.32821f,
    0.329658f,
    0.331106f,
    0.332553f,
    0.334f,
    0.335445f,
    0.33689f,
    0.338334f,
    0.339777f,
    0.341219f,
    0.342661f,
    0.344101f,
    0.345541f,
    0.34698f,
    0.348419f,
    0.349856f,
    0.351293f,
    0.352729f,
    0.354164f,
    0.355598f,
    0.357031f,
    0.358463f,
    0.359895f,
    0.361326f,
    0.362756f,
    0.364185f,
    0.365613f,
    0.36704f,
    0.368467f,
    0.369892f,
    0.371317f,
    0.372741f,
    0.374164f,
    0.375586f,
    0.377007f,
    0.378428f,
    0.379847f,
    0.381266f,
    0.382683f,
    0.3841f,
    0.385516f,
    0.386931f,
    0.388345f,
    0.389758f,
    0.39117f,
    0.392582f,
    0.393992f,
    0.395401f,
    0.39681f,
    0.398218f,
    0.399624f,
    0.40103f,
    0.402435f,
    0.403838f,
    0.405241f,
    0.406643f,
    0.408044f,
    0.409444f,
    0.410843f,
    0.412241f,
    0.413638f,
    0.415034f,
    0.41643f,
    0.417824f,
    0.419217f,
    0.420609f,
    0.422f,
    0.42339f,
    0.42478f,
    0.426168f,
    0.427555f,
    0.428941f,
    0.430326f,
    0.431711f,
    0.433094f,
    0.434476f,
    0.435857f,
    0.437237f,
    0.438616f,
    0.439994f,
    0.441371f,
    0.442747f,
    0.444122f,
    0.445496f,
    0.446869f,
    0.448241f,
    0.449611f,
    0.450981f,
    0.45235f,
    0.453717f,
    0.455084f,
    0.456449f,
    0.457813f,
    0.459177f,
    0.460539f,
    0.4619f,
    0.46326f,
    0.464619f,
    0.465977f,
    0.467333f,
    0.468689f,
    0.470043f,
    0.471397f,
    0.472749f,
    0.4741f,
    0.47545f,
    0.476799f,
    0.478147f,
    0.479494f,
    0.480839f,
    0.482184f,
    0.483527f,
    0.484869f,
    0.48621f,
    0.48755f,
    0.488889f,
    0.490227f,
    0.491563f,
    0.492898f,
    0.494232f,
    0.495565f,
    0.496897f,
    0.498228f,
    0.499557f,
    0.500885f,
    0.502212f,
    0.503538f,
    0.504863f,
    0.506187f,
    0.507509f,
    0.50883f,
    0.51015f,
    0.511469f,
    0.512786f,
    0.514103f,
    0.515418f,
    0.516732f,
    0.518044f,
    0.519356f,
    0.520666f,
    0.521975f,
    0.523283f,
    0.52459f,
    0.525895f,
    0.527199f,
    0.528502f,
    0.529804f,
    0.531104f,
    0.532403f,
    0.533701f,
    0.534998f,
    0.536293f,
    0.537587f,
    0.53888f,
    0.540172f,
    0.541462f,
    0.542751f,
    0.544039f,
    0.545325f,
    0.54661f,
    0.547894f,
    0.549177f,
    0.550458f,
    0.551738f,
    0.553017f,
    0.554294f,
    0.55557f,
    0.556845f,
    0.558119f,
    0.559391f,
    0.560662f,
    0.561931f,
    0.563199f,
    0.564466f,
    0.565732f,
    0.566996f,
    0.568259f,
    0.569521f,
    0.570781f,
    0.57204f,
    0.573297f,
    0.574553f,
    0.575808f,
    0.577062f,
    0.578314f,
    0.579565f,
    0.580814f,
    0.582062f,
    0.583309f,
    0.584554f,
    0.585798f,
    0.58704f,
    0.588282f,
    0.589521f,
    0.59076f,
    0.591997f,
    0.593232f,
    0.594467f,
    0.595699f,
    0.596931f,
    0.598161f,
    0.599389f,
    0.600616f,
    0.601842f,
    0.603067f,
    0.60429f,
    0.605511f,
    0.606731f,
    0.60795f,
    0.609167f,
    0.610383f,
    0.611597f,
    0.61281f,
    0.614022f,
    0.615232f,
    0.61644f,
    0.617647f,
    0.618853f,
    0.620057f,
    0.62126f,
    0.622461f,
    0.623661f,
    0.62486f,
    0.626056f,
    0.627252f,
    0.628446f,
    0.629638f,
    0.630829f,
    0.632019f,
    0.633207f,
    0.634393f,
    0.635578f,
    0.636762f,
    0.637944f,
    0.639124f,
    0.640303f,
    0.641481f,
    0.642657f,
    0.643832f,
    0.645005f,
    0.646176f,
    0.647346f,
    0.648514f,
    0.649681f,
    0.650847f,
    0.652011f,
    0.653173f,
    0.654334f,
    0.655493f,
    0.656651f,
    0.657807f,
    0.658961f,
    0.660114f,
    0.661266f,
    0.662416f,
    0.663564f,
    0.664711f,
    0.665856f,
    0.667f,
    0.668142f,
    0.669283f,
    0.670422f,
    0.671559f,
    0.672695f,
    0.673829f,
    0.674962f,
    0.676093f,
    0.677222f,
    0.67835f,
    0.679476f,
    0.680601f,
    0.681724f,
    0.682846f,
    0.683965f,
    0.685084f,
    0.6862f,
    0.687315f,
    0.688429f,
    0.689541f,
    0.690651f,
    0.691759f,
    0.692866f,
    0.693971f,
    0.695075f,
    0.696177f,
    0.697277f,
    0.698376f,
    0.699473f,
    0.700569f,
    0.701663f,
    0.702755f,
    0.703845f,
    0.704934f,
    0.706021f,
    0.707107f,
    0.708191f,
    0.709273f,
    0.710353f,
    0.711432f,
    0.712509f,
    0.713585f,
    0.714659f,
    0.715731f,
    0.716801f,
    0.71787f,
    0.718937f,
    0.720003f,
    0.721066f,
    0.722128f,
    0.723189f,
    0.724247f,
    0.725304f,
    0.726359f,
    0.727413f,
    0.728464f,
    0.729514f,
    0.730563f,
    0.731609f,
    0.732654f,
    0.733697f,
    0.734739f,
    0.735779f,
    0.736817f,
    0.737853f,
    0.738887f,
    0.73992f,
    0.740951f,
    0.74198f,
    0.743008f,
    0.744034f,
    0.745058f,
    0.74608f,
    0.747101f,
    0.748119f,
    0.749136f,
    0.750152f,
    0.751165f,
    0.752177f,
    0.753187f,
    0.754195f,
    0.755201f,
    0.756206f,
    0.757209f,
    0.75821f,
    0.759209f,
    0.760207f,
    0.761202f,
    0.762196f,
    0.763188f,
    0.764179f,
    0.765167f,
    0.766154f,
    0.767139f,
    0.768122f,
    0.769103f,
    0.770083f,
    0.771061f,
    0.772036f,
    0.77301f,
    0.773983f,
    0.774953f,
    0.775922f,
    0.776888f,
    0.777853f,
    0.778817f,
    0.779778f,
    0.780737f,
    0.781695f,
    0.782651f,
    0.783605f,
    0.784557f,
    0.785507f,
    0.786455f,
    0.787402f,
    0.788346f,
    0.789289f,
    0.79023f,
    0.791169f,
    0.792107f,
    0.793042f,
    0.793975f,
    0.794907f,
    0.795837f,
    0.796765f,
    0.797691f,
    0.798615f,
    0.799537f,
    0.800458f,
    0.801376f,
    0.802293f,
    0.803208f,
    0.80412f,
    0.805031f,
    0.80594f,
    0.806848f,
    0.807753f,
    0.808656f,
    0.809558f,
    0.810457f,
    0.811355f,
    0.812251f,
    0.813144f,
    0.814036f,
    0.814926f,
    0.815814f,
    0.816701f,
    0.817585f,
    0.818467f,
    0.819348f,
    0.820226f,
    0.821102f,
    0.821977f,
    0.82285f,
    0.823721f,
    0.824589f,
    0.825456f,
    0.826321f,
    0.827184f,
    0.828045f,
    0.828904f,
    0.829761f,
    0.830616f,
    0.83147f,
    0.832321f,
    0.83317f,
    0.834018f,
    0.834863f,
    0.835706f,
    0.836548f,
    0.837387f,
    0.838225f,
    0.83906f,
    0.839894f,
    0.840725f,
    0.841555f,
    0.842383f,
    0.843208f,
    0.844032f,
    0.844854f,
    0.845673f,
    0.846491f,
    0.847307f,
    0.84812f,
    0.848932f,
    0.849742f,
    0.85055f,
    0.851355f,
    0.852159f,
    0.852961f,
    0.85376f,
    0.854558f,
    0.855354f,
    0.856147f,
    0.856939f,
    0.857729f,
    0.858516f,
    0.859302f,
    0.860085f,
    0.860867f,
    0.861646f,
    0.862424f,
    0.863199f,
    0.863973f,
    0.864744f,
    0.865514f,
    0.866281f,
    0.867046f,
    0.867809f,
    0.868571f,
    0.86933f,
    0.870087f,
    0.870842f,
    0.871595f,
    0.872346f,
    0.873095f,
    0.873842f,
    0.874587f,
    0.875329f,
    0.87607f,
    0.876809f,
    0.877545f,
    0.87828f,
    0.879012f,
    0.879743f,
    0.880471f,
    0.881197f,
    0.881921f,
    0.882643f,
    0.883363f,
    0.884081f,
    0.884797f,
    0.885511f,
    0.886223f,
    0.886932f,
    0.88764f,
    0.888345f,
    0.889048f,
    0.88975f,
    0.890449f,
    0.891146f,
    0.891841f,
    0.892534f,
    0.893224f,
    0.893913f,
    0.894599f,
    0.895284f,
    0.895966f,
    0.896646f,
    0.897325f,
    0.898001f,
    0.898674f,
    0.899346f,
    0.900016f,
    0.900683f,
    0.901349f,
    0.902012f,
    0.902673f,
    0.903332f,
    0.903989f,
    0.904644f,
    0.905297f,
    0.905947f,
    0.906596f,
    0.907242f,
    0.907886f,
    0.908528f,
    0.909168f,
    0.909806f,
    0.910441f,
    0.911075f,
    0.911706f,
    0.912335f,
    0.912962f,
    0.913587f,
    0.91421f,
    0.91483f,
    0.915449f,
    0.916065f,
    0.916679f,
    0.917291f,
    0.917901f,
    0.918508f,
    0.919114f,
    0.919717f,
    0.920318f,
    0.920917f,
    0.921514f,
    0.922109f,
    0.922701f,
    0.923291f,
    0.92388f,
    0.924465f,
    0.925049f,
    0.925631f,
    0.92621f,
    0.926787f,
    0.927363f,
    0.927935f,
    0.928506f,
    0.929075f,
    0.929641f,
    0.930205f,
    0.930767f,
    0.931327f,
    0.931884f,
    0.93244f,
    0.932993f,
    0.933544f,
    0.934093f,
    0.934639f,
    0.935184f,
    0.935726f,
    0.936266f,
    0.936803f,
    0.937339f,
    0.937872f,
    0.938404f,
    0.938932f,
    0.939459f,
    0.939984f,
    0.940506f,
    0.941026f,
    0.941544f,
    0.94206f,
    0.942573f,
    0.943084f,
    0.943593f,
    0.9441f,
    0.944605f,
    0.945107f,
    0.945607f,
    0.946105f,
    0.946601f,
    0.947094f,
    0.947586f,
    0.948075f,
    0.948561f,
    0.949046f,
    0.949528f,
    0.950008f,
    0.950486f,
    0.950962f,
    0.951435f,
    0.951906f,
    0.952375f,
    0.952842f,
    0.953306f,
    0.953768f,
    0.954228f,
    0.954686f,
    0.955141f,
    0.955594f,
    0.956045f,
    0.956494f,
    0.95694f,
    0.957385f,
    0.957826f,
    0.958266f,
    0.958703f,
    0.959139f,
    0.959571f,
    0.960002f,
    0.960431f,
    0.960857f,
    0.96128f,
    0.961702f,
    0.962121f,
    0.962538f,
    0.962953f,
    0.963366f,
    0.963776f,
    0.964184f,
    0.96459f,
    0.964993f,
    0.965394f,
    0.965793f,
    0.96619f,
    0.966584f,
    0.966976f,
    0.967366f,
    0.967754f,
    0.968139f,
    0.968522f,
    0.968903f,
    0.969281f,
    0.969657f,
    0.970031f,
    0.970403f,
    0.970772f,
    0.971139f,
    0.971504f,
    0.971866f,
    0.972227f,
    0.972584f,
    0.97294f,
    0.973293f,
    0.973644f,
    0.973993f,
    0.974339f,
    0.974684f,
    0.975025f,
    0.975365f,
    0.975702f,
    0.976037f,
    0.97637f,
    0.9767f,
    0.977028f,
    0.977354f,
    0.977677f,
    0.977998f,
    0.978317f,
    0.978634f,
    0.978948f,
    0.97926f,
    0.97957f,
    0.979877f,
    0.980182f,
    0.980485f,
    0.980785f,
    0.981083f,
    0.981379f,
    0.981673f,
    0.981964f,
    0.982253f,
    0.982539f,
    0.982824f,
    0.983105f,
    0.983385f,
    0.983662f,
    0.983937f,
    0.98421f,
    0.98448f,
    0.984748f,
    0.985014f,
    0.985278f,
    0.985539f,
    0.985798f,
    0.986054f,
    0.986308f,
    0.98656f,
    0.986809f,
    0.987057f,
    0.987301f,
    0.987544f,
    0.987784f,
    0.988022f,
    0.988258f,
    0.988491f,
    0.988722f,
    0.98895f,
    0.989177f,
    0.9894f,
    0.989622f,
    0.989841f,
    0.990058f,
    0.990273f,
    0.990485f,
    0.990695f,
    0.990903f,
    0.991108f,
    0.991311f,
    0.991511f,
    0.99171f,
    0.991906f,
    0.992099f,
    0.992291f,
    0.99248f,
    0.992666f,
    0.99285f,
    0.993032f,
    0.993212f,
    0.993389f,
    0.993564f,
    0.993737f,
    0.993907f,
    0.994075f,
    0.99424f,
    0.994404f,
    0.994565f,
    0.994723f,
    0.994879f,
    0.995033f,
    0.995185f,
    0.995334f,
    0.995481f,
    0.995625f,
    0.995767f,
    0.995907f,
    0.996045f,
    0.99618f,
    0.996313f,
    0.996443f,
    0.996571f,
    0.996697f,
    0.99682f,
    0.996941f,
    0.99706f,
    0.997176f,
    0.99729f,
    0.997402f,
    0.997511f,
    0.997618f,
    0.997723f,
    0.997825f,
    0.997925f,
    0.998023f,
    0.998118f,
    0.998211f,
    0.998302f,
    0.99839f,
    0.998476f,
    0.998559f,
    0.99864f,
    0.998719f,
    0.998795f,
    0.99887f,
    0.998941f,
    0.999011f,
    0.999078f,
    0.999142f,
    0.999205f,
    0.999265f,
    0.999322f,
    0.999378f,
    0.999431f,
    0.999481f,
    0.999529f,
    0.999575f,
    0.999619f,
    0.99966f,
    0.999699f,
    0.999735f,
    0.999769f,
    0.999801f,
    0.999831f,
    0.999858f,
    0.999882f,
    0.999905f,
    0.999925f,
    0.999942f,
    0.999958f,
    0.999971f,
    0.999981f,
    0.999989f,
    0.999995f,
    0.999999f,
    1f
    };
    private byte[] g_gm_through_colattr = new byte[1]
    {
    (byte) 1
    };
    private readonly AppMain.NNS_RGBA nngEffectorXColor = new AppMain.NNS_RGBA(1f, 1f, 1f, 1f);
    private readonly AppMain.NNS_RGBA nngEffectorYColor = new AppMain.NNS_RGBA(1f, 1f, 1f, 1f);
    private readonly AppMain.NNS_RGBA nngEffectorZColor = new AppMain.NNS_RGBA(1f, 1f, 1f, 1f);
    private readonly AppMain.NNS_RGBA nngBoneDiffColor = new AppMain.NNS_RGBA(1f, 1f, 1f, 1f);
    private readonly AppMain.NNS_RGB nngBoneAmbColor = new AppMain.NNS_RGB(0.2f, 0.2f, 0.2f);
    private readonly AppMain.NNS_RGBA nngBoneWireColor = new AppMain.NNS_RGBA(1f, 1f, 1f, 1f);
    private readonly AppMain.NNS_RGBA nngGridColor = new AppMain.NNS_RGBA(1f, 1f, 1f, 0.3f);
    private readonly AppMain.NNS_RGBA nngAxisXColor = new AppMain.NNS_RGBA(1f, 0.0f, 0.0f, 1f);
    private readonly AppMain.NNS_RGBA nngAxisYColor = new AppMain.NNS_RGBA(0.0f, 1f, 0.0f, 1f);
    private readonly AppMain.NNS_RGBA nngAxisZColor = new AppMain.NNS_RGBA(0.0f, 0.0f, 1f, 1f);
    private readonly AppMain.NNS_VECTOR[] nngCircumPoint = AppMain.New<AppMain.NNS_VECTOR>(120);
    private AppMain.NNS_RGBA nngObjCircumCol = new AppMain.NNS_RGBA(1f, 1f, 1f, 0.3f);
    private readonly AppMain.NNS_RGBA[] nngNodeCircumCol = new AppMain.NNS_RGBA[8]
    {
    new AppMain.NNS_RGBA(0.0f, 1f, 0.0f, 0.3f),
    new AppMain.NNS_RGBA(1f, 0.0f, 1f, 0.3f),
    new AppMain.NNS_RGBA(1f, 1f, 0.0f, 0.3f),
    new AppMain.NNS_RGBA(1f, 1f, 1f, 0.3f),
    new AppMain.NNS_RGBA(0.0f, 1f, 1f, 0.3f),
    new AppMain.NNS_RGBA(1f, 0.0f, 0.0f, 0.3f),
    new AppMain.NNS_RGBA(0.0f, 0.0f, 0.0f, 0.3f),
    new AppMain.NNS_RGBA()
    };
    private int test_dist = 786432;
    public readonly float[] dm_stgslct_act_tab_disp_y_pos_tbl = new float[5]
    {
    AppMain.dm_stgslct_act_disp_y_pos_tbl[0] - 0.0f,
    AppMain.dm_stgslct_act_disp_y_pos_tbl[0] - 120f,
    AppMain.dm_stgslct_act_disp_y_pos_tbl[0] - 240f,
    AppMain.dm_stgslct_act_disp_y_pos_tbl[0] - 360f,
    AppMain.dm_stgslct_act_disp_y_pos_tbl[0] - 480f
    };
    public readonly float[] dm_stgslct_act_crsr_disp_y_pos_tbl = new float[4]
    {
    160f,
    248f,
    336f,
    424f
    };
    public readonly float[][] dm_stgslct_win_act_frm_tbl = new float[10][]
    {
    new float[3]{ 2f, 0.0f, 1f },
    new float[3]{ 3f, 0.0f, 0.0f },
    new float[3]{ 1f, 1f, 0.0f },
    new float[3]{ 1f, 2f, 0.0f },
    new float[3]{ 1f, 3f, 0.0f },
    new float[3]{ 1f, 4f, 0.0f },
    new float[3]{ 1f, 5f, 0.0f },
    new float[3]{ 1f, 6f, 0.0f },
    new float[3]{ 1f, 7f, 0.0f },
    new float[3]{ 1f, 7f, 0.0f }
    };
    public readonly float[][] dm_stgslct_win_disp_slct_frm_tbl = new float[2][]
    {
    new float[2]{ 0.0f, 1f },
    new float[2]{ 1f, 0.0f }
    };
    public readonly float[] dm_stgslct_vrtcl_disp_pos_y_tbl = new float[4]
    {
    0.0f,
    128f,
    256f,
    384f
    };
    public readonly float[] dm_stgslct_back_text_length_tbl = new float[11]
    {
    -39f,
    -53f,
    -69f,
    -77f,
    -70f,
    -55f,
    -53f,
    -53f,
    -53f,
    -53f,
    -53f
    };
    public readonly float[][] dm_stgslct_win_act_pos_tbl = new float[14][]
    {
    new float[2]{ 522f, 280f },
    new float[2]{ 758f, 224f },
    new float[2]{ 344f, 400f },
    new float[2]{ 390f, 400f },
    new float[2]{ 480f, 360f },
    new float[2]{ 480f, 248f },
    new float[2]{ 480f, 360f },
    new float[2]{ 480f, 344f },
    new float[2]{ 480f, 404f },
    new float[2]{ 400f, 274f },
    new float[2]{ 778f, 224f },
    new float[2]{ 480f, 420f },
    new float[2]{ 304f, 420f },
    new float[2]{ 656f, 420f }
    };
    public readonly float[] dm_stgslct_act_table_disp_id_tbl = new float[24]
    {
    0.0f,
    1f,
    2f,
    3f,
    0.0f,
    1f,
    2f,
    3f,
    0.0f,
    1f,
    2f,
    3f,
    0.0f,
    1f,
    2f,
    3f,
    4f,
    5f,
    5f,
    5f,
    5f,
    5f,
    5f,
    5f
    };
    public readonly float[] dm_stgslct_disp_msg_id_table_tbl = new float[24]
    {
    0.0f,
    1f,
    2f,
    3f,
    4f,
    5f,
    6f,
    7f,
    8f,
    9f,
    10f,
    11f,
    12f,
    13f,
    14f,
    15f,
    16f,
    5f,
    5f,
    5f,
    5f,
    5f,
    5f,
    5f
    };
    public readonly float[] dm_stgslct_act_disp_pos_y_tbl = new float[24]
    {
    0.0f,
    1f,
    2f,
    3f,
    0.0f,
    1f,
    2f,
    3f,
    0.0f,
    1f,
    2f,
    3f,
    0.0f,
    1f,
    2f,
    3f,
    0.0f,
    0.0f,
    1f,
    2f,
    3f,
    4f,
    5f,
    6f
    };
    public readonly float[] dm_stgslct_act_num_disp_id_tbl = new float[24]
    {
    0.0f,
    1f,
    2f,
    0.0f,
    0.0f,
    1f,
    2f,
    0.0f,
    0.0f,
    1f,
    2f,
    0.0f,
    0.0f,
    1f,
    2f,
    0.0f,
    0.0f,
    0.0f,
    1f,
    2f,
    3f,
    4f,
    5f,
    6f
    };
    private AppMain.DMS_LOGO_COM_LOAD_FILE_INFO[] dm_titleop_com_fileinfo_list = new AppMain.DMS_LOGO_COM_LOAD_FILE_INFO[2]
    {
    new AppMain.DMS_LOGO_COM_LOAD_FILE_INFO("G_ZONE1/MAPFAR/ZONE1_MAPFAR.AMB", new AppMain.post_func_Delegate(AppMain.dmTitleOpLoadPostFuncMapFar)),
    new AppMain.DMS_LOGO_COM_LOAD_FILE_INFO("DEMO/TITLE/D_TITLEOP.AMB", new AppMain.post_func_Delegate(AppMain.dmTitleOpLoadPostFuncTitleLogo))
    };
    public const int GSD_TROPHY_ITEM_NUM = 16;
    public const int TROPHY_NONE = 0;
    public const int TROPHY_REQUIRING = 1;
    public const int TROPHY_COMPLETE = 2;
    public const int OBD_MAP_BLOCK_SIZE = 16;
    public const int OBD_MAP_BLOCK_MASK = 15;
    public const uint NND_NODETYPE_UNIT_TRANSLATION = 1;
    public const uint NND_NODETYPE_UNIT_ROTATION = 2;
    public const uint NND_NODETYPE_UNIT_SCALING = 4;
    public const uint NND_NODETYPE_UNIT_INIT_MATRIX = 8;
    public const uint NND_NODETYPE_HIDE = 16;
    public const uint NND_NODETYPE_HIDE_BRANCH = 32;
    public const uint NND_NODETYPE_UNIT33_INIT_MATRIX = 64;
    public const uint NND_NODETYPE_ORTHO33_INIT_MATRIX = 128;
    public const uint NND_NODETYPE_ROTATE_TYPE_XYZ = 0;
    public const uint NND_NODETYPE_ROTATE_TYPE_XZY = 256;
    public const uint NND_NODETYPE_ROTATE_TYPE_YXZ = 512;
    public const uint NND_NODETYPE_ROTATE_TYPE_YZX = 768;
    public const uint NND_NODETYPE_ROTATE_TYPE_ZXY = 1024;
    public const uint NND_NODETYPE_ROTATE_TYPE_ZYX = 1280;
    public const uint NND_NODETYPE_ROTATE_TYPE_XYX = 1536;
    public const uint NND_NODETYPE_ROTATE_TYPE_XZX = 1792;
    public const uint NND_NODETYPE_ROTATE_TYPE_YXY = 2048;
    public const uint NND_NODETYPE_ROTATE_TYPE_YZY = 2304;
    public const uint NND_NODETYPE_ROTATE_TYPE_ZXZ = 2560;
    public const uint NND_NODETYPE_ROTATE_TYPE_ZYZ = 2816;
    public const uint NND_NODETYPE_ROTATE_TYPE_MASK = 3840;
    public const uint NND_NODETYPE_INHERIT_ONLY_TRANSLATION = 4096;
    public const uint NND_NODETYPE_SIIK_EFFECTOR = 8192;
    public const uint NND_NODETYPE_SIIK_1BONE_IK_JOINT1 = 16384;
    public const uint NND_NODETYPE_SIIK_2BONE_IK_JOINT1 = 32768;
    public const uint NND_NODETYPE_SIIK_2BONE_IK_JOINT2 = 65536;
    public const uint NND_NODETYPE_SIIK_MINUS_PREFROT_Z = 131072;
    public const uint NND_NODETYPE_1BONE_IK_CHAIN_ROOT = 33554432;
    public const uint NND_NODETYPE_2BONE_IK_CHAIN_ROOT = 67108864;
    public const uint NND_NODETYPE_IK_EFFECTOR = 8192;
    public const uint NND_NODETYPE_1BONE_IK_JOINT1 = 16384;
    public const uint NND_NODETYPE_2BONE_IK_JOINT1 = 32768;
    public const uint NND_NODETYPE_2BONE_IK_JOINT2 = 65536;
    public const uint NND_NODETYPE_IK_MINUS_PREFROT_Z = 131072;
    public const uint NND_NODETYPE_XSIIK = 134217728;
    public const uint NND_NODETYPE_XSIIK_1BONE_IK_CHAIN_ROOT = 167772160;
    public const uint NND_NODETYPE_XSIIK_2BONE_IK_CHAIN_ROOT = 201326592;
    public const uint NND_NODETYPE_XSIIK_EFFECTOR = 134225920;
    public const uint NND_NODETYPE_XSIIK_1BONE_IK_JOINT1 = 134234112;
    public const uint NND_NODETYPE_XSIIK_2BONE_IK_JOINT1 = 134250496;
    public const uint NND_NODETYPE_XSIIK_2BONE_IK_JOINT2 = 134283264;
    public const uint NND_NODETYPE_XSIIK_MINUS_PREFROT_Z = 134348800;
    public const uint NND_NODETYPE_IK_MASK = 235134976;
    public const uint NND_NODETYPE_RESET_SCALING_X = 262144;
    public const uint NND_NODETYPE_RESET_SCALING_Y = 524288;
    public const uint NND_NODETYPE_RESET_SCALING_Z = 1048576;
    public const uint NND_NODETYPE_BBOX_DATA = 2097152;
    public const uint NND_NODETYPE_BBOX_PRIOR_SPHERE = 4194304;
    public const uint NND_NODETYPE_BBOX_DOMINATE_X = 8388608;
    public const uint NND_NODETYPE_BBOX_DOMINATE_Y = 16777216;
    public const uint NND_NODETYPE_BBOX_DOMINATE_Z = 25165824;
    public const uint NND_NODETYPE_BBOX_DOMINATE_MASK = 25165824;
    public const int NND_NODEIDX_NIL = -1;
    public const int NND_MTXIDX_NIL = -1;
    public const int NND_VTXLISTIDX_NIL = -1;
    public const int NND_PRIMLISTIDX_NIL = -1;
    public const uint NND_VTXTYPE_PLATFORM_MASK = 65535;
    public const uint NND_VTXTYPE_COMMON_MASK = 16711680;
    public const uint NND_VTXTYPE_USER_MASK = 4278190080;
    public const uint NND_PRIMTYPE_PLATFORM_MASK = 65535;
    public const uint NND_PRIMTYPE_COMMON_MASK = 16711680;
    public const uint NND_PRIMTYPE_USER_MASK = 4278190080;
    public const uint NND_SUBOBJTYPE_OPAQUE = 1;
    public const uint NND_SUBOBJTYPE_TRANSPARENT = 2;
    public const uint NND_SUBOBJTYPE_PUNCHTHROUGH = 4;
    public const uint NND_SUBOBJTYPE_TRANSPARENCY_MASK = 7;
    public const uint NND_SUBOBJTYPE_TRANSPARENCY_ALL = 7;
    public const uint NND_SUBOBJTYPE_RIGID = 256;
    public const uint NND_SUBOBJTYPE_PLIABLE = 512;
    public const uint NND_SUBOBJTYPE_PLIABILITY_MASK = 768;
    public const uint NND_SUBOBJTYPE_PLIABILITY_ALL = 768;
    public const uint NND_SUBOBJTYPE_COLLISION = 65536;
    public const uint NND_SUBOBJTYPE_BILLBOARD = 16777216;
    public const uint NND_SUBOBJTYPE_PXPLUS = 268435456;
    public const uint NND_SUBOBJTYPE_ALL = 2147483648;
    public const uint NND_OBJTYPE_OPAQUE = 1;
    public const uint NND_OBJTYPE_TRANSPARENT = 2;
    public const uint NND_OBJTYPE_PUNCHTHROUGH = 4;
    public const uint NND_OBJTYPE_TRANSPARENCY_MASK = 7;
    public const uint NND_OBJTYPE_RIGID = 8;
    public const uint NND_OBJTYPE_PLIABLE = 16;
    public const uint NND_OBJTYPE_PLIABILITY_MASK = 24;
    public const uint NND_OBJTYPE_LOADED_BINARY = 32;
    public const uint NND_OBJTYPE_COMPILED_TEXT = 64;
    public const uint NND_OBJTYPE_COPYED_OBJECT = 128;
    public const uint NND_OBJTYPE_MORPH_OBJECT = 256;
    public const uint NND_OBJTYPE_MATERIALMOTION_OBJECT = 512;
    public const uint NND_OBJTYPE_COMMONVTXFORM = 65536;
    public const uint NND_OBJTYPE_NODETREE_OBJECT = 131072;
    public const uint NND_OBJTYPE_MESH_OBJECT = 262144;
    public const uint NND_OBJTYPE_PRIORITYNODE_OBJECT = 524288;
    public const uint NND_OBJTYPE_BOUNDBUFFER = 16777216;
    public const uint NND_VTXTYPE_COMMON_VTXDESC = 65536;
    public const uint NND_VTXTYPE_COMMON_VTXDESC_MORPH_TARGET = 131072;
    public const uint NND_VTXTYPE_COMMON_VTXDESC_MORPH_TARGET_NULL = 262144;
    public const uint NND_VTXTYPE_COMMON_VTXDESC_MORPH_OBJECT = 524288;
    public const uint NND_PRIMTYPE_COMMON_TRIANGLE_STRIP_R = 65536;
    public const uint NND_PRIMTYPE_COMMON_TRIANGLE_STRIP_L = 131072;
    public const uint NND_PRIMTYPE_COMMON_TRIANGLE_LIST = 262144;
    public const uint NND_PRIMTYPE_COMMON_QUAD_LIST = 524288;
    public const uint NND_PRIMTYPE_COMMON_TRIANGLE_QUAD_LIST = 1048576;
    public const uint NND_VTXARRAYTYPE_POS = 1;
    public const uint NND_VTXARRAYTYPE_NRM = 2;
    public const uint NND_VTXARRAYTYPE_NBT = 4;
    public const uint NND_VTXARRAYTYPE_COL = 8;
    public const uint NND_VTXARRAYTYPE_COL2 = 16;
    public const uint NND_VTXARRAYTYPE_TEX0 = 32;
    public const uint NND_VTXARRAYTYPE_TEX1 = 64;
    public const uint NND_VTXARRAYTYPE_TEX2 = 128;
    public const uint NND_VTXARRAYTYPE_TEX3 = 256;
    public const uint NND_VTXARRAYTYPE_WGT1 = 512;
    public const uint NND_VTXARRAYTYPE_WGT2 = 1024;
    public const uint NND_VTXARRAYTYPE_WGT3 = 2048;
    public const uint NND_VTXARRAYTYPE_WGT4 = 4096;
    public const uint NND_VTXARRAYTYPE_WGT8 = 8192;
    public const uint NND_VTXARRAYTYPE_WGTMASK = 15872;
    public const uint NND_VTXARRAYTYPE_PS2MASK = 5227;
    public const uint NND_PRIMINDEXTYPE_LIST0 = 1;
    public const uint NND_PRIMINDEXTYPE_LIST1 = 2;
    public const uint NND_PRIMINDEXTYPE_LIST2 = 4;
    public const uint NND_PRIMINDEXTYPE_LIST3 = 8;
    public const int NND_MOTIONFLAG_NONE = 0;
    public const int NND_MOTIONFLAG_XYZ = 1;
    public const int NND_MOTIONFLAG_QUAT = 2;
    private const int AMTRE_STATE_DELETE = 32768;
    private const int AMTRE_STATE_EFFECT = 16384;
    private const int AMTRE_STATE_SSP_SET = 512;
    private const int AMTRE_STATE_SSP_CALC = 256;
    private const int AMTRE_STATE_TOP = 1;
    private const int AMTRE_STATE_END = 2;
    private const int AMTRE_STATE_TE_MASK = 3;
    private const int AMTRE_FLAG_FXPOS = 1;
    private const int AMTRE_MFLAG_PRAIMAL = 1;
    private const int AMTRE_MFLAG_CHECK1 = 2;
    private const int AMTRE_HANDLE_ACCELL = 1;
    public const int GMD_PAUSE_FLAG_END = 1;
    public const int GMD_PAUSE_FADEOUT_TIME = 20;
    public const int GMD_PAUSE_FADEIN_TIME = 20;
    private const int GME_PAD_VIB_TYPE_STOP = 0;
    private const int GME_PAD_VIB_TYPE_NORMAL = 1;
    private const int GME_PAD_VIB_TYPE_DEC = 2;
    private const int GME_PAD_VIB_TYPE_ACC = 3;
    private const int GME_PAD_VIB_TYPE_INT = 4;
    private const int GME_PAD_VIB_TYPE_MAX = 5;
    public const int GMD_PAD_VIB_DEF_INT_VIB_TIME = 122880;
    public const int GMD_PAD_VIB_DEF_INT_STOP_TIME = 122880;
    public const int GMD_PAD_VIB_LARGE_TYPE = 1;
    public const float GMD_PAD_VIB_LARGE_TIME = 60f;
    public const int GMD_PAD_VIB_LARGE_LEFT_VIB = 32768;
    public const int GMD_PAD_VIB_LARGE_RIGHT_VIB = 32768;
    public const float GMD_PAD_VIB_LARGE_ADD_DEC_TIME = 0.0f;
    public const float GMD_PAD_VIB_LARGE_INT_VIB_TIME = 0.0f;
    public const float GMD_PAD_VIB_LARGE_INT_STOP_TIME = 0.0f;
    public const int GMD_PAD_VIB_LARGE_PRIO = 32768;
    public const int GMD_PAD_VIB_MID_TYPE = 1;
    public const float GMD_PAD_VIB_MID_TIME = 30f;
    public const int GMD_PAD_VIB_MID_LEFT_VIB = 16384;
    public const int GMD_PAD_VIB_MID_RIGHT_VIB = 16384;
    public const float GMD_PAD_VIB_MID_ADD_DEC_TIME = 0.0f;
    public const float GMD_PAD_VIB_MID_INT_VIB_TIME = 0.0f;
    public const float GMD_PAD_VIB_MID_INT_STOP_TIME = 0.0f;
    public const int GMD_PAD_VIB_MID_PRIO = 16384;
    public const int GMD_PAD_VIB_SMALL_TYPE = 1;
    public const float GMD_PAD_VIB_SMALL_TIME = 30f;
    public const int GMD_PAD_VIB_SMALL_LEFT_VIB = 8192;
    public const int GMD_PAD_VIB_SMALL_RIGHT_VIB = 8192;
    public const float GMD_PAD_VIB_SMALL_ADD_DEC_TIME = 0.0f;
    public const float GMD_PAD_VIB_SMALL_INT_VIB_TIME = 0.0f;
    public const float GMD_PAD_VIB_SMALL_INT_STOP_TIME = 0.0f;
    public const int GMD_PAD_VIB_SMALL_PRIO = 8192;
    public const uint GMD_PAD_VIB_FLAG_INT_STOP = 1;
    public const uint GMD_PAD_VIB_FLAG_PAUSE = 2;
    private const int GME_GMK_TYPE_DUMMY = 0;
    private const int SLOT_REEL_JP = 0;
    private const int SLOT_REEL_EGG = 1;
    private const int SLOT_REEL_SONIC = 2;
    private const int SLOT_REEL_RING = 3;
    private const int SLOT_REEL_BAR = 4;
    private const int SLOT_REEL_NUM = 5;
    private const int SLOT_REEL_B__ = 5;
    private const int SLOT_REEL_BB_ = 6;
    private const int SLOT_REEL_77_ = 7;
    private const int SLOT_REEL_EE_ = 8;
    private const int SLOT_REEL_MEOSHI_STOP = 9;
    private const int GMD_GMK_SLOT_REEL_NUM = 3;
    private const int SLOT_STEP_INIT = 0;
    private const int SLOT_STEP_ROLL1 = 10;
    private const int SLOT_STEP_ROLL2 = 20;
    private const int SLOT_STEP_ROLL3 = 30;
    private const int SLOT_STEP_STOP_NORM = 40;
    private const int SLOT_STEP_STOP_HIT = 50;
    private const int SLOT_STEP_STOP_EGG = 60;
    private const int SLOT_STEP_EGG_STOP = 69;
    private const int SLOT_STEP_STOP_STOP = 70;
    private const int SLOT_STEP_STOP_STOP_FORCE = 80;
    private const int SLOT_STEP_MAX = 81;
    private const int GMD_GMK_SLOT_STOP1_TIME = 10;
    private const int GMD_GMK_SLOT_STOP1_TIME_ADJ = 1;
    private const int GMD_GMK_SLOT_STOP2_TIME = 0;
    private const int GMD_GMK_SLOT_STOP2_TIME_ADJ = 1;
    private const int GMD_GMK_SLOT_STOP3_TIME = 0;
    private const int GMD_GMK_SLOT_STOP3_TIME_ADJ = 1;
    private const int GMD_GMK_SLOT_STOP3_FEABER_TIME = 30;
    private const int GMD_SZ_TBL_DAM_OFST = 8;
    private const int GMD_GMK_BUMPER_MODE_WAIT = 0;
    private const int GMD_GMK_BUMPER_MODE_ACTIVE = 1;
    private const int GMD_GMK_BUMPER_MODE_NUM = 2;
    private const int GMD_GMK_BUMPER_TYPE_TRI_I_TOP = 0;
    private const int GMD_GMK_BUMPER_TYPE_TRI_I_BOTTOM = 1;
    private const int GMD_GMK_BUMPER_TYPE_TRI_I_LEFT = 2;
    private const int GMD_GMK_BUMPER_TYPE_TRI_I_RIGHT = 3;
    private const int GMD_GMK_BUMPER_TYPE_TRI_R_LT = 4;
    private const int GMD_GMK_BUMPER_TYPE_TRI_R_LB = 5;
    private const int GMD_GMK_BUMPER_TYPE_TRI_R_RT = 6;
    private const int GMD_GMK_BUMPER_TYPE_TRI_R_RB = 7;
    private const int GMD_GMK_BUMPER_TYPE_HEX_W = 8;
    private const int GMD_GMK_BUMPER_TYPE_HEX_H = 9;
    private const int GMD_GMK_BUMPER_TYPE_NUM = 10;
    private const int GMD_GMK_BUMPER_RECT_MARGIN_PLAYER_X = 32768;
    private const int GMD_GMK_BUMPER_RECT_MARGIN_PLAYER_Y = 32768;
    private const int GMD_GMK_BUMPER_RECT_OFFSET_PLAYER_Y = -12288;
    private const int GMD_GMK_BUMPER_POS_Z = -122880;
    private const uint GMD_GMK_BUMPER_OFFSET_RADIUS = 65536;
    private const uint GMD_GMK_BUMPER_SPEED_MIN = 8192;
    private const int GMD_GMK_BUMPER_SPEED_X = 16384;
    private const int GMD_GMK_BUMPER_SPEED_Y = 24576;
    private const int GMD_GMK_BUMPER_SPEED_OFFSET_TRI_I = 12288;
    private const int GMD_GMK_BUMPER_SPEED_OFFSET_TRI_R = 20480;
    private const int GMD_GMK_BUMPER_NO_MOVE_TIME_UD = 5;
    private const int GMD_GMK_BUMPER_NO_MOVE_TIME_LR = 15;
    private const int GMD_GMK_BUMPER_FLAG_NO_RECOVER_HOMING = 1;
    public const int GMD_EVE_SEARCH_PROC_FLAG_NONE = 0;
    public const int GMD_EVE_SEARCH_PROC_FLAG_RECT_CREATE = 1;
    public const int GMD_EVE_SEARCH_PROC_FLAG_RECT_LCD_OFF = 2;
    public const int GMD_EVE_SEARCH_PROC_FLAG_ONLY_ENFORCE = 4;
    public const byte GMD_EVE_RECORD_CMD_SKIP = 255;
    public const int GMD_EVE_EVE_CREATE_SIZE = 256;
    public const int GMD_EVE_DEC_CREATE_SIZE = 256;
    public const int GMD_EVE_BIRTH_WIDTH = 32;
    public const int GMD_EVE_RECORD_EVENT_FLAG_USER_MASK = 255;
    public const int GMD_EVE_RECORD_EVENT_FLAG_SYSFLAG_MASK = 65280;
    public const int GMD_EVE_RECORD_EVENT_FLAG_NO_CLIP = 2048;
    public const int GMD_EVE_RECORD_EVENT_FLAG_NO_CLIP_EASE_SHIFT = 11;
    public const int GMD_EVE_RECORD_EVENT_FLAG_NO_CREATE_EASE = 4096;
    public const int GMD_EVE_RECORD_EVENT_FLAG_NO_CREATE_EASE_SHIFT = 12;
    public const int GMD_EVE_RECORD_EVENT_FLAG_NO_CREATE_NORMAL = 8192;
    public const int GMD_EVE_RECORD_EVENT_FLAG_NO_CREATE_NORMAL_SHIFT = 13;
    public const int GMD_EVE_RECORD_EVENT_FLAG_NO_CREATE_HARD = 16384;
    public const int GMD_EVE_RECORD_EVENT_FLAG_NO_CREATE_HARD_SHIFT = 14;
    public const int GMD_EVE_RECORD_EVENT_FLAG_CREATE_ENFORCE = 32768;
    public const int GMD_EVE_RECORD_EVENT_FLAG_CREATE_ENFORCE_SHIFT = 15;
    public const int GMD_EVE_TYPE_EVENT = 0;
    public const int GMD_EVE_TYPE_RING = 1;
    public const int GMD_EVE_TYPE_DECO = 2;
    public const int GMD_EVE_TYPE_MAX = 3;
    public const int GMD_EVE_LOCAL_EVT_OBJ_MAX = 64;
    public const int GMD_EVE_LOCAL_EVT_USE_FLAG_WORK_NUM = 2;
    public const int GMD_EVE_LOCAL_DECO_OBJ_MAX = 64;
    public const int GMD_EVE_LOCAL_DECO_USE_FLAG_WORK_NUM = 2;
    public const int GMD_EVE_LOCAL_RING_OBJ_MAX = 64;
    public const int GMD_EVE_LOCAL_RING_USE_FLAG_WORK_NUM = 2;
    public const int GMD_EVE_DATA_BLOCK_SIZE = 256;
    public const int GMD_EVE_BLOCK_SIZE_SHIFT = 8;
    public const int GMD_ENEMY_RECT_DEF = 0;
    public const int GMD_ENEMY_RECT_ATK = 1;
    public const int GMD_ENEMY_RECT_BODY = 2;
    public const int GMD_ENEMY_RECT_NUM = 3;
    public const uint GMD_ENEMY_FLAG_USER1 = 1;
    public const uint GMD_ENEMY_FLAG_USER2 = 2;
    public const uint GMD_ENEMY_FLAG_USER3 = 4;
    public const uint GMD_ENEMY_FLAG_USER4 = 8;
    public const uint GMD_ENEMY_FLAG_NOPRESSDIE = 16384;
    public const uint GMD_ENEMY_FLAG_NOHOMING = 32768;
    public const uint GMD_ENEMY_FLAG_DIE = 65536;
    public const uint GMD_ENEMY_FLAG_NOANIMAL = 131072;
    public const uint GMD_ENEMY_FLAG_ROOM = 262144;
    public const int GMD_ENEMY_COMBO_SCORE_OFST_Y = -65536;
    private const int GME_EFCT_CMN_IDX_AURA_00 = 0;
    private const int GME_EFCT_CMN_IDX_AURA_01 = 1;
    private const int GME_EFCT_CMN_IDX_AURA_02 = 2;
    private const int GME_EFCT_CMN_IDX_AURA_03 = 3;
    private const int GME_EFCT_CMN_IDX_BARRIER = 4;
    private const int GME_EFCT_CMN_IDX_BARRIER_01 = 5;
    private const int GME_EFCT_CMN_IDX_BARRIER_LOST = 6;
    private const int GME_EFCT_CMN_IDX_BOMB = 7;
    private const int GME_EFCT_CMN_IDX_BOMB_BIG = 8;
    private const int GME_EFCT_CMN_IDX_BOMB_KAMA = 9;
    private const int GME_EFCT_CMN_IDX_BOMB_SMOKE = 10;
    private const int GME_EFCT_CMN_IDX_BRAKE = 11;
    private const int GME_EFCT_CMN_IDX_BRAKE_S = 12;
    private const int GME_EFCT_CMN_IDX_BUBBLE = 13;
    private const int GME_EFCT_CMN_IDX_BULLET = 14;
    private const int GME_EFCT_CMN_IDX_BULLET_CORE = 15;
    private const int GME_EFCT_CMN_IDX_BUMPER = 16;
    private const int GME_EFCT_CMN_IDX_BUMPER_1 = 17;
    private const int GME_EFCT_CMN_IDX_BUMPER_2 = 18;
    private const int GME_EFCT_CMN_IDX_BUMPER_LOST = 19;
    private const int GME_EFCT_CMN_IDX_CANON = 20;
    private const int GME_EFCT_CMN_IDX_CAP_KEY1 = 21;
    private const int GME_EFCT_CMN_IDX_CAP_KEY2 = 22;
    private const int GME_EFCT_CMN_IDX_CAP_OPEN = 23;
    private const int GME_EFCT_CMN_IDX_COUNT0 = 24;
    private const int GME_EFCT_CMN_IDX_COUNT1 = 25;
    private const int GME_EFCT_CMN_IDX_COUNT2 = 26;
    private const int GME_EFCT_CMN_IDX_COUNT3 = 27;
    private const int GME_EFCT_CMN_IDX_COUNT4 = 28;
    private const int GME_EFCT_CMN_IDX_COUNT5 = 29;
    private const int GME_EFCT_CMN_IDX_DASH = 30;
    private const int GME_EFCT_CMN_IDX_DEATH = 31;
    private const int GME_EFCT_CMN_IDX_GOAL = 32;
    private const int GME_EFCT_CMN_IDX_H_ATTACK_00 = 33;
    private const int GME_EFCT_CMN_IDX_H_ATTACK_01 = 34;
    private const int GME_EFCT_CMN_IDX_H_ATTACK_02 = 35;
    private const int GME_EFCT_CMN_IDX_H_ATTACK_03 = 36;
    private const int GME_EFCT_CMN_IDX_HIT_E = 37;
    private const int GME_EFCT_CMN_IDX_HIT_S = 38;
    private const int GME_EFCT_CMN_IDX_ITEM = 39;
    private const int GME_EFCT_CMN_IDX_ITEM_01 = 40;
    private const int GME_EFCT_CMN_IDX_JUMP = 41;
    private const int GME_EFCT_CMN_IDX_MUTEKI = 42;
    private const int GME_EFCT_CMN_IDX_MUTEKI2 = 43;
    private const int GME_EFCT_CMN_IDX_PILLAR_F_01 = 44;
    private const int GME_EFCT_CMN_IDX_PILLAR_F_02 = 45;
    private const int GME_EFCT_CMN_IDX_PILLAR_F_03 = 46;
    private const int GME_EFCT_CMN_IDX_PILLAR_F_HIT = 47;
    private const int GME_EFCT_CMN_IDX_PISTON = 48;
    private const int GME_EFCT_CMN_IDX_POINT = 49;
    private const int GME_EFCT_CMN_IDX_RING = 50;
    private const int GME_EFCT_CMN_IDX_ROLLDASH = 51;
    private const int GME_EFCT_CMN_IDX_ROLLDASH_L = 52;
    private const int GME_EFCT_CMN_IDX_ROLLDASH_R = 53;
    private const int GME_EFCT_CMN_IDX_ROLLDASH_S = 54;
    private const int GME_EFCT_CMN_IDX_RUN = 55;
    private const int GME_EFCT_CMN_IDX_SCORE_0 = 56;
    private const int GME_EFCT_CMN_IDX_SCORE_1 = 57;
    private const int GME_EFCT_CMN_IDX_SCORE_2 = 58;
    private const int GME_EFCT_CMN_IDX_SCORE_3 = 59;
    private const int GME_EFCT_CMN_IDX_SCORE_4 = 60;
    private const int GME_EFCT_CMN_IDX_SCORE_5 = 61;
    private const int GME_EFCT_CMN_IDX_SCORE_6 = 62;
    private const int GME_EFCT_CMN_IDX_SCORE_7 = 63;
    private const int GME_EFCT_CMN_IDX_SCORE_8 = 64;
    private const int GME_EFCT_CMN_IDX_SCORE_9 = 65;
    private const int GME_EFCT_CMN_IDX_SMORK_B_Z2 = 66;
    private const int GME_EFCT_CMN_IDX_SMORK_B_Z4 = 67;
    private const int GME_EFCT_CMN_IDX_SMORK_S_Z2 = 68;
    private const int GME_EFCT_CMN_IDX_SMORK_S_Z4 = 69;
    private const int GME_EFCT_CMN_IDX_SPIN = 70;
    private const int GME_EFCT_CMN_IDX_SPIN_00 = 71;
    private const int GME_EFCT_CMN_IDX_SPIN_01 = 72;
    private const int GME_EFCT_CMN_IDX_SPIN_D = 73;
    private const int GME_EFCT_CMN_IDX_SPIN_D_B = 74;
    private const int GME_EFCT_CMN_IDX_SPIN_START = 75;
    private const int GME_EFCT_CMN_IDX_SPRAY = 76;
    private const int GME_EFCT_CMN_IDX_SPRING = 77;
    private const int GME_EFCT_CMN_IDX_SPRING_00 = 78;
    private const int GME_EFCT_CMN_IDX_SPRING_01 = 79;
    private const int GME_EFCT_CMN_IDX_SS_END = 80;
    private const int GME_EFCT_CMN_IDX_SS_SPIN = 81;
    private const int GME_EFCT_CMN_IDX_SS_SPIN_D = 82;
    private const int GME_EFCT_CMN_IDX_SS_SPIN_D_B = 83;
    private const int GME_EFCT_CMN_IDX_SS_SPIN_START = 84;
    private const int GME_EFCT_CMN_IDX_SS_START = 85;
    private const int GME_EFCT_CMN_IDX_STEAM = 86;
    private const int GME_EFCT_CMN_IDX_STEAM_L = 87;
    private const int GME_EFCT_CMN_IDX_STEAM_M = 88;
    private const int GME_EFCT_CMN_IDX_STEAM_S = 89;
    private const int GME_EFCT_CMN_IDX_STEAM_SET = 90;
    private const int GME_EFCT_CMN_IDX_STEAM_SET_SS = 91;
    private const int GME_EFCT_CMN_IDX_STEAM_SHOT = 92;
    private const int GME_EFCT_CMN_IDX_SWEAT = 93;
    private const int GME_EFCT_CMN_IDX_TARGET_E = 94;
    private const int GME_EFCT_CMN_IDX_TARGET_S = 95;
    private const int GME_EFCT_CMN_IDX_TOGEBALL = 96;
    private const int GME_EFCT_CMN_IDX_MAX = 97;
    private const int GME_EFCT_CMN_IDX_NONE = -1;
    private const int GMD_EFCT_CMN_BUILD_REG_ALLOWANCE_NUM = 64;
    private const int GMD_EFCT_CMN_FLUSH_REG_ALLOWANCE_NUM = 16;
    private const int GMD_EFCT_CMN_INVINCIBLE_MAIN_ANGLE_RATE = 1820;
    private const int GMD_EFCT_CMN_INVINCIBLE_SUB_ANGLE_RATE = 1820;
    private const int GMD_EFCT_CMN_INVINCIBLE_SUB_DIST_TO_SPD_FACTOR = 204;
    private const int GMD_EFCT_CMN_INVINCIBLE_SUB_PLYSPD_TO_SPD_FACTOR = 1024;
    private const int GME_EFCT_CMN_PROCESS_STATE_NOP = 0;
    private const int GME_EFCT_CMN_PROCESS_STATE_WAIT_START = 1;
    private const int GME_EFCT_CMN_PROCESS_STATE_WAIT_COMPLETE = 2;
    private const int GME_EFCT_CMN_PROCESS_STATE_MAX = 3;
    public const uint GMD_BOSS5_EFCT_GENERAL_FLAG_FADING = 1;
    public const uint GMD_BOSS5_EFCT_LEAKAGE_USRFLAG_IS_BODYPART = 1;
    public const uint GMD_BOSS5_EFCT_LEAKAGE_USRFLAG_SE_RESPONSIBLE = 2;
    public const uint GMD_BOSS5_EFCT_LEAKAGE_PART_NUM = 8;
    public const int GMD_BOSS5_EFCT_LEAKAGE_OFST_Z = 262144;
    public const int GMD_BOSS5_EFCT_LEAKAGE_BODYPART_OFST_Z = 327680;
    public const int GMD_BOSS5_EFCT_LEAKAGE_VANISH_PART_NUM = 2;
    public const int GMD_BOSS5_EFCT_LEAKAGE_VANISH_OFST_Z = 327680;
    public const int GMD_BOSS5_EFCT_PRELIM_LEAKAGE_OFST_Z = 327680;
    public const int GMD_BOSS5_EFCT_WALK_STEP_SMOKE_OFST_Z = 65536;
    public const int GMD_BOSS5_EFCT_RUN_STEP_SMOKE_OFST_Z = 65536;
    public const int GMD_BOSS5_EFCT_CRASH_LANDING_SMOKE_OFST_Z = 262144;
    public const int GMD_BOSS5_EFCT_BREAKING_GLASS_OFST_Y = -131072;
    public const int GMD_BOSS5_EFCT_BREAKING_GLASS_OFST_Z = 262144;
    public const short GMD_BOSS5_EFCT_JET_VIEWOUT_OFST = 16;
    public const uint GMD_BOSS5_EFCT_JET_ATK_ACTIVATE_TIMING_FRAME = 65;
    public const short GMD_BOSS5_EFCT_JET_ATK_RECT_SIZE_LEFT = -8;
    public const short GMD_BOSS5_EFCT_JET_ATK_RECT_SIZE_TOP = 0;
    public const short GMD_BOSS5_EFCT_JET_ATK_RECT_SIZE_RIGHT = 8;
    public const short GMD_BOSS5_EFCT_JET_ATK_RECT_SIZE_BOTTOM = 88;
    public const int GMD_BOSS5_EFCT_ROCKET_LEAKAGE_OFST_Z = 262144;
    public const float GMD_BOSS5_EFCT_ROCKET_LEAKAGE_STUCK_ND_OFST_X = -7f;
    public const int GMD_BOSS5_EFCT_ROCKET_LAUNCH_OFST_Z = 65536;
    public const float GMD_BOSS5_EFCT_ROCKET_LAUNCH_STUCK_ND_OFST_X = -7f;
    public const int GMD_BOSS5_EFCT_ROCKET_DOCK_OFST_Z = 65536;
    public const float GMD_BOSS5_EFCT_ROCKET_DOCK_STUCK_ND_OFST_X = 2f;
    public const int GMD_BOSS5_EFCT_ROCKET_JET_USRFLAG_IS_REVERSE = 1;
    public const int GMD_BOSS5_EFCT_ROCKET_JET_OFST_Z = 32768;
    public const float GMD_BOSS5_EFCT_ROCKET_JET_STUCK_ND_OFST_X = -6f;
    public const float GMD_BOSS5_EFCT_ROCKET_JET_REV_STUCK_ND_OFST_X = 4f;
    public const int GMD_BOSS5_EFCT_ROCKET_LANDING_SW_OFST_Z = 65536;
    public const int GMD_BOSS5_EFCT_LANDING_SW_OFST_Z = 262144;
    public const short GMD_BOSS5_EFCT_LANDING_SW_VIEWOUT_OFST = 128;
    public const int GMD_BOSS5_EFCT_LANDING_SW_ATK_RECT_ACTIVE_TIME = 8;
    public const int GMD_BOSS5_EFCT_LANDING_SW_ATK_RECT_SIZE_LEFT = -88;
    public const int GMD_BOSS5_EFCT_LANDING_SW_ATK_RECT_SIZE_TOP = -32;
    public const int GMD_BOSS5_EFCT_LANDING_SW_ATK_RECT_SIZE_RIGHT = 88;
    public const int GMD_BOSS5_EFCT_LANDING_SW_ATK_RECT_SIZE_BOTTOM = 32;
    public const int GMD_BOSS5_EFCT_STRIKE_SW_OFST_Z = 262144;
    public const short GMD_BOSS5_EFCT_STRIKE_SW_VIEWOUT_OFST = 64;
    public const int GMD_BOSS5_EFCT_STRIKE_SW_ATK_RECT_ACTIVE_TIME = 15;
    public const int GMD_BOSS5_EFCT_STRIKE_SW_ATK_RECT_SIZE_LEFT = -64;
    public const int GMD_BOSS5_EFCT_STRIKE_SW_ATK_RECT_SIZE_TOP = -64;
    public const int GMD_BOSS5_EFCT_STRIKE_SW_ATK_RECT_SIZE_RIGHT = 64;
    public const int GMD_BOSS5_EFCT_STRIKE_SW_ATK_RECT_SIZE_BOTTOM = 32;
    public const float GMD_BOSS5_EFCT_TARGETCURSOR_DISP_OFST_Z = 32f;
    public const int GMD_BOSS5_EFCT_CURSOR_START_DURATION_TIME = 120;
    public const float GMD_BOSS5_EFCT_CURSOR_START_INIT_UPDATE_SPD = 0.5f;
    public const float GMD_BOSS5_EFCT_CURSOR_START_DEST_UPDATE_SPD = 1f;
    public const int GMD_BOSS5_EFCT_CURSOR_START_FLICKER_OFF_TIME = 10;
    public const int GMD_BOSS5_EFCT_CURSOR_START_FLICKER_ON_TIME = 10;
    public const float GMD_BOSS5_EFCT_CURSOR_LOOP_INIT_UPDATE_SPD = 0.8f;
    public const float GMD_BOSS5_EFCT_CURSOR_LOOP_UPDATE_SPD_ADD = 0.005f;
    public const float GMD_BOSS5_EFCT_CURSOR_LOOP_DEST_UPDATE_SPD = 1.5f;
    public const int GMD_BOSS5_EFCT_CURSOR_LOOP_FLICKER_OFF_TIME = 10;
    public const int GMD_BOSS5_EFCT_CURSOR_LOOP_FLICKER_ON_TIME = 10;
    public const int GMD_BOSS5_EFCT_CRASH_CURSOR_OFST_Y_FROM_GROUND = -131072;
    public const int GMD_BOSS5_EFCT_CRASH_CURSOR_FLICKER_OFF_TIME = 10;
    public const int GMD_BOSS5_EFCT_CRASH_CURSOR_FLICKER_ON_TIME = 10;
    public const float GMD_BOSS5_EFCT_CRASH_CURSOR_MOVE_RATIO_CURVE_RANGE_FACTOR = 0.9f;
    public const int GMD_BOSS5_EFCT_CRASH_CURSOR_MOVE_LEFT_EDGE_OFST = -1048576;
    public const int GMD_BOSS5_EFCT_CRASH_CURSOR_MOVE_RIGHT_EDGE_OFST = 1048576;
    public const int GMD_BOSS5_EFCT_CRASH_CURSOR_MOVE_WIDTH = 2097152;
    public const int GMD_BOSS5_EFCT_CRASH_CURSOR_MOVE_DISTANCE = 13631488;
    public const int GMD_BOSS5_EFCT_VULCAN_BULLET_VIEWOUT_OFST = 16;
    public const int GMD_BOSS5_EFCT_VULCAN_BULLET_OFST_Z = 262144;
    public const int GMD_BOSS5_EFCT_VULCAN_BULLET_ATK_RECT_SIZE_LEFT = -8;
    public const int GMD_BOSS5_EFCT_VULCAN_BULLET_ATK_RECT_SIZE_TOP = -8;
    public const int GMD_BOSS5_EFCT_VULCAN_BULLET_ATK_RECT_SIZE_RIGHT = 8;
    public const int GMD_BOSS5_EFCT_VULCAN_BULLET_ATK_RECT_SIZE_BOTTOM = 8;
    public const int GMD_BOSS5_EFCT_DAMAGE_OFST_Z = 262144;
    public const int GMD_BOSS5_EFCT_BREAKDOWN_SMOKES_NUM = 2;
    public const int GMD_BOSS5_EFCT_BODY_SMALL_SMOKES_NUM = 3;
    public const int GMD_BOSS5_EFCT_BODY_SMALL_SMOKE_LOOP_TIME_MAX = 240;
    public const int GMD_BOSS5_EFCT_BODY_SMALL_SMOKE_LOOP_TIME_MIN = 120;
    public const int GMD_BOSS5_EFCT_BODY_SMALL_SMOKE_IDLE_TIME_MAX = 120;
    public const int GMD_BOSS5_EFCT_BODY_SMALL_SMOKE_IDLE_TIME_MIN = 60;
    public const int GMD_BOSS5_EFCT_BERSERK_STEAM_NUM = 2;
    public const int GMD_BOSS5_EFCT_BERSERK_STEAM_BLAST_TIME = 6;
    public const int GMD_BOSS5_EFCT_BERSERK_STEAM_IDLE_TIME = 0;
    public const float GMD_BOSS5_EFCT_EGG_SWEAT_DISP_OFST_Y = 56f;
    public const float GMD_BOSS5_EFCT_EGG_SWEAT_DISP_OFST_Z = -8f;
    public const int GMD_BOSS5_EFCT_ROCKET_ROLLING_SPARK_OFST_Z = 131072;
    public const int GMD_BOSS5_EFCT_SE_JET_START_WAIT_TIME = 50;
    private const int GME_BOSS5_EFCT_IDX_BLITZ_FB_00 = 0;
    private const int GME_BOSS5_EFCT_IDX_BLITZ_FB_01 = 1;
    private const int GME_BOSS5_EFCT_IDX_BLITZ_FB_02 = 2;
    private const int GME_BOSS5_EFCT_IDX_BLITZ_FB_03 = 3;
    private const int GME_BOSS5_EFCT_IDX_BLITZ_FB_C_00 = 4;
    private const int GME_BOSS5_EFCT_IDX_BLITZ_FB_C_01 = 5;
    private const int GME_BOSS5_EFCT_IDX_BLITZ_FB_C_02 = 6;
    private const int GME_BOSS5_EFCT_IDX_BLITZ_FB_START = 7;
    private const int GME_BOSS5_EFCT_IDX_FB_SMORK00 = 8;
    private const int GME_BOSS5_EFCT_IDX_FB_SMORK01 = 9;
    private const int GME_BOSS5_EFCT_IDX_FB_SMORK02 = 10;
    private const int GME_BOSS5_EFCT_IDX_GLASS = 11;
    private const int GME_BOSS5_EFCT_IDX_JET_FB = 12;
    private const int GME_BOSS5_EFCT_IDX_JET_FB_SMORK = 13;
    private const int GME_BOSS5_EFCT_IDX_ROCKET_BLITZ = 14;
    private const int GME_BOSS5_EFCT_IDX_ROCKET_E = 15;
    private const int GME_BOSS5_EFCT_IDX_ROCKET_JET = 16;
    private const int GME_BOSS5_EFCT_IDX_ROCKET_S = 17;
    private const int GME_BOSS5_EFCT_IDX_ROCKET_SMORK = 18;
    private const int GME_BOSS5_EFCT_IDX_SHOCK = 19;
    private const int GME_BOSS5_EFCT_IDX_SHOCK_ATK = 20;
    private const int GME_BOSS5_EFCT_IDX_TARGET_FB = 21;
    private const int GME_BOSS5_EFCT_IDX_TARGET_FB_E = 22;
    private const int GME_BOSS5_EFCT_IDX_TARGET_FB_S = 23;
    private const int GME_BOSS5_EFCT_IDX_TARGET_FB_W = 24;
    private const int GME_BOSS5_EFCT_IDX_TARGET_FB_W_E = 25;
    private const int GME_BOSS5_EFCT_IDX_TARGET_FB_W_S = 26;
    private const int GME_BOSS5_EFCT_IDX_MAX = 27;
    public const int OBD_MOVE_SPDX_MAX = 11;
    public const int OBD_MOVE_SPDY_MAX = 14;
    public const int OBD_HIT_VEC_FRONT = 1;
    public const int OBD_HIT_VEC_BACK = 2;
    public const int OBD_CAMERA_NUM = 8;
    public const uint OBD_CAMERA_FIX = 1;
    public const uint OBD_CAMERA_SHIFT = 2;
    public const uint OBD_CAMERA_STOP = 4;
    public const uint OBD_CAMERA_REVERSE = 8;
    public const uint OBD_CAMERA_3D = 16;
    public const uint OBD_CAMERA_LIMITCHECK = 32;
    public const uint OBD_CAMERA_ROT_OFF = 1073741824;
    public const uint OBD_CAMERA_ROT_EX = 2147483648;
    private const ushort OBD_CAMERA_PRIORITY = 61438;
    public const float NND_BONE_YS = 0.25f;
    public const float NND_BONE_ZS = 0.125f;
    public const float NND_EFFECTOR_SIZE = 1f;
    public const int NNE_MATCTRLMODE_OFF = -1;
    public const int NNE_MATCTRL_BLEND_OFF = -1;
    public const int NNE_MATCTRL_TEXCOORDSRC_OFF = -1;


    private const int GME_GMK_TYPE_STOPPER_NORM = 0;
    private const int GME_GMK_TYPE_STOPPER_SLOT = 1;
    private const int GMD_GMK_STOPPER_V_MARGIN = 4;
    private const int GMD_GMK_STOPPER_V_HIT_MARGIN = 4;
    private const int GME_GMK_TYPE_SPCTPLT_0 = 0;
    private const int GME_GMK_TYPE_SPCTPLT_45 = 1;
    private const int GME_GMK_TYPE_SPCTPLT_315 = 2;
    private const int GME_GMK_TYPE_MAX = 3;
    private const short GMD_GMK_SPCTPLT_0_RECT_W = 4;
    private const short GMD_GMK_SPCTPLT_0_RECT_H = 16;
    private const short GMD_GMK_SPCTPLT_0_RECT_X = -2;
    private const short GMD_GMK_SPCTPLT_0_RECT_Y = -64;
    private const short GMD_GMK_SPCTPLT_45_RECT_W = 16;
    private const short GMD_GMK_SPCTPLT_45_RECT_H = 16;
    private const short GMD_GMK_SPCTPLT_45_RECT_X = 29;
    private const short GMD_GMK_SPCTPLT_45_RECT_Y = -45;
    private const short GMD_GMK_SPCTPLT_315_RECT_W = 16;
    private const short GMD_GMK_SPCTPLT_315_RECT_H = 16;
    private const short GMD_GMK_SPCTPLT_315_RECT_X = -45;
    private const short GMD_GMK_SPCTPLT_315_RECT_Y = -45;
    private const short GMD_GMK_SPCTPLT_HEIGHT = 78;
    private const short GMD_GMK_SPCTPLT_SHRINK = 36;
    private const short GMD_GMK_SPCTPLT_LENGTH = 42;
    public const int GMD_GMK_BELTCONV_SPEED = 2;
    public const int GMD_GMK_BELTCONV_COL_HEIGHT = 8;
    public const int GMD_GMK_BELTCONV_COL_OFST_Y = -16;
    public const float GMD_GMK_BELTCBELT_TEX_WIDTH = 512f;
    public const int GMD_GMK_BELTCONV_ROLL_OFF_Z = 65536;
    public const int GMD_GMK_BELTCONV_CONV_OFF_Z = 69632;
    public const int GMD_GMK_BELTCONV_BELT_OFF_Z = 73728;
    public const int GMD_GMK_BELTCONV_SPD_MASK = 15;
    public const int GMD_GMK_BELTCONV_COL_EX_L = 16;
    public const int GMD_GMK_BELTCONV_COL_EX_R = 32;
    public const int GMD_GMK_BELTCONV_COL_EX_LEN = 16;
    public const float GMD_GMK_BELTCONV_UV_CHECK = 0.125f;
    public const int GMD_ENE_HARO_LIGHT_NODE = 2;
    public const int GMD_ENE_HARO_NODE_NO_MAX = 16;
    public const int GMD_ENE_HARO_NEAR_PLAYER = 100;
    public const int GMD_ENE_HARO_CHECK_ACT_TIME = 120;
    public const int GMD_ENE_HARO_SEARCH_PLAYER = 100;
    public const float GMD_ENE_HARO_ANGLE_ADD_SPD = 0.03f;
    public const float GMD_ENE_HARO_ANGLE_ADD_SPD_LIMIT = 0.35f;
    public const float GMD_ENE_HARO_ANGLE_SPD_LIMIT = 1.3f;
    public const float GMD_ENE_HARD_FUNC_INERTIA = 0.96f;
    public const float GMD_ENE_HARD_SPEED = 1.5f;
    public const double GMD_ENE_HARD_INERTIA_VOLUME = 0.025;
    private const int GME_EFCT_ENE_IDX_E02_JET_S = 0;
    private const int GME_EFCT_ENE_IDX_E02_JET_S_SMORK = 1;
    private const int GME_EFCT_ENE_IDX_E04_DUMMY1 = 2;
    private const int GME_EFCT_ENE_IDX_E04_DUMMY2 = 3;
    private const int GME_EFCT_ENE_IDX_E04_MEREON_MISS = 4;
    private const int GME_EFCT_ENE_IDX_E05_GUARD = 5;
    private const int GME_EFCT_ENE_IDX_E06_HARO = 6;
    private const int GME_EFCT_ENE_IDX_E07_MOGU_E = 7;
    private const int GME_EFCT_ENE_IDX_E07_MOGU_W = 8;
    private const int GME_EFCT_ENE_IDX_E10_BUKUBUKU = 9;
    private const int GME_EFCT_ENE_IDX_E13_CROW = 10;
    private const int GME_EFCT_ENE_IDX_E13_T_STAR = 11;
    private const int GME_EFCT_ENE_IDX_E14_JET_H = 12;
    private const int GME_EFCT_ENE_IDX_MAX = 13;
    public const int GMD_BOSS4_EFF_BOMB_OFST_Z = 131072;
    public const int GME_BOSS4_EFF_BOMB_TYPE_SMALL = 0;
    public const int GME_BOSS4_EFF_BOMB_TYPE_CAPSULE = 1;
    public const int GME_BOSS4_EFF_BOMB_TYPE_CHIBI_01 = 2;
    public const int GME_BOSS4_EFF_BOMB_TYPE_CHIBI_02 = 3;
    public const int GME_BOSS4_EFF_BOMB_TYPE_CHIBI_03 = 4;
    public const int GME_BOSS4_EFF_BOMB_TYPE_PARTS = 5;
    public const int GME_BOSS4_EFF_BOMB_TYPE_MAX = 6;
    public const int GMD_BOSS4_EFF_DAMAGE_OFST_Z = 131072;
    public const float GMD_BOSS4_EFF_SWEAT_DISP_OFST_Y = 32f;
    public const int DMD_LOGO_COM_FILE_PATH_LENGTH_MAX = 256;
    public const int DMD_LOGO_COM_LOAD_CONTEXT_MAX = 10;
    public const int DMD_LOGO_COM_TASK_PRIO_DATA_LOAD = 4096;
    public const int DMD_LOGO_COM_TASK_GROUP_DATA_LOAD = 0;
    public const uint GSD_SND_SYS_MAIN_FLAG_USE_SYSTEM_CNT_VOL = 1;
    public const uint GSD_SND_SYS_MAIN_FLAG_SYSTEM_CNT_VOL_FADING = 2;
    public const uint GSD_SND_SYS_MAIN_FLAG_ENTER_HBM_FADING = 4;
    public const uint GSD_SND_SYS_MAIN_FLAG_LEAVE_HBM_FADING = 8;
    public const uint GSD_SND_SYS_MAIN_FLAG_HBM_FADING_MASK = 12;
    public const uint GSD_SND_SYS_MAIN_FLAG_RESET_CLEAR_MASK = 2;
    public const uint GSD_SND_SCB_FLAG_INITIALIZED = 1;
    public const uint GSD_SND_SCB_FLAG_IS_STOP = 2;
    public const uint GSD_SND_SCB_FLAG_IS_PAUSE = 4;
    public const uint GSD_SND_SCB_FLAG_STOP_ON_HBM = 1073741824;
    public const uint GSD_SND_SCB_FLAG_MUTE_ON_USER_BGM = 2147483648;
    public const int GSD_SND_SCB_MAX = 8;
    public const int GSD_SND_SCB_PAUSE_LEVEL_EACH = 2147483647;
    public const int GSD_SND_SCB_PAUSE_LEVEL_ALL_DEF = 128;
    public const int GSD_SND_SCB_PAUSE_LEVEL_GAME = 128;
    public const int GSD_SND_SCB_PAUSE_LEVEL_HBM = 64;
    public const int GSD_SND_SCB_PAUSE_LEVEL_NONE = 0;
    public const int GSE_SND_FADE_STATE_NORMAL = 0;
    public const int GSE_SND_FADE_STATE_FADING_IN = 1;
    public const int GSE_SND_FADE_STATE_FADING_OUT_TO_STOP = 2;
    public const int GSE_SND_FADE_STATE_FADING_OUT_TO_PAUSE = 3;
    public const int GSE_SND_FADE_STATE_END = 4;
    public const int GSE_SND_FADE_STATE_MAX = 5;
    public const int GSD_SND_SE_HANDLE_MAX = 16;
    private const int GSE_SND_TYPE_BGM = 0;
    private const int GSE_SND_TYPE_SE = 1;
    private const int GSE_SND_TYPE_MAX = 2;
    public const int GSE_SND_DATA_TYPE_CRIAUDIO = 0;
    public const int GSE_SND_DATA_TYPE_NW4R = 1;
    public const int GSE_SND_DATA_TYPE_MAX = 2;
    public const int GSD_SND_SE_HANDLE_PAUSE_LEVEL_EACH = 2147483647;
    public const int GSD_SND_SE_HANDLE_PAUSE_LEVEL_ALL_DEF = 128;
    public const int GSD_SND_SE_HANDLE_PAUSE_LEVEL_GAME = 128;
    public const int GSD_SND_SE_HANDLE_PAUSE_LEVEL_HBM = 64;
    public const int GSD_SND_SE_HANDLE_PAUSE_LEVEL_NONE = 0;
    public const uint GSD_SND_SE_HANDLE_FLAG_INITIALIZED = 1;
    public const uint GSD_SND_SE_HANDLE_FLAG_PLAY_STARTED = 2;
    public const uint GSD_SND_SE_HANDLE_FLAG_IS_STOP = 4;
    public const uint GSD_SND_SE_HANDLE_FLAG_IS_PAUSE = 8;
    public const uint GSD_SND_SE_HANDLE_FLAG_FREE_ON_STOP = 16;
    public const uint GSD_SND_SE_HANDLE_FLAG_STOP_ON_HBM = 1073741824;
    public const uint GSD_SND_SE_HANDLE_FLAG_NO_AUTOCLEAR = 2147483648;
    public const int GSD_SND_SE_PLAY_LIMIT_NUM = 8;
    public const int GSD_SND_SUSPEND_WAIT_COUNT = 8;
    public const int GSD_SND_NOPLAY_ERROR_STATE_RESTART_LIMIT = 90;
    public const int GSD_SND_NOPLAY_ERROR_CLEAR_SE_CRI_RESTART_LIMIT = 1000;
    private const int SOUND_TYPE_FX = 0;
    private const int SOUND_TYPE_BGM = 1;
    private const int AISAC_TYPE_VOLUME = 0;
    private const int AISAC_TYPE_PITCH = 1;
    public const ushort BG_SC_CHAR_NO_MASK = 1023;
    public const ushort BG_SC_H_FLIP = 1024;
    public const ushort BG_SC_V_FLIP = 2048;
    public const int OBD_MAP_CHAR_SIZE_X = 8;
    public const int OBD_MAP_CHAR_SIZE_Y = 8;
    public const int OBD_MAP_BLOCK_CHAR_NUM_X = 8;
    public const int OBD_MAP_BLOCK_CHAR_NUM_Y = 8;
    public const int OBD_BLOCK_DATA_SIZE = 128;
    public const int OBD_MAP_CL_CHAR_DATA_SIZE = 8;
    public const int OBD_MAP_CL_DIFF_DATA_SIZE = 8;
    public const int MTD_X = 0;
    public const int MTD_Y = 1;
    public const int MTD_Z = 2;
    public const int MTD_W = 3;
    public const int MTD_XY = 2;
    public const int MTD_XYZ = 3;
    public const int MTD_XYZW = 4;
    public const int MTD_LEFT = 0;
    public const int MTD_TOP = 1;
    public const int MTD_RIGHT = 2;
    public const int MTD_BOTTOM = 3;
    public const int MTD_RECT = 4;
    public const int MTD_WIDTH = 0;
    public const int MTD_HEIGHT = 1;
    public const int MTD_DEPTH = 2;
    public const int MTD_WH = 2;
    public const int MTD_WHD = 3;
    public const float NND_PI = 3.141593f;
    public const float NND_FLOAT_LARGE_VALUE = 1E+12f;
    private const int NNE_FALSE = 0;
    private const int NNE_false = 0;
    private const int NNE_OFF = 0;
    private const int NNE_TRUE = 1;
    private const int NNE_ON = 1;
    public const uint NND_MATTYPE_GL_MATRIEALDESC = 1;
    public const uint NND_MATTYPE_GL_STDSHADERDESC = 2;
    public const uint NND_MATTYPE_GL_USERPROFILE = 4;
    public const uint NND_MATTYPE_GLES11_MATRIEALDESC = 8;
    public const uint NND_MATFLAG_DOUBLESIDE = 1;
    public const uint NND_MATFLAG_DISABLE_LIGHTING = 2;
    public const uint NND_MATFLAG_DISABLE_FOGGING = 4;
    public const uint NND_MATFLAG_TWOSIDED_LIGHTING = 8;
    public const uint NND_MATFLAG_TWOSIDED_MATERIAL = 16;
    public const uint NND_MATFLAG_DISABLE_DEPTH_WRITING = 256;
    public const uint NND_MATFLAG_DISABLE_COLOR_R_WRITING = 512;
    public const uint NND_MATFLAG_DISABLE_COLOR_G_WRITING = 1024;
    public const uint NND_MATFLAG_DISABLE_COLOR_B_WRITING = 2048;
    public const uint NND_MATFLAG_DISABLE_COLOR_A_WRITING = 4096;
    public const uint NND_MATFLAG_CALLBACK = 2147483648;
    public const uint NND_MATCOLFLAG_VTXCOL_MATERIAL = 1;
    public const uint NND_MATCOLFLAG_SPECULAR_INTENSITY = 2;
    public const int NND_VTXCOL_GL_AMBIENT_AND_DIFFUSE = 5634;
    public const int NND_VTXCOL_GL_AMBIENT = 4608;
    public const int NND_VTXCOL_GL_DIFFUSE = 4609;
    public const int NND_VTXCOL_GL_SPECULAR = 4610;
    public const int NND_VTXCOL_GL_EMISSION = 5632;
    public const uint NND_MATLOGICFLAG_ENABLE_BLEND = 1;
    public const uint NND_MATLOGICFLAG_BLEND_FUNC_SEPARATE = 2;
    public const uint NND_MATLOGICFLAG_ENABLE_LOGIC_OP = 4;
    public const uint NND_MATLOGICFLAG_ENABLE_ALPHA_TEST = 8;
    public const uint NND_MATLOGICFLAG_ENABLE_DEPTH_TEST = 16;
    public const int NND_BLENDFUNC_GL_ZERO = 0;
    public const int NND_BLENDFUNC_GL_ONE = 1;
    public const int NND_BLENDFUNC_GL_SRC_COLOR = 768;
    public const int NND_BLENDFUNC_GL_ONE_MINUS_SRC_COLOR = 769;
    public const int NND_BLENDFUNC_GL_SRC_ALPHA = 770;
    public const int NND_BLENDFUNC_GL_ONE_MINUS_SRC_ALPHA = 771;
    public const int NND_BLENDFUNC_GL_DST_ALPHA = 772;
    public const int NND_BLENDFUNC_GL_ONE_MINUS_DST_ALPHA = 773;
    public const int NND_BLENDFUNC_GL_DST_COLOR = 774;
    public const int NND_BLENDFUNC_GL_ONE_MINUS_DST_COLOR = 775;
    public const int NND_BLENDFUNC_GL_CONSTANT_COLOR = 32769;
    public const int NND_BLENDFUNC_GL_ONE_MINUS_CONSTANT_COLOR = 32770;
    public const int NND_BLENDFUNC_GL_CONSTANT_ALPHA = 32771;
    public const int NND_BLENDFUNC_GL_ONE_MINUS_CONSTANT_ALPHA = 32772;
    public const int NND_BLENDFUNC_GL_SRC_ALPHA_SATURATE = 776;
    public const int NND_BLENDOP_GL_MIN = 32775;
    public const int NND_BLENDOP_GL_MAX = 32776;
    public const int NND_BLENDOP_GL_FUNC_ADD = 32774;
    public const int NND_BLENDOP_GL_FUNC_SUBTRACT = 32778;
    public const int NND_BLENDOP_GL_FUNC_REVERSE_SUBTRACT = 32779;
    public const int NND_CMPFUNC_GL_NEVER = 512;
    public const int NND_CMPFUNC_GL_LESS = 513;
    public const int NND_CMPFUNC_GL_EQUAL = 514;
    public const int NND_CMPFUNC_GL_LEQUAL = 515;
    public const int NND_CMPFUNC_GL_GREATER = 516;
    public const int NND_CMPFUNC_GL_NOTEQUAL = 517;
    public const int NND_CMPFUNC_GL_GEQUAL = 518;
    public const int NND_CMPFUNC_GL_ALWAYS = 519;
    public const int NND_LOGICOP_GL_CLEAR = 5376;
    public const int NND_LOGICOP_GL_AND = 5377;
    public const int NND_LOGICOP_GL_AND_REVERSE = 5378;
    public const int NND_LOGICOP_GL_COPY = 5379;
    public const int NND_LOGICOP_GL_AND_INVERTED = 5380;
    public const int NND_LOGICOP_GL_NOOP = 5381;
    public const int NND_LOGICOP_GL_XOR = 5382;
    public const int NND_LOGICOP_GL_OR = 5383;
    public const int NND_LOGICOP_GL_NOR = 5384;
    public const int NND_LOGICOP_GL_EQUIV = 5385;
    public const int NND_LOGICOP_GL_INVERT = 5386;
    public const int NND_LOGICOP_GL_OR_REVERSE = 5387;
    public const int NND_LOGICOP_GL_COPY_INVERTED = 5388;
    public const int NND_LOGICOP_GL_OR_INVERTED = 5389;
    public const int NND_LOGICOP_GL_NAND = 5390;
    public const int NND_LOGICOP_GL_SET = 5391;
    public const uint NND_TEXMAPTYPE_ENVIRONMENT = 1;
    public const uint NND_TEXMAPTYPE_TEXCOORD0 = 256;
    public const uint NND_TEXMAPTYPE_TEXCOORD1 = 512;
    public const uint NND_TEXMAPTYPE_TEXCOORD2 = 1024;
    public const uint NND_TEXMAPTYPE_TEXCOORD3 = 2048;
    public const uint NND_TEXMAPTYPE_TEXCOORD_MASK = 3841;
    public const uint NND_TEXMAPTYPE_UV_SCALE = 65536;
    public const uint NND_TEXMAPTYPE_NO_UV_TRANSFORM = 1073741824;
    public const uint NND_TEXMAPTYPE_CALLBACK = 2147483648;
    public const int NND_TEXENVMODE_GL_REPLACE = 7681;
    public const int NND_TEXENVMODE_GL_MODULATE = 8448;
    public const int NND_TEXENVMODE_GL_DECAL = 8449;
    public const int NND_TEXENVMODE_GL_BLEND = 3042;
    public const int NND_TEXENVMODE_GL_ADD = 260;
    public const int NND_TEXENVMODE_GL_COMBINE = 34160;
    public const int NND_TEXCOMBINE_GL_REPLACE = 7681;
    public const int NND_TEXCOMBINE_GL_MODULATE = 8448;
    public const int NND_TEXCOMBINE_GL_ADD = 260;
    public const int NND_TEXCOMBINE_GL_ADD_SIGNED = 34164;
    public const int NND_TEXCOMBINE_GL_INTERPOLATE = 34165;
    public const int NND_TEXCOMBINE_GL_SUBTRACT = 34023;
    public const int NND_TEXCOMBINE_GL_DOT3_RGB = 34478;
    public const int NND_TEXCOMBINE_GL_DOT3_RGBA = 34479;
    public const int NND_TEXENVSRC_GL_TEXTURE = 5890;
    public const int NND_TEXENVSRC_GL_TEXTURE0 = 33984;
    public const int NND_TEXENVSRC_GL_TEXTURE1 = 33985;
    public const int NND_TEXENVSRC_GL_TEXTURE2 = 33986;
    public const int NND_TEXENVSRC_GL_TEXTURE3 = 33987;
    public const int NND_TEXENVSRC_GL_TEXTURE4 = 33988;
    public const int NND_TEXENVSRC_GL_TEXTURE5 = 33989;
    public const int NND_TEXENVSRC_GL_TEXTURE6 = 33990;
    public const int NND_TEXENVSRC_GL_TEXTURE7 = 33991;
    public const int NND_TEXENVSRC_GL_CONSTANT = 34166;
    public const int NND_TEXENVSRC_GL_PRIMARY_COLOR = 34167;
    public const int NND_TEXENVSRC_GL_PREVIOUS = 34168;
    public const int NND_TEXENVOP_GL_SRC_COLOR = 768;
    public const int NND_TEXENVOP_GL_ONE_MINUS_SRC_COLOR = 769;
    public const int NND_TEXENVOP_GL_SRC_ALPHA = 770;
    public const int NND_TEXENVOP_GL_ONE_MINUS_SRC_ALPHA = 771;
    public const int NND_WRAPMODE_GL_CLAMP = 10496;
    public const int NND_WRAPMODE_GL_REPEAT = 10497;
    public const int NND_WRAPMODE_GL_MIRRORED_REPEAT = 33648;
    public const int NND_WRAPMODE_GL_CLAMP_TO_BORDER = 33069;
    public const int NND_WRAPMODE_GL_CLAMP_TO_EDGE = 33071;
    public const int NND_TEXFILTER_GL_NEAREST = 9728;
    public const int NND_TEXFILTER_GL_LINEAR = 9729;
    public const int NND_TEXFILTER_GL_NEAREST_MIPMAP_NEAREST = 9984;
    public const int NND_TEXFILTER_GL_LINEAR_MIPMAP_NEAREST = 9985;
    public const int NND_TEXFILTER_GL_NEAREST_MIPMAP_LINEAR = 9986;
    public const int NND_TEXFILTER_GL_LINEAR_MIPMAP_LINEAR = 9987;
    public const uint NND_TEXTURETYPE_NORMAL_MAP = 1;
    public const uint NND_TEXTURETYPE_BASE_MAP = 2;
    public const uint NND_TEXTURETYPE_DECAL_MAP = 4;
    public const uint NND_TEXTURETYPE_SPECULAR_MAP = 8;
    public const uint NND_TEXTURETYPE_MODULATE_MAP = 16;
    public const uint NND_TEXTURETYPE_ADD_MAP = 32;
    public const uint NND_TEXTURETYPE_OPACITY_MAP = 64;
    public const uint NND_TEXTURETYPE_DECAL2_MAP = 128;
    public const uint NND_TEXTURETYPE_DECAL3_MAP = 256;
    public const uint NND_TEXTURETYPE_SHININESS_MAP = 512;
    public const uint NND_TEXTURETYPE_DUALPARABOLOID_MAP = 1024;
    public const uint NND_TEXTURETYPE_ENVMASK_MAP = 2048;
    public const uint NND_TEXTURETYPE_USER1_MAP = 4096;
    public const uint NND_TEXTURETYPE_USER2_MAP = 8192;
    public const uint NND_TEXTURETYPE_USER3_MAP = 16384;
    public const uint NND_TEXTURETYPE_USER4_MAP = 32768;
    public const uint NND_TEXTURETYPE_USER5_MAP = 65536;
    public const uint NND_TEXTURETYPE_USER6_MAP = 131072;
    public const uint NND_TEXTURETYPE_USER7_MAP = 262144;
    public const uint NND_TEXTURETYPE_USER8_MAP = 524288;
    public const uint NND_TEXTURETYPE_MAP_MASK = 1048575;
    public const uint NND_TEXTURETYPE_NORMAL_MAP_AXLY = 268435456;
    public const uint NND_TEXTURETYPE_UV_SCALE = 536870912;
    public const uint NND_TEXTURETYPE_NO_UV_TRANSFORM = 1073741824;
    public const uint NND_TEXTURETYPE_CALLBACK = 2147483648;
    public const int NNE_TEXCOORDTYPE_TEXCOORD0 = 0;
    public const int NNE_TEXCOORDTYPE_TEXCOORD1 = 1;
    public const int NNE_TEXCOORDTYPE_TEXCOORD2 = 2;
    public const int NNE_TEXCOORDTYPE_TEXCOORD3 = 3;
    public const int NNE_TEXCOORDTYPE_SPHERE_MAP = -1;
    public const int NNE_TEXCOORDTYPE_PROJECTION_MAP = -2;
    public const int NNE_TEXCOORDTYPE_DUALPARABOLOID_MAP = -3;
    public const uint NND_CHUNK_HEADER_GLES11 = 1179208014;
    public const uint NND_CHUNK_TEXTURE_GLES11 = 1280592206;
    public const uint NND_CHUNK_OBJECT_GLES11 = 1112492366;
    public const uint NND_CHUNK_MOTION_GLES11 = 1330465102;
    public const uint NND_CHUNK_MORPH_MOTION_GLES11 = 1296910670;
    public const uint NND_CHUNK_CAMERA_MOTION_GLES11 = 1129138510;
    public const uint NND_CHUNK_LIGHT_MOTION_GLES11 = 1280133454;
    public const uint NND_CHUNK_MATERIAL_MOTION_GLES11 = 1095584078;
    public const uint NND_CHUNK_LIGHT_GLES11 = 1229736270;
    public const uint NND_CHUNK_CAMERA_GLES11 = 1094928718;
    public const uint NND_CHUNK_MORPH_GLES11 = 1414351182;
    public const uint NND_CHUNK_NODE_NAME_GLES11 = 1313753422;
    public const uint NND_CHUNK_NODE_TREE_OBJECT_GLES11 = 1414416718;
    public const uint NND_CHUNK_MESH_OBJECT_GLES11 = 1162692942;
    public const uint NND_CHUNK_SHADER_FILE_GLES11 = 1179863374;
    public const uint NND_CHUNK_SHADER_INDEX_GLES11 = 1230195022;
    public const uint NND_CHUNK_NOF0_GLES11 = 809914190;
    public const uint NND_CHUNK_NEND_GLES11 = 1145980238;
    public const uint NND_CHUNK_NFN0_GLES11 = 810436174;
    private const int GME_PLY_ACT_STATE_INVALID = -1;
    private const int GME_PLY_ACT_STATE_FW = 0;
    private const int GME_PLY_ACT_STATE_FW_EX = 1;
    private const int GME_PLY_ACT_STATE_WAIT_0_1 = 2;
    private const int GME_PLY_ACT_STATE_WAIT_0_2 = 3;
    private const int GME_PLY_ACT_STATE_WAIT_1_1 = 4;
    private const int GME_PLY_ACT_STATE_WAIT_1_2 = 5;
    private const int GME_PLY_ACT_STATE_WAIT_2_1 = 6;
    private const int GME_PLY_ACT_STATE_WAIT_2_2 = 7;
    private const int GME_PLY_ACT_STATE_TURN = 8;
    private const int GME_PLY_ACT_STATE_TURN_RUN = 9;
    private const int GME_PLY_ACT_STATE_TURN_BRAKE = 10;
    private const int GME_PLY_ACT_STATE_LOOKUP1 = 11;
    private const int GME_PLY_ACT_STATE_LOOKUP2 = 12;
    private const int GME_PLY_ACT_STATE_LOOKUP3 = 13;
    private const int GME_PLY_ACT_STATE_SQUATDOWN1 = 14;
    private const int GME_PLY_ACT_STATE_SQUATDOWN2 = 15;
    private const int GME_PLY_ACT_STATE_SQUATDOWN3 = 16;
    private const int GME_PLY_ACT_STATE_PUSH1 = 17;
    private const int GME_PLY_ACT_STATE_PUSH2 = 18;
    private const int GME_PLY_ACT_STATE_WALK = 19;
    private const int GME_PLY_ACT_STATE_RUN = 20;
    private const int GME_PLY_ACT_STATE_DASH_1 = 21;
    private const int GME_PLY_ACT_STATE_DASH_2 = 22;
    private const int GME_PLY_ACT_STATE_BRAKE1 = 23;
    private const int GME_PLY_ACT_STATE_BRAKE2 = 24;
    private const int GME_PLY_ACT_STATE_BRAKE3 = 25;
    private const int GME_PLY_ACT_STATE_SPIN = 26;
    private const int GME_PLY_ACT_STATE_SPIN_SMALL = 27;
    private const int GME_PLY_ACT_STATE_SPIN_SHIFT = 28;
    private const int GME_PLY_ACT_STATE_SPIN_ACC = 29;
    private const int GME_PLY_ACT_STATE_SPIN_DASH = 30;
    private const int GME_PLY_ACT_STATE_HOMING = 31;
    private const int GME_PLY_ACT_STATE_HOMING_REF1 = 32;
    private const int GME_PLY_ACT_STATE_STAGGER_F = 33;
    private const int GME_PLY_ACT_STATE_STAGGER_B = 34;
    private const int GME_PLY_ACT_STATE_STAGGER_D = 35;
    private const int GME_PLY_ACT_STATE_DAMAGE = 36;
    private const int GME_PLY_ACT_STATE_DIE1 = 37;
    private const int GME_PLY_ACT_STATE_DIE2 = 38;
    private const int GME_PLY_ACT_STATE_JUMP_SPIN = 39;
    private const int GME_PLY_ACT_STATE_JUMP_FALL = 40;
    private const int GME_PLY_ACT_STATE_JUMP_FALL_TURN = 41;
    private const int GME_PLY_ACT_STATE_JUMP_FALL_R = 42;
    private const int GME_PLY_ACT_STATE_JUMP_FALL_R_TURN = 43;
    private const int GME_PLY_ACT_STATE_JUMP_G01 = 44;
    private const int GME_PLY_ACT_STATE_JUMP_G02 = 45;
    private const int GME_PLY_ACT_STATE_JUMP_G03 = 46;
    private const int GME_PLY_ACT_STATE_JUMP_GF01 = 47;
    private const int GME_PLY_ACT_STATE_JUMP_GF02 = 48;
    private const int GME_PLY_ACT_STATE_CHANGE_S = 49;
    private const int GME_PLY_ACT_STATE_CHANGE_01 = 50;
    private const int GME_PLY_ACT_STATE_CHANGE_01_1 = 51;
    private const int GME_PLY_ACT_STATE_CHANGE_01_2 = 52;
    private const int GME_PLY_ACT_STATE_CHANGE_02 = 53;
    private const int GME_PLY_ACT_STATE_GOAL_01 = 54;
    private const int GME_PLY_ACT_STATE_GOAL_02 = 55;
    private const int GME_PLY_ACT_STATE_GIMMICK_START = 56;
    private const int GME_PLY_ACT_STATE_GMK_HANG = 56;
    private const int GME_PLY_ACT_STATE_GMK_HANG_F = 57;
    private const int GME_PLY_ACT_STATE_GMK_HANG_B = 58;
    private const int GME_PLY_ACT_STATE_GMK_HANG_ACT = 59;
    private const int GME_PLY_ACT_STATE_GMK_BALL_01 = 60;
    private const int GME_PLY_ACT_STATE_GMK_BALL_02 = 61;
    private const int GME_PLY_ACT_STATE_GMK_BREATH = 62;
    private const int GME_PLY_ACT_STATE_GMK_ROPE = 63;
    private const int GME_PLY_ACT_STATE_GMK_ROPE_ST = 64;
    private const int GME_PLY_ACT_STATE_GMK_SLIDE = 65;
    private const int GME_PLY_ACT_STATE_GMK_HANG_ST = 66;
    private const int GME_PLY_ACT_STATE_GMK_CANNON_SHOOT = 67;
    private const int GME_PLY_ACT_STATE_GMK_BREATH_J = 68;
    private const int GME_PLY_ACT_STATE_GMK_TRUCK_FW = 69;
    private const int GME_PLY_ACT_STATE_GMK_TRUCK_FW_L = 70;
    private const int GME_PLY_ACT_STATE_GMK_TRUCK_RUN = 71;
    private const int GME_PLY_ACT_STATE_GMK_TRUCK_RUN_L = 72;
    private const int GME_PLY_ACT_STATE_GMK_TRUCK_DOWN = 73;
    private const int GME_PLY_ACT_STATE_GMK_TRUCK_DANGER = 74;
    private const int GME_PLY_ACT_STATE_GMK_TRUCK_DANGER_ST = 75;
    private const int GME_PLY_ACT_STATE_GMK_TRUCK_DANGER_RE = 76;
    private const int GME_PLY_ACT_STATE_GMK_ENDING_FR1 = 77;
    private const int GME_PLY_ACT_STATE_GMK_ENDING_FR2 = 78;
    private const int GME_PLY_ACT_STATE_GMK_ENDING_FN11 = 79;
    private const int GME_PLY_ACT_STATE_GMK_ENDING_FN12 = 80;
    private const int GME_PLY_ACT_STATE_GMK_ENDING_FN21 = 81;
    private const int GME_PLY_ACT_STATE_GMK_ENDING_FN22 = 82;
    private const int GME_PLY_ACT_STATE_GMK_ENDING_FNS1 = 83;
    private const int GME_PLY_ACT_STATE_GMK_ENDING_FNS2 = 84;
    private const int GME_PLY_ACT_STATE_MAX = 85;
    private const int GME_PLY_MODEL_ID_NORMAL = 0;
    private const int GME_PLY_MODEL_ID_SPIN = 1;
    private const int GME_PLY_MODEL_ID_IPHONE = 2;
    private const int GME_PLY_MODEL_ID_SPINJUMP = 3;
    private const int GME_PLY_MODEL_ID_MAX = 4;
    private const int GMD_PL_SONIC_SPDAD = 145;
    private const int GMD_PL_SONIC_SPDDO = 1024;
    private const int GMD_PL_SONIC_SPDMA = 36864;
    private const int GMD_PL_SONIC_SLOPE_SPD = 8192;
    private const int GMD_PL_SONIC_SLOPE_SPD_TRUCK = 24576;
    private const int GMD_PL_SSONIC_SPDAD = 435;
    private const int GMD_PL_SSONIC_SPDDO = 2048;
    private const int GMD_PL_SSONIC_SPDMA = 61440;
    private const int GMD_PL_SSONIC_SLOPE_SPD = 12288;
    private const int GMD_PL_SSONIC_SLOPE_SPD_PINBALL = 8192;
    private const int GMD_PL_SSONIC_SLOPE_SPD_TRUCK = 30720;
    private const int GMD_PL_SONIC_SPDAD_TRUCK = 145;
    private const int GMD_PL_SONIC_SPDDO_TRUCK = 512;
    private const int GMD_PL_SONIC_SPDMA_TRUCK = 24576;
    private const int GMD_PL_SSONIC_SPDAD_TRUCK = 435;
    private const int GMD_PL_SSONIC_SPDDO_TRUCK = 512;
    private const int GMD_PL_SSONIC_SPDMA_TRUCK = 40960;
    private const int GMD_PL_SONIC_SPIN_SPD = 12288;
    private const int GMD_PL_SONIC_SPIN_SPDAD = 8192;
    private const int GMD_PL_SONIC_SPIN_SPDMA = 40960;
    private const int GMD_PL_SONIC_SPIN_SPDDO = 128;
    private const int GMD_PL_SSONIC_SPIN_SPD = 36864;
    private const int GMD_PL_SSONIC_SPIN_SPDAD = 24576;
    private const int GMD_PL_SSONIC_SPIN_SPDMA = 61440;
    private const int GMD_PL_SSONIC_SPIN_SPDDO = 128;
    private const int GMD_PL_SONIC_SPIN_PINBALL_SPDAD = 145;
    private const int GMD_PL_SONIC_SPIN_PINBALL_SPDMA = 36864;
    private const int GMD_PL_SONIC_SPIN_PINBALL_SPDDO = 128;
    private const int GMD_PL_SONIC_SPIN_PINBALL_SLOPE_SPD = 12288;
    private const int GMD_PL_SSONIC_SPIN_PINBALL_SPDAD = 435;
    private const int GMD_PL_SSONIC_SPIN_PINBALL_SPDMA = 61440;
    private const int GMD_PL_SSONIC_SPIN_PINBALL_SPDDO = 128;
    private const int GMD_PL_SSONIC_SPIN_PINBALL_SLOPE_SPD = 18432;
    private const int GMD_PL_JUMP_SPD = 23130;
    private const int GMD_PL_SSONIC_JUMP_SPD = 32703;
    private const int GMD_PL_SPL_JUMP_SPD = 16384;
    private const int GMD_PL_TRUCK_JUMP_SPD = 19275;
    private const int GMD_PL_TRUCK_SSONIC_JUMP_SPD = 27252;
    private const int GMD_PL_SONIC_JUMP_SPDAD = 256;
    private const int GMD_PL_SONIC_JUMP_SPDDO = 2048;
    private const int GMD_PL_SONIC_JUMP_SPDMA = 36864;
    private const int GMD_PL_SSONIC_JUMP_SPDAD = 768;
    private const int GMD_PL_SSONIC_JUMP_SPDDO = 4096;
    private const int GMD_PL_SSONIC_JUMP_SPDMA = 61440;
    private const int GMD_PL_SONIC_JUMP_SPDAD_TRUCK = 256;
    private const int GMD_PL_SONIC_JUMP_SPDDO_TRUCK = 512;
    private const int GMD_PL_SONIC_JUMP_SPDMA_TRUCK = 36864;
    private const int GMD_PL_SSONIC_JUMP_SPDAD_TRUCK = 768;
    private const int GMD_PL_SSONIC_JUMP_SPDDO_TRUCK = 1024;
    private const int GMD_PL_SSONIC_JUMP_SPDMA_TRUCK = 61440;
    private const int GMD_PL_FALL_SPDAD = 680;
    private const int GMD_PL_FALL_WATER_SPDAD = 192;
    private const int GMD_PL_FALL_SPDMA = 61440;
    private const int GMD_PL_SPL_FALL_SPDAD = 312;
    private const int GMD_PL_SPL_FALL_SPDMA = 24576;
    private const int GMD_PL_SONIC_FALL_TIME = 24;
    private const int GMD_PL_SONIC_FALL_TIME_TRUCK = 240;
    private const int GMD_PL_SONIC_KEI_SPD = 192;
    private const int GMD_PL_SONIC_KEI_SPDMA = 53248;
    private const int GMD_PL_SONIC_KEI_SPD_SPIN = 640;
    private const int GMD_PL_SONIC_KEI_SPD_SPIN_S = 1280;
    private const int GMD_PL_SONIC_KEI_SPD_P_SPIN = 1280;
    private const int GMD_PL_SONIC_KEI_SPD_TRUCK = 512;
    private const int GMD_PL_SONIC_KEI_SPDMA_TRUCK = 40960;
    private const int GMD_PL_SSONIC_KEI_SPD = 288;
    private const int GMD_PL_SSONIC_KEI_SPDMA = 61440;
    private const int GMD_PL_SSONIC_KEI_SPD_SPIN = 960;
    private const int GMD_PL_SSONIC_KEI_SPD_SPIN_S = 1280;
    private const int GMD_PL_SSONIC_KEI_SPD_P_SPIN = 1280;
    private const int GMD_PL_SSONIC_KEI_SPD_SPIN_FOR_PINBALL = 640;
    private const int GMD_PL_SSONIC_KEI_SPD_TRUCK = 512;
    private const int GMD_PL_SSONIC_KEI_SPDMA_TRUCK = 40960;
    private const int GMD_PL_SPL_KEI_SPDMA = 20480;
    private const int GMD_PL_SPL_KEI_SPD = 512;
    private const int GMD_PL_SONIC_AIR_COUNT = 1800;
    private const int GMD_PL_SONIC_DAMAGE_TIME = 180;
    private const int GMD_PL_SONIC_POOL_TIME = 96;
    private const int GMD_PL_SONIC_PUSH_SPD = 7168;
    private const int GMD_PL_SSONIC_PUSH_SPD = 21504;
    private const int GME_PLY_MTN_ID_BRAKE01 = 0;
    private const int GME_PLY_MTN_ID_BRAKE02 = 1;
    private const int GME_PLY_MTN_ID_BRAKE03 = 2;
    private const int GME_PLY_MTN_ID_CHANGE_01 = 3;
    private const int GME_PLY_MTN_ID_CHANGE_01_1 = 4;
    private const int GME_PLY_MTN_ID_CHANGE_01_2 = 5;
    private const int GME_PLY_MTN_ID_CHANGE_02 = 6;
    private const int GME_PLY_MTN_ID_DAMAGE = 7;
    private const int GME_PLY_MTN_ID_DASH1 = 8;
    private const int GME_PLY_MTN_ID_DASH2 = 9;
    private const int GME_PLY_MTN_ID_DIE_01 = 10;
    private const int GME_PLY_MTN_ID_DIE_02 = 11;
    private const int GME_PLY_MTN_ID_FW = 12;
    private const int GME_PLY_MTN_ID_FWEX = 13;
    private const int GME_PLY_MTN_ID_FWWAIT0_01 = 14;
    private const int GME_PLY_MTN_ID_FWWAIT0_02 = 15;
    private const int GME_PLY_MTN_ID_FWWAIT1_01 = 16;
    private const int GME_PLY_MTN_ID_FWWAIT1_02 = 17;
    private const int GME_PLY_MTN_ID_FWWAIT2_01 = 18;
    private const int GME_PLY_MTN_ID_FWWAIT2_02 = 19;
    private const int GME_PLY_MTN_ID_GOAL_01 = 20;
    private const int GME_PLY_MTN_ID_GOAL_02 = 21;
    private const int GME_PLY_MTN_ID_JUMP_F = 22;
    private const int GME_PLY_MTN_ID_JUMP_S_01 = 23;
    private const int GME_PLY_MTN_ID_JUMP_S_02 = 24;
    private const int GME_PLY_MTN_ID_JUMP_S_03 = 25;
    private const int GME_PLY_MTN_ID_LOOKUP_01 = 26;
    private const int GME_PLY_MTN_ID_LOOKUP_02 = 27;
    private const int GME_PLY_MTN_ID_LOOKUP_03 = 28;
    private const int GME_PLY_MTN_ID_RUN = 29;
    private const int GME_PLY_MTN_ID_SPIN01 = 30;
    private const int GME_PLY_MTN_ID_SPIN02 = 31;
    private const int GME_PLY_MTN_ID_SPIN = 32;
    private const int GME_PLY_MTN_ID_SQUAT_01 = 33;
    private const int GME_PLY_MTN_ID_SQUAT_02 = 34;
    private const int GME_PLY_MTN_ID_SQUAT_03 = 35;
    private const int GME_PLY_MTN_ID_ST_B = 36;
    private const int GME_PLY_MTN_ID_ST_D = 37;
    private const int GME_PLY_MTN_ID_ST_F = 38;
    private const int GME_PLY_MTN_ID_TURN = 39;
    private const int GME_PLY_MTN_ID_TURN_BRAKE = 40;
    private const int GME_PLY_MTN_ID_TURN_RUN = 41;
    private const int GME_PLY_MTN_ID_WALK = 42;
    private const int GME_PLY_MTN_ID_WALL_01 = 43;
    private const int GME_PLY_MTN_ID_WALL_02 = 44;
    private const int GME_PLY_MTN_ID_HANG = 45;
    private const int GME_PLY_MTN_ID_HANG_B = 46;
    private const int GME_PLY_MTN_ID_HANG_F = 47;
    private const int GME_PLY_MTN_ID_BALL_01 = 48;
    private const int GME_PLY_MTN_ID_BALL_02 = 49;
    private const int GME_PLY_MTN_ID_BREATH = 50;
    private const int GME_PLY_MTN_ID_ROPE = 51;
    private const int GME_PLY_MTN_ID_ROPE_ST = 52;
    private const int GME_PLY_MTN_ID_SLIDE = 53;
    private const int GME_PLY_MTN_ID_SPIN_N = 54;
    private const int GME_PLY_MTN_ID_SPIN_G = 55;
    private const int GME_PLY_MTN_ID_SPIN_B = 56;
    private const int GME_PLY_MTN_ID_FALL = 57;
    private const int GME_PLY_MTN_ID_FALL_TURN_L = 58;
    private const int GME_PLY_MTN_ID_FALL_R = 59;
    private const int GME_PLY_MTN_ID_FALL_R_TURN_L = 60;
    private const int GME_PLY_MTN_ID_HANG_ST = 61;
    private const int GME_PLY_MTN_ID_HANG_ACT = 62;
    private const int GME_PLY_MTN_ID_BREATH_J = 63;
    private const int GME_PLY_MTN_ID_TRUCK_RUN = 64;
    private const int GME_PLY_MTN_ID_TRUCK_JP = 65;
    private const int GME_PLY_MTN_ID_TRUCK_DOWN = 66;
    private const int GME_PLY_MTN_ID_TRUCK_ST = 67;
    private const int GME_PLY_MTN_ID_TRUCK_DANGER = 68;
    private const int GME_PLY_MTN_ID_TRUCK_DANGER_ST = 69;
    private const int GME_PLY_MTN_ID_TRUCK_DANGER_RE = 70;
    private const int GME_PLY_MTN_ID_ENDING_FR1 = 71;
    private const int GME_PLY_MTN_ID_ENDING_FR2 = 72;
    private const int GME_PLY_MTN_ID_ENDING_FN11 = 73;
    private const int GME_PLY_MTN_ID_ENDING_FN12 = 74;
    private const int GME_PLY_MTN_ID_ENDING_FN21 = 75;
    private const int GME_PLY_MTN_ID_ENDING_FN22 = 76;
    private const int GME_PLY_MTN_ID_DASH2_L = 77;
    private const int GME_PLY_MTN_ID_DAMAGE_L = 78;
    private const int GME_PLY_MTN_ID_FW_L = 79;
    private const int GME_PLY_MTN_ID_TURN_L = 80;
    private const int GME_PLY_MTN_ID_SQUAT_02_L = 81;
    private const int GME_PLY_MTN_ID_SQUAT_03_L = 82;
    private const int GME_PLY_MTN_ID_BRAKE01_L = 83;
    private const int GME_PLY_MTN_ID_BRAKE02_L = 84;
    private const int GME_PLY_MTN_ID_BRAKE03_L = 85;
    private const int GME_PLY_MTN_ID_TURN_BRAKE_L = 86;
    private const int GME_PLY_MTN_ID_LOOKUP_01_L = 87;
    private const int GME_PLY_MTN_ID_LOOKUP_02_L = 88;
    private const int GME_PLY_MTN_ID_LOOKUP_03_L = 89;
    private const int GME_PLY_MTN_ID_BREATH_L = 90;
    private const int GME_PLY_MTN_ID_CHANGE_01_L = 91;
    private const int GME_PLY_MTN_ID_CHANGE_01_1_L = 92;
    private const int GME_PLY_MTN_ID_CHANGE_01_2_L = 93;
    private const int GME_PLY_MTN_ID_CHANGE_02_L = 94;
    private const int GME_PLY_MTN_ID_TRUCK_RUN_L = 95;
    private const int GME_PLY_MTN_ID_TRUCK_ST_L = 96;
    private const int GME_PLY_MTN_ID_FALL_L = 97;
    private const int GME_PLY_MTN_ID_FALL_TURN = 98;
    private const int GME_PLY_MTN_ID_FALL_R_L = 99;
    private const int GME_PLY_MTN_ID_FALL_R_TURN = 100;
    private const int GME_PLY_MTN_ID_BREATH_J_L = 101;
    private const int GME_PLY_MTN_ID_SSON_DASH1 = 102;
    private const int GME_PLY_MTN_ID_SSON_FW = 103;
    private const int GME_PLY_MTN_ID_SSON_FWWAIT1_01 = 104;
    private const int GME_PLY_MTN_ID_SSON_FWWAIT1_02 = 105;
    private const int GME_PLY_MTN_ID_SSON_JUMP_F = 106;
    private const int GME_PLY_MTN_ID_SSON_JUMP_S_01 = 107;
    private const int GME_PLY_MTN_ID_SSON_JUMP_S_02 = 108;
    private const int GME_PLY_MTN_ID_SSON_JUMP_S_03 = 109;
    private const int GME_PLY_MTN_ID_SSON_LOOKUP_01 = 110;
    private const int GME_PLY_MTN_ID_SSON_LOOKUP_02 = 111;
    private const int GME_PLY_MTN_ID_SSON_LOOKUP_03 = 112;
    private const int GME_PLY_MTN_ID_SSPIN_N = 113;
    private const int GME_PLY_MTN_ID_SSPIN_G = 114;
    private const int GME_PLY_MTN_ID_SSPIN_B = 115;
    private const int GME_PLY_MTN_ID_SSON_SQUAT_01 = 116;
    private const int GME_PLY_MTN_ID_SSON_SQUAT_02 = 117;
    private const int GME_PLY_MTN_ID_SSON_SQUAT_03 = 118;
    private const int GME_PLY_MTN_ID_SSON_TURN = 119;
    private const int GME_PLY_MTN_ID_ENDING_FNS1 = 120;
    private const int GME_PLY_MTN_ID_ENDING_FNS2 = 121;
    private const int GME_PLY_MTN_ID_SSON_DASH1_L = 122;
    private const int GME_PLY_MTN_ID_SSON_FW_L = 123;
    private const int GME_PLY_MTN_ID_SSON_SQUAT_02_L = 124;
    private const int GME_PLY_MTN_ID_SSON_SQUAT_03_L = 125;
    private const int GME_PLY_MTN_ID_SSON_TURN_L = 126;
    private const int GME_PLY_MTN_ID_SSON_LOOKUP_01_L = 127;
    private const int GME_PLY_MTN_ID_SSON_LOOKUP_02_L = 128;
    private const int GME_PLY_MTN_ID_SSON_LOOKUP_03_L = 129;
    private const int GME_PLY_MTN_ID_MAX = 130;
    public const float GMD_CAMERA_SCALE = 0.6743833f;
    public const float GMD_CAMERA_UP_SCALE_ADD = 0.01f;
    public const float GMD_CAMERA_UP_SCALE_MAX = 0.3371917f;
    public const float GMD_MAP_BLOCK_LOCAL_SIZE = 20f;
    public const int GMD_MAP_BLOCK_SIZE = 64;
    public const int GMD_MAP_ADJUST_POS_Z_FINAL_M = -64;
    public const float GMD_OBJ_DRAW_SCALE = 3.2f;
    public const int GMD_OBJ_DRAW_SCALE_FX = 13107;
    public const int GMD_MAIN_SCR_SPD_MAX = 16;
    public const int GMD_MAIN_TIME_MAX = 35999;
    public const int GMD_MAIN_GOVER_SWAIT_TIME = 120;
    public const float GMD_LIGHT_COMN_INTENSITY = 1f;
    public const float GMD_LIGHT_CMN_DARK_INTENSITY = 0.8f;
    public const float GMD_LIGHT_MAP_DARK_INTENSITY = 0.4f;
    public const float GMD_LIGHT_EX_MAP_DARK_INTENSITY = 0.7f;
    public const float GMD_LIGHT_PLY_DARK_INTENSITY = 1f;
    public const float GMD_LIGHT_GEAR_DARK_INTENSITY = 0.9f;
    public const float GMD_LIGHT_PLY_CMN_INTENSITY = 1.5f;
    public const int GMD_MAIN_NEXT_EVT_WORLDMAP = 0;
    public const int GMD_MAIN_NEXT_EVT_MAINGAME = 1;
    public const int GMD_MAIN_NEXT_EVT_ENDING = 2;
    public const int GMD_MAIN_NEXT_EVT_SPSTAGE_BRA = 3;
    public const int GMD_MAIN_NEXT_EVT_MAINMENU = 4;
    public const int GMD_MAIN_NEXT_EVT_TITLE = 5;
    public const int GMD_MAIN_NEXT_EVT_BUYSCREEN = 6;
    public const int GMD_MAIN_NEXT_EVT_MAX = 7;
    public const uint GMD_GAME_FLAG_GAMESYS_RESTART = 2;
    public const uint GMD_GAME_FLAG_CLEAR = 4;
    public const uint GMD_GAME_FLAG_RESULT_START = 8;
    public const uint GMD_GAME_FLAG_RESULT_END = 16;
    public const uint GMD_GAME_FLAG_GAMEOVER_START = 32;
    public const uint GMD_GAME_FLAG_PAUSE_DEMO = 64;
    public const uint GMD_GAME_FLAG_PAUSE_IS_DECIDED = 128;
    public const uint GMD_GAME_FLAG_GAMEOVER_END = 256;
    public const uint GMD_GAME_FLAG_TIMEOVER = 512;
    public const uint GMD_GAME_FLAG_COUNT_GAME_TIME = 1024;
    public const uint GMD_GAME_FLAG_COUNT_SYNC_TIME = 2048;
    public const uint GMD_GAME_FLAG_START_DEMO = 4096;
    public const uint GMD_GAME_FLAG_WATER_LEVEL_EFCT_OFF = 8192;
    public const uint GMD_GAME_FLAG_SPECIAL_STAGE = 16384;
    public const uint GMD_GAME_FLAG_SCR_LIMIT_BUSY = 32768;
    public const uint GMD_GAME_FLAG_SPL_CHAOSGET = 65536;
    public const uint GMD_GAME_FLAG_SPL_FAILED = 131072;
    public const uint GMD_GAME_FLAG_SPL_TIMEOVER = 262144;
    public const uint GMD_GAME_FLAG_USE_SUPER_SONIC = 524288;
    public const uint GMD_GAME_FLAG_GOAL_IN = 1048576;
    public const uint GMD_GAME_FLAG_FINAL_DATA_LOAD = 2097152;
    public const uint GMD_GAME_FLAG_FINAL_DATA_RELEASE = 4194304;
    public const uint GMD_GAME_FLAG_ENDING = 8388608;
    public const uint GMD_GAME_FLAG_START_MSG = 16777216;
    public const uint GMD_GAME_FLAG_GOAL_AS_S_SONIC = 33554432;
    public const uint GMD_GAME_FLAG_RESUMED_FROM_MARKER = 67108864;
    public const uint GMD_GAME_FLAG_BGM_PLAY_ENABLE = 134217728;
    public const uint GMD_GAME_FLAG_BGM_PLAY_WAIT = 268435456;
    public const uint GMD_GAME_FLAG_SUSPENDED_PAUSE = 536870912;
    public const uint GMD_GAME_FLAG_PAUSE_WAIT_MASK = 32968936;
    public const uint GMD_GAME_FLAG_START_CLEAR_MASK = 107488254;
    public const int GMD_ENE_MOTORA_EVE_FLAG_RIGHT = 1;
    public const int GMD_ENE_MOTORA_MOVE_SPD_X = 2048;
    public const int GMD_ENE_MOTORA_FW_TIME = 61440;
    public const int GMD_ENE_MOTORA_TURN_FRAME = 40;
    public const int GMD_ENE_MEREON_HIDE_SEARCH_DIST = 96;
    public const int GMD_ENE_MEREON_ROCKET_HIDE_SEARCH_DIST = 192;
    public const int GMD_ENE_MEREON_APPEAR_TIME = 30;
    public const int GMD_ENE_MEREON_ROCKET_APPEAR_TIME = 15;
    public const float GMD_ENE_MEREON_CAMOUFLAGE_APPEAR_BASE = 0.1f;
    public const float GMD_ENE_MEREON_CAMOUFLAGE_APPEAR_REST = 0.9f;
    public const float GMD_ENE_MEREON_CAMOUFLAGE_HIDE_BASE = 0.0f;
    public const float GMD_ENE_MEREON_CAMOUFLAGE_HIDE_REST = 1f;
    public const int GMD_ENE_MEREON_BULLET_OFST_X = -98304;
    public const int GMD_ENE_MEREON_BULLET_OFST_Y = -49152;
    public const int GMD_ENE_MEREON_BULLET_OFST_Z = 0;
    public const int GMD_ENE_MEREON_BULLET_FLASH_OFST_X = -81920;
    public const int GMD_ENE_MEREON_BULLET_FLASH_OFST_Y = -49152;
    public const int GMD_ENE_MEREON_BULLET_FLASH_OFST_Z = 32768;
    public const int GMD_ENE_MEREON_BULLET_SPD_X = -8192;
    public const int GMD_ENE_MEREON_BULLET_SPD_Y = 0;
    public const int GMD_ENE_MEREON_BULLET_END_WAIT_TIME = 30;
    public const int GMD_ENE_MEREON_HIDE_TIME = 30;
    public const ushort GMD_ENE_MEREON_ROCKET_FALL_DIR = 4096;
    public const ushort GMD_ENE_MEREON_ROCKET_SPD = 8192;
    public const int GMD_ENE_HARI_ATK_BLINK_ENABLE = 0;
    public const int GMD_ENE_HARI_EVE_FLAG_RIGHT = 1;
    public const int GMD_ENE_HARI_ATK_RECT_LEFT = -12;
    public const int GMD_ENE_HARI_ATK_RECT_TOP = -12;
    public const int GMD_ENE_HARI_ATK_RECT_RIGHT = 12;
    public const int GMD_ENE_HARI_ATK_RECT_BOTTOM = 12;
    public const int GMD_ENE_HARI_DEF_RECT_LEFT = -22;
    public const int GMD_ENE_HARI_DEF_RECT_TOP = -22;
    public const int GMD_ENE_HARI_DEF_RECT_RIGHT = 22;
    public const int GMD_ENE_HARI_DEF_RECT_BOTTOM = 22;
    public const int GMD_ENE_HARI_BODY_RECT_LEFT = -22;
    public const int GMD_ENE_HARI_BODY_RECT_TOP = -22;
    public const int GMD_ENE_HARI_BODY_RECT_RIGHT = 22;
    public const int GMD_ENE_HARI_BODY_RECT_BOTTOM = 22;
    public const int GMD_ENE_HARI_R_ATK_ALERT_TIME = 60;
    public const int GMD_ENE_HARI_R_DEF_ATKWAIT_TIME = 300;
    public const int GMD_ENE_HARI_R_DEF_ATK_TIME = 300;
    public const int GMD_ENE_HARI_R_ATK_RECT_LEFT = -24;
    public const int GMD_ENE_HARI_R_ATK_RECT_TOP = -24;
    public const int GMD_ENE_HARI_R_ATK_RECT_RIGHT = 24;
    public const int GMD_ENE_HARI_R_ATK_RECT_BOTTOM = 24;
    public const int GMD_DECO_FALL_MANAGER_NUM = 16;
    public const int GMD_DECO_FALL_REGISTER_NUM = 8;
    public const int GMD_DECO_COMMON_FRAME_INDEX_NUM = 3;
    public const int GMD_DECO_LOOP_MODEL_NUM = 12;
    public const int GMD_DECO_LOOP_MODEL_OFFSET = 2;
    public const int GMD_DECO_USER_FLAG_CHECK_CHAOS_EMERALD = 1;
    public const int GMD_DECO_USER_FLAG_NO_MAIN_MODEL = 2;
    public const int GMD_DECO_USER_FLAG_SUB_MODEL = 4;
    public const int GMD_DECO_USER_FLAG_SYNC_MATERIAL = 8;
    public const int GMD_DECO_USER_FLAG_TOUCH_REVERSE_MOTION = 16;
    public const int GMD_DECO_USER_FLAG_SECOND_FRAME = 32;
    public const int GMD_DECO_USER_FLAG_THIRD_FRAME = 64;
    public const int GMD_DECO_USER_FLAG_USE_LIGHT_2_SUB_MODEL = 128;
    public const int GMD_DECO_USER_FLAG_EFFECT_DUPLICATE_DRAW = 256;
    public const int GMD_DECO_USER_FLAG_NOCLIP = 512;
    public const int GMD_DECO_DATA_INDEX_INVALID = -1;
    public const int GMD_DECO_FX32_BITSHIFT_BLOCK_SIZE = 6;
    private const int GMD_DECO_DATA_INDEX_AMB_MDL = 0;
    private const int GMD_DECO_DATA_INDEX_AMB_TEX = 1;
    private const int GMD_DECO_DATA_INDEX_AMB_MTN = 2;
    private const int GMD_DECO_DATA_INDEX_AMB_MAT = 3;
    private const int GMD_DECO_DATA_INDEX_AMB_MDL_RENDER = 4;
    private const int GMD_DECO_DATA_INDEX_AMB_TEX_RENDER = 5;
    private const int GMD_DECO_DATA_INDEX_AMB_NUM = 6;
    private const int GMD_DECO_LOOP_STATE_WAIT = 0;
    private const int GMD_DECO_LOOP_STATE_LOOP = 1;
    private const int GMD_DECO_LOOP_STATE_END = 2;
    private const int GME_DECO_LOOP_STATE_NUM = 3;
    private const int GMD_DECO_DATA_INDEX_MODEL_ZONE1_GLARE = 0;
    private const int GMD_DECO_DATA_INDEX_MODEL_ZONE1_GLARE_NUM = 1;
    public const int GMD_DECO_PRIM_DRAW_WORK_NUM = 16;
    public const int GMD_DECO_PRIM_DRAW_STACK_NUM = 128;
    private const int GMD_DECO_USE_MODEL_TYPE_NORMAL = 0;
    private const int GMD_DECO_USE_MODEL_TYPE_RENDER = 1;
    private const int GMD_DECO_USE_MODEL_TYPE_NUM = 2;
    private const int GMD_DECO_RECT_BODY = 0;
    private const int GMD_DECO_RECT_NUM = 1;
    public const int TRUE = 1;
    public const int FALSE = 0;
    public const uint OBD_DRAW_CMD_STATE_3DNN = 0;
    public const uint OBD_DRAW_CMD_STATE_PRE_MAPFAR = 1;
    public const uint OBD_DRAW_CMD_STATE_MAPFAR = 2;
    public const uint OBD_DRAW_CMD_STATE_POST_MAPFAR = 3;
    public const uint OBD_DRAW_CMD_STATE_WATER = 4;
    public const uint OBD_DRAW_CMD_STATE_WATER_BACK = 5;
    public const uint OBD_DRAW_CMD_STATE_NEAR_MAP = 7;
    public const uint OBD_DRAW_CMD_STATE_POST_WATER = 8;
    public const uint OBD_DRAW_CMD_STATE_PRE_WATER = 9;
    public const uint OBD_DRAW_CMD_STATE_3DFIX = 10;
    public const uint OBD_DRAW_CMD_STATE_MAPMID = 11;
    public const uint OBD_DRAW_CMD_STATE_WATER_MAPMID = 12;
    public const uint OBD_DRAW_CMD_STATE_2DAMA = 6;
    public const uint OBD_DRAW_CMD_STATE_GMSG_WIN = 13;
    public const uint OBD_DRAW_CMD_STATE_GMSG_MSG = 14;
    public const uint OBD_DRAW_CMD_STATE_INVALID = 4294967295;
    public const uint OBD_DRAW_CMD_STATE_3DNN_PRE = 15;
    public const uint OBD_DRAW_CMD_STATE_3DNN_POST = 16;
    public const uint OBD_DRAW_CMD_STATE_3DNN_WS = 17;
    public const uint OBD_DRAW_SET_NN_CMD_STATE_TBL_MSG_START = 16;
    public const uint OBD_DRAW_CMD_STATE_MAX = 18;
    public const uint NND_CLIP_NONE = 0;
    public const uint NND_CLIP_NORMAL = 0;
    public const uint NND_CLIP_INSIDE = 2;
    public const uint NND_CLIP_CROSSNEAR = 4;
    public const uint NND_CLIP_CROSSFAR = 8;
    public const uint NND_CLIP_OUTSIDE = 16;
    public const uint NND_CLIP_PS2_GSINSIDE = 32;
    public const uint NND_CLIPOBJECT_MASK = 3;
    public const uint NND_CLIP_STAT_MASK = 62;
    private const int NNE_PROJECTION_TYPE_PERSPECTIVE = 0;
    private const int NNE_PROJECTION_TYPE_ORTHO = 1;
    private const uint NND_MATSTATUS_NONE = 0;
    private const uint NND_MATSTATUS_HIDE = 1;
    private const int NNE_MATCTRLMODE_NONE = 0;
    private const int NNE_MATCTRLMODE_REPLACE = 1;
    private const int NNE_MATCTRLMODE_ADD = 2;
    private const int NNE_MATCTRLMODE_MODULATE = 3;
    private const int NNE_MATCTRL_TEXCOORDSRC_POSITION = 0;
    private const int NNE_MATCTRL_TEXCOORDSRC_NORMAL = 1;
    private const int NNE_MATCTRL_BLEND_ALPHA = 0;
    private const int NNE_MATCTRL_BLEND_ADD = 1;
    private const int NNE_MATCTRL_BLEND_SUBTRACT = 2;
    public const int NND_MAG_NEAREST = 0;
    public const int NND_MAG_LINEAR = 1;
    public const int NND_MAG_ANISOTROPIC = 2;
    public const int NND_MIN_NEAREST = 0;
    public const int NND_MIN_LINEAR = 1;
    public const int NND_MIN_NEAREST_MIPMAP_NEAREST = 2;
    public const int NND_MIN_NEAREST_MIPMAP_LINEAR = 3;
    public const int NND_MIN_LINEAR_MIPMAP_NEAREST = 4;
    public const int NND_MIN_LINEAR_MIPMAP_LINEAR = 5;
    public const int NND_MIN_ANISOTROPIC = 6;
    public const int NND_MIN_ANISOTROPIC_MIPMAP_NEAREST = 7;
    public const int NND_MIN_ANISOTROPIC_MIPMAP_LINEAR = 8;
    public const int NND_MIN_ANISOTROPIC2 = 6;
    public const int NND_MIN_ANISOTROPIC2_MIPMAP_NEAREST = 7;
    public const int NND_MIN_ANISOTROPIC2_MIPMAP_LINEAR = 8;
    public const int NND_MIN_ANISOTROPIC4 = 9;
    public const int NND_MIN_ANISOTROPIC4_MIPMAP_NEAREST = 10;
    public const int NND_MIN_ANISOTROPIC4_MIPMAP_LINEAR = 11;
    public const int NND_MIN_ANISOTROPIC8 = 12;
    public const int NND_MIN_ANISOTROPIC8_MIPMAP_NEAREST = 13;
    public const int NND_MIN_ANISOTROPIC8_MIPMAP_LINEAR = 14;
    public const uint NND_TEXFTYPE_TEXTYPE_MASK = 255;
    public const uint NND_TEXFTYPE_GVRTEX = 0;
    public const uint NND_TEXFTYPE_SVRTEX = 1;
    public const uint NND_TEXFTYPE_XVRTEX = 2;
    public const uint NND_TEXFTYPE_NO_FILENAME = 256;
    public const uint NND_TEXFTYPE_NO_FILTER = 512;
    public const uint NND_TEXFTYPE_LISTGLBIDX = 1024;
    public const uint NND_TEXFTYPE_LISTBANK = 2048;
    public const uint NND_CAMERATYPE_MEMBER_USER = 1;
    public const uint NND_CAMERATYPE_MEMBER_FOVY = 2;
    public const uint NND_CAMERATYPE_MEMBER_ASPECT = 4;
    public const uint NND_CAMERATYPE_MEMBER_ZNEAR = 8;
    public const uint NND_CAMERATYPE_MEMBER_ZFAR = 16;
    public const uint NND_CAMERATYPE_MEMBER_POSITION = 32;
    public const uint NND_CAMERATYPE_MEMBER_TARGET = 64;
    public const uint NND_CAMERATYPE_MEMBER_ROLL = 128;
    public const uint NND_CAMERATYPE_MEMBER_UPVECTOR = 256;
    public const uint NND_CAMERATYPE_MEMBER_UPTARGET = 512;
    public const uint NND_CAMERATYPE_MEMBER_ROTTYPE = 1024;
    public const uint NND_CAMERATYPE_MEMBER_ROTATION = 2048;
    public const uint NND_CAMERATYPE_MEMBER_COMMON = 63;
    public const uint NND_CAMERATYPE_ROTATION = 3135;
    public const uint NND_CAMERATYPE_TARGET_ROLL = 255;
    public const uint NND_CAMERATYPE_TARGET_UPVECTOR = 383;
    public const uint NND_CAMERATYPE_TARGET_UPTARGET = 639;
    public const byte GMD_TASK_PAUSELEVEL_DEF = 0;
    public const byte GMD_TASK_GAME_PAUSE_LEVEL = 2;
    public const byte GMD_TASK_NO_GAME_PAUSE = 3;
    public const byte GMD_TASK_PAUSE_LEVEL_OBJSYS = 0;
    public const byte GMD_TASK_PAUSE_LEVEL_CAMERA = 0;
    public const byte GMD_TASK_PAUSE_LEVEL_EVTMGR = 0;
    public const byte GMD_TASK_PAUSE_LEVEL_DEMO = 2;
    public const ushort GMD_TASK_PRIO_OBJSYS = 61435;
    public const ushort GMD_TASK_PRIO_INIT = 16;
    public const ushort GMD_TASK_PRIO_MAIN_PRE = 4096;
    public const ushort GMD_TASK_PRIO_CAMERA = 8192;
    public const ushort GMD_TASK_PRIO_MAIN_POST = 32768;
    public const ushort GMD_TASK_PRIO_DATA_LOAD = 2048;
    public const ushort GMD_TASK_PRIO_MAP = 12288;
    public const ushort GMD_TASK_PRIO_MAPFAR = 12544;
    public const ushort GMD_TASK_PRIO_EVTMGR = 4240;
    public const ushort GMD_TASK_PRIO_PLAYER = 4352;
    public const ushort GMD_TASK_PRIO_ENEMY = 5376;
    public const ushort GMD_TASK_PRIO_GIMMICK = 6144;
    public const ushort GMD_TASK_PRIO_GIMMICK_R = 4342;
    public const ushort GMD_TASK_PRIO_EFFECT = 6656;
    public const ushort GMD_TASK_PRIO_EFFECT_MAX = 6912;
    public const ushort GMD_TASK_PRIO_EFFECT_SERVER = 20480;
    public const ushort GMD_TASK_PRIO_TRAIL_SYS = 8448;
    public const ushort GMD_TASK_PRIO_DECORATION = 5376;
    public const ushort GMD_TASK_PRIO_RING = 7680;
    public const ushort GMD_TASK_PRIO_WATER_SURFACE = 8202;
    public const ushort GMD_TASK_PRIO_FIX = 18432;
    public const ushort GMD_TASK_PRIO_SCORE = 18432;
    public const ushort GMD_TASK_PRIO_CLEARDEMO = 18448;
    public const ushort GMD_TASK_PRIO_STARTDEMO = 18448;
    public const ushort GMD_TASK_PRIO_GAMEOVER = 18464;
    public const ushort GMD_TASK_PRIO_START_MSG = 18512;
    public const ushort GMD_TASK_PRIO_DATALOAD_WAIT = 4096;
    public const ushort GMD_TASK_PRIO_PAUSE = 28928;
    public const ushort GMD_TASK_PRIO_PAD_VIB = 4224;
    public const ushort GMD_TASK_PRIO_SOUND = 32767;
    public const byte GMD_TASK_GROUP_OBJSYS = 4;
    public const byte GMD_TASK_GROUP_DATA_LOAD = 5;
    public const byte GMD_TASK_GROUP_PLAYER = 1;
    public const byte GMD_TASK_GROUP_ENEMY = 2;
    public const byte GMD_TASK_GROUP_BOSS = 2;
    public const byte GMD_TASK_GROUP_GIMMICK = 2;
    public const byte GMD_TASK_GROUP_DECO_SYS = 5;
    public const byte GMD_TASK_GROUP_EFFECT = 3;
    public const byte GMD_TASK_GROUP_EFFECT_SERVER = 5;
    public const byte GMD_TASK_GROUP_TRAIL_SYS = 3;
    public const byte GMD_TASK_GROUP_RING_SYS = 5;
    public const byte GMD_TASK_GROUP_FIX = 5;
    public const byte GMD_TASK_GROUP_SCORE = 5;
    public const byte GMD_TASK_GROUP_CLEARDEMO = 5;
    public const byte GMD_TASK_GROUP_STARTDEMO = 5;
    public const byte GMD_TASK_GROUP_GAMEOVER = 5;
    public const byte GMD_TASK_GROUP_PAUSE = 6;
    public const byte GMD_TASK_GROUP_MAP = 5;
    public const byte GMD_TASK_GROUP_MAPFAR = 5;
    public const byte GMD_TASK_GROUP_EVTMGR = 5;
    public const byte GMD_TASK_GROUP_START_MSG = 5;
    public const byte GMD_TASK_GROUP_MAIN_PRE = 5;
    public const byte GMD_TASK_GROUP_MAIN_POST = 5;
    public const byte GMD_TASK_GROUP_OBJ_SYS = 4;
    public const byte GMD_TASK_GROUP_SOUND = 5;
    public const byte GMD_TASK_GROUP_PAD_VIB = 5;
    public const int GMD_GMK_UPBUMPER_PLAYERSPD_KEEP_TIME = 60;
    public const int GMD_GMK_UPBUMPER_RECT_X = 0;
    public const int GMD_GMK_UPBUMPER_RECT_Y = -8;
    public const int GMD_GMK_UPBUMPER_RECT_W = 8;
    public const int GMD_GMK_UPBUMPER_RECT_H = 8;
    public const byte GMD_GMK_DECO_FRAME_MGR_FRAME_MAX = 255;
    public const int GMD_GMK_DECO_FRAME_MGR_FLAG_USE_RESET_FRAM = 1;
    private const int GME_DECOGLARE_ORANGE = 0;
    private const int GME_DECOGLARE_RED = 1;
    private const int GME_DECOGLARE_GREEN = 2;
    private const int GME_DECOGLARE_SALMON = 3;
    private const int GME_DECOGLARE_MAX = 4;
    private const int GME_DECOGLARE_ABLEND_NORMAL = 0;
    private const int GME_DECOGLARE_ABLEND_ADD = 1;
    private const int GME_DECOGLARE_ABLEND_MAX = 2;
    public const uint GMD_BOSS5_LAND_PLACE_PTN_LEN = 3;
    public const int GMD_BOSS5_LAND_LDPART_VIB_PHASE_NUM = 40;
    private const int GME_BOSS5_LAND_TYPE_01 = 0;
    private const int GME_BOSS5_LAND_TYPE_02 = 1;
    private const int GME_BOSS5_LAND_TYPE_03 = 2;
    private const int GME_BOSS5_LAND_TYPE_MAX = 3;
    public const int DMD_BUY_SCR_RESULT_BUY = 0;
    public const int DMD_BUY_SCR_RESULT_CANCEL = 1;
    public const int DMD_BUY_SCR_RESULT_BACK = 2;
    public const int DMD_BUY_SCR_RESULT_NUM = 3;
    public const int DMD_BUY_SCR_RESULT_NONE = 4;
    public const uint fadein_c_type = 0;
    public const uint fadein_c_inout = 0;
    public const float fadein_c_frame = 16f;
    public const uint fadeout_c_type = 0;
    public const uint fadeout_c_inout = 1;
    public const float fadeout_c_frame = 16f;
    public const uint c_frame = 30;
    public const string c_url = "http://sega.com/apps";
    public const string g_dm_buy_screen_amb_path = "DEMO/BUY_SCREEN/D_BUY_SCREEN_";
    public const string g_dm_buy_screen_amb_ext = ".AMB";
    public const string g_dm_buy_screen_btn_amb_path = "DEMO/CMN/D_CMN_BTN.AMB";
    public const ushort OBD_COL_PLUS = 0;
    public const ushort OBD_COL_MINUS = 1;
    public const ushort OBD_COL_X = 0;
    public const ushort OBD_COL_Y = 2;
    public const ushort OBD_COL_3CHAR = 4;
    public const ushort OBD_COL_DOWN = 2;
    public const ushort OBD_COL_UP = 3;
    public const ushort OBD_COL_LEFT = 1;
    public const ushort OBD_COL_RIGHT = 0;
    public const byte OBD_COL_THROUGH = 128;
    public const byte OBD_COL_LIMITWALL = 64;
    public const byte OBD_COL_SIMPLE = 32;
    public const byte OBD_COL_B = 1;
    public const byte OBD_COL_DATA_ATTR_THROUGH = 1;
    public const byte OBD_COL_DATA_ATTR_CLIFF = 2;
    public const byte OBD_COL_DATA_ATTR_GRAIND = 4;
    public const uint NND_TEXFLAG_ALLOCATE = 1;
    private const int NNE_TEXSLOT_0 = 0;
    private const int NNE_TEXSLOT_1 = 1;
    private const int NNE_TEXSLOT_2 = 2;
    private const int NNE_TEXSLOT_3 = 3;
    private const int NNE_TEXSLOT_4 = 4;
    private const int NNE_TEXSLOT_5 = 5;
    private const int NNE_TEXSLOT_6 = 6;
    private const int NNE_TEXSLOT_7 = 7;
    private const int NNE_TEXSLOT_MAX = 8;
    public const uint NND_VTXTYPE_GL_VERTEXDESC = 1;
    public const uint NND_VTXTYPE_GL_VERTEXDESC_MORPH_TARGET = 2;
    public const uint NND_VTXTYPE_GL_VERTEXDESC_MORPH_TARGET_NULL = 4;
    public const uint NND_VTXTYPE_GL_BOUNDBUFFER = 16;
    public const uint NND_VTXARRAYTYPE_GL_POS = 1;
    public const uint NND_VTXARRAYTYPE_GL_WGT = 2;
    public const uint NND_VTXARRAYTYPE_GL_MTXIDX = 4;
    public const uint NND_VTXARRAYTYPE_GL_NRM = 8;
    public const uint NND_VTXARRAYTYPE_GL_COL = 16;
    public const uint NND_VTXARRAYTYPE_GL_TEX0 = 256;
    public const uint NND_VTXARRAYTYPE_GL_TEX1 = 512;
    public const uint NND_VTXARRAYTYPE_INTERLEAVED = 65536;
    public const uint NND_VTXARRAYTYPE_REVERSE_NORMAL = 134217728;
    public const uint NND_VTXARRAYTYPE_REVERSE_TANGENT = 268435456;
    public const uint NND_VTXARRAYTYPE_REVERSE_BINORMAL = 536870912;
    public const uint NND_VTXARRAYTYPE_OBJECT_SPACE_NORMAL = 1073741824;
    public const uint NND_VTXARRAYTYPE_MORPH_TARGET_DIFF = 2147483648;
    public const int NND_DATATYPE_GL_BYTE = 5120;
    public const int NND_DATATYPE_GL_UNSIGNED_BYTE = 5121;
    public const int NND_DATATYPE_GL_SHORT = 5122;
    public const int NND_DATATYPE_GL_UNSIGNED_SHORT = 5123;
    public const int NND_DATATYPE_GL_INT = 5124;
    public const int NND_DATATYPE_GL_UNSIGNED_INT = 5125;
    public const int NND_DATATYPE_GL_FLOAT = 5126;
    public const int NND_DATATYPE_GL_DOUBLE = 5130;
    public const int NND_DATATYPE_GL_FIXED_OES = 5132;
    public const uint NND_PRIMTYPE_GL_PRIMITIVEDESC = 1;
    public const uint NND_PRIMTYPE_GL_BOUNDBUFFER = 2;
    public const int NND_PRIMMODE_GL_POINTS = 0;
    public const int NND_PRIMMODE_GL_LINES = 1;
    public const int NND_PRIMMODE_GL_LINE_LOOP = 2;
    public const int NND_PRIMMODE_GL_LINE_STRIP = 3;
    public const int NND_PRIMMODE_GL_TRIANGLES = 4;
    public const int NND_PRIMMODE_GL_TRIANGLE_STRIP = 5;
    public const int NND_PRIMMODE_GL_TRIANGLE_FAN = 6;
    public const int NND_PRIMMODE_GL_QUADS = 7;
    public const int NND_PRIMMODE_GL_QUAD_STRIP = 8;
    public const int NND_PRIMMODE_GL_POLYGON = 9;
    public const int gm_map_prim_draw_tvx_texture_z2_num = 21;
    public const int gm_map_prim_draw_tvx_texture_z3_num = 4;
    public const int gm_map_prim_draw_tvx_texture_z4_num = 9;
    public const int gm_map_prim_draw_tvx_texture_zf_num = 8;
    private const int GMD_GMK_TARZAN_ROPE_MODE_WAIT = 0;
    private const int GMD_GMK_TARZAN_ROPE_MODE_START = 1;
    private const int GMD_GMK_TARZAN_ROPE_MODE_STOP = 2;
    private const int GMD_GMK_TARZAN_ROPE_MODE_NUM = 3;
    private const int GMD_GMK_TARZAN_ROPE_TYPE_NORMAL = 0;
    private const int GMD_GMK_TARZAN_ROPE_TYPE_LEFT = 1;
    private const int GMD_GMK_TARZAN_ROPE_TYPE_RIGHT = 2;
    private const int GMD_GMK_TARZAN_ROPE_TYPE_NUM = 3;
    private const int GMD_GMK_TARZAN_ROPE_TYPE_INVALID = -1;
    public const long GMD_GMK_TARZAN_ROPE_SPEED = 2048;
    public const int GMD_GMK_TARZAN_ROPE_TARGET_NODE_INDEX = 13;
    public const float GMD_GMK_TARZAN_ROPE_PLAYER_OFFSET_Y = -5f;
    public const int GMD_GMK_TARZAN_ROPE_LENGTH_NUM = 3;
    public const int GMD_GMK_TARZAN_ROPE_FULCRUM = 32;
    public const int GMD_GMK_TARZAN_ROPE_LENGTH = 393216;
    public const float GMD_GMK_TARZAN_ROPE_LENGTH_F = 20f;
    public const int GMD_GMK_TARZAN_ROPE_FALL_SPD = 24576;
    public const int GM_GMK_TARZAN_ROPE_ANGLE_MAX = 16384;
    public const int GM_GMK_TARZAN_ROPE_ANGLE_LOW = 1792;
    public const int GM_GMK_TARZAN_ROPE_ANGLE_STOP = 208;
    public const int GM_GMK_TARZAN_ROPE_ANGLE_ADD = 132;
    public const int GM_GMK_TARZAN_ROPE_ANGLE_ADD_N = 31;
    public const int GM_GMK_TARZAN_ROPE_ANGLE_DEL = 48;
    public const int GM_GMK_TARZAN_ROPE_ANGLE_JUMP = 1792;
    public const int GM_GMK_TARZAN_ROPE_SPEED = 1920;
    public const int GM_GMK_TARZAN_ROPE_SPEED_WIDTH = 20480;
    public const int GM_GMK_TARZAN_ROPE_MOTION_FRAME_BACK = 34;
    public const int GMD_GMK_TARZAN_ROPE_CATCH_WAIT = 10;
    public const int GMD_GMK_TARZAN_ROPE_CATCH_WAIT_BIT = 255;
    public const int GMD_GMK_SPEAR_DEFAULT_STROKE = 196608;
    public const int GMD_GMK_SPEAR_DEFAULT_STROKE_WAIT = 120;
    public const int GMD_GMK_SPEAR_DEFAULT_SHRINK_WAIT = 120;
    public const int GMD_GMK_SPEAR_STROKE_SPEED = 32768;
    public const int GMD_GMK_SPEAR_BASE_HEIGHT = 16384;
    public const int GMD_GMK_SPEAR_ROD_HEIGHT = 20480;
    public const int GMD_GMK_SPEAR_RECT_W = 8;
    public const int GMD_GMK_SPEAR_RECT_H = 16;
    public const int GMD_GMK_SPEAR_RECT_X1 = -4;
    public const int GMD_GMK_SPEAR_RECT_Y1 = 0;
    public const int GMD_GMK_SPEAR_RECT_X2 = 4;
    public const int GMD_GMK_SPEAR_RECT_Y2 = -16;
    public const int GMD_MATH_MAX_ANGLE = 65536;
    public const int DMG_MATH_ANGLE_MASK = 65535;
    public const int GMD_GMK_LAND_FALL_TIME = 30;
    public const int GMD_GMK_LAND_BREAK_SPD = 8;
    public const int GMD_GMK_LAND_BREAK_DELAY = 10;
    public const int GMD_GMK_LAND_COL_OFST_Y = -17;
    public const int GMD_GMK_LAND_COL_COL_OFST_Y = -31;
    public const int GMD_GMK_LAND_BREAK_OAM_NUM_MAX = 9;
    public const int GMD_GMK_LAND_BREAK_CHIP_NUM_X = 3;
    public const int GMD_GMK_LAND_BREAK_CHIP_NUM_Y = 3;
    public const int GMD_GMK_LAND_BREAK_CHIP_SIZE_X = 16;
    public const int GMD_GMK_LAND_BREAK_CHIP_SIZE_Y = 8;
    public const int GMD_GMK_LAND_BREAK_ACT_OFST_X = -24;
    public const int GMD_GMK_LAND_BREAK_ACT_OFST_Y = -12;
    public const int GMD_GMK_LAND_RIDE_FLAG = 65536;
    public const int GMD_GMK_LAND_RIDE_TIME_MASK = 1023;
    public const int GMD_GMK_LAND_EVE_FLAG_SPEED_MASK = 3;
    public const int GMD_GMK_LAND_EVE_FLAG_RIDE_START = 4;
    public const int GMD_GMK_LAND_EVE_FLAG_LEFT_UP = 8;
    public const int GMD_GMK_LAND_EVE_FLAG_TIMING_MASK = 48;
    public const int GMD_GMK_LAND_EVE_FLAG_TIMING_SHIFT = 4;
    public const int GMD_GMK_LAND_EVE_FLAG_FALL = 64;
    public const int GMD_GMK_LAND_ENEMY_FLAG_ON_OBJ = 1;
    private const int GMD_GMK_LAND_TYPE_NORMAL = 0;
    private const int GMD_GMK_LAND_TYPE_BIG = 1;
    private const int GMD_GMK_LAND_TYPE_COL = 2;
    private const int GMD_GMK_LAND_TYPE_MAX = 3;
    public const int GMD_GMK_Z3LAND_ROPE_EVE_FLAG_REV = 1;
    public const int GMD_GMK_LAND_3_ROPE_MOTION = 120;
    public const int GMD_GMK_GEAR_ADD_DATA_MAX = 19;
    public const int GMD_GMK_EVE_FLAG_GEAR_ROT_LEFT = 1;
    public const int GMD_GMK_EVE_FLAG_MGEAR_MOVE_V = 1;
    public const int GMD_GMK_EVE_FLAG_MGEAR_MOVE_LEFT_UP = 2;
    public const int GMD_GMK_EVE_FLAG_MGEAR_CAM_ADJUST_OFF = 4;
    public const int GMD_GMK_EVE_FLAG_MGEAR_SPEED_UP = 8;
    public const int GMD_GMK_EVE_FLAG_MGEAR_END_SWITCH = 1;
    public const float GMD_GMK_GEAR_SE_SPEED_MIN = 0.2f;
    public const float GMD_GMK_GEAR_SE_SPEED_MAX = 0.8f;
    public const float GMD_GMK_GEAR_SE_MIN_DIST = 100f;
    public const float GMD_GMK_GEAR_SE_MAX_DIST = 400f;
    public const int GMD_GMK_GEAR_MOVE_SE_MIN_SPD = 4;
    public const int GMD_GMK_GEAR_MOVE_SE_MAX_SPD = 864;
    public const float GMD_GMK_GEAR_MOVE_SE_MIN_DIST = 300f;
    public const float GMD_GMK_GEAR_MOVE_SE_MAX_DIST = 600f;
    public const int GMD_GMK_GEAR_COL_RECT_WIDTH = 176;
    public const int GMD_GMK_GEAR_COL_RECT_HEIGHT = 176;
    public const int GMD_GMK_GEAR_COL_RECT_OFST_X = -88;
    public const int GMD_GMK_GEAR_COL_RECT_OFST_Y = -88;
    public const int GMD_GMK_GEAR_COL_TYPE_NUM = 8;
    public const int GMD_GMK_GEAR_ONE_DIR = 45;
    public const int GMD_GMK_GEAR_ROT_COL_SPEED = 1024;
    public const float GMD_GMK_GEAR_ROT_DIV = 32f;
    public const float GMD_GMK_GEAR_ROT_SPEED_BASE = 32f;
    public const float GMD_GMK_GEAR_ROT_SPEED_ADD = 32f;
    public const int GMD_GMK_GEAR_ROT_SYNC = 2048;
    public const int GMD_GMK_GEAR_ROT_SPEED_LEVEL_NUM = 4;
    public const int GMD_GMK_GEAR_ROT_SYNC_TYPE_NUM = 4;
    public const int GMD_GMK_MOVE_GEAR_ONE_DIR = 30;
    public const int GMD_GMK_MOVE_GEAR_BODY_DEF_RECT_LEFT = -16;
    public const int GMD_GMK_MOVE_GEAR_BODY_DEF_RECT_RIGHT = 16;
    public const int GMD_GMK_MOVE_GEAR_BODY_DEF_RECT_TOP = -72;
    public const int GMD_GMK_MOVE_GEAR_BODY_DEF_RECT_BOTTOM = -48;
    public const int GMD_GMK_MOVE_GEAR_DEF_RECT_LEFT = -80;
    public const int GMD_GMK_MOVE_GEAR_DEF_RECT_RIGHT = 80;
    public const int GMD_GMK_MOVE_GEAR_DEF_RECT_TOP = -80;
    public const int GMD_GMK_MOVE_GEAR_DEF_RECT_BOTTOM = 80;
    public const int GMD_GMK_MOVE_GEAR_FIELD_RECT_LEFT = -8;
    public const int GMD_GMK_MOVE_GEAR_FIELD_RECT_TOP = -8;
    public const int GMD_GMK_MOVE_GEAR_FIELD_RECT_RIGHT = 8;
    public const int GMD_GMK_MOVE_GEAR_FIELD_RECT_BOTTOM = 8;
    public const int GMD_GMK_MOVE_GEAR_R = 64;
    public const int GMD_GMK_MOVE_GEAR_FORCE_EXT_DIST = 16384;
    public const int GMD_GMK_MOVE_GEAR_STOP_RET_TIMER = 737280;
    public const int GMD_GMK_MOVE_GEAR_SPD_DEC = 1024;
    public const int GMD_GMK_MOVE_GEAR_RET_SPD_ACC = 512;
    public const int GMD_GMK_MOVE_GEAR_RET_SPD_MAX = 16384;
    public const int GMD_GMK_MOVE_GEAR_RECT_RET_TIMER = 65536;
    public const int GMD_GMK_MOVE_GEAR_SW_SPD_MIN = 16384;
    public const int GMD_GMK_MOVE_GEAR_SW_SPD_ACC = 256;
    public const int GMD_GMK_MOVE_GEAR_SW_FREE_WAIT_TIME = 60;
    public const int GMD_GMK_MOVE_GEAR_STAGGER_FRAME = 60;
    public const int GMD_GMK_MOVE_GEAR_STAGGER_DIR_AMP = 182;
    public const int GMD_GMK_MOVE_GEAR_DIR_SCALE = 2;
    public const int GMD_GMK_MOVE_GEAR_END_ATK_RECT_LEFT = -32;
    public const int GMD_GMK_MOVE_GEAR_END_ATK_RECT_TOP = -32;
    public const int GMD_GMK_MOVE_GEAR_END_ATK_RECT_RIGHT = 32;
    public const int GMD_GMK_MOVE_GEAR_END_ATK_RECT_BOTTOM = 32;
    public const int GMD_GMK_GEAR_SW_DEF_ROT_NUM = 1;
    public const int GMD_GMK_GEAR_SW_DEF_ROTDIR = 65536;
    public const int GMD_GMK_GEAR_SW_ATK_RECT_LEFT = -92;
    public const int GMD_GMK_GEAR_SW_ATK_RECT_TOP = -92;
    public const int GMD_GMK_GEAR_SW_ATK_RECT_RIGHT = 92;
    public const int GMD_GMK_GEAR_SW_ATK_RECT_BOTTOM = 92;
    public const int GMD_GMK_GEAR_OPT_OFST_Z = 786432;
    public const int GMD_GMK_GEAR_OPT_ASHIBA_OFST_Z = 524288;
    public const float GMD_GMK_MOVE_GEAR_VIB_FRAME = 60f;
    public const int GMD_GMK_DASH_P_RECT_LF = -8;
    public const int GMD_GMK_DASH_P_RECT_UP = -8;
    public const int GMD_GMK_DASH_P_RECT_RT = 8;
    public const int GMD_GMK_DASH_P_RECT_DW = 8;
    public const int GMD_GMK_DASH_P_RECT_TV_LF = -16;
    public const int GMD_GMK_DASH_P_RECT_TV_RT = 16;
    private const int GMD_GAMEDAT_LOAD_PROC_NORMAL = 0;
    private const int GMD_GAMEDAT_LOAD_PROC_PRE_LOAD = 1;
    private const int GMD_GAMEDAT_LOAD_PROC_MAX = 2;
    public const int GMD_GAMEDAT_MAP_MAP_SET = 0;
    public const int GMD_GAMEDAT_MAP_MODEL = 1;
    public const int GMD_GAMEDAT_MAP_TEX = 2;
    public const int GMD_GAMEDAT_MAP_ATTR = 3;
    public const int GMD_GAMEDAT_MAP_MAX = 4;
    private const int GMD_GAMEDAT_MAPSET_A_MP = 0;
    private const int GMD_GAMEDAT_MAPSET_B_MP = 1;
    private const int GMD_GAMEDAT_MAPSET_A_MD = 2;
    private const int GMD_GAMEDAT_MAPSET_B_MD = 3;
    private const int GMD_GAMEDAT_MAPSET_ATTR_A_MP = 4;
    private const int GMD_GAMEDAT_MAPSET_ATTR_B_MP = 5;
    private const int GMD_GAMEDAT_MAPSET_EV = 6;
    private const int GMD_GAMEDAT_MAPSET_DC = 7;
    private const int GMD_GAMEDAT_MAPSET_RG = 8;
    private const int GMD_GAMEDAT_MAPSET_MAX = 9;
    private const int GMD_GAMEDAT_MAPSET_ADD_START = 9;
    private const int GMD_GAMEDAT_MAPSET_ADD_N_MP = 9;
    private const int GMD_GAMEDAT_MAPSET_ADD_N_MD = 10;
    private const int GMD_GAMEDAT_MAPSET_ADD_M_MP = 11;
    private const int GMD_GAMEDAT_MAPSET_ADD_M_MD = 12;
    private const int GMD_GAMEDAT_MAPSET_ADD_M1_MP = 13;
    private const int GMD_GAMEDAT_MAPSET_ADD_M1_MD = 14;
    private const int GMD_GAMEDAT_MAPSET_ADD_M2_MP = 15;
    private const int GMD_GAMEDAT_MAPSET_ADD_M2_MD = 16;
    private const int GMD_GAMEDAT_MAPSET_ADD_M3_MP = 17;
    private const int GMD_GAMEDAT_MAPSET_ADD_M3_MD = 18;
    private const int GMD_GAMEDAT_MAPSET_ADD_MAX = 19;
    private const int GMD_GAMEDAT_MAPSET_ADD_LOCAL_N_MP = 0;
    private const int GMD_GAMEDAT_MAPSET_ADD_LOCAL_N_MD = 1;
    private const int GMD_GAMEDAT_MAPSET_ADD_LOCAL_M_MP = 2;
    private const int GMD_GAMEDAT_MAPSET_ADD_LOCAL_M_MD = 3;
    private const int GMD_GAMEDAT_MAPSET_ADD_LOCAL_M1_MP = 4;
    private const int GMD_GAMEDAT_MAPSET_ADD_LOCAL_M1_MD = 5;
    private const int GMD_GAMEDAT_MAPSET_ADD_LOCAL_M2_MP = 6;
    private const int GMD_GAMEDAT_MAPSET_ADD_LOCAL_M2_MD = 7;
    private const int GMD_GAMEDAT_MAPSET_ADD_LOCAL_M3_MP = 8;
    private const int GMD_GAMEDAT_MAPSET_ADD_LOCAL_M3_MD = 9;
    private const int GMD_GAMEDAT_MAPSET_ADD_LOCAL_MAX = 10;
    private const int GMD_GAMEDAT_LOAD_BOSS_TYPE_1 = 0;
    private const int GMD_GAMEDAT_LOAD_BOSS_TYPE_2 = 1;
    private const int GMD_GAMEDAT_LOAD_BOSS_TYPE_3 = 2;
    private const int GMD_GAMEDAT_LOAD_BOSS_TYPE_4 = 3;
    private const int GMD_GAMEDAT_LOAD_BOSS_TYPE_F = 4;
    private const int GMD_GAMEDAT_LOAD_BOSS_TYPE_MAX = 5;
    public const int GMD_GAMEDAT_COMMON_RING_MODEL = 0;
    public const int GMD_GAMEDAT_COMMON_RING_TEX = 1;
    public const int GMD_GAMEDAT_COMMON_MAX = 2;
    public const float GMD_COM_EFCT_OFST_FRONT_OBJ = 16f;
    public const int GMD_COM_EFCT_OFST_FRONT_OBJ_FX = 65536;
    public const float GMD_COM_EFCT_OFST_FRONT_A = 160f;
    public const int GMD_COM_EFCT_OFST_FRONT_A_FX = 655360;
    public const int GMD_BOSS4_EGG_NODE_IDX_HAND_RIGHT = 9;
    public const int GMD_BOSS4_EGG_NODE_IDX_HAND_LEFT = 6;
    public const int GMD_BOSS4_EGG_NODE_SNM_NUM = 4;
    public const uint GMD_BOSS4_EGG_FLAG_INDP_ACT_SET = 1;
    public const uint GMD_BOSS4_EGG_FLAG_SWEAT_ACTIVE = 2;
    public const int GME_BOSS4_EGG_ACT_ID_LAUGH_L = 0;
    public const int GME_BOSS4_EGG_ACT_ID_LAUGH_R = 1;
    public const int GME_BOSS4_EGG_ACT_ID_DAMAGE = 2;
    public const int GME_BOSS4_EGG_ACT_ID_THROW = 3;
    public const int GME_BOSS4_EGG_ACT_ID_THROW_LEFT = 4;
    public const int GME_BOSS4_EGG_ACT_ID_MAX = 5;
    public const int DMD_STFRL_RING_EFCT_DISP_NUM = 6;
    public const int DMD_STFRL_BOSS_BODY_NODE_IDX_EGG_CONNECT = 11;
    public const int DMD_STFRL_BOSS_BODY_NODE_IDX_BODY_POSTURE = 2;
    public const int DMD_STFRL_SONIC_FW_MTN_TIME = 300;
    public const int DMD_STFRL_SONIC_FADE_START_TIME = 60;
    public const int DMD_STFRL_SONIC_FADE_END_TIME = 120;
    public const int DMD_STFRL_BOSS_MOVE_DOWN_SPD = 4096;
    public const int DMD_STFRL_BOSS_MOVE_UP_SPD = -2457;
    public const int DMD_STFRL_BOSS_NODISP_HEIGHT_POS_Y = -737280;
    public const int DMD_STFRL_BOSS_COMP_DISP_HEIGHT_POS_Y = -163840;
    public const int DMD_STFRL_BOSS_COMP_EFCT_START_TIME = 60;
    public const int DMD_STFRL_BOSS_NOCOMP_EFCT_START_TIME = 120;
    public const int DMD_STFRL_BOSS_EGG_LAUGH_TIME = 180;
    public const int DMD_STFRL_BOSS_M_SONIC_EFCT_TIME = 100;
    public const int DMD_STFRL_BOSS_INIT_POS_X = 0;
    public const int DMD_STFRL_BOSS_INIT_POS_Y = -65536;
    public const int DMD_STFRL_BOSS_INIT_POS_Z = -81920;
    public const int DMD_STFRL_BOSS_INIT_DISP_DIR = 300;
    public const int DMD_STFRL_ONE_AROUND_DIR = 65536;
    public const int DMD_STFRL_RING_ROTATE_SPD = 0;
    public const int DMD_STFRL_RING_DISP_TIME = 10;
    public const int DMD_STFRL_RING_NODISP_TIME = 60;
    public const ushort DMD_STFRL_SONIC_FLAG_EFCT_END = 1;
    public const uint DMD_STFRL_BODY_FLAG_COMPLETE_EFCT = 1;
    public const uint DMD_STFRL_BODY_FLAG_MOVE_DOWN_START = 2;
    public const uint DMD_STFRL_BODY_FLAG_MOVE_UP_START = 4;
    public const uint DMD_STFRL_BODY_FLAG_COMP_EFCT_END = 8;
    public const uint DMD_STFRL_BODY_FLAG_M_SONIC_EFCT_START = 16;
    public const uint DMS_STFRL_FLAG_CHNG_MTN_EGG_LAUGH_REQ = 2097152;
    public const uint DMS_STFRL_EGG_FLAG_CHNG_MTN_EGG_LAUGH = 1;
    public const uint DMD_STFRL_RING_FLAG_SPLASH_EFCT_START = 1;
    public const int DMD_FILESLCT_TASK_PAUSELEVEL = 0;
    public const int DMD_FILESLCT_TASK_PRIO_MAIN = 8192;
    public const int DMD_FILESLCT_TASK_GROUP_MAIN = 0;
    public const int DMD_FILESLCT_FILE_PATH_NUM_MAX = 60;
    public const string DMD_FILESLCT_CMN_DATA_FILENAME = "DEMO/CMN/D_CMN_WIN.AMB";
    public const string DMD_FILESLCT_DATA_FILENAME = "DEMO/FILESLCT/D_FILESLCT.AMB";
    public const float DMD_FILESLCT_SIZE_WIDTH = 960f;
    public const float DMD_FILESLCT_SIZE_HEIGHT = 720f;
    public const float DMD_FILESLCT_SIZE_HALF_WIDTH = 480f;
    public const float DMD_FILESLCT_SIZE_HALF_HEIGHT = 360f;
    public const int DMD_FILESLCT_DRAW_PRIO_ZONE = 8192;
    public const int DMD_FILESLCT_DRAW_PRIO_STAGE = 8192;
    public const int DMD_FILESLCT_DRAW_PRIO_SAVEFILE = 8192;
    public const int DMD_FILESLCT_DRAW_PRIO_BG = 4096;
    public const int DMD_FILESLCT_DRAW_PRIO_FIX = 12288;
    public const int DMD_FILESLCT_DRAW_PRIO_WIN = 12288;
    public const int DMD_FILESLCT_DRAW_PRIO_WIN_FIX = 16384;
    public const float DMD_FILESLCT_FILE_TABLE_TOP_POS_X = 128f;
    public const float DMD_FILESLCT_FILE_TABLE_TOP_POS_Y = 100f;
    public const float DMD_FILESLCT_FILE_TABLE_DIST_Y = 160f;
    public const float DMD_FILESLCT_ALPHA_ONE_DIST = 20f;
    public const float DMD_FILESLCT_STAGE_TAB_NODISP_POS_X = 1120f;
    public const int DMD_FILESLCT_SAVE_FILE_NUM = 6;
    public const int DMD_FILESLCT_FILE_POS_NUM = 4;
    public const int DMD_FILESLCT_CRSR_POS_NUM = 3;
    public const int DMD_FILESLCT_DRAW_STATE_ID = 10;
    public const float DMD_FILESLCT_WINDOW_SIZE_W = 428f;
    public const float DMD_FILESLCT_WINDOW_SIZE_H = 180f;
    public const float DMD_FILESLCT_WIN_DEF_RATE = 1f;
    public const float DMD_FILESLCT_FADEIN_TIME = 32f;
    public const float DMD_FILESLCT_FADEOUT_TIME = 32f;
    public const float DMD_FILESLCT_FOCUS_FILE_CHNG_TIME = 12f;
    public const float DMD_FILESLCT_IN_EFCT_START_POS = 720f;
    public const float DMD_FILESLCT_IN_EFCT_TIME = 32f;
    public const float DMD_FILESLCT_OUT_EFCT_END_POS = 720f;
    public const float DMD_FILESLCT_OUT_EFCT_TIME = 32f;
    public const float DMD_FILESLCT_WIN_EFCT_TIME = 8f;
    public const float DMD_FILESLCT_OBI_MOVE_START_POS = 1120f;
    public const float DMD_FILESLCT_OBI_MOVE_END_POS = -1120f;
    public const float DMD_FILESLCT_OBI_MOVE_SPEED = -3f;
    public const float DMD_FILESLCT_OBI_EFCT_TIME = 16f;
    public const float DMD_FILESLCT_OBI_NODISP_POS_Y = 192f;
    public const float DMD_FILESLCT_OBI_DISP_POS_Y = 0.0f;
    public const float DMD_FILESLCT_ACT_VRTCL_CHNG_DIST = 128f;
    public const float DMD_FILESLCT_ACT_VRTCL_CHNG_NUM = 3f;
    public const float DMD_FILESLCT_CRSR_MOVE_TIME = 8f;
    public const float DMD_FILESLCT_DECIDE_EFCT_TIME = 32f;
    public const float DMD_FILESLCT_DECIDE_EFCT_WAIT_TIME = 48f;
    public const float DMD_FILESLCT_DECIDE_EFCT_END_UP_POS = -960f;
    public const float DMD_FILESLCT_DECIDE_EFCT_END_DOWN_POS = 720f;
    public const float DMD_FILESLCT_DEL_DATA_WIN_DISP_TIME = 60f;
    public const int DMD_FILESLCT_FLAG_EXIT = 1;
    public const int DMD_FILESLCT_FLAG_CANCEL = 2;
    public const int DMD_FILESLCT_FLAG_DECIDE = 4;
    public const int DMD_FILESLCT_FLAG_DISP_MENU = 8;
    public const int DMD_FILESLCT_FLAG_WIN_EFCT_END = 16;
    public const int DMD_FILESLCT_FLAG_CHNG_ZONE = 32;
    public const int DMD_FILESLCT_FLAG_CHNG_VRTCL = 64;
    public const int DMD_FILESLCT_FLAG_CHNG_CRSR = 128;
    public const int DMD_FILESLCT_FLAG_RE_CHNG_ZONE = 256;
    public const int DMD_FILESLCT_FLAG_RE_CHNG_VRTCL = 512;
    public const int DMD_FILESLCT_FLAG_RE_CHNG_CRSR = 1024;
    public const int DMD_FILESLCT_FLAG_UP_CHNG_CRSR = 2048;
    public const int DMD_FILESLCT_FLAG_DOWN_CHNG_CRSR = 4096;
    public const int DMD_FILESLCT_FLAG_DEL_SAVE_FILE = 8192;
    public const int DMD_FILESLCT_FLAG_IS_FADEIN = 16384;
    public const int DMD_FILESLCT_FLAG_IS_FADEOUT = 32768;
    public const int DMD_FILESLCT_FLAG_SET_USERNAME = 65536;
    public const int DMD_FILESLCT_FLAG_MOVE_CRSR = 131072;
    public const int DMD_FILESLCT_FLAG_MOVE_VRTCL = 262144;
    public const int DMD_FILESLCT_DISP_FLAG_WIN_ACT = 1;
    public const int DMD_FILESLCT_DISP_FLAG_TB_ARROW = 2;
    public const int DMD_FILESLCT_DISP_FLAG_ACT_CRSR = 4;
    public const int DMD_FILESLCT_DISP_FLAG_OBI_TEX = 8;
    public const int AOD_PLATFORM_IPHONE = 1;
    public const uint NND_SMOTTYPE_FRAME_FLOAT = 1;
    public const uint NND_SMOTTYPE_FRAME_SINT16 = 2;
    public const uint NND_SMOTTYPE_FRAME_MASK = 3;
    public const uint NND_SMOTTYPE_ANGLE_RADIAN = 4;
    public const uint NND_SMOTTYPE_ANGLE_ANGLE32 = 8;
    public const uint NND_SMOTTYPE_ANGLE_ANGLE16 = 16;
    public const uint NND_SMOTTYPE_ANGLE_MASK = 28;
    public const uint NND_SMOTTYPE_TRANSLATION_X = 256;
    public const uint NND_SMOTTYPE_TRANSLATION_Y = 512;
    public const uint NND_SMOTTYPE_TRANSLATION_Z = 1024;
    public const uint NND_SMOTTYPE_ROTATION_X = 2048;
    public const uint NND_SMOTTYPE_ROTATION_Y = 4096;
    public const uint NND_SMOTTYPE_ROTATION_Z = 8192;
    public const uint NND_SMOTTYPE_QUATERNION = 16384;
    public const uint NND_SMOTTYPE_SCALING_X = 32768;
    public const uint NND_SMOTTYPE_SCALING_Y = 65536;
    public const uint NND_SMOTTYPE_SCALING_Z = 131072;
    public const uint NND_SMOTTYPE_USER_UINT32 = 262144;
    public const uint NND_SMOTTYPE_USER_FLOAT = 524288;
    public const uint NND_SMOTTYPE_NODEHIDE = 1048576;
    public const uint NND_SMOTTYPE_TARGET_X = 262144;
    public const uint NND_SMOTTYPE_TARGET_Y = 524288;
    public const uint NND_SMOTTYPE_TARGET_Z = 1048576;
    public const uint NND_SMOTTYPE_MORPH_WEIGHT = 16777216;
    public const uint NND_SMOTTYPE_ROLL = 2097152;
    public const uint NND_SMOTTYPE_UPTARGET_X = 4194304;
    public const uint NND_SMOTTYPE_UPTARGET_Y = 8388608;
    public const uint NND_SMOTTYPE_UPTARGET_Z = 16777216;
    public const uint NND_SMOTTYPE_UPVECTOR_X = 33554432;
    public const uint NND_SMOTTYPE_UPVECTOR_Y = 67108864;
    public const uint NND_SMOTTYPE_UPVECTOR_Z = 134217728;
    public const uint NND_SMOTTYPE_FOVY = 268435456;
    public const uint NND_SMOTTYPE_ZNEAR = 536870912;
    public const uint NND_SMOTTYPE_ZFAR = 1073741824;
    public const uint NND_SMOTTYPE_ASPECT = 2147483648;
    public const uint NND_SMOTTYPE_HIDE = 256;
    public const uint NND_SMOTTYPE_DIFFUSE_R = 512;
    public const uint NND_SMOTTYPE_DIFFUSE_G = 1024;
    public const uint NND_SMOTTYPE_DIFFUSE_B = 2048;
    public const uint NND_SMOTTYPE_ALPHA = 4096;
    public const uint NND_SMOTTYPE_SPECULAR_R = 8192;
    public const uint NND_SMOTTYPE_SPECULAR_G = 16384;
    public const uint NND_SMOTTYPE_SPECULAR_B = 32768;
    public const uint NND_SMOTTYPE_SPECULAR_LEVEL = 65536;
    public const uint NND_SMOTTYPE_SPECULAR_GLOSS = 131072;
    public const uint NND_SMOTTYPE_AMBIENT_R = 262144;
    public const uint NND_SMOTTYPE_AMBIENT_G = 524288;
    public const uint NND_SMOTTYPE_AMBIENT_B = 1048576;
    public const uint NND_SMOTTYPE_TEXTURE_INDEX = 2097152;
    public const uint NND_SMOTTYPE_TEXTURE_BLEND = 4194304;
    public const uint NND_SMOTTYPE_OFFSET_U = 8388608;
    public const uint NND_SMOTTYPE_OFFSET_V = 16777216;
    public const uint NND_SMOTTYPE_MATCLBK_USER = 33554432;
    public const uint NND_SMOTTYPE_LIGHT_COLOR_R = 2097152;
    public const uint NND_SMOTTYPE_LIGHT_COLOR_G = 4194304;
    public const uint NND_SMOTTYPE_LIGHT_COLOR_B = 8388608;
    public const uint NND_SMOTTYPE_LIGHT_ALPHA = 16777216;
    public const uint NND_SMOTTYPE_LIGHT_INTENSITY = 33554432;
    public const uint NND_SMOTTYPE_FALLOFF_START = 67108864;
    public const uint NND_SMOTTYPE_FALLOFF_END = 134217728;
    public const uint NND_SMOTTYPE_INNER_ANGLE = 268435456;
    public const uint NND_SMOTTYPE_OUTER_ANGLE = 536870912;
    public const uint NND_SMOTTYPE_INNER_RANGE = 1073741824;
    public const uint NND_SMOTTYPE_OUTER_RANGE = 2147483648;
    public const uint NND_SMOTTYPE_TRANSLATION_XYZ = 1792;
    public const uint NND_SMOTTYPE_ROTATION_XYZ = 14336;
    public const uint NND_SMOTTYPE_SCALING_XYZ = 229376;
    public const uint NND_SMOTTYPE_TARGET_XYZ = 1835008;
    public const uint NND_SMOTTYPE_UPTARGET_XYZ = 29360128;
    public const uint NND_SMOTTYPE_UPVECTOR_XYZ = 234881024;
    public const uint NND_SMOTTYPE_DIFFUSE_RGB = 3584;
    public const uint NND_SMOTTYPE_SPECULAR_RGB = 57344;
    public const uint NND_SMOTTYPE_AMBIENT_RGB = 1835008;
    public const uint NND_SMOTTYPE_OFFSET_UV = 25165824;
    public const uint NND_SMOTTYPE_LIGHT_COLOR_RGB = 14680064;
    public const uint NND_SMOTTYPE_TRANSLATION_MASK = 1792;
    public const uint NND_SMOTTYPE_ROTATION_MASK = 30720;
    public const uint NND_SMOTTYPE_SCALING_MASK = 229376;
    public const uint NND_SMOTTYPE_TARGET_MASK = 1835008;
    public const uint NND_SMOTTYPE_UPTARGET_MASK = 29360128;
    public const uint NND_SMOTTYPE_UPVECTOR_MASK = 234881024;
    public const uint NND_SMOTTYPE_DIFFUSE_MASK = 3584;
    public const uint NND_SMOTTYPE_SPECULAR_MASK = 57344;
    public const uint NND_SMOTTYPE_AMBIENT_MASK = 1835008;
    public const uint NND_SMOTTYPE_OFFSET_MASK = 25165824;
    public const uint NND_SMOTTYPE_USER_MASK = 786432;
    public const uint NND_SMOTTYPE_TEXTURE_MASK = 31457280;
    public const uint NND_SMOTTYPE_LIGHT_COLOR_MASK = 14680064;
    public const uint NND_SMOTTYPE_VALUETYPE_MASK = 4294967040;
    public const uint NND_SMOTIPTYPE_SPLINE = 1;
    public const uint NND_SMOTIPTYPE_LINEAR = 2;
    public const uint NND_SMOTIPTYPE_CONSTANT = 4;
    public const uint NND_SMOTIPTYPE_BEZIER = 16;
    public const uint NND_SMOTIPTYPE_SI_SPLINE = 32;
    public const uint NND_SMOTIPTYPE_TRIGGER = 64;
    public const uint NND_SMOTIPTYPE_QUAT_LERP = 512;
    public const uint NND_SMOTIPTYPE_QUAT_SLERP = 1024;
    public const uint NND_SMOTIPTYPE_QUAT_SQUAD = 2048;
    public const uint NND_SMOTIPTYPE_IP_MASK = 3703;
    public const uint NND_SMOTIPTYPE_NOREPEAT = 65536;
    public const uint NND_SMOTIPTYPE_CONSTREPEAT = 131072;
    public const uint NND_SMOTIPTYPE_REPEAT = 262144;
    public const uint NND_SMOTIPTYPE_MIRROR = 524288;
    public const uint NND_SMOTIPTYPE_OFFSET = 1048576;
    public const uint NND_SMOTIPTYPE_REPEAT_MASK = 2031616;
    public const uint NND_MOTIONTYPE_NODE = 1;
    public const uint NND_MOTIONTYPE_CAMERA = 2;
    public const uint NND_MOTIONTYPE_LIGHT = 4;
    public const uint NND_MOTIONTYPE_MORPH = 8;
    public const uint NND_MOTIONTYPE_MATERIAL = 16;
    public const uint NND_MOTIONTYPE_CATEGORY_MASK = 31;
    public const uint NND_MOTIONTYPE_NOREPEAT = 65536;
    public const uint NND_MOTIONTYPE_CONSTREPEAT = 131072;
    public const uint NND_MOTIONTYPE_REPEAT = 262144;
    public const uint NND_MOTIONTYPE_MIRROR = 524288;
    public const uint NND_MOTIONTYPE_OFFSET = 1048576;
    public const uint NND_MOTIONTYPE_TRIGGER = 64;
    public const uint NND_MOTIONTYPE_VERSION2 = 268435456;
    public const uint NND_MOTIONTYPE_REPEAT_MASK = 2031680;
    public const uint NND_LIGHTTYPE_STANDARD_GL = 65536;
    public const uint NND_LIGHTTYPE_MASK = 65599;
    private const int NNE_ROTATETYPE_XYZ = 0;
    private const int NNE_ROTATETYPE_XZY = 1;
    private const int NNE_ROTATETYPE_YXZ = 2;
    private const int NNE_ROTATETYPE_YZX = 3;
    private const int NNE_ROTATETYPE_ZXY = 4;
    private const int NNE_ROTATETYPE_ZYX = 5;
    public const uint NND_LIGHTTYPE_PARALLEL = 1;
    public const uint NND_LIGHTTYPE_POINT = 2;
    public const uint NND_LIGHTTYPE_TARGET_SPOT = 4;
    public const uint NND_LIGHTTYPE_ROTATION_SPOT = 8;
    public const uint NND_LIGHTTYPE_TARGET_DIRECTIONAL = 16;
    public const uint NND_LIGHTTYPE_ROTATION_DIRECTIONAL = 32;
    public const uint NND_LIGHTTYPE_COMMON_MASK = 63;
    public const int NND_BZR_MAX_NEWTON_LOOP_COUNT = 0;
    public const float NND_BZR_EPSILON = 1.525879E-05f;
    public const float NND_BZR_EPSILON2 = 2.328306E-10f;
    public const int NND_BZR_BISECTION_LOOP_COUNT = 16;
    private const int GMD_GMK_WATER_SLIDER_MODE_WAIT = 0;
    private const int GMD_GMK_WATER_SLIDER_MODE_START = 1;
    private const int GMD_GMK_WATER_SLIDER_MODE_ACTIVE = 2;
    private const int GMD_GMK_WATER_SLIDER_MODE_STOP = 3;
    private const int GMD_GMK_WATER_SLIDER_MODE_NUM = 4;
    private const int GMD_GMK_WATER_SLIDER_TYPE_LEFT = 0;
    private const int GMD_GMK_WATER_SLIDER_TYPE_LEFT_30D = 1;
    private const int GMD_GMK_WATER_SLIDER_TYPE_LEFT_45D = 2;
    private const int GMD_GMK_WATER_SLIDER_TYPE_LEFT_60D = 3;
    private const int GMD_GMK_WATER_SLIDER_TYPE_RIGHT = 4;
    private const int GMD_GMK_WATER_SLIDER_TYPE_RIGHT_30D = 5;
    private const int GMD_GMK_WATER_SLIDER_TYPE_RIGHT_45D = 6;
    private const int GMD_GMK_WATER_SLIDER_TYPE_RIGHT_60D = 7;
    private const int GMD_GMK_WATER_SLIDER_TYPE_NUM = 8;
    public const int GMD_GMK_WATER_SLIDER_RECT_MARGIN = 8;
    public const int GMD_GMK_WATER_SLIDER_SPEED = 61440;
    public const float GMD_GMK_WATER_SLIDER_PLAYER_OFFSET_Y = -2f;
    public const int GMD_GMK_WATER_SLIDER_INVALID_ID = -1;
    private const int GMD_GMK_EN_BMPR_MODE_WAIT = 0;
    private const int GMD_GMK_EN_BMPR_MODE_HIT = 1;
    private const int GMD_GMK_EN_BMPR_MODE_LOST = 2;
    private const int GMD_GMK_EN_BMPR_MODE_NUM = 3;
    private const int GMD_GMK_EN_BMPR_TYPE_0 = 0;
    private const int GMD_GMK_EN_BMPR_TYPE_45 = 1;
    private const int GMD_GMK_EN_BMPR_TYPE_90 = 2;
    private const int GMD_GMK_EN_BMPR_TYPE_135 = 3;
    private const int GMD_GMK_EN_BMPR_TYPE_NUM = 4;
    private const int GMD_GMK_EN_BMPR_RECT_MARGIN_PLAYER_X = 32768;
    private const int GMD_GMK_EN_BMPR_RECT_MARGIN_PLAYER_Y = 65536;
    private const int GMD_GMK_EN_BMPR_RECT_OFFSET_PLAYER_Y = -12288;
    private const int GMD_GMK_EN_BMPR_POS_Z = -122880;
    private const int GMD_GMK_EN_BMPR_OFFSET_RADIUS = 98304;
    private const int GMD_GMK_EN_BMPR_SPEED = 24576;
    private const int GMD_GMK_EN_BMPR_LIFE_MAX = 3;
    private const int GMD_GMK_EN_BMPR_NO_MOVE_TIME = 5;
    private const int GMD_GMK_ENBMPR_SCORE_BONUS = 50;
    private const int GMD_GMK_ENBMPR_FLAG_ALIVE = 1;
    private const int GMD_GMK_SCR_LMT_RELEASE_LEFT = 1;
    private const int GMD_GMK_SCR_LMT_RELEASE_TOP = 2;
    private const int GMD_GMK_SCR_LMT_RELEASE_RIGHT = 4;
    private const int GMD_GMK_SCR_LMT_RELEASE_BOTTOM = 8;
    private const int GMD_GMK_SCR_LMT_RELEASE_ALL = 15;
    private const int GMD_GMK_SCR_LMT_EVE_FLAG_LEFT = 1;
    private const int GMD_GMK_SCR_LMT_EVE_FLAG_TOP = 2;
    private const int GMD_GMK_SCR_LMT_EVE_FLAG_RIGHT = 4;
    private const int GMD_GMK_SCR_LMT_EVE_FLAG_BOTTOM = 8;
    private const int GMD_GMK_SCR_LMT_EVE_FLAG_ALL = 15;
    public const int GMD_FIX_MGR_FLAG_CLEAR = 1;
    public const int GMD_FIX_MGR_FLAG_HIDE = 2;
    public const int GMD_FIX_MGR_FLAG_TIMER_COUNTDOWN = 4;
    public const int GMD_FIX_MGR_FLAG_HIDE_VIRTUAL_PAD_PART_SUPER_SONIC = 512;
    public const int GMD_FIX_MGR_FLAG_HIDE_VIRTUAL_PAD_PART_PAUSE = 1024;
    public const int GMD_FIX_MGR_FLAG_HIDE_VIRTUAL_PAD_PART_ACTION = 2048;
    public const int GMD_FIX_MGR_FLAG_HIDE_VIRTUAL_PAD_PART_MOVE_PAD = 4096;
    public const uint GMD_FIX_MGR_REQUEST_FLAG_TIMER_FLASH_ACT = 1;
    public const uint GMD_FIX_PART_FLAG_ACTIVE = 1;
    public const uint GMD_FIX_PART_FLAG_NODISP = 2;
    public const uint GMD_FIX_PART_FLAG_BLINK = 4;
    public const uint GMD_FIX_PART_FLAG_BLINK_OFF = 8;
    public const int GMD_FIX_PART_RINGCOUNT_DIGIT_NUM = 3;
    public const uint GMD_FIX_PART_RINGCOUNT_DIGIT_BLINK_ON_TIME = 10;
    public const uint GMD_FIX_PART_RINGCOUNT_DIGIT_BLINK_OFF_TIME = 10;
    public const int GMD_FIX_PART_SCORE_DIGIT_NUM = 9;
    public const uint GMD_FIX_PART_SCORE_S22_TA_NARROWSCREEN_ADJUST_OFST_X = 262144;
    public const uint GMD_FIX_PART_TIMER_FLAG_RED_BY_TEX_FRAME = 1;
    public const uint GMD_FIX_PART_TIMER_FLAG_FLASH_ACT_ACTIVE = 2;
    public const uint GMD_FIX_PART_TIMER_UNIT_NUM = 3;
    public const int GMD_FIX_PART_TIMER_MIN_DIGIT_NUM = 1;
    public const int GMD_FIX_PART_TIMER_SEC_DIGIT_NUM = 2;
    public const int GMD_FIX_PART_TIMER_MSEC_DIGIT_NUM = 2;
    public const uint GMD_FIX_PART_TIMER_ALL_DIGIT_NUM = 5;
    public const uint GMD_FIX_PART_TIMER_DECO_CHAR_NUM = 2;
    public const float GMD_FIX_PART_TIMER_DIGIT_RED_FRAME_OFST = 10f;
    public const float GMD_FIX_PART_TIMER_DECO_CHAR_RED_FRAME_OFST = 1f;
    public const uint GMD_FIX_PART_TIMER_DIGIT_BLINK_ON_TIME = 10;
    public const uint GMD_FIX_PART_TIMER_DIGIT_BLINK_OFF_TIME = 10;
    public const uint GMD_FIX_PART_TIMER_DIGIT_BLINK_REMAIN_SEC = 20;
    public const int GMD_FIX_PART_TIMER_FLASH_ACT_SCALE_MAX = 6144;
    public const int GMD_FIX_PART_TIMER_FLASH_ACT_SCALE_DEF = 4096;
    public const int GMD_FIX_PART_CHALLENGE_DIGIT_NUM = 3;
    public const int GME_FIX_PART_TYPE_RINGCOUNT = 0;
    public const int GME_FIX_PART_TYPE_SCORE = 1;
    public const int GME_FIX_PART_TYPE_TIMER = 2;
    public const int GME_FIX_PART_TYPE_CHALLENGE = 3;
    public const int GME_FIX_PART_TYPE_VIRTUAL_PAD = 4;
    public const int GME_FIX_PART_TYPE_MAX = 5;
    public const int GME_FIX_PART_TYPE_NONE = -1;
    public const int GME_FIX_TEX_IDX_FIX = 0;
    public const int GME_FIX_TEX_IDX_SSFIX_CMN = 1;
    public const int GME_FIX_TEX_IDX_SSFIX_LANG = 2;
    public const int GME_FIX_TEX_IDX_MAX = 3;
    public const int GME_FIX_AMA_IDX_COMMON = 0;
    public const int GME_FIX_AMA_IDX_SSFIX_CMN = 1;
    public const int GME_FIX_AMA_IDX_SSFIX_LANG = 2;
    public const int GME_FIX_AMA_IDX_MAX = 3;
    public const int GME_FIX_PLAN_TILT = 0;
    public const int GME_FIX_PLAN_FLICK = 1;
    public const int GME_FIX_PLAN_VIRTUAL_PAD = 2;
    public const int GME_FIX_PLAN_MAX = 3;
    public const int GME_FIX_RING_SUBPART_ICON = 0;
    public const int GME_FIX_RING_SUBPART_DIGIT_100 = 1;
    public const int GME_FIX_RING_SUBPART_DIGIT_10 = 2;
    public const int GME_FIX_RING_SUBPART_DIGIT_1 = 3;
    public const int GME_FIX_RING_SUBPART_MAX = 4;
    public const int GME_FIX_SCORE_SUBPART_TAB = 0;
    public const int GME_FIX_SCORE_SUBPART_NUM_1 = 1;
    public const int GME_FIX_SCORE_SUBPART_NUM_2 = 2;
    public const int GME_FIX_SCORE_SUBPART_NUM_3 = 3;
    public const int GME_FIX_SCORE_SUBPART_NUM_4 = 4;
    public const int GME_FIX_SCORE_SUBPART_NUM_5 = 5;
    public const int GME_FIX_SCORE_SUBPART_NUM_6 = 6;
    public const int GME_FIX_SCORE_SUBPART_NUM_7 = 7;
    public const int GME_FIX_SCORE_SUBPART_NUM_8 = 8;
    public const int GME_FIX_SCORE_SUBPART_NUM_9 = 9;
    public const int GME_FIX_SCORE_SUBPART_MAX = 10;
    public const int GME_FIX_TIMER_SUBPART_ICON = 0;
    public const int GME_FIX_TIMER_SUBPART_NUM_10000 = 1;
    public const int GME_FIX_TIMER_SUBPART_NUM_AP1 = 2;
    public const int GME_FIX_TIMER_SUBPART_NUM_1000 = 3;
    public const int GME_FIX_TIMER_SUBPART_NUM_100 = 4;
    public const int GME_FIX_TIMER_SUBPART_NUM_AP2 = 5;
    public const int GME_FIX_TIMER_SUBPART_NUM_10 = 6;
    public const int GME_FIX_TIMER_SUBPART_NUM_1 = 7;
    public const int GME_FIX_TIMER_SUBPART_MAX = 8;
    public const int GME_FIX_CHALLENGE_SUBPART_SONIC = 0;
    public const int GME_FIX_CHALLENGE_SUBPART_STRING = 1;
    public const int GME_FIX_CHALLENGE_SUBPART_NUM_100 = 2;
    public const int GME_FIX_CHALLENGE_SUBPART_NUM_10 = 3;
    public const int GME_FIX_CHALLENGE_SUBPART_NUM_1 = 4;
    public const int GME_FIX_CHALLENGE_SUBPART_MAX = 5;
    public const int GME_FIX_VIRTUAL_PAD_SUBPART_SSONIC = 0;
    public const int GME_FIX_VIRTUAL_PAD_SUBPART_PAUSE = 1;
    public const int GME_FIX_VIRTUAL_PAD_SUBPART_ACTION = 2;
    public const int GME_FIX_VIRTUAL_PAD_SUBPART_MOVE = 3;
    public const int GME_FIX_VIRTUAL_PAD_SUBPART_MAX = 4;
    public const float GMD_BOSS4_PLYATK_HORM_AFTER_SPD_X = 5f;
    public const float GMD_BOSS4_PLYATK_HORM_AFTER_SPD_Y = 4f;
    public const float GMD_BOSS4_PLYATK_NORM_AFTER_SPD_X = 0.6f;
    public const float GMD_BOSS4_PLYATK_NORM_AFTER_SPD_Y = 1.2f;
    public const int GMD_BOSS4_SNM_NO_MAX = 32;
    public const int GMD_BOSS4_STAGE4BOSS_ID = 15;
    public const int GME_BOSS4_DIR_RIGHT = 0;
    public const int GME_BOSS4_DIR_LEFT = 1;
    public const int GME_BOSS4_DIR_MAX = 2;
    public const int GMD_BOSS4_CAP_MAX = 6;
    public const float GMD_BOSS4_CAP_ZOOM_SMALL = 65f;
    public const float GMD_BOSS4_CAP_ZOOM_BIG = 100f;
    public const float GMD_BOSS4_CPA_ROTATE_X_DEG = 60f;
    public const float GMD_BOSS4_CPA_ROTATE_Z_DEG = 45f;
    public const float GMD_BOSS4_CPA_ROTATE_X_SPD = 0.5f;
    public const float GMD_BOSS4_CPA_ROTATE_Z_SPD = 1f;
    public const int GME_BOSS4_CAP_ACT_ID_NORMAL = 0;
    public const int GME_BOSS4_CAP_ACT_ID_MAX = 1;
    public const int GME_BOSS4_CAP_TYPE_ID_NORMAL = 0;
    public const int GME_BOSS4_CAP_TYPE_ID_BOUND = 1;
    public const int GME_BOSS4_CAP_TYPE_ID_MAX = 2;
    public const uint GMD_BOSS4_CAP_FLAG_INVINCIBLE = 4;
    public const uint GMD_BOSS4_CAP_FLAG_DEAD = 8;
    public const uint GMD_BOSS4_CAP_FLAG_NOHIT = 64;
    public const uint GMD_BOSS4_CAP_FLAG_SIGNAL_DAMAGE = 1073741824;
    public const uint GMD_BOSS4_CAP_FLAG_SIGNAL_DEFEAT = 2147483648;
    public const float GMD_BOSS4_CAP_OFFSET_Y = 20f;
    public const int GMD_BOSS4_CAP_DAMAGE_FLASH_POS_Z = 131072;
    public const int GMD_BOSS4_CAP_EXPLOSION_POS_Z = 135168;
    public const float GMD_BOSS4_CAP_FALL_SPD_Y = 0.2f;
    public const int GMD_BOSS4_CAP_TASK_KILL_TIME = 30;
    public const float GMD_BOSS4_CAP_THROW_SPD_X = -4f;
    public const float GMD_BOSS4_CAP_THROW_SPD_Y = -1f;
    public const float GMD_BOSS4_CAP_BOUND_SPD_X = 0.0f;
    public const float GMD_BOSS4_CAP_BOUND_SPD_Y = -1f;
    public const uint GMD_PLY_SEQ_STATE_CHECK_ATTR_TURN = 1;
    public const uint GMD_PLY_SEQ_STATE_CHECK_ATTR_DIRECT_TURN = 2;
    public const uint GMD_PLY_SEQ_STATE_CHECK_ATTR_WALK_END = 4;
    public const uint GMD_PLY_SEQ_STATE_CHECK_ATTR_FALL = 8;
    public const uint GMD_PLY_SEQ_STATE_CHECK_ATTR_END_LOOKUP = 16;
    public const uint GMD_PLY_SEQ_STATE_CHECK_ATTR_END_SQUAT = 32;
    public const uint GMD_PLY_SEQ_STATE_CHECK_ATTR_END_SPIN = 128;
    public const uint GMD_PLY_SEQ_STATE_CHECK_ATTR_END_PUSH = 1024;
    public const uint GMD_PLY_SEQ_STATE_CHECK_ATTR_STAGGER = 32768;
    public const uint GMD_PLY_SEQ_STATE_CHECK_ATTR_MTN_SPEED_NOSET = 4194304;
    public const uint GMD_PLY_SEQ_STATE_CHECK_ATTR_MTN_SPEED_WALK = 8388608;
    public const uint GMD_PLY_SEQ_STATE_CHECK_ATTR_MOVE_SPIN_PINBALL = 67108864;
    public const uint GMD_PLY_SEQ_STATE_CHECK_ATTR_MOVE_SPIN_NODEC = 134217728;
    public const uint GMD_PLY_SEQ_STATE_CHECK_ATTR_MOVE_JUMP_DIR = 268435456;
    public const uint GMD_PLY_SEQ_STATE_CHECK_ATTR_MOVE_SPIN = 536870912;
    public const uint GMD_PLY_SEQ_STATE_CHECK_ATTR_MOVE_JUMP = 1073741824;
    public const uint GMD_PLY_SEQ_STATE_CHECK_ATTR_MOVE_WALK = 2147483648;
    public const uint GMD_PLY_SEQ_STATE_ACCEPT_ATTR_WALK = 2;
    public const uint GMD_PLY_SEQ_STATE_ACCEPT_ATTR_BRAKE = 4;
    public const uint GMD_PLY_SEQ_STATE_ACCEPT_ATTR_JUMP = 8;
    public const uint GMD_PLY_SEQ_STATE_ACCEPT_ATTR_HOMING = 16;
    public const uint GMD_PLY_SEQ_STATE_ACCEPT_ATTR_LOOKUP = 64;
    public const uint GMD_PLY_SEQ_STATE_ACCEPT_ATTR_SQUAT = 128;
    public const uint GMD_PLY_SEQ_STATE_ACCEPT_ATTR_SPIN = 256;
    public const uint GMD_PLY_SEQ_STATE_ACCEPT_ATTR_SPINACC = 512;
    public const uint GMD_PLY_SEQ_STATE_ACCEPT_ATTR_WALLPUSH = 1024;
    public const uint GMD_PLY_SEQ_STATE_ACCEPT_ATTR_PINBALL_SPINACC = 2048;
    public const uint GMD_PLY_SEQ_STATE_ACCEPT_ATTR_SQUAT_SPIN = 4096;
    private const int GME_PLY_SEQ_STATE_FW = 0;
    private const int GME_PLY_SEQ_STATE_WALK = 1;
    private const int GME_PLY_SEQ_STATE_TURN = 2;
    private const int GME_PLY_SEQ_STATE_LOOKUP_ST = 3;
    private const int GME_PLY_SEQ_STATE_LOOKUP_M = 4;
    private const int GME_PLY_SEQ_STATE_LOOKUP_END = 5;
    private const int GME_PLY_SEQ_STATE_SQUAT_ST = 6;
    private const int GME_PLY_SEQ_STATE_SQUAT_M = 7;
    private const int GME_PLY_SEQ_STATE_SQUAT_END = 8;
    private const int GME_PLY_SEQ_STATE_BRAKE = 9;
    private const int GME_PLY_SEQ_STATE_SPIN = 10;
    private const int GME_PLY_SEQ_STATE_SPIN_DASHACC = 11;
    private const int GME_PLY_SEQ_STATE_SPIN_DASH = 12;
    private const int GME_PLY_SEQ_STATE_STAGGER_F = 13;
    private const int GME_PLY_SEQ_STATE_STAGGER_B = 14;
    private const int GME_PLY_SEQ_STATE_STAGGER_D = 15;
    private const int GME_PLY_SEQ_STATE_FALL = 16;
    private const int GME_PLY_SEQ_STATE_JUMP = 17;
    private const int GME_PLY_SEQ_STATE_WALLPUSH = 18;
    private const int GME_PLY_SEQ_STATE_HOMING = 19;
    private const int GME_PLY_SEQ_STATE_HOMING_REF = 20;
    private const int GME_PLY_SEQ_STATE_JUMPDASH = 21;
    private const int GME_PLY_SEQ_STATE_DAMAGE = 22;
    private const int GME_PLY_SEQ_STATE_DEATH = 23;
    private const int GME_PLY_SEQ_STATE_TRANS_SUPER = 24;
    private const int GME_PLY_SEQ_STATE_BOSS_GOAL = 25;
    private const int GME_PLY_SEQ_STATE_BOSS5_DEMO = 26;
    private const int GME_PLY_SEQ_STATE_T_RETRY_FW = 27;
    private const int GME_PLY_SEQ_STATE_T_RETRY_ACC = 28;
    private const int GME_PLY_SEQ_STATE_NORMAL_NUM = 29;
    private const int GME_PLY_SEQ_STATE_NORMAL_END = 29;
    private const int GME_PLY_SEQ_STATE_GMK_START = 29;
    private const int GME_PLY_SEQ_STATE_GMK_SPRINGJUMP = 29;
    private const int GME_PLY_SEQ_STATE_GMK_ROCK_RIDE_START = 30;
    private const int GME_PLY_SEQ_STATE_GMK_ROCK_RIDE = 31;
    private const int GME_PLY_SEQ_STATE_GMK_PULLEY = 32;
    private const int GME_PLY_SEQ_STATE_GMK_BREATHING = 33;
    private const int GME_PLY_SEQ_STATE_GMK_DASHPANEL = 34;
    private const int GME_PLY_SEQ_STATE_GMK_TARZAN_ROPE = 35;
    private const int GME_PLY_SEQ_STATE_GMK_WATER_SLIDER = 36;
    private const int GME_PLY_SEQ_STATE_GMK_SPIPE = 37;
    private const int GME_PLY_SEQ_STATE_GMK_SCREW = 38;
    private const int GME_PLY_SEQ_STATE_GMK_DEMO_FW = 39;
    private const int GME_PLY_SEQ_STATE_GMK_STOPPER = 40;
    private const int GME_PLY_SEQ_STATE_GMK_CANNON = 41;
    private const int GME_PLY_SEQ_STATE_GMK_CANNON_SHOOT = 42;
    private const int GME_PLY_SEQ_STATE_GMK_UPBUMPER = 43;
    private const int GME_PLY_SEQ_STATE_GMK_SEESAW = 44;
    private const int GME_PLY_SEQ_STATE_GMK_PINBALL = 45;
    private const int GME_PLY_SEQ_STATE_GMK_PINBALL_AIR = 46;
    private const int GME_PLY_SEQ_STATE_GMK_FLIPPER = 47;
    private const int GME_PLY_SEQ_STATE_GMK_SPRINGCTPLT_HOLD = 48;
    private const int GME_PLY_SEQ_STATE_GMK_SPRINGCTPLT_UP = 49;
    private const int GME_PLY_SEQ_STATE_GMK_SPRINGCTPLT_LR = 50;
    private const int GME_PLY_SEQ_STATE_GMK_FORCESPIN = 51;
    private const int GME_PLY_SEQ_STATE_GMK_FORCESPIN_DEC = 52;
    private const int GME_PLY_SEQ_STATE_GMK_FORCESPIN_FALL = 53;
    private const int GME_PLY_SEQ_STATE_GMK_MOVE_GEAR = 54;
    private const int GME_PLY_SEQ_STATE_GMK_DRAIN_TANK = 55;
    private const int GME_PLY_SEQ_STATE_GMK_DRAIN_TANK_FALL = 56;
    private const int GME_PLY_SEQ_STATE_GMK_STEAMPIPE = 57;
    private const int GME_PLY_SEQ_STATE_GMK_POP_STEAM = 58;
    private const int GME_PLY_SEQ_STATE_GMK_SPL_IN = 59;
    private const int GME_PLY_SEQ_STATE_GMK_BOSS2_CATCH = 60;
    private const int GME_PLY_SEQ_STATE_GMK_BOSS5_QUAKE = 61;
    private const int GME_PLY_SEQ_STATE_GMK_ENDING_DEMO1 = 62;
    private const int GME_PLY_SEQ_STATE_GMK_ENDING_DEMO2 = 63;
    private const int GME_PLY_SEQ_STATE_GMK_TRUCK_DANGER = 64;
    private const int GME_PLY_SEQ_STATE_GMK_TRUCK_DANGER_RET = 65;
    private const int GME_PLY_SEQ_STATE_GMK_SPIN_FALL = 66;
    private const int GME_PLY_SEQ_STATE_MAX = 67;
    public const int GMD_GMK_SWWALL_SW_CLOSE = 1;
    public const int GMD_GMK_SW_WALL_OPT_MDL_Z3_STONE = 0;
    public const int GMD_GMK_SW_WALL_OPT_MDL_Z3_GLARE = 1;
    public const int GMD_GMK_SW_WALL_OPT_MDL_Z3_MAX = 2;
    public const int GMD_GMK_SW_WALL_OPT_MDL_Z4_GEAR = 0;
    public const int GMD_GMK_SW_WALL_OPT_MDL_Z4_GEAR_BASE = 1;
    public const int GMD_GMK_SW_WALL_OPT_MDL_Z4_MAX = 2;
    public const int GMD_GMK_SW_WALL_OPT_MDL_MAX = 2;
    public const int GMD_GMK_SWWALL_COL_DIR_BUF = 128;
    public const int GMD_GMK_SWWALL_TYPE_RIGHT = 0;
    public const int GMD_GMK_SWWALL_TYPE_LEFT = 1;
    public const int GMD_GMK_SWWALL_TYPE_BOTTOM = 2;
    public const int GMD_GMK_SWWALL_TYPE_TOP = 3;
    public const int GMD_GMK_SWWALL_TYPE_MAX = 4;
    public const int GMD_GMK_SWWALL_COL_DIR_H4 = 0;
    public const int GMD_GMK_SWWALL_COL_DIR_H8 = 1;
    public const int GMD_GMK_SWWALL_COL_DIR_V4 = 2;
    public const int GMD_GMK_SWWALL_COL_DIR_V8 = 3;
    public const int GMD_GMK_SWWALL_COL_DIR_MAX = 4;
    public const int GMD_GMK_ENEMY_FLAG_GEAR_OPT = 1;
    public const int GMD_GMK_ENEMY_FLAG_STONE_OPT = 2;
    public const int GMD_GMK_ENEMY_FLAG_GEAR_BASE_HFLIP = 4;
    public const int GMD_GMK_SWWALL_BLOCK_SIZE = 32;
    public const int GMD_GMK_SWWALL_Z3_WALL_SIZE = 128;
    public const int GMD_GMK_SWWALL_Z3_L_WALL_SIZE = 256;
    public const int GMD_GMK_SWWALL_Z4_WALL_SIZE = 96;
    public const int GMD_GMK_SWWALL_COL_Z3_THICK = 32;
    public const int GMD_GMK_SWWALL_COL_Z4_THICK = 24;
    public const int GMD_GMK_SWWALL_COL_OFST_X = -16;
    public const int GMD_GMK_SWWALL_COL_OFST_Y = -16;
    public const int GMD_GMK_SWWALL_DEF_SPD = 4;
    public const double GMD_GMK_SWWALL_GEAR_OPT_OFST_X = -35.2;
    public const double GMD_GMK_SWWALL_GEAR_OPT_OFST_Y = 16.8;
    public const double GMD_GMK_SWWALL_GEARBASE_OPT_OFST_X = -48.0;
    public const double GMD_GMK_SWWALL_GEARBASE_OPT_OFST_Y = 12.0;
    public const int GMD_GMK_SW_MAX = 64;
    public const uint GMD_GMK_SWITCH_ENEMY_FLAG_RIDER = 1;
    public const int GMD_GMK_SW_COL_RECT_WIDTH = 32;
    public const int GMD_GMK_SW_COL_RECT_HEIGHT = 24;
    public const int GMD_GMK_SW_COL_RECT_OFST_X = -16;
    public const int GMD_GMK_SW_BODY_RECT_LEFT = -16;
    public const int GMD_GMK_SW_BODY_RECT_TOP = -20;
    public const int GMD_GMK_SW_BODY_RECT_RIGHT = 16;
    public const int GMD_GMK_SW_BODY_RECT_BOTTOM = -4;
    public const int GMD_GMK_SW_TOP_OFF_POS_OFST_Y = -14;
    public const int GMD_GMK_SW_TOP_ON_POS_OFST_Y = -10;
    public const int GMD_GMK_SW_TOP_ON_SPD = 2;
    public const int GMD_GMK_SW_TOP_OFF_SPD = -2;
    public const int GMD_GMK_SW_TIME_MIN = 12288;
    public const int GMD_GMK_SSEND_FLUSH_TIME = 30;
    public const int GMD_GMK_SSEND_EVE_FLAG_LIFE_MASK = 3;
    public const int GMD_GMK_SS_ENDURANCE_UV_WAIT_FRAME = 4;
    public const int GMD_GMK_SS_ENDURANCE_UV_NUM = 30;
    public const int GMD_GMK_SS_ENDURANCE_UV_WAIT_UPDATE_SHIFT = 8;
    public const int GMD_GMK_SS_ENDURANCE_UV_WAIT_UPDATE_MASK = 127;
    public const int GMD_GMK_SS_ENDURANCE_UV_WAIT_GET_SHIFT = 10;
    public const int GMD_GMK_SS_ENDURANCE_UV_WAIT_GET_MASK = 31;
    private const int GMD_GMK_SS_END_MAT_USER_DATA_BLUE = 1;
    private const int GMD_GMK_SS_END_MAT_USER_DATA_YELLOW = 2;
    private const int GMD_GMK_SS_END_MAT_USER_DATA_PURPLE = 3;
    private const int GMD_GMK_SS_END_MAT_USER_DATA_GREEN = 4;
    private const int GMD_GMK_SS_END_MAT_USER_DATA_END = 5;
    public const int GMD_GMK_BOSS3_ROUTE_FLAG_WAIT = 1;
    public const int GMD_GMK_BOSS3_ROUTE_FLAG_GOAL = 2;
    public const int GMD_GMK_BOSS3_ROUTE_HIT_LENGTH = 262144;
    public const int GMD_GMK_BOSS3_ROUTE_BLOCK_SIZE = 64;
    public const int GMD_GMK_BOSS3_ROUTE_WAIT_OFFSET = 96;
    public const short GMD_ENE_T_STAR_EVE_FLAG_RIGHT = 1;
    public const short GMD_ENE_T_STAR_EVE_FLAG_4_8 = 1;
    public const short GMD_ENE_T_STAR_EVE_FLAG_2_8 = 2;
    public const short GMD_ENE_T_STAR_EVE_FLAG_1_8 = 4;
    public const float GMD_ENE_T_STAR_MOVE_SPD = 0.5f;
    public const short GMD_ENE_T_STAR_SEARCH_LENGTH = 128;
    public const short GME_ENE_T_STAR_WALK_TIME = 120;
    public const short GME_ENE_T_STAR_STOP_TIME = 15;
    public const float GME_ENE_T_START_SIZE = 1.25f;
    public const short GMD_ENE_T_STAR_NODE_0 = 4;
    public const short GMD_ENE_T_STAR_NODE_1 = 5;
    public const short GMD_ENE_T_STAR_NODE_2 = 6;
    public const short GMD_ENE_T_STAR_NODE_3 = 7;
    public const short GMD_ENE_T_STAR_NODE_4 = 8;
    public const short GMD_ENE_T_STAR_NODE_MAX = 10;
    public const short GMD_ENE_T_STAR_NEEDLE_SPD = 4;
    public const short GMD_ENE_T_STAR_NEEDLE_ROT_DEG = 72;
    public const short GMD_ENE_T_STAR_NEEDLE_LIFT_TIME = 300;
    public const float GMD_ENE_T_STAR_NEEDLE_RADIUS = 10f;
    public const string GMD_ENE_T_STAR_SE_BOMB = "Boss2_03";
    public const int DMD_LOGO_SEGA_TASK_PRIO_DATA_LOAD = 4096;
    public const int DMD_LOGO_SEGA_TASK_GROUP_DATA_LOAD = 0;
    public const int DMD_LOGO_SEGA_TASK_PRIO_DATA_BUILD = 4096;
    public const int DMD_LOGO_SEGA_TASK_GROUP_DATA_BUILD = 0;
    public const int DMD_LOGO_SEGA_TASK_PRIO_DATA_FLUSH = 4096;
    public const int DMD_LOGO_SEGA_TASK_GROUP_DATA_FLUSH = 0;
    public const int DMD_LOGO_SEGA_TASK_PRIO_DATA_RELEASE = 4096;
    public const int DMD_LOGO_SEGA_TASK_GROUP_DATA_RELEASE = 0;
    public const int DMD_LOGO_SEGA_TASK_PRIO_MAIN = 4096;
    public const int DMD_LOGO_SEGA_TASK_GROUP_MAIN = 0;
    public const int DMD_LOGO_SEGA_TASK_PRIO_CAMERA = 6144;
    public const int DMD_LOGO_SEGA_TASK_GROUP_CAMERA = 0;
    public const int DMD_LOGO_SEGA_TASK_PRIO_EFFECT_SERVER = 20480;
    public const int DMD_LOGO_SEGA_TASK_GROUP_EFFECT_SERVER = 0;
    public const int DMD_LOGO_SEGA_TASK_PRIO_PLAYER = 8192;
    public const int DMD_LOGO_SEGA_TASK_GROUP_PLAYER = 0;
    public const int DMD_LOGO_SEGA_TASK_PRIO_EFFECT = 12288;
    public const int DMD_LOGO_SEGA_TASK_GROUP_EFFECT = 0;
    public const int DMD_LOGO_SEGA_TASK_PRIO_SOUND = 32767;
    public const int DMD_LOGO_SEGA_TASK_GROUP_SOUND = 0;
    public const int DMD_LOGO_SEGA_TASK_PAUSELEVEL_DEF = 0;
    public const int DMD_LOGO_SEGA_OBJ_OBJPAUSELEVEL_DEF = 0;
    public const string DMD_LOGO_SEGA_SOUND_SE_FILE_PATH = "SOUND/SND_FX.CSB";
    public const int DMD_LOGO_SEGA_START_WAIT_TIME = 0;
    public const int DMD_LOGO_SEGA_SONIC_RUN_LEFT_TIME = 10;
    public const int DMD_LOGO_SEGA_SONIC_RUN_RIGHT_WAIT_TIME = 25;
    public const int DMD_LOGO_SEGA_SONIC_RUN_RIGHT_TIME = 10;
    public const int DMD_LOGO_SEGA_DISP_TIME = 180;
    public const int DMD_LOGO_SEGA_FADEOUT_TIME = 60;
    public const int DMD_LOGO_SEGA_DISP_WIDTH = 960;
    public const int DMD_LOGO_SEGA_PLAYER_INIT_POS_X = 608;
    public const int DMD_LOGO_SEGA_PLAYER_INIT_POS_Y = 0;
    public const int DMD_LOGO_SEGA_PLAYER_INIT_POS_Z = 0;
    public const int DMD_LOGO_SEGA_PLAYER_POS_Y_ADJUST = -36;
    public const int DMD_LOGO_SEGA_PLAYER_LEFT_RUN_S_POS_X = 608;
    public const int DMD_LOGO_SEGA_PLAYER_LEFT_RUN_SPD = -121;
    public const int DMD_LOGO_SEGA_PLAYER_RIGHT_RUN_S_POS_X = -608;
    public const int DMD_LOGO_SEGA_PLAYER_RIGHT_RUN_SPD = 121;
    public const int DMD_LOGO_SEGA_DASH_EFCT_OFST_POS_X = -20;
    public const int DMD_LOGO_SEGA_DASH_EFCT_OFST_POS_Y = 100;
    public const int DMD_LOGO_SEGA_DASH_EFCT_OFST_POS_Z = 100;
    public const int DMD_LOGO_SEGA_OBJTYPE_PLAYER = 1;
    public const int DMD_LOGO_SEGA_OBJTYPE_EFFECT = 2;
    public const int DMD_LOGO_SEGA_CAMERA_ID = 0;
    public const float DMD_LOGO_SEGA_CAMERA_SCALE = 0.9f;
    public const int DMD_LOGO_SEGA_DRAW_CMD_STATE_3DNN = 0;
    public const int DMD_LOGO_SEGA_DATA_PLY_MDL_AMB = 0;
    public const int DMD_LOGO_SEGA_DATA_PLY_TEX_AMB = 1;
    public const int DMD_LOGO_SEGA_DATA_PLY_MTN_AMB = 2;
    public const int DMD_LOGO_SEGA_DATA_EFCT_AMB = 3;
    public const int DMD_LOGO_SEGA_DATA_LOCAL_AMA_SET_AMB = 4;
    public const int DMD_LOGO_SEGA_DATA_MAX = 5;
    public const int DMD_LOGO_SEGA_AOSTEX_LOCAL_ACT = 0;
    public const int DMD_LOGO_SEGA_AOSTEX_EFFECT_MDL = 1;
    public const int DMD_LOGO_SEGA_AOSTEX_MAX = 2;
    public const int DMD_LOGO_SEGA_ACT_BG_WHITE = 0;
    public const int DMD_LOGO_SEGA_ACT_LOGO_SEGA = 1;
    public const int DMD_LOGO_SEGA_ACT_COVER = 2;
    public const int DMD_LOGO_SEGA_ACT_LINE01 = 3;
    public const int DMD_LOGO_SEGA_ACT_LINE02 = 4;
    public const int DMD_LOGO_SEGA_ACT_LINE03 = 5;
    public const int DMD_LOGO_SEGA_ACT_LINE04 = 6;
    public const int DMD_LOGO_SEGA_ACT_LINE05 = 7;
    public const int DMD_LOGO_SEGA_ACT_MAX = 8;
    public const int DMD_LOGO_SEGA_EFCT_MODEL_FOOT_L = 0;
    public const int DMD_LOGO_SEGA_EFCT_MODEL_FOOT_R = 1;
    public const int DMD_LOGO_SEGA_EFCT_MODEL_MAX = 2;
    public const int DMD_LOGO_SEGA_FLAG_END = 1;
    public const int DMD_LOGO_SEGA_FLAG_ACT_FRAME_UPDATE = 2;
    private const int AOD_STORAGE_ERROR_NONE = 0;
    private const int AOD_STORAGE_ERROR_LOADDATA_NONE = 1;
    private const int AOD_STORAGE_ERROR_NO_SAVE = 2;
    private const int AOD_STORAGE_ERROR_CANCEL = 3;
    private const int AOD_STORAGE_ERROR_APP_CANCEL = 4;
    private const int AOD_STORAGE_ERROR_OPERATION = 5;
    private const int AOD_STORAGE_ERROR_NUM = 6;
    private const int AOD_STORAGE_STATE_IDLE = 0;
    private const int AOD_STORAGE_STATE_SAVING = 1;
    private const int AOD_STORAGE_STATE_LOADING = 2;
    private const int AOD_STORAGE_STATE_DELETE = 3;
    private const int AOD_STORAGE_STATE_NUM = 4;
    private const int AOD_STORAGE_STATE_NONE = 5;
    private const int NND_CIRCLE_N = 20;
    private const int NND_CIRCLE_PN = 120;
    private const uint NND_DRAWCS_CALCCLIP = 2147483648;
    private const int GME_SOUND_JINGLE_IDX_1UP = 0;
    private const int GME_SOUND_JINGLE_IDX_CLEAR = 1;
    private const int GME_SOUND_JINGLE_IDX_CLEAR_FINAL = 2;
    private const int GME_SOUND_JINGLE_IDX_EMERALD = 3;
    private const int GME_SOUND_JINGLE_IDX_INVINCIBLE = 4;
    private const int GME_SOUND_JINGLE_IDX_NEW_RECORD = 5;
    private const int GME_SOUND_JINGLE_IDX_OBORE = 6;
    private const int GME_SOUND_JINGLE_IDX_GAMEOVER = 7;
    private const int GME_SOUND_JINGLE_IDX_MAX = 8;
    private const int GME_SOUND_DATA_IDX_SE = 0;
    private const int GME_SOUND_DATA_IDX_BGM = 1;
    private const int GME_SOUND_DATA_IDX_MAX = 2;
    public const uint GMD_SOUND_FLAG_OBORE = 1;
    public const uint GMD_SOUND_FLAG_INVINCIBLE = 4;
    public const uint GMD_SOUND_FLAG_1SHOT_BGM_PAUSE_VOL_0 = 16;
    public const uint GMD_SOUND_FLAG_1SHOT_JNGLBGM_PAUSE_VOL_0 = 32;
    public const uint GMD_SOUND_FLAG_JNGLBGM_BGM_PAUSE_VOL_0 = 64;
    public const uint GMD_SOUND_FLAG_BGM_PAUSE_VOL_0_MASK = 80;
    public const uint GMD_SOUND_FLAG_JNGLBGM_PAUSE_VOL_0_MASK = 32;
    public const uint GMD_SOUND_FLAG_ALL_PAUSE_BGM = 16777216;
    public const uint GMD_SOUND_FLAG_ALL_PAUSE_JINGLE = 33554432;
    public const uint GMD_SOUND_FLAG_ALL_PAUSE_1SH_JINGLE = 67108864;
    public const uint GMD_SOUND_FLAG_ALL_PAUSE = 134217728;
    public const uint GMD_SOUND_FLAG_BGM_PAUSE = 2147483648;
    public const int GMD_SOUND_OBORE_START_BGM_FADE = 15;
    public const int GMD_SOUND_OBORE_END_BGM_FADE = 15;
    public const int GMD_SOUND_OBORE_END_JINGLE_FADE = 15;
    public const int GMD_SOUND_INVINCIBLE_START_BGM_FADE = 15;
    public const int GMD_SOUND_INVINCIBLE_END_BGM_FADE = 30;
    public const int GMD_SOUND_INVINCIBLE_END_JINGLE_FADE = 30;
    public const int GMD_SOUND_1UP_END_BGM_FADE = 120;
    public const int GMD_SOUND_GAMEOVER_START_BGM_FADE = 15;
    public const int GMD_SOUND_CLEAR_START_BGM_FADE = 15;
    public const int GMD_SOUND_CLEARFINAL_START_BGM_FADE = 15;
    public const int GMD_SOUND_SPEEDUP_CHANGE_FADE = 15;
    public const int GMD_SOUND_ANGRY_BOSS_CHANGE_FADE = 15;
    public const int GMD_SOUND_FINAL_BOSS_CHANGE_FADE = 15;
    public const int GMD_SOUND_WIN_BOSS_CHANGE_FADE = 30;
    public const string GMD_SOUND_ANGRY_BOSS_BGM_NAME = "snd_sng_boss2";
    public const string GMD_SOUND_FINAL_BOSS_BGM_NAME = "snd_sng_final";
    private const int GME_SCORE_VIB_LEVEL_0 = 0;
    private const int GME_SCORE_VIB_LEVEL_1 = 1;
    private const int GME_SCORE_VIB_LEVEL_2 = 2;
    private const int GME_SCORE_VIB_LEVEL_3 = 3;
    private const int GME_SCORE_VIB_LEVEL_MAX = 4;
    public const int GMD_SCORE_FIG_MAX = 5;
    public const int GMD_SCORE_MAX = 99999;
    public const int GMD_SCORE_DEF_SIZE_X = 11;
    public const int GMD_SCORE_DEF_INT_X = 1;
    public const int GMD_SCORE_DEF_OFST_X = 12;
    public const int GMD_SCORE_DEF_OFST_Y = -16;
    public const int GMD_SCORE_DEF_RIZE_DIST = -32;
    public const int GMD_SCORE_RIZE_DIST_SCALE = -8;
    public const int GMD_SCORE_RIZE_TIME = 30;
    public const int GMD_SCORE_POS_Z = 1179648;
    public const int GMD_SCORE_DISP_TIME = 45;
    public const int GMD_SCORE_VIB_TBL_NUM = 8;
    public const int GMD_SCORE_VIB_TBL_MASK = 7;
    public const int GMD_SCORE_COMBO_VIB_LEVEL_NUM = 5;
    private const int GME_PLYGMK_DASHPANEL_RIGHT = 0;
    private const int GME_PLYGMK_DASHPANEL_LEFT = 1;
    private const int GME_PLYGMK_DASHPANEL_V_RIGHT = 2;
    private const int GME_PLYGMK_DASHPANEL_V_LEFT = 3;
    private const int GME_PLYGMK_DASHPANEL_MAX = 4;
    public const float GMD_GMK_TRUCK_FW_CENTER_X = 0.0f;
    public const float GMD_GMK_TRUCK_FW_CENTER_Y = 8f;
    public const float GMD_GMK_TRUCK_FW_CENTER_Z = -5f;
    public const float GMD_GMK_TRUCK_BW_CENTER_X = 0.0f;
    public const float GMD_GMK_TRUCK_BW_CENTER_Y = 8f;
    public const float GMD_GMK_TRUCK_BW_CENTER_Z = 5f;
    public const int GMD_PLYGMK_SPRING_SIDE_NOSPD_TIME = 262144;
    public const int GMD_GMK_ROCK_RIDE_FRAME_WAIT_JUMP = 5;
    public const int GMD_GMK_ROCK_RIDE_OFFSET_PLAYER = 229376;
    public const int GMD_GMK_ROCK_RIDE_START_JUMP_X = 13824;
    public const int GMD_GMK_ROCK_RIDE_START_JUMP_Y = -24576;
    public const int GMD_GMK_ROCK_RIDE_SPEED_ADD = 384;
    public const int GMD_GMK_ROCK_RIDE_SPEED_RANGE = 61440;
    public const int GMD_GMK_ROCK_RIDE_SPEED_MID = -32768;
    public const int GMD_GMK_ROCK_RIDE_SPEED_LIMIT = 15360;
    public const int GMD_GMK_ROCK_RIDE_SPEED_PINCH = 2816;
    public const int GMD_GMK_ROCK_RIDE_JUMP_X = 16384;
    public const int GMD_GMK_ROCK_RIDE_JUMP_Y = 12288;
    public const int GMD_GMK_ROCK_RIDE_OFFSET_CAMERA_Y = -48;
    public const int GMD_PLYGMK_DASHPANEL_SPD = 55296;
    public const int GMD_PLYGMK_DASHPANEL_TIME = 60;
    public const int GMD_PLYGMK_DASHPANEL_NOSPDDOWN_TIME = 49152;
    public const int GMD_PLYGMK_SCREW_LENGTH = 1530320;
    public const int GMD_PLYGMK_SCREW_WIDTH = 288;
    public const int GMD_PLYGMK_SCREW_HEIGHT = 38;
    public const int GMD_PLYGMK_PULLEY_OFS_Y = 163840;
    public const int GMD_PLYGMK_PINBALL_TIME = 60;
    public const int GMD_PLYGMK_MOVE_GEAR_CAM_OFST_X = 0;
    public const int GMD_PLYGMK_MOVE_GEAR_CAM_OFST_Y = -48;
    public const int GMD_PLYGMK_STEAMPIPEOUT_TIME = 60;
    public const int GMD_PLYGMK_FORCE_SPIN_DEC_SPDMAX = 8192;
    public const int GMD_PLYGMK_FORCE_SPIN_DEC_SPDDEC = 2048;
    public const int GMD_PLY_SEQ_GMK_TRUCK_DANGER_DIR_FRAME = 17;
    public const int GMD_PLY_SEQ_GMK_TRUCK_DANGER_RET_DIR_FRAME = 14;
    public const int GMD_PLY_SEQ_GMK_TRUCK_DANGER_RET_DIR_START_FRAME = 18;
    public const float GMD_PLF_SEQ_GMK_TRUCK_DANGER_ROT_CENTER_X = -0.0f;
    public const float GMD_PLF_SEQ_GMK_TRUCK_DANGER_ROT_CENTER_Y = -5f;
    public const float GMD_PLF_SEQ_GMK_TRUCK_DANGER_ROT_CENTER_Z = -9f;
    public const int GMD_PLF_SEQ_GMK_TRUCK_DANGER_SLANT_DIR = 6144;
    public const int GMD_PLF_SEQ_GMK_TRUCK_DANGER_SLANT_SPD = 32;
    public const int GMD_PLY_SCORE_COMBO_1 = 100;
    public const int GMD_PLY_SCORE_COMBO_2 = 200;
    public const int GMD_PLY_SCORE_COMBO_3 = 400;
    public const int GMD_PLY_SCORE_COMBO_4 = 800;
    public const int GMD_PLY_SCORE_COMBO_5 = 1600;
    public const int GMD_PLY_SCORE_COMBO_MAX = 5;
    public const int GMD_PLY_SCORE_BREAK_OBJ = 100;
    public const int GMD_PLY_SCORE_BOBBIN = 10;
    public const int GMD_PLY_SCORE_EN_BUMPER = 10;
    public const int GMD_PLY_SCORE_SLOT = 100;
    public const int GMD_PLY_SCORE_BOSS5_RKT = 100;
    public const int GMD_PLY_SCORE_BOSS = 1000;
    public const int GMD_OBJTYPE_PLAYER = 1;
    public const int GMD_OBJTYPE_ENEMY = 2;
    public const int GMD_OBJTYPE_GIMMICK = 3;
    public const int GMD_OBJTYPE_DECORATION = 4;
    public const int GMD_OBJTYPE_EFFECT = 5;
    public const int GMD_OBJTYPE_COCKPIT = 6;
    public const int GMD_OBJTYPE_FADE = 7;
    public const int GMD_OBJTYPE_MAPFAR = 8;
    public const int GMD_OBJTYPE_MAX = 9;
    public const int GMD_OBJ_DEF_FALL_SPD = 672;
    public const int GMD_OBJ_DEF_FALL_SPDMA = 61440;
    public const ushort GMD_OBJ_RECT_ATK_FLAG_NORMALATK = 2;
    public const ushort GMD_OBJ_RECT_ATK_FLAG_BODYATK = 1;
    public const ushort GMD_OBJ_RECT_ATK_FLAG_EFCTATK = 4;
    public const ushort GMD_OBJ_RECT_ATK_FLAG_EXATK = 2;
    public const ushort GMD_OBJ_RECT_ATK_FLAG_EX_SETTING = 8;
    public const int GMD_OBJ_RECT_DEF_FLAG_NORMALATK = 65535;
    public const int GMD_OBJ_RECT_DEF_FLAG_WEAK_NORMALATK = 65533;
    public const int GMD_OBJ_RECT_DEF_FLAG_WEAK_BODYATK = 65534;
    public const int GMD_OBJ_RECT_DEF_FLAG_WEAK_EFCTATK = 65531;
    public const int GMD_OBJ_RECT_DEF_FLAG_EXATK = 65535;
    public const int GMD_OBJ_RECT_DEF_FLAG_WEAK_EX_SETTING = 65527;
    public const int GMD_OBJ_RECT_DEF_FLAG_NOHIT = 65535;
    public const int GMD_OBJ_RECT_DEF_FLAG_EFCTATK = 65531;
    public const int GMD_OBJ_RECT_DEF_FLAG_EFCTDEF = 65531;
    public const int GMD_OBJ_RECT_ATK_POWER_DEFAULT = 1;
    public const int GMD_OBJ_RECT_ATK_POWER_INVINCIBLE = 3;
    public const short GMD_OBJ_RECT_DEF_POWER_DEFAULT = 0;
    public const short GMD_OBJ_RECT_DEF_POWER_GUARD = 2;
    public const short GMD_OBJ_RECT_DEF_POWER_INVINCIBLE = 3;
    public const int GMD_OBJ_RECT_GROUP_PLAYER = 0;
    public const int GMD_OBJ_RECT_GROUP_ENEMY = 1;
    public const int GMD_OBJ_RECT_TARGET_GROUPFLAG_PLAYER = 1;
    public const int GMD_OBJ_RECT_TARGET_GROUPFLAG_ENEMY = 2;
    public const int GMD_OBJ_DEFAULT_POS_Z_C = 0;
    public const int GMD_OBJ_DEFAULT_POS_Z_C_FRONT = 131072;
    public const int GMD_OBJ_DEFAULT_POS_Z_C_BACK = -131072;
    public const int GMD_OBJ_DEFAULT_POS_Z_A = 524288;
    public const int GMD_OBJ_DEFAULT_POS_Z_A_FRONT = 655360;
    public const int GMD_OBJ_DEFAULT_POS_Z_A_BACK = 393216;
    public const int GMD_OBJ_DEFAULT_POS_Z_B = -524288;
    public const int GMD_OBJ_DEFAULT_POS_Z_B_FRONT = -393216;
    public const int GMD_OBJ_DEFAULT_POS_Z_B_BACK = -655360;
    public const int GMD_OBJ_DEFAULT_POS_Z_N = 1048576;
    public const int GMD_OBJ_DEFAULT_POS_Z_N_FRONT = 1179648;
    public const int GMD_OBJ_DEFAULT_POS_Z_N_BACK = 917504;
    public const int GMD_OBJ_DEFAULT_POS_Z_M = -1048576;
    public const int GMD_OBJ_DEFAULT_POS_Z_M_FRONT = -917504;
    public const int GMD_OBJ_DEFAULT_POS_Z_M_BACK = -1179648;
    public const int GMD_OBJ_DEFAULT_POS_Z_M1 = -1572864;
    public const int GMD_OBJ_DEFAULT_POS_Z_M1_FRONT = -1441792;
    public const int GMD_OBJ_DEFAULT_POS_Z_M1_BACK = -1703936;
    public const int GMD_OBJ_DEFAULT_POS_Z_M2 = -2097152;
    public const int GMD_OBJ_DEFAULT_POS_Z_M2_FRONT = -1966080;
    public const int GMD_OBJ_DEFAULT_POS_Z_M2_BACK = -2228224;
    public const int GMD_OBJ_DEFAULT_POS_Z_M3 = -2621440;
    public const int GMD_OBJ_DEFAULT_POS_Z_M3_FRONT = -2490368;
    public const int GMD_OBJ_DEFAULT_POS_Z_M3_BACK = -2752512;
    public const int GMD_OBJ_GIMMICK_POS_Z = 0;
    public const int GMD_OBJ_GIMMICK_POS_Z_FRONT = 131072;
    public const int GMD_OBJ_GIMMICK_POS_Z_BACK = -131072;
    public const int GMD_OBJ_ENEMY_POS_Z = 0;
    public const int GMD_OBJ_ENEMY_POS_Z_FRONT = 131072;
    public const int GMD_OBJ_ENEMY_POS_Z_BACK = -131072;
    public const int GMD_OBJ_OBJPAUSELEVEL_DEF = 0;
    public const long GMD_GMK_ROCK_RIDE_START_SPEED_ADD = 224;
    public const long GMD_GMK_ROCK_RIDE_START_SPEED = 12288;
    public const int GMD_GMK_ROCK_RIDE_SLOP = 192;
    public const int GMD_GMK_ROCK_RIDE_SLOP_MAX = 61440;
    public const int GMD_GMK_ROCK_RIDE_LEFT = 1;
    public const int GMD_GMK_ROCK_RIDE_SIZE_HIT_RECT = 40;
    public const int GMD_GMK_ROCK_RIDE_SIZE_FIELD_RECT = 16;
    public const int GMD_GMK_ROCK_RIDE_SIZE_FIELD_RECT_BOTTOM = 16;
    public const int GMD_GMK_ROCK_RIDE_SIZE_EFFECT_OFFEST_Y = 98304;
    public const int GMD_GMK_ROCK_RIDE_SIZE_EFFECT_OFFEST_Z = 131072;
    public const int GMD_GMK_ROCK_RIDE_TXB_INDEX = 0;
    public const int GMD_GMK_ROCK_RIDE_SE_MAX_SPEED = 6;
    public const int GMD_GMK_ROCK_RIDE_INTERVAL_VIB = 30;
    public const int GMD_GMK_ROCK_RIDE_TIME_VIB = 10;
    public const int GMD_GMK_NEEDLE_NUM = 5;
    public const int GMD_GMK_COL_ROTATE_DIR = 16384;
    public const int GMD_GMK_COL_ACT_ROTATE_DIR = 32768;
    public const int GMD_GMK_DRAW_ROTATE_DIR = 49152;
    public const int GMD_GMK_ACT_NDL_SCALING_TIME = 6;
    public const int GMD_GMK_ACT_NDL_WAITING_TIME = 60;
    public const int GMD_GMK_ACT_NDL_SCALING_RATE = 682;
    public const int GMD_GMK_NEEDLE_TRUCK_ATK_RECT_ADJUST = 16;
    public const uint GMD_GMK_ACT_NDL_COL_SCALE_EFCT = 1;
    public const uint GMD_GMK_ACT_NDL_COL_SCALE_UP = 2;
    public const uint GMD_GMK_ACT_NDL_COL_SCALE_DOWN = 4;
    private const int GMD_GMK_NDL_TYPE_UP = 0;
    private const int GMD_GMK_NDL_TYPE_LEFT = 1;
    private const int GMD_GMK_NDL_TYPE_DOWN = 2;
    private const int GMD_GMK_NDL_TYPE_RIGHT = 3;
    private const int GMD_GMK_NDL_TYPE_ACT_UP = 4;
    private const int GMD_GMK_NDL_TYPE_ACT_DOWN = 5;
    private const int GMD_GMK_NDL_TYPE_MAX = 6;
    private const int GMD_GMK_NDL_INOUT_STATE_OUT = 0;
    private const int GMD_GMK_NDL_INOUT_STATE_IN = 1;
    private const int GMD_GMK_NDL_INOUT_STATE_MAX = 2;
    private const int GMD_GMK_NDL_COL_DATA_WIDTH = 0;
    private const int GMD_GMK_NDL_COL_DATA_HEIGHT = 1;
    private const int GMD_GMK_NDL_COL_DATA_OFST_X = 2;
    private const int GMD_GMK_NDL_COL_DATA_OFST_Y = 3;
    private const int GMD_GMK_NDL_COL_DATA_MAX = 4;
    public const float GMD_GMK_GOAL_EFCT_POS_Y = 30f;
    public const float GMD_GMK_GOAL_EFCT_POS_Z = 15f;
    public const int GMD_GMK_GOAL_EFCT_ROT_Z = 0;
    private const int GMD_GMK_BRIDGE_PRIM = 1;
    private const int GMD_GMK_BRIDGE_OFFS = -393216;
    private const int GMD_GMK_BRIDGE_GAP = 53248;
    private const int GMD_GMK_BRIDGE_NUM = 5;
    private const int GMD_GMK_BRIDGE_TIME = 16;
    private const int GMD_GMK_BRIDGE_FLEX = 8;
    private const uint GMD_GMK_BRIDGE_EVE_FLAG_BLOCK3 = 1;
    private const int GMD_GAMEDAT_LOAD_STATE_LOADING = 0;
    private const int GMD_GAMEDAT_LOAD_STATE_LOADFINISH = 1;
    private const int GMD_GAMEDAT_LOAD_STATE_COMPLETE = 2;
    private const int GMD_GAMEDAT_LOAD_STATE_ERROR = 3;
    private const int GMD_GAMEDAT_LOAD_STATE_MAX = 4;
    public const int GMD_GMK_BOBJ1_RECT_WIDTH = 36;
    public const int GMD_GMK_BOBJ1_RECT_HEIGHT = 23;
    public const int GMD_GMK_BOBJ2_RECT_WIDTH = 36;
    public const int GMD_GMK_BOBJ2_RECT_HEIGHT = 25;
    public const int GMD_GMK_BOBJ3_RECT_WIDTH = 36;
    public const int GMD_GMK_BOBJ3_RECT_HEIGHT = 38;
    public const int GMD_GMK_BOBJ_RECT_MARGIN = 32;
    public const int GMD_GMK_BOBJ1_BREAKRECT_MARGIN_H = 4;
    public const int GMD_GMK_BOBJ1_BREAKRECT_MARGIN_V = 4;
    private const int GME_GMK_BOBJ_PARTS_ACT_ID = 0;
    private const int GME_GMK_BOBJ_PARTS_OFF_X = 1;
    private const int GME_GMK_BOBJ_PARTS_OFF_Y = 2;
    private const int GME_GMK_BOBJ_PARTS_VECT = 3;
    private const int GME_GMK_BOBJ_PARTS_SPD = 4;
    private const int GME_GMK_BOBJ_PARTS_MAX = 5;
    public const int GMS_GAME_DBUILD_BUILD_MDL_WORK_NUM = 64;
    private const int GME_ENE_KAMA_HAND_TYPE_RIGHT = 0;
    private const int GME_ENE_KAMA_HAND_TYPE_LEFT = 1;
    private const int GME_ENE_KAMA_HAND_TYPE_MAX = 2;
    public const short GMD_ENE_KAMA_EVE_FLAG_RIGHT = 1;
    public const short GMD_ENE_KAMA_EVE_FLAG_UP = 2;
    public const short GMD_ENE_KAMA_EVE_FLAG_WAIT0 = 4;
    public const short GMD_ENE_KAMA_EVE_FLAG_WAIT1 = 8;
    public const short GMD_ENE_KAMA_EVE_FLAG_WAIT2 = 16;
    public const short GMD_ENE_KAMA_EVE_FLAG_SMALL_WALK = 32;
    public const int GMD_ENE_KAMA_MOVE_SPD_X = 2048;
    public const int GMD_ENE_KAMA_FW_TIME = 61440;
    public const int GMD_ENE_KAMA_TURN_FRAME = 40;
    public const int GMD_ENE_KAMA_SEARCH_LENGTH = 112;
    public const int GMD_ENE_KAMA_ATTACK_WAIT_TIME = 60;
    public const int GMD_ENE_KAMA_ATTACK_TIME = 7;
    public const float GMD_ENE_KAMA_HAND_SPD = 1.75f;
    public const float GMD_ENE_KAMA_HAND_HOMING_RET = 0.08f;
    public const float GMD_ENE_KAMA_HAND_HOMING = 0.04f;
    public const int GMD_ENE_KAMA_HAND_ROLING = 15;
    public const float GMD_ENE_KAMA_HAND_CENTER_X = 10f;
    public const float GMD_ENE_KAMA_HAND_CENTER_Y = -10f;
    public const int GMD_ENE_KAMA_HAND_TIME = 120;
    public const float GMD_ENE_KAMA_HAND_G_SPD = 0.2f;
    public const int GMD_ENE_KAMA_L_HAND_NODE = 9;
    public const int GMD_ENE_KAMA_R_HAND_NODE = 6;
    public const int GMD_ENE_KAMA_NODE_NO_MAX = 32;
    public const string GMD_ENE_KAMA_SE_KAMA = "Kama";
    public const string GMD_ENE_KAMA_SE_BOMB = "Boss2_03";
    public const ushort GMD_ENE_GABU_EVE_FLAG_SPD_MASK = 7;
    public const ushort GMD_ENE_GABU_EVE_FLAG_JUMP_WAIT_FLAG = 128;
    public const double GMD_ENE_GABU_JUMP_DIST_DEF = 96.0;
    public const short GMD_ENE_GABU_JUMP_SPD_DEF_Y = -24576;
    public const short GMD_ENE_GABU_JUMP_SPD_ADD_Y = -1024;
    public const int GMD_ENE_GABU_JUMP_WAIT_TIME = 15;
    public const int GMD_ENE_GABU_ATK_MTN_FRAME = 40;
    public const int GME_EFCT_BOSS_CMN_IDX_BOSS_DM = 0;
    public const int GME_EFCT_BOSS_CMN_IDX_BOSS_PARTS = 1;
    public const int GME_EFCT_BOSS_CMN_IDX_BOSS_SMOKE02 = 2;
    public const int GME_EFCT_BOSS_CMN_IDX_BOSS_SMORK = 3;
    public const int GME_EFCT_BOSS_CMN_IDX_JET_B = 4;
    public const int GME_EFCT_BOSS_CMN_IDX_JET_B_SMORK = 5;
    public const int GME_EFCT_BOSS_CMN_IDX_MAX = 6;
    public const int GME_EFCT_BOSS_CMN_IDX_NONE = -1;
    public const int GMD_EFCT_BOSS_SINGLE_BUILD_NUM_MAX = 32;
    public const int DMD_SAVE_TASK_PAUSELEVEL = 32767;
    public const int DMD_SAVE_TASK_PRIO_MAIN = 8192;
    public const int DMD_SAVE_TASK_GROUP_MAIN = 0;
    public const int DMD_SAVE_FILE_PATH_NUM_MAX = 60;
    public const float DMD_SAVE_SIZE_WIDTH = 960f;
    public const float DMD_SAVE_SIZE_HEIGHT = 720f;
    public const float DMD_SAVE_SIZE_HALF_WIDTH = 480f;
    public const float DMD_SAVE_SIZE_HALF_HEIGHT = 360f;
    public const int DMD_SAVE_DRAW_PRIO_BG = 256;
    public const int DMD_SAVE_DRAW_PRIO_WIN = 61439;
    public const int DMD_SAVE_DRAW_PRIO_WIN_FIX = 61439;
    public const int DMD_SAVE_DRAW_TASK_PRIO = 61439;
    public const int DMD_SAVE_DRAW_STATE_ID = 100;
    public const float DMD_SAVE_WINDOW_SIZE_W = 380f;
    public const float DMD_SAVE_WINDOW_SIZE_H = 180f;
    public const float DMD_SAVE_WIN_DEF_RATE = 1f;
    public const int DMD_SAVE_LOAD_MIN_TIME = 60;
    public const int DMD_SAVE_SAVE_MIN_TIME = 60;
    public const float DMD_SAVE_FADEIN_TIME = 32f;
    public const float DMD_SAVE_FADEOUT_TIME = 32f;
    public const int DMD_SAVE_BGM_FADEIN_TIME = 32;
    public const int DMD_SAVE_BGM_FADEOUT_TIME = 32;
    public const int DMD_SAVE_SE_END_WAIT_TIME = 60;
    public const int DMD_SAVE_WIN_EFCT_TIME = 8;
    public const uint DMD_SAVE_FLAG_EXIT = 1;
    public const uint DMD_SAVE_FLAG_CANCEL = 2;
    public const uint DMD_SAVE_FLAG_DECIDE = 4;
    public const uint DMD_SAVE_FLAG_DISP_MENU = 8;
    public const uint DMD_SAVE_FLAG_WIN_EFCT_END = 16;
    public const uint DMD_SAVE_FLAG_WIN_MSG_END = 32;
    public const uint DMD_SAVE_FLAG_SIGN_OUT_EXIT = 2147483648;
    public const uint DMD_SAVE_DISP_FLAG_WIN_ACT = 1;
    public const uint DMD_SAVE_DISP_FLAG_SAVE_MENU = 2;
    public const uint DMD_SAVE_DISP_FLAG_SAVE_VIEW = 4;
    public const uint DMD_SAVE_DISP_FLAG_MENU_TAB = 8;
    public const uint DMD_SAVE_DISP_FLAG_SAVE_LIST = 16;
    public const uint DMD_SAVE_DISP_FLAG_NOW_UPDATE = 32;
    public const float DMD_SAVE_DISP_SCALE_TEXT = 1.6875f;
    public const int DME_SAVE_WIN_DATA_LOADING = 0;
    public const int DME_SAVE_WIN_ATTENTION_SAVE = 1;
    public const int DME_SAVE_WIN_NOW_SAVING = 2;
    public const int DME_SAVE_WIN_TRIAL_OUT_SAVE = 3;
    public const int DME_SAVE_WIN_NUM = 4;
    public const int DME_SAVE_WIN_NONE = 5;
    public const int DMD_LOGO_SONIC_TASK_PRIO_DATA_LOAD = 4096;
    public const int DMD_LOGO_SONIC_TASK_GROUP_DATA_LOAD = 0;
    public const int DMD_LOGO_SONIC_TASK_PRIO_DATA_BUILD = 4096;
    public const int DMD_LOGO_SONIC_TASK_GROUP_DATA_BUILD = 0;
    public const int DMD_LOGO_SONIC_TASK_PRIO_DATA_FLUSH = 4096;
    public const int DMD_LOGO_SONIC_TASK_GROUP_DATA_FLUSH = 0;
    public const int DMD_LOGO_SONIC_TASK_PRIO_DATA_RELEASE = 4096;
    public const int DMD_LOGO_SONIC_TASK_GROUP_DATA_RELEASE = 0;
    public const int DMD_LOGO_SONIC_TASK_PRIO_MAIN = 4096;
    public const int DMD_LOGO_SONIC_TASK_GROUP_MAIN = 0;
    public const int DMD_LOGO_SONIC_FADEIN_TIME = 60;
    public const int DMD_LOGO_SONIC_DISP_TIME = 120;
    public const int DMD_LOGO_SONIC_FADEOUT_TIME = 60;
    public const int DMD_LOGO_SONIC_FADEOUT_TIME_SKIP = 10;
    public const int DMD_LOGO_SONIC_SKIP_KEY = 0;
    public const int DMD_LOGO_SONIC_DATA_COM_AMA_SET_AMB = 0;
    public const int DMD_LOGO_SONIC_DATA_MAX = 1;
    public const int DMD_LOGO_SONIC_ACT_COM_BASE = 0;
    public const int DMD_LOGO_SONIC_ACT_COM_LOGO = 1;
    public const int DMD_LOGO_SONIC_ACTMAX = 2;
    public const int DMD_LOGO_SONIC_AOSTEX_COM = 0;
    public const int DMD_LOGO_SONIC_AOSTEX_MAX = 1;
    public const int DMD_LOGO_SONIC_FLAG_SKIP_OK = 1;
    public const int DMD_LOGO_SONIC_FLAG_SKIP = 2;
    public const int DMD_LOGO_SONIC_FLAG_END = 4;
    private const int DMD_LOADING_TASK_PAUSELEVEL = 32767;
    private const int DMD_LOADING_TASK_PRIO_MAIN = 8192;
    private const int DMD_LOADING_TASK_GROUP_MAIN = 10;
    private const int DMD_LOADING_FILE_PATH_NUM_MAX = 60;
    private const string DMD_LOADING_CMN_DATA_FILENAME = "DEMO/CMN/D_CMN_WIN.AMB";
    private const string DMD_LOADING_DATA_FILENAME = "DEMO/OPTION/D_OPTION_USER.AMB";
    private const float DMD_LOADING_SIZE_WIDTH = 960f;
    private const float DMD_LOADING_SIZE_HEIGHT = 720f;
    private const float DMD_LOADING_SIZE_HALF_WIDTH = 480f;
    private const float DMD_LOADING_SIZE_HALF_HEIGHT = 360f;
    private const int DMD_LOADING_DRAW_PRIO_CHAR = 12288;
    private const int DMD_LOADING_DRAW_PRIO_BG = 8192;
    private const int DMD_LOADING_DRAW_PRIO_FIX = 10240;
    private const int DMD_LOADING_DRAW_STATE_ID = 10;
    private const float DMD_LOADING_FADEIN_TIME = 32f;
    private const float DMD_LOADING_FADEOUT_TIME = 32f;
    private const float DMD_LOADING_LOAD_LOOP_TIME = 12f;
    private const float DMD_LOADING_LOADED_WAIT_TIME = 32f;
    private const float DMD_LOADING_SONIC_MOVE_INIT_SPD = 50f;
    private const float DMD_LOADING_SONIC_MAIN_INIT_POS = 0.0f;
    private const float DMD_LOADING_SONIC_OTHER_INIT_POS = 0.0f;
    private const float DMD_LOADING_SONIC_MOVE_SPD = 12f;
    private const float DMD_LOADING_SONIC_MOVE_ACCEL = 0.8f;
    private const int DMD_LOADING_FLAG_EXIT = 1;
    private const int DMD_LOADING_FLAG_CANCEL = 2;
    private const int DMD_LOADING_FLAG_DECIDE = 4;
    public const int TARGET_WIDTH = 480;
    public const int TARGET_HEIGHT = 320;
    public const int TARGET_VISIBLE_HEIGHT = 288;
    public const float TARGET_ORIGINAL_SCALE = 1f;
    public const int TARGET_2D_OFFSET_Y = 16;
    public const float TARGET_2D_SCALE_Y = 0.9f;
    public const int DEVICE_WIDTH = 800;
    public const int DEVICE_HEIGHT = 480;
    private const int APPD_MAIN_DRAW_FRAME = 0;
    private const int APPD_MAIN_CRIAUDIO_INIT_DELAY = 1;
    private const uint g_gs_bin_win_a_amb_size = 1344;
    public const int GSD_ACT_INIT_SPR_BUF_NUM = 256;
    public const int GSD_ACT_INIT_ACT_BUF_NUM = 256;
    public const int GSD_ACT_INIT_SORT_BUF_NUM = 256;
    public const int GSD_ACT_INIT_ACM_BUF_NUM = 32;
    public const string g_gs_init_loading_file_path = "DEMO/LOADING/D_LOADING.AMB";
    public const int AMD_SAMPLE_COUNT_DEFAULT = 1;
    private const int AMD_STANDARD_SHADER_NUM = 256;
    private const int AMD_HOG_HEAP_SIZE = 28311552;
    public const int AMD_XY = 2;
    public const int AMD_X = 0;
    public const int AMD_Y = 1;
    public const int AMD_TP_TOUCH_POS_MAX = 4;
    public const int AMD_TP_FLAG_ON_SHIFT = 0;
    public const int AMD_TP_FLAG_PREV_SHIFT = 1;
    public const int AMD_TP_FLAG_PUSH_SHIFT = 2;
    public const int AMD_TP_FLAG_PULL_SHIFT = 3;
    public const int AMD_TP_FLAG_INVALID_SHIFT = 7;
    public const int AMD_TP_FLAG_ON = 1;
    public const int AMD_TP_FLAG_PREV = 2;
    public const int AMD_TP_FLAG_PUSH = 4;
    public const int AMD_TP_FLAG_PULL = 8;
    public const int AMD_TP_FLAG_INVALID = 128;
    public const byte AMD_TP_SAMPLING_FLAG_ON = 1;
    public const byte AMD_TP_SAMPLING_FLAG_INVALID = 128;
    public const int AMD_TASK_THREAD_NUM = 1;
    public const int AMD_TASK_NAME_LEN = 16;
    public const int AMD_TASK_DEFAULT_WORK_SIZE = 64;
    public const int AMD_TASK_DEFAULT_BUFFER_SIZE = 256;
    public const int AMD_TASK_STATE_NULL = 0;
    public const int AMD_TASK_STATE_KILL = -1;
    public const int AMD_TASK_STATE_BARRIER = -3;
    public const int AMD_TASK_STATE_SLEEP_MASK = 1;
    public const int AMD_TASK_DELGRP_INCLUSIVE = 0;
    public const int AMD_TASK_DELGRP_EXCLUSIVE = 1;
    public const int AMD_TASK_DELGRP_NOTINCLUSIVE = 2;
    public const int AMD_TASK_DELGRP_NOTEXCLUSIVE = 3;
    public const int AMD_TASK_SLPGRP_INCLUSIVE = 0;
    public const int AMD_TASK_SLPGRP_EXCLUSIVE = 1;
    public const int AMD_TASK_SLPGRP_NOTINCLUSIVE = 2;
    public const int AMD_TASK_SLPGRP_NOTEXCLUSIVE = 3;
    public const uint AMD_TASK_UID_NONE = 0;
    public const uint AMD_TASK_UID_00 = 1;
    public const uint AMD_TASK_UID_01 = 2;
    public const uint AMD_TASK_UID_02 = 4;
    public const uint AMD_TASK_UID_03 = 8;
    public const uint AMD_TASK_UID_04 = 16;
    public const uint AMD_TASK_UID_05 = 32;
    public const uint AMD_TASK_UID_06 = 64;
    public const uint AMD_TASK_UID_07 = 128;
    public const uint AMD_TASK_UID_08 = 256;
    public const uint AMD_TASK_UID_09 = 512;
    public const uint AMD_TASK_UID_0A = 1024;
    public const uint AMD_TASK_UID_0B = 2048;
    public const uint AMD_TASK_UID_0C = 4096;
    public const uint AMD_TASK_UID_0D = 8192;
    public const uint AMD_TASK_UID_0E = 16384;
    public const uint AMD_TASK_UID_0F = 32768;
    public const uint AMD_TASK_UID_ALL = 4294967295;
    public const int AMD_TASK_ATTR_SYSTEM = 1;
    public const int AMD_TASK_ATTR_MAIN = 2;
    public const int AMD_TASK_ATTR_DRAW3D = 4;
    public const int AMD_TASK_ATTR_DRAW2D = 8;
    public const int AMD_TASK_ATTR_USER_0 = 65536;
    public const int AMD_TASK_ATTR_USER_1 = 131072;
    public const int AMD_TASK_ATTR_USER_2 = 262144;
    public const int AMD_TASK_ATTR_USER_3 = 524288;
    public const int AMD_TASK_ATTR_USER_4 = 1048576;
    public const int AMD_TASK_ATTR_USER_5 = 2097152;
    public const int AMD_TASK_ATTR_USER_6 = 4194304;
    public const int AMD_TASK_ATTR_USER_7 = 8388608;
    public const int AMD_TASK_GID_00 = 0;
    public const int AMD_TASK_GID_01 = 1;
    public const int AMD_TASK_GID_02 = 2;
    public const int AMD_TASK_GID_03 = 3;
    public const int AMD_TASK_GID_04 = 4;
    public const int AMD_TASK_GID_05 = 5;
    public const int AMD_TASK_GID_06 = 6;
    public const int AMD_TASK_GID_07 = 7;
    public const int AMD_TASK_GID_08 = 8;
    public const int AMD_TASK_GID_09 = 9;
    public const int AMD_TASK_GID_10 = 10;
    public const int AMD_TASK_GID_11 = 11;
    public const int AMD_TASK_GID_12 = 12;
    public const int AMD_TASK_GID_13 = 13;
    public const int AMD_TASK_GID_14 = 14;
    public const int AMD_TASK_GID_15 = 15;
    public const int AMD_TASK_GID_16 = 16;
    public const int AMD_TASK_GID_17 = 17;
    public const int AMD_TASK_GID_18 = 18;
    public const int AMD_TASK_GID_19 = 19;
    public const int AMD_TASK_GID_20 = 20;
    public const int AMD_TASK_GID_21 = 21;
    public const int AMD_TASK_GID_22 = 22;
    public const int AMD_TASK_GID_23 = 23;
    public const int AMD_TASK_GID_24 = 24;
    public const int AMD_TASK_GID_25 = 25;
    public const int AMD_TASK_GID_26 = 26;
    public const int AMD_TASK_GID_27 = 27;
    public const int AMD_TASK_GID_28 = 28;
    public const int AMD_TASK_GID_29 = 29;
    public const int AMD_TASK_GID_30 = 30;
    public const int AMD_TASK_GID_31 = 31;
    public const int AMD_TASK_GROUP_00 = 1;
    public const int AMD_TASK_GROUP_01 = 2;
    public const int AMD_TASK_GROUP_02 = 4;
    public const int AMD_TASK_GROUP_03 = 8;
    public const int AMD_TASK_GROUP_04 = 16;
    public const int AMD_TASK_GROUP_05 = 32;
    public const int AMD_TASK_GROUP_06 = 64;
    public const int AMD_TASK_GROUP_07 = 128;
    public const int AMD_TASK_GROUP_08 = 256;
    public const int AMD_TASK_GROUP_09 = 512;
    public const int AMD_TASK_GROUP_10 = 1024;
    public const int AMD_TASK_GROUP_11 = 2048;
    public const int AMD_TASK_GROUP_12 = 4096;
    public const int AMD_TASK_GROUP_13 = 8192;
    public const int AMD_TASK_GROUP_14 = 16384;
    public const int AMD_TASK_GROUP_15 = 32768;
    public const int AMD_TASK_GROUP_16 = 65536;
    public const int AMD_TASK_GROUP_17 = 131072;
    public const int AMD_TASK_GROUP_18 = 262144;
    public const int AMD_TASK_GROUP_19 = 524288;
    public const int AMD_TASK_GROUP_20 = 1048576;
    public const int AMD_TASK_GROUP_21 = 2097152;
    public const int AMD_TASK_GROUP_22 = 4194304;
    public const int AMD_TASK_GROUP_23 = 8388608;
    public const int AMD_TASK_GROUP_24 = 16777216;
    public const int AMD_TASK_GROUP_25 = 33554432;
    public const int AMD_TASK_GROUP_26 = 67108864;
    public const int AMD_TASK_GROUP_27 = 134217728;
    public const int AMD_TASK_GROUP_28 = 268435456;
    public const int AMD_TASK_GROUP_29 = 536870912;
    public const int AMD_TASK_GROUP_30 = 1073741824;
    public const int AMD_TASK_GROUP_31 = -2147483648;
    public const uint AMD_TASK_GROUP_ALL = 4294967295;
    public const int AMD_TASK_TCB_STAT_WAIT = 0;
    public const int AMD_TASK_TCB_STAT_PENDING = -1;
    public const int AMD_TASK_TCB_STAT_END = -2;
    public const int pAMD_TASK_TCB_STAT_RUNNING = -3;
    public const int AMD_TASK_WORK_CODE = 218237452;
    public const int AMD_TASK_LIST_LENGTH = 14;
    public const uint AMD_FS_FLAG_AUTOFREE = 1;
    public const uint AMD_FS_FLAG_DIR = 134217728;
    public const uint AMD_FS_FLAG_CNT = 2147483648;
    public const uint AMD_FS_FLAG_CNT_ID = 1879048192;
    public const int AMD_FS_TYPE_FILE = 0;
    public const int AMD_FS_TYPE_PARTITION = 1;
    public const int AMD_FS_TYPE_FILELIST = 2;
    public const int AMD_FS_STAT_WAIT = 0;
    public const int AMD_FS_STAT_STOP = 1;
    public const int AMD_FS_STAT_READ = 2;
    public const int AMD_FS_STAT_COMPLETE = 3;
    public const int AMD_FS_STAT_ERR = 4;
    public const int AMD_FS_STAT_CANTOPEN = 5;
    public const int AMD_FS_STAT_NOMEMORY = 6;
    public const int AMD_FS_STAT_OPEN = 7;
    public const string AMD_FS_PATH_CHAR = "/";
    public const string AMD_FS_PATH_CONV = "\\";
    public const int kDefaultLoadSpeed = 32768;
    private const int GMD_SMSG_TYPE_Z2 = 0;
    private const int GMD_SMSG_TYPE_Z3 = 1;
    private const int GMD_SMSG_TYPE_SS = 2;
    private const int GMD_SMSG_TYPE_MAX = 3;
    private const int GMD_SMSG_WIN_MARGIN = 30;
    private const int GMD_SMSG_WIN_EDGE_ADJUST = -32;
    private const int GMD_SMSG_DATA_MSG_AMA = 0;
    private const int GMD_SMSG_DATA_MSG_TEX_AMB = 1;
    private const int GMD_SMSG_DATA_MSG_MAX = 2;
    private const int GMD_SMSG_DATA_WIN_AMA = 0;
    private const int GMD_SMSG_DATA_WIN_TEX_AMB = 1;
    private const int GMD_SMSG_DATA_WIN_MAX = 2;
    public const int GMD_SMSG_DATA_WIN_TEX_ID = 0;
    private const int GMD_SMSG_AOSTEX_MSG = 0;
    private const int GMD_SMSG_AOSTEX_WIN = 1;
    private const int GMD_SMSG_AOSTEX_ACTION = 2;
    private const int GMD_SMSG_AOSTEX_MAX = 3;
    public const int GMD_PLAYER_DATA_SON_MDL = 0;
    public const int GMD_PLAYER_DATA_SON_TEX = 1;
    public const int GMD_PLAYER_DATA_SSON_MDL = 2;
    public const int GMD_PLAYER_DATA_SSON_TEX = 3;
    public const int GMD_PLAYER_DATA_MOTION = 4;
    public const int GMD_PLAYER_DATA_MAX = 5;
    public const int GMD_PLAYER_MTN_NUM = 136;
    public const int GMD_PLAYER_WATER_CHECK_OFST = -10;
    public const int GMD_PLAYER_WATER_FACE_UP_OFST = 4;
    public const int GMD_PLAYER_WATER_COUNT_TIME_OFST = 245760;
    public const ushort PAD_BUTTON_JUMP = 160;
    public const ushort PAD_BUTTON_TRANSFORM = 80;
    public const int GMD_PLAYER_KEY_MAP_UP = 0;
    public const int GMD_PLAYER_KEY_MAP_DOWN = 1;
    public const int GMD_PLAYER_KEY_MAP_LEFT = 2;
    public const int GMD_PLAYER_KEY_MAP_RIGHT = 3;
    public const int GMD_PLAYER_KEY_MAP_A = 4;
    public const int GMD_PLAYER_KEY_MAP_B = 5;
    public const int GMD_PLAYER_KEY_MAP_X = 6;
    public const int GMD_PLAYER_KEY_MAP_Y = 7;
    public const int GMD_PLAYER_KEY_MAP_MAX = 8;
    public const int GMD_PLAYER_RECT_DEF = 0;
    public const int GMD_PLAYER_RECT_ATK = 1;
    public const int GMD_PLAYER_RECT_BODY = 2;
    public const int GMD_PLAYER_RECT_NUM = 3;
    public const int GMD_PLAYER_MAP_END_OFST = 14;
    private const int GME_PLAYER_TOUCH_RECT_F = 0;
    private const int GME_PLAYER_TOUCH_RECT_B = 1;
    private const int GME_PLAYER_TOUCH_RECT_NUM = 2;
    private const int GMD_PLY_MODEL_TYPE_NORMAL = 0;
    private const int GMD_PLY_MODEL_TYPE_SPIN = 1;
    private const int GMD_PLY_MODEL_TYPE_IPHONE = 2;
    private const int GMD_PLY_MODEL_TYPE_SPINJUMP = 3;
    private const int GMD_PLY_MODEL_TYPE_MAX = 4;
    private const int GMD_PLY_SPIN_STATE_NON = 0;
    private const int GMD_PLY_SPIN_STATE_NORMAL = 1;
    private const int GMD_PLY_SPIN_STATE_TURN = 2;
    private const int GMD_PLY_SPIN_STATE_WALK = 3;
    private const int GMD_PLY_SPIN_STATE_MAX = 4;
    private const int GME_PLAYER_CONTROL_TYPE_A = 0;
    private const int GME_PLAYER_CONTROL_TYPE_B = 1;
    private const int GME_PLAYER_CONTROL_TYPE_TILT = 2;
    private const int GME_PLAYER_CONTROL_TYPE_NUM = 3;
    private const int GMD_PLY_MODEL_SET_NORMAL = 0;
    private const int GMD_PLY_MODEL_SET_SUPER = 1;
    private const int GMD_PLY_MODEL_SET_MAX = 2;
    public const uint GMD_PLF_USER1 = 1;
    public const uint GMD_PLF_USER2 = 2;
    public const uint GMD_PLF_USER3 = 4;
    public const uint GMD_PLF_USER4 = 8;
    public const uint GMD_PLF_USER_MASK = 15;
    public const uint GMD_PLF_PGM_TURN = 16;
    public const uint GMD_PLF_NOJUMPMOVE = 32;
    public const uint GMD_PLF_NOHOMING_SEARCH = 64;
    public const uint GMD_PLF_NOHOMING = 128;
    public const uint GMD_PLF_PGM_TURN_RDM = 256;
    public const uint GMD_PLF_WALK_SMK_EFCT_OFF = 512;
    public const uint GMD_PLF_DIE = 1024;
    public const uint GMD_PLF_COLDIE = 2048;
    public const uint GMD_PLF_NOCOLDIE = 4096;
    public const uint GMD_PLF_NOCAMERA_OFST = 8192;
    public const uint GMD_PLF_SUPER_SONIC = 16384;
    public const uint GMD_PLF_AUTO_RUN = 32768;
    public const uint GMD_PLF_TATK_RETRY = 65536;
    public const uint GMD_PLF_PINBALL_SONIC = 131072;
    public const uint GMD_PLF_TRUCK_RIDE = 262144;
    public const uint GMD_PLF_NO_ITEMSLOW = 524288;
    public const uint GMD_PLF_ACT_GOAL = 1048576;
    public const uint GMD_PLF_BOSS_GOAL_PRE = 2097152;
    public const uint GMD_PLF_NOKEY = 4194304;
    public const uint GMD_PLF_GAMEOVER = 8388608;
    public const uint GMD_PLF_GOAL = 16777216;
    public const uint GMD_PLF_RESET_FALL_PARAM = 33554432;
    public const uint GMD_PLF_WATER = 67108864;
    public const uint GMD_PLF_NOBRAKE = 134217728;
    public const uint GMD_PLF_BARRIER = 268435456;
    public const uint GMD_PLF_MAGNET = 536870912;
    public const uint GMD_PLF_BOSS5_DEMO = 1073741824;
    public const uint GMD_PLF_PGM_FALL_TURN = 2147483648;
    public const uint GMD_PLF_PGM_TURN_MASK = 2147483920;
    public const uint GMD_PLF_STATE_INIT_CLEAR_MASK = 599727;
    public const uint GMD_PLF_STATE_GIMMICK_INIT_CLEAR_MASK = 533167;
    public const uint GMD_PLGF_TOUCH = 1;
    public const uint GMD_PLGF_TOUCH_FLIP = 2;
    public const uint GMD_PLGF_GRAIND_HITCHECK = 4;
    public const uint GMD_PLGF_BOOST_CHK_ON_GMK = 8;
    public const uint GMD_PLGF_CAMERA_GMK_X = 16;
    public const uint GMD_PLGF_CAMERA_GMK_Y = 32;
    public const uint GMD_PLGF_CAMERA_GMK_X_FIX = 64;
    public const uint GMD_PLGF_CAMERA_GMK_Y_FIX = 128;
    public const uint GMD_PLGF_BELT = 256;
    public const uint GMD_PLGF_GMK_MAP_LIMIT_LCD_X = 512;
    public const uint GMD_PLGF_GMK_MAP_LIMIT_LCD_Y = 1024;
    public const uint GMD_PLGF_TOUCH_FORCE_DIR = 2048;
    public const uint GMD_PLGF_GMK_WALL = 4096;
    public const uint GMD_PLGF_GMK_NEON_A = 8192;
    public const uint GMD_PLGF_GMK_AIR_JUMP = 16384;
    public const uint GMD_PLGF_GMK_EXMTX_R = 32768;
    public const uint GMD_PLGF_GMK_S_PIPE = 65536;
    public const uint GMD_PLGF_GMK_NO_MAXDASH = 131072;
    public const uint GMD_PLGF_GMK_TRUCK_STICK = 262144;
    public const uint GMD_PLGF_WATER_ALERT = 524288;
    public const uint GMD_PLGF_GMK_TRUCK_L = 1048576;
    public const uint GMD_PLGF_GMK_CREATE = 2097152;
    public const uint GMD_PLGF_GMK_WARP = 4194304;
    public const uint GMD_PLGF_GMK_B = 8388608;
    public const uint GMD_PLGF_GMK_JUMP_PSEUDOFALL_DIR_FIX = 16777216;
    public const uint GMD_PLGF_TOUCH_DISP_FLIP = 33554432;
    public const uint GMD_PLGF_CAMERA_CENTER_OFST = 67108864;
    public const uint GMD_PLGF_MAP_LIMIT_LCD_X = 134217728;
    public const uint GMD_PLGF_MAP_LIMIT_LCD_Y = 268435456;
    public const uint GMD_PLGF_GMK_HOLD_POS_Z = 536870912;
    public const uint GMD_PLGF_GMK_TRUCK_DANGER = 1073741824;
    public const uint GMD_PLGF_GMK_TRUCK_DANGER_RET = 2147483648;
    public const uint GMD_PLGF_STATE_GIMMICK_INIT_CLEAR_MASK = 67354864;
    public const uint GMD_PLGF2_TRUCK_SLOPEFLY_DEC = 1;
    public const uint GMD_PLGF2_BARRIER_DISP_OFF = 2;
    public const uint GMD_PLGF2_INVINCIBLE_DISP_OFF = 4;
    public const uint GMD_PLGF2_TRUCK_R_AREA = 8;
    public const uint GMD_PLGF2_TRUCK_R_AREA_PREV = 16;
    public const uint GMD_PLGF2_TRUCK_CAM_ROT_SLOW = 32;
    public const uint GMD_PLGF2_TRUCK_FALL_DEATH = 64;
    public const uint GMD_PLGF2_SUPEREFCT_DISP_OFF = 128;
    public const uint GMD_PLGF2_TRUCK_JUMP_NO_CAM_ROT = 256;
    public const uint GMD_PLGF2_TRUCK_JUMP_MOVE_ROT = 512;
    public const uint GMD_PLGF2_STATE_GIMMICK_INIT_CLEAR_MASK = 198;
    public const int GMD_PLG_GRAIND_OUTCHECK = 2;
    public const int GMD_PLG_GRAIND_ID_MASK = 63;
    public const int GMD_PLG_GRAIND_RIDE = 128;
    public const int GMD_PLFD_SETMODE = 1;
    public const int GMD_PLFD_MOVEMODE = 2;
    public const int GMD_PLFD_SET_TYPE_SHIFT = 2;
    public const int GMD_PLFD_SET_TYPE_MASK = 12;
    public const int GMD_PLFD_ENESET = 0;
    public const int GMD_PLFD_DECOSET = 4;
    public const int GMD_PLFD_GMKSET = 8;
    public const int GMD_PLFD_ITEMSET = 12;
    public const int GMD_GHOST_TIME = 3150;
    public const int GMD_PLD_TRUCK_SLOPE_FLY_SPD = 16384;
    public const int GMD_PLD_TRUCK_SLOPE_FLY_DIR = 4096;
    public const int GMD_PLD_TRUCK_SLOPE_FLY_SPD_PER = 4096;
    private const int GMD_PLY_SAFE_TOUCH_TIMER = 25;
    private const int GMD_PLY_SAFE_SPIN_TIMER_TURNCHECK = 3;
    private const int GMD_PLY_SAFE_SPIN_TIMER_TURNWAIT = 2;
    private const int GMD_PLY_SAFE_SPIN_TIMER_PULLWAIT = 1;
    public const int GME_OVER_TYPE_GAMEOVER = 0;
    public const int GME_OVER_TYPE_TIMEOVER = 1;
    public const int GME_OVER_TYPE_MAX = 2;
    public const int GMD_OVER_PART_FADEOUT_POS_Z = -65536;
    public const int GMD_OVER_MGR_START_WAIT_TIME = 30;
    public const int GMD_OVER_MGR_GAMEOVER_LOOP_DURATION = 480;
    private const int GME_OVER_PART_TYPE_STRING = 0;
    private const int GME_OVER_PART_TYPE_FADEOUT = 1;
    private const int GME_OVER_PART_TYPE_MAX = 2;
    private const int GME_OVER_PART_TYPE_NONE = -1;
    private const int GME_OVER_TEX_IDX_COMMON = 0;
    private const int GME_OVER_TEX_IDX_STRING = 1;
    private const int GME_OVER_TEX_IDX_MAX = 2;
    private const int GME_OVER_AMA_IDX_COMMON = 0;
    private const int GME_OVER_AMA_IDX_STRING = 1;
    private const int GME_OVER_AMA_IDX_MAX = 2;
    private const int GME_OVER_STRING_SUBPART_GOV_GAME = 0;
    private const int GME_OVER_STRING_SUBPART_GOV_OVER = 1;
    private const int GME_OVER_STRING_SUBPART_TOV_TIME = 2;
    private const int GME_OVER_STRING_SUBPART_TOV_OVER = 3;
    private const int GME_OVER_STRING_SUBPART_MAX = 4;
    private const int GME_OVER_FADEOUT_SUBPART_GOV_FOUT = 0;
    private const int GME_OVER_FADEOUT_SUBPART_TOV_FOUT = 1;
    private const int GME_OVER_FADEOUT_SUBPART_MAX = 2;
    public const int GMD_GMK_SS_RINGGATE_EVE_FLAG_V = 1;
    public const int GMD_GMK_SS_RINGGATE_FLAG_UV_WAIT_UPDATE_SHIFT = 8;
    public const int GMD_GMK_SS_RINGGATE_FLAG_UV_WAIT_UPDATE_MASK = 127;
    public const int GMD_GMK_SS_RINGGATE_FLAG_UV_WAIT_GET_SHIFT = 13;
    public const int GMD_GMK_SS_RINGGATE_FLAG_UV_WAIT_GET_MASK = 3;
    public const int GMD_GMK_SS_GATE_ANIM_LOOP_TIME = 128;
    public const int GMD_GMK_SS_RG_HIT_RECT_X = 52;
    public const int GMD_GMK_SS_RG_HIT_RECT_Y = 20;
    public const int GMD_GMK_SS_RINGGATE_VANISH_TIME = 20;
    public const int GMD_GMK_SS_RINGGATE_MONO_TIME = 8;
    public const float GMD_GMK_SS_RINGGATE_VANISH_ALPHA_RATE = 0.2f;
    public const float GMD_GMK_SS_RINGGATE_VANISH_ALPHA = 4f;
    public const int GMD_GMK_SS_NUM_ID_RING = 0;
    public const int GMD_GMK_SS_NUM_ID_10 = 1;
    public const int GMD_GMK_SS_NUM_ID_1 = 2;
    public const int GMD_GMK_SS_NUM_OFFSET = 36864;
    public const int GMD_GMK_SS_OBL_EVE_FLAG_ROT = 1;
    public const int GMD_GMK_SS_OBLONG_UV_WAIT_FRAME = 3;
    public const int GMD_GMK_SS_OBLONG_UV_NUM = 16;
    private const int GMD_GMK_SS_OBL_MAT_USER_DATA_YELLOW = 0;
    private const int GMD_GMK_SS_OBL_MAT_USER_DATA_OCHER = 1;
    private const int GMD_GMK_SS_OBL_MAT_USER_DATA_ORANGE = 2;
    private const int GMD_GMK_SS_OBL_MAT_USER_DATA_CINNABAR = 3;
    private const int GMD_GMK_SS_OBL_MAT_USER_DATA_END = 4;
    public const int GMD_GMK_SPLRING_GET_NUM = 50;
    public const int GMD_GMK_SPLRING_RECT_LF = -4;
    public const int GMD_GMK_SPLRING_RECT_UP = -4;
    public const int GMD_GMK_SPLRING_RECT_RT = 4;
    public const int GMD_GMK_SPLRING_RECT_DW = 4;
    public const int IDB_GMK_SS_RING_MDL_SS_RING_ZNO = 0;
    public const int IDU0_GMK_SS_RING_MDL_SS_RING_ZNO = 0;
    public const int IDU1_GMK_SS_RING_MDL_SS_RING_ZNO = 0;
    public const string IDS_GMK_SS_RING_MDL_SS_RING_ZNO = "SS_RING.ZNO";
    public const int GMD_GMK_PMARKER_RECT_LEFT = -16;
    public const int GMD_GMK_PMARKER_RECT_RIGHT = 16;
    public const int GMD_GMK_PMARKER_RECT_TOP = -64;
    public const int GMD_GMK_PMARKER_RECT_BOTTOM = 0;
    public const int GMD_GMK_PMARKER_EFFECTIVE_RANGE = 4;
    public const object gmGmkPointMarkerStay_DB_000 = null;
    private const int GME_BOSS5_EXPL_TYPE_SMALL = 0;
    private const int GME_BOSS5_EXPL_TYPE_SMALL_WITH_FRAGS = 1;
    private const int GME_BOSS5_EXPL_TYPE_BIG = 2;
    private const int GME_BOSS5_EXPL_TYPE_MAX = 3;
    private const int GME_BOSS5_ARM_TYPE_LEFT = 0;
    private const int GME_BOSS5_ARM_TYPE_RIGHT = 1;
    private const int GME_BOSS5_ARM_TYPE_MAX = 2;
    private const uint GMD_BOSS5_RECT_ENABLE_FLAG_DEF = 1;
    private const uint GMD_BOSS5_RECT_ENABLE_FLAG_ATK = 2;
    private const uint GMD_BOSS5_RECT_ENABLE_FLAG_BODY = 4;
    private const int GME_BOSS5_BODY_STATE_NOP = 0;
    private const int GME_BOSS5_BODY_STATE_START = 1;
    private const int GME_BOSS5_BODY_STATE_MOVE_NML = 2;
    private const int GME_BOSS5_BODY_STATE_MOVE_FAST_FWD = 3;
    private const int GME_BOSS5_BODY_STATE_MOVE_FAST_BWD = 4;
    private const int GME_BOSS5_BODY_STATE_STOMP_NML = 5;
    private const int GME_BOSS5_BODY_STATE_STOMP_STR = 6;
    private const int GME_BOSS5_BODY_STATE_CRASH = 7;
    private const int GME_BOSS5_BODY_STATE_RPUNCH_NML = 8;
    private const int GME_BOSS5_BODY_STATE_RPUNCH_STR = 9;
    private const int GME_BOSS5_BODY_STATE_BERSERK = 10;
    private const int GME_BOSS5_BODY_STATE_DEFEAT = 11;
    private const int GME_BOSS5_BODY_STATE_MAX = 12;
    private const int GME_BOSS5_BODY_SUB_SEQ_MOVE_FAST_FWD_CRASH = 0;
    private const int GME_BOSS5_BODY_SUB_SEQ_MOVE_FAST_BWD_CRASH = 1;
    private const int GME_BOSS5_BODY_SUB_SEQ_RPUNCH_STR_DMG = 2;
    private const int GME_BOSS5_BODY_SUB_SEQ_MAX = 3;
    private const int GME_BOSS5_BODY_SUB_SEQ_NONE = -1;
    private const int GME_BOSS5_STRAT_STATE_NONE = 0;
    private const int GME_BOSS5_STRAT_STATE_START = 1;
    private const int GME_BOSS5_STRAT_STATE_NML_MOVE_A = 2;
    private const int GME_BOSS5_STRAT_STATE_NML_MOVE_B = 3;
    private const int GME_BOSS5_STRAT_STATE_NML_MOVE_C = 4;
    private const int GME_BOSS5_STRAT_STATE_NML_STOMP_A = 5;
    private const int GME_BOSS5_STRAT_STATE_NML_STOMP_B = 6;
    private const int GME_BOSS5_STRAT_STATE_NML_RPUNCH = 7;
    private const int GME_BOSS5_STRAT_STATE_BERSERK = 8;
    private const int GME_BOSS5_STRAT_STATE_STR_MOVE_A = 9;
    private const int GME_BOSS5_STRAT_STATE_STR_MOVE_B = 10;
    private const int GME_BOSS5_STRAT_STATE_STR_MOVE_C = 11;
    private const int GME_BOSS5_STRAT_STATE_STR_STOMP_A = 12;
    private const int GME_BOSS5_STRAT_STATE_STR_STOMP_B = 13;
    private const int GME_BOSS5_STRAT_STATE_STR_RPUNCH_A = 14;
    private const int GME_BOSS5_STRAT_STATE_STR_RPUNCH_B = 15;
    private const int GME_BOSS5_STRAT_STATE_CRASH = 16;
    private const int GME_BOSS5_STRAT_STATE_MAX = 17;
    private const int GME_BOSS5_PART_IDX_BODY = 0;
    private const int GME_BOSS5_PART_IDX_MAX = 1;
    private const int GME_BOSS5_ACT_ID_START = 0;
    private const int GME_BOSS5_ACT_ID_FW = 1;
    private const int GME_BOSS5_ACT_ID_MOVE_NML = 2;
    private const int GME_BOSS5_ACT_ID_MOVE_NML_ABORT = 3;
    private const int GME_BOSS5_ACT_ID_MOVE_FAST_FWD_PREP = 4;
    private const int GME_BOSS5_ACT_ID_MOVE_FAST_FWD_R_JUMP = 5;
    private const int GME_BOSS5_ACT_ID_MOVE_FAST_FWD_R_AIR = 6;
    private const int GME_BOSS5_ACT_ID_MOVE_FAST_FWD_R_LAND = 7;
    private const int GME_BOSS5_ACT_ID_MOVE_FAST_FWD_L_JUMP = 8;
    private const int GME_BOSS5_ACT_ID_MOVE_FAST_FWD_L_AIR = 9;
    private const int GME_BOSS5_ACT_ID_MOVE_FAST_FWD_L_LAND = 10;
    private const int GME_BOSS5_ACT_ID_MOVE_FAST_BWD_PREP = 11;
    private const int GME_BOSS5_ACT_ID_MOVE_FAST_BWD_R_JUMP = 12;
    private const int GME_BOSS5_ACT_ID_MOVE_FAST_BWD_R_AIR = 13;
    private const int GME_BOSS5_ACT_ID_MOVE_FAST_BWD_R_LAND = 14;
    private const int GME_BOSS5_ACT_ID_MOVE_FAST_BWD_L_JUMP = 15;
    private const int GME_BOSS5_ACT_ID_MOVE_FAST_BWD_L_AIR = 16;
    private const int GME_BOSS5_ACT_ID_MOVE_FAST_BWD_L_LAND = 17;
    private const int GME_BOSS5_ACT_ID_MOVE_FAST_FWD_CRASH = 18;
    private const int GME_BOSS5_ACT_ID_MOVE_FAST_BWD_CRASH = 19;
    private const int GME_BOSS5_ACT_ID_MOVE_FAST_RECOVER = 20;
    private const int GME_BOSS5_ACT_ID_STOMP_IGNITE = 21;
    private const int GME_BOSS5_ACT_ID_STOMP_HOVER = 22;
    private const int GME_BOSS5_ACT_ID_STOMP_FLYUP = 23;
    private const int GME_BOSS5_ACT_ID_STOMP_FALL = 24;
    private const int GME_BOSS5_ACT_ID_STOMP_LAND = 25;
    private const int GME_BOSS5_ACT_ID_CRASH_PREP = 26;
    private const int GME_BOSS5_ACT_ID_CRASH_HOVER = 27;
    private const int GME_BOSS5_ACT_ID_CRASH_FLYUP = 28;
    private const int GME_BOSS5_ACT_ID_CRASH_FALL = 29;
    private const int GME_BOSS5_ACT_ID_CRASH_LAND = 30;
    private const int GME_BOSS5_ACT_ID_CRASH_SINK = 31;
    private const int GME_BOSS5_ACT_ID_RPUNCH_PREP = 32;
    private const int GME_BOSS5_ACT_ID_RPUNCH_LAUNCH_FIRST = 33;
    private const int GME_BOSS5_ACT_ID_RPUNCH_LAUNCH_SECOND = 34;
    private const int GME_BOSS5_ACT_ID_RPUNCH_RETURN = 35;
    private const int GME_BOSS5_ACT_ID_RPC_STR_DMG_START = 36;
    private const int GME_BOSS5_ACT_ID_RPC_STR_DMG_LOOP = 37;
    private const int GME_BOSS5_ACT_ID_RPC_STR_DMG_RECOVER = 38;
    private const int GME_BOSS5_ACT_ID_BERSERK_BREAKDOWN = 39;
    private const int GME_BOSS5_ACT_ID_BERSERK_SHAKE = 40;
    private const int GME_BOSS5_ACT_ID_BERSERK_ROAR_PREP = 41;
    private const int GME_BOSS5_ACT_ID_BERSERK_ROAR_START = 42;
    private const int GME_BOSS5_ACT_ID_BERSERK_ROAR_LOOP = 43;
    private const int GME_BOSS5_ACT_ID_BERSERK_STAMP = 44;
    private const int GME_BOSS5_ACT_ID_BERSERK_KICKUP = 45;
    private const int GME_BOSS5_ACT_ID_MAX = 46;
    private const int GME_BOSS5_BODY_MOVE_PHASE_TYPE_NONE = 0;
    private const int GME_BOSS5_BODY_MOVE_PHASE_TYPE_LEFT = 1;
    private const int GME_BOSS5_BODY_MOVE_PHASE_TYPE_RIGHT = 2;
    private const int GME_BOSS5_BODY_MOVE_PHASE_TYPE_MAX = 3;
    private const int GME_BOSS5_BODY_RUN_TYPE_LEFT = 0;
    private const int GME_BOSS5_BODY_RUN_TYPE_RIGHT = 1;
    private const int GME_BOSS5_BODY_RUN_TYPE_MAX = 2;
    private const int GME_BOSS5_ARMPART_IDX_SHOULDER = 0;
    private const int GME_BOSS5_ARMPART_IDX_ELBOW = 1;
    private const int GME_BOSS5_ARMPART_IDX_FOREARM = 2;
    private const int GME_BOSS5_ARMPART_IDX_MAX = 3;
    private const int GME_BOSS5_LEG_TYPE_LEFT = 0;
    private const int GME_BOSS5_LEG_TYPE_RIGHT = 1;
    private const int GME_BOSS5_LEG_TYPE_MAX = 2;
    private const int GME_BOSS5_NOZZLE_TYPE_LEFT = 0;
    private const int GME_BOSS5_NOZZLE_TYPE_RIGHT = 1;
    private const int GME_BOSS5_NOZZLE_TYPE_MAX = 2;
    private const int GME_BOSS5_BODY_RECTPOINT_LEFT_FOOT = 0;
    private const int GME_BOSS5_BODY_RECTPOINT_RIGHT_FOOT = 1;
    private const int GME_BOSS5_BODY_RECTPOINT_SUB_NUM = 2;
    private const int GME_BOSS5_BODY_RECTPOINT_BODY = 2;
    private const int GME_BOSS5_BODY_RECTPOINT_MAX = 3;
    private const int GME_BOSS5_SCT_PART_IDX_SHOULDER_L = 0;
    private const int GME_BOSS5_SCT_PART_IDX_SHOULDER_R = 1;
    private const int GME_BOSS5_SCT_PART_IDX_GROIN_L = 2;
    private const int GME_BOSS5_SCT_PART_IDX_GROIN_R = 3;
    private const int GME_BOSS5_SCT_PART_IDX_ELBOW_L = 4;
    private const int GME_BOSS5_SCT_PART_IDX_ELBOW_R = 5;
    private const int GME_BOSS5_SCT_PART_IDX_FOREARM_L = 6;
    private const int GME_BOSS5_SCT_PART_IDX_FOREARM_R = 7;
    private const int GME_BOSS5_SCT_PART_IDX_THIGH_L = 8;
    private const int GME_BOSS5_SCT_PART_IDX_THIGH_R = 9;
    private const int GME_BOSS5_SCT_PART_IDX_KNEE_L = 10;
    private const int GME_BOSS5_SCT_PART_IDX_KNEE_R = 11;
    private const int GME_BOSS5_SCT_PART_IDX_KNEEPAD_L = 12;
    private const int GME_BOSS5_SCT_PART_IDX_KNEEPAD_R = 13;
    private const int GME_BOSS5_SCT_PART_IDX_FOOTCOVER_L = 14;
    private const int GME_BOSS5_SCT_PART_IDX_FOOTCOVER_R = 15;
    private const int GME_BOSS5_SCT_PART_IDX_FOOT_L = 16;
    private const int GME_BOSS5_SCT_PART_IDX_FOOT_R = 17;
    private const int GME_BOSS5_SCT_PART_IDX_TOE_L = 18;
    private const int GME_BOSS5_SCT_PART_IDX_TOE_R = 19;
    private const int GME_BOSS5_SCT_PART_IDX_HEEL_L = 20;
    private const int GME_BOSS5_SCT_PART_IDX_HEEL_R = 21;
    private const int GME_BOSS5_SCT_PART_IDX_MAX = 22;
    private const int GMD_BOSS5_VIB_PHASE_NUM = 40;
    private const uint GMD_BOSS5_MGR_FLAG_SETUP_END = 1;
    private const uint GMD_BOSS5_MGR_FLAG_CLEAR_BOSS = 2;
    private const uint GMD_BOSS5_MGR_FLAG_REQUEST_STRONG_MODE = 4;
    private const uint GMD_BOSS5_MGR_FLAG_STRONG_MODE = 8;
    private const uint GMD_BOSS5_MGR_FLAG_CAMERA_OFST_SAVED = 16;
    private const uint GMD_BOSS5_MGR_FLAG_ALARM_FADE_ACTIVE = 32;
    private const uint GMD_BOSS5_MGR_FLAG_CAMERA_SLIDE_NEEDED = 524288;
    private const uint GMD_BOSS5_MGR_FLAG_CAMERA_SLIDE_STARTED = 1048576;
    private const uint GMD_BOSS5_MGR_FLAG_BODY_STOOD_BY = 2097152;
    private const uint GMD_BOSS5_MGR_FLAG_PLY_PASSED_TRG = 4194304;
    private const uint GMD_BOSS5_MGR_FLAG_CTPLT_STORE_NEEDED = 8388608;
    private const uint GMD_BOSS5_MGR_FLAG_CTPLT_IS_STORED = 16777216;
    private const uint GMD_BOSS5_MGR_FLAG_BODY_DEMO_IS_FINISHED = 33554432;
    private const uint GMD_BOSS5_MGR_FLAG_LAND_NEEDED = 67108864;
    private const uint GMD_BOSS5_MGR_FLAG_BODY_DEFEAT = 134217728;
    private const uint GMD_BOSS5_MGR_FLAG_CHASING_EXPL_NEEDED = 268435456;
    private const uint GMD_BOSS5_MGR_FLAG_LAND_SHAKE_NEEDED = 536870912;
    private const uint GMD_BOSS5_MGR_FLAG_LAND_BREAK_NEEDED = 1073741824;
    private const uint GMD_BOSS5_MGR_FLAG_LAST_FADE_END = 2147483648;
    private const uint GMD_BOSS5_BODY_FLAG_INVINCIBLE = 1;
    private const uint GMD_BOSS5_BODY_FLAG_TARGET_ON = 2;
    private const uint GMD_BOSS5_BODY_FLAG_HIDE_ARM_L = 4;
    private const uint GMD_BOSS5_BODY_FLAG_HIDE_ARM_R = 8;
    private const uint GMD_BOSS5_BODY_FLAG_USE_RKT_OFST = 16;
    private const uint GMD_BOSS5_BODY_FLAG_NO_HIT_TIME_COUNTING = 32;
    private const uint GMD_BOSS5_BODY_FLAG_IS_POKING = 64;
    private const uint GMD_BOSS5_BODY_FLAG_POKE_TRG_TIME_LMT_COUNTING = 128;
    private const uint GMD_BOSS5_BODY_FLAG_RKT_CNCT_ATK_ACTIVE = 256;
    private const uint GMD_BOSS5_BODY_FLAG_HOLD_VULCAN = 512;
    private const uint GMD_BOSS5_BODY_FLAG_TURRET_ACTIVE = 1024;
    private const uint GMD_BOSS5_BODY_FLAG_LEAKAGE_ACTIVE = 2048;
    private const uint GMD_BOSS5_BODY_FLAG_LEAKAGE_NEEDED = 4096;
    private const uint GMD_BOSS5_BODY_FLAG_DENY_HOMING_ATK = 8192;
    private const uint GMD_BOSS5_BODY_FLAG_JET_ACTIVE = 16384;
    private const uint GMD_BOSS5_BODY_FLAG_JETSMOKE_ACTIVE = 32768;
    private const uint GMD_BOSS5_BODY_FLAG_FINAL_MODE = 65536;
    private const uint GMD_BOSS5_BODY_FLAG_CRASH_SUCCESS = 131072;
    private const uint GMD_BOSS5_BODY_FLAG_RKT_SCATTER_NEEDED = 262144;
    private const uint GMD_BOSS5_BODY_FLAG_SCT_FALL_ACTIVE = 524288;
    private const uint GMD_BOSS5_BODY_FLAG_PRELIM_LEAKAGE_ACTIVE = 1048576;
    private const uint GMD_BOSS5_BODY_FLAG_LAST_BIG_EXPL_CREATED = 2097152;
    private const uint GMD_BOSS5_BODY_FLAG_SIGNAL_B2B_DEFEAT = 4194304;
    private const uint GMD_BOSS5_BODY_FLAG_SIGNAL_B2B_POKE = 8388608;
    private const uint GMD_BOSS5_BODY_FLAG_SIGNAL_E2B_EGG_GOT_IN = 16777216;
    private const uint GMD_BOSS5_BODY_FLAG_SIGNAL_R2B_RETURNED_R = 33554432;
    private const uint GMD_BOSS5_BODY_FLAG_SIGNAL_R2B_RETURNED_L = 67108864;
    private const uint GMD_BOSS5_BODY_FLAG_SIGNAL_B2R_LAUNCH_R = 134217728;
    private const uint GMD_BOSS5_BODY_FLAG_SIGNAL_B2R_LAUNCH_L = 268435456;
    private const uint GMD_BOSS5_BODY_FLAG_SIGNAL_B2R_RETURN_R = 536870912;
    private const uint GMD_BOSS5_BODY_FLAG_SIGNAL_B2R_RETURN_L = 1073741824;
    private const uint GMD_BOSS5_BODY_FLAG_SIGNAL_B2B_BODY_DAMAGE = 2147483648;
    private const int GMD_BOSS5_BODY_PLY_SEARCH_HIST_NUM = 11;
    private const int GMD_BOSS5_BODY_CRASH_POINT_A_POS_OFST_X = -1048576;
    private const int GMD_BOSS5_BODY_CRASH_POINT_B_POS_OFST_X = 0;
    private const int GMD_BOSS5_BODY_CRASH_POINT_C_POS_OFST_X = 1048576;
    private const int GMD_BOSS5_SCT_SPIN_AXIS_NUM = 2;
    private const int GMD_BOSS5_SCT_PART_FLY_DELETE_TIME = 180;
    private const uint GMD_BOSS5_SCT_ARM_FLY_DELAY_LEFT = 10;
    private const uint GMD_BOSS5_SCT_ARM_FLY_DELAY_RIGHT = 30;
    private const uint GMD_BOSS5_SCT_LEG_FLY_DELAY_LEFT = 80;
    private const uint GMD_BOSS5_SCT_LEG_FLY_DELAY_RIGHT = 90;
    public const int GMD_BOSS5_ARM_POKE_ANIM_PHASE_NUM = 9;
    public const int GMD_BOSS5_BODY_POKE_TRIGGER_LIMIT_TIME = 120;
    public const int GMD_BOSS5_BODY_WALK_MOVE_PHASE_NUM = 4;
    public const int GMD_BOSS5_BODY_WALK_GROUND_TIMING_PAHSE_NUM = 5;
    public const int GMD_BOSS5_BODY_RUN_DURATION_TIME = 360;
    public const int GMD_BOSS5_BODY_RPC_STR_DMG_SWING_TIME = 240;
    public const int GMD_BOSS5_FLASH_SCREEN_DURATION_TIME = 5;
    public const int GMD_BOSS5_FLASH_SCREEN_FADEIN_TIME = 30;
    public const int GMD_BOSS5_LAST_FADE_OUT_FRAME = 300;
    public const int GMD_BOSS5_SCT_NDC_NUM = 6;
    public const uint GMD_BOSS5_BODY_STRAT_BRANCH_NUM = 3;
    private const int GME_BOSS5_BODY_STRAT_BRANCH_NML_A = 0;
    private const int GME_BOSS5_BODY_STRAT_BRANCH_NML_B = 1;
    private const int GME_BOSS5_BODY_STRAT_BRANCH_STR_A = 2;
    private const int GME_BOSS5_BODY_STRAT_BRANCH_STR_B = 3;
    private const int GME_BOSS5_BODY_STRAT_BRANCH_MAX = 4;
    private const int GME_BOSS5_BODY_DIRECTION_TYPE_LEFT = 0;
    private const int GME_BOSS5_BODY_DIRECTION_TYPE_RIGHT = 1;
    private const int GME_BOSS5_BODY_DIRECTION_TYPE_NEAR = 2;
    private const int GME_BOSS5_BODY_DIRECTION_TYPE_MAX = 3;
    private const int GME_BOSS5_BODY_RECT_SETTING_DEFAULT_NML = 0;
    private const int GME_BOSS5_BODY_RECT_SETTING_DEFAULT_STR = 1;
    private const int GME_BOSS5_BODY_RECT_SETTING_START = 2;
    private const int GME_BOSS5_BODY_RECT_SETTING_STOMP_NML_FALL = 3;
    private const int GME_BOSS5_BODY_RECT_SETTING_STOMP_STR_FALL = 4;
    private const int GME_BOSS5_BODY_RECT_SETTING_CRASH_FALL = 5;
    private const int GME_BOSS5_BODY_RECT_SETTING_CRASH_GROUND = 6;
    private const int GME_BOSS5_BODY_RECT_SETTING_CRASH_SINK = 7;
    private const int GME_BOSS5_BODY_RECT_SETTING_RPC_STR_DMG = 8;
    private const int GME_BOSS5_BODY_RECT_SETTING_BERSERK_START = 9;
    private const int GME_BOSS5_BODY_RECT_SETTING_DEFEAT = 10;
    private const int GME_BOSS5_BODY_RECT_SETTING_MAX = 11;
    private const int GME_BOSS5_BODY_BSK_TURN_TYPE_FRONT = 0;
    private const int GME_BOSS5_BODY_BSK_TURN_TYPE_RETURN = 1;
    private const int GME_BOSS5_BODY_BSK_TURN_TYPE_MAX = 2;
    private const int GME_BOSS5_ALARM_FADE_PHASE_NONE = 0;
    private const int GME_BOSS5_ALARM_FADE_PHASE_FADE_OUT = 1;
    private const int GME_BOSS5_ALARM_FADE_PHASE_STAY_ON = 2;
    private const int GME_BOSS5_ALARM_FADE_PHASE_FADE_IN = 3;
    private const int GME_BOSS5_ALARM_FADE_PHASE_STAY_OFF = 4;
    private const int GME_BOSS5_ALARM_FADE_PHASE_MAX = 5;
    private const int GME_BOSS5_VIB_IDX_WALK_STEP = 0;
    private const int GME_BOSS5_VIB_IDX_RUN_STEP = 1;
    private const int GME_BOSS5_VIB_IDX_BERSERK_STAMP = 2;
    private const int GME_BOSS5_VIB_IDX_STOMP_LANDING = 3;
    private const int GME_BOSS5_VIB_IDX_CRASH_LANDING = 4;
    private const int GME_BOSS5_VIB_IDX_CRASH_STRIKE = 5;
    private const int GME_BOSS5_VIB_IDX_MAX = 6;
    private const int GME_BOSS5_ALARM_LEVEL_STRONG = 0;
    private const int GME_BOSS5_ALARM_LEVEL_CRASH = 1;
    private const int GME_BOSS5_ALARM_LEVEL_MAX = 2;
    public const int FX32_SHIFT = 12;
    public const int FX32_INT_SIZE = 19;
    public const int FX32_DEC_SIZE = 12;
    public const uint FX32_INT_MASK = 2147479552;
    public const uint FX32_DEC_MASK = 4095;
    public const uint FX32_SIGN_MASK = 2147483648;
    public const int FX32_MAX = 2147483647;
    public const int FX32_MIN = -2147483648;
    public const int FX64_SHIFT = 12;
    public const int FX64_INT_SIZE = 51;
    public const int FX64_DEC_SIZE = 12;
    public const long FX64_INT_MASK = 9223372036854771712;
    public const long FX64_DEC_MASK = 4095;
    public const long FX64_SIGN_MASK = -9223372036854775808;
    public const long FX64_MAX = 9223372036854775807;
    public const long FX64_MIN = -9223372036854775808;
    public const int FX64C_SHIFT = 32;
    public const int FX64C_INT_SIZE = 31;
    public const int FX64C_DEC_SIZE = 32;
    public const long FX64C_INT_MASK = 9223372032559808512;
    public const long FX64C_DEC_MASK = 4294967295;
    public const long FX64C_SIGN_MASK = -9223372036854775808;
    public const long FX64C_MAX = 9223372036854775807;
    public const long FX64C_MIN = -9223372036854775808;
    public const int FX16_SHIFT = 12;
    public const int FX16_INT_SIZE = 3;
    public const int FX16_DEC_SIZE = 12;
    public const short FX16_INT_MASK = 28672;
    public const short FX16_DEC_MASK = 4095;
    public const short FX16_SIGN_MASK = -32768;
    public const short FX16_MAX = 32767;
    public const short FX16_MIN = -32768;
    public const long FX64C_ONE = 4294967296;
    public const long FX64C_HALF = 2147483648;
    public const int FX32_ONE = 4096;
    public const int FX32_HALF = 2048;
    public const int FX32_SQRT2 = 5793;
    public const int FX32_SQRT1_2 = 2896;
    public const int FX32_SQRT3 = 7094;
    public const int FX32_SQRT1_3 = 2365;
    public const short FX16_ONE = 4096;
    public const short FX16_HALF = 2048;
    public const short FX16_SQRT2 = 5793;
    public const short FX16_SQRT1_2 = 2896;
    public const short FX16_SQRT3 = 7094;
    public const short FX16_SQRT1_3 = 2365;
    public const int FX_DIV_SHIFT = 20;
    public const int FX_DIV_1_2 = 524288;
    public const int FX_SQRT_SHIFT = 10;
    public const int FX_SQRT_1_2 = 512;
    public const int DMD_TITLE_TASK_PAUSELEVEL = 0;
    public const int DMD_TITLE_TASK_PRIO_MAIN = 8192;
    public const int DMD_TITLE_TASK_GROUP_MAIN = 10;
    public const int DMD_TITLE_DRAW_PRIO_ACT = 33792;
    public const int DMD_TITLE_DRAW_PRIO_WIN = 34816;
    public const int DMD_TITLE_DRAW_PRIO_WIN_FIX = 35840;
    public const int DMD_TITLE_FILE_PATH_NUM_MAX = 60;
    public const int DMD_TITLE_IDLE_DISP_TIME = 40;
    public const int DMD_TITLE_IDLE_NONE_TIME = 30;
    public const int DMD_TITLE_DECIDE_EFCT_TIME = 60;
    public const int DMD_TITLE_DECIDE_BLINK_TIME = 4;
    public const int DMD_TITLE_AMA_DATA_ARC_ID = 0;
    public const int DMD_TITLE_AMB_DATA_ARC_ID = 1;
    public const float DMD_TITLE_CRSR_DFLT_POS_X = 304f;
    public const int DMD_TITLE_SLCT_MENU_NUM_FIRST = 3;
    public const int DMD_TITLE_SLCT_MENU_NUM_PLAYED = 3;
    public const int DMD_TITLE_SLCT_MENU_NUM_TRIAL = 3;
    public const float DMD_TITLE_CRSR_MOVE_TIME = 8f;
    public const int DMD_TITLE_DRAW_STATE_ID = 10;
    public const float DMD_TITLE_SIZE_WIDTH = 960f;
    public const float DMD_TITLE_SIZE_HEIGHT = 720f;
    public const float DMD_TITLE_SIZE_HALF_WIDTH = 480f;
    public const float DMD_TITLE_SIZE_HALF_HEIGHT = 360f;
    public const float DMD_TITLE_WIN_EFCT_TIME = 8f;
    public const float DMD_TITLE_WINDOW_SIZE_W = 420f;
    public const float DMD_TITLE_WINDOW_SIZE_H = 180f;
    public const float DMD_TITLE_WIN_DEF_RATE = 1f;
    public const float DMD_TITLE_DISP_SCALE_TEXT = 1.6875f;
    public const float DMD_TITLE_MMENU_WIN_SIZE_W = 800f;
    public const float DMD_TITLE_MMENU_WIN_SIZE_H = 540f;
    public const float DMD_TITLE_MMENU_WIN_SIZE_W_2 = 800f;
    public const float DMD_TITLE_MMENU_WIN_SIZE_H_2 = 360f;
    public const int DMD_TITLE_PUSH_START_DISP_TIME = 3600;
    public const int DMD_TITLE_END_GAME_WAIT_TIME = 60;
    public const float DMD_TITLE_FADEIN_TIME = 32f;
    public const float DMD_TITLE_FADEOUT_TIME = 32f;
    public const int DMD_TITLE_BGM_FADEIN_TIME = 32;
    public const int DMD_TITLE_BGM_FADEOUT_TIME = 32;
    public const int DMD_TITLE_FLAG_EXIT = 1;
    public const uint DMD_TITLE_FLAG_CANCEL = 2;
    public const uint DMD_TITLE_FLAG_DECIDE = 4;
    public const uint DMD_TITLE_FLAG_DISP_TEXT = 8;
    public const uint DMD_TITLE_FLAG_DECIDE_EFCT = 16;
    public const uint DMD_TITLE_FLAG_GAME_START = 32;
    public const uint DMD_TITLE_FLAG_MENU_UP_INPUT = 64;
    public const uint DMD_TITLE_FLAG_MENU_DOWN_INPUT = 128;
    public const uint DMD_TITLE_FLAG_MENU_CRSR_EFCT = 256;
    public const uint DMD_TITLE_FLAG_DISP_TITLE = 512;
    public const uint DMD_TITLE_FLAG_DISP_MAINMENU = 1024;
    public const uint DMD_TITLE_FLAG_BUY_COMP = 2048;
    public const uint DMD_TITLE_FLAG_EXIST_SAVE_DATA = 4096;
    public const uint DMD_TITLE_FLAG_BACK_DEL_SAVE = 8192;
    public const uint DMD_TITLE_FLAG_DEL_SAVE_DATA = 16384;
    public const uint DMD_TITLE_FLAG_NEW_GAME_START = 32768;
    public const uint DMD_TITLE_FLAG_WIN_EFCT_END = 65536;
    public const uint DMD_TITLE_FLAG_WIN_DRAW_START = 131072;
    public const uint DMD_TITLE_FLAG_COMP_NO_DISP_END = 262144;
    public const uint DMD_TITLE_FLAG_DEMO_SND_END = 524288;
    public const uint DMD_TITLE_FLAG_DISP_LOOP_END = 1048576;
    public const uint DMD_TITLE_FLAG_DISP_MMENU_WIN = 2097152;
    public const uint DMD_TITLE_FLAG_MMENU_WIN_EFCT_END = 4194304;
    public const uint DMD_TITLE_FLAG_DEL_DATA_BACK_TITLE = 8388608;
    public const uint DMD_TITLE_FLAG_DEL_DATA_BACK_MMENU = 16777216;
    public const uint DMD_TITLE_FLAG_DEL_DATA_INIT_START = 33554432;
    public const uint DMD_TITLE_FLAG_DEL_DATA_GAME_END = 67108864;
    public const uint DME_TITLE_FLAG_NEXT_EVT_TITLE = 1073741824;
    public const uint DMD_TITLE_FLAG_SIGN_OUT_EXIT = 2147483648;
    public const uint DMD_TITLE_DISP_FLAG_WIN_ACT = 1;
    public const uint DMD_TITLE_DISP_FLAG_ALL_ACTION = 2;
    public const int DME_SND_BGM_PLAYER_IDX_MENU = 0;
    public const int DME_SND_BGM_PLAYER_IDX_TITLE = 1;
    public const int DME_SND_BGM_PLAYER_IDX_MAX = 2;
    public const int DMD_SND_BGM_PLAYER_TASK_PAUSELEVEL = 0;
    public const int DMD_SND_BGM_PLAYER_TASK_PRIO_MAIN = 4096;
    public const int DMD_SND_BGM_PLAYER_TASK_GROUP_MAIN = 0;
    public const int DMD_SND_BGM_PLAYER_BGM_FADEIN_TIME = 32;
    public const int DMD_SND_BGM_PLAYER_BGM_FADEOUT_TIME = 24;
    public const uint DMD_SND_BGM_PLAYER_FLAG_EXIT = 1;
    public const uint DMD_SND_BGM_PLAYER_FLAG_CANCEL = 2;
    public const uint DMD_SND_BGM_PLAYER_FLAG_FINISH_BGM = 4;
    public const uint DMD_SND_BGM_PLAYER_FLAG_STOP_BGM = 8;
    public const uint DMD_SND_BGM_PLAYER_FLAG_SET_TITLE_BGM = 16;
    public const uint DMD_SND_BGM_PLAYER_FLAG_SET_MENU_BGM = 32;
    public const uint DMD_SND_BGM_PLAYER_FLAG_CHANGE_TITLE_BGM = 64;
    public const uint DMD_SND_BGM_PLAYER_FLAG_CHANGE_MENU_BGM = 128;
    public const int DMD_OPT_TASK_PAUSELEVEL = 32767;
    public const int DMD_OPT_TASK_PRIO_MAIN = 8192;
    public const int DMD_OPT_TASK_GROUP_MAIN = 10;
    public const int DMD_OPT_FILE_PATH_NUM_MAX = 60;
    public const int DMD_OPT_DRAW_PRIO_TOP_MENU = 8192;
    public const int DMD_OPT_DRAW_PRIO_SET_MENU = 8192;
    public const int DMD_OPT_DRAW_PRIO_CTRL_MENU = 8192;
    public const int DMD_OPT_DRAW_PRIO_BG = 4096;
    public const int DMD_OPT_DRAW_PRIO_FIX = 12288;
    public const int DMD_OPT_DRAW_PRIO_WIN = 12288;
    public const int DMD_OPT_DRAW_PRIO_WIN_FIX = 16384;
    public const int DMD_OPT_TOP_MENU_ROW_MAX = 2;
    public const int DMD_OPT_SAVE_FILE_NUM = 6;
    public const int DMD_OPT_FILE_POS_NUM = 4;
    public const int DMD_OPT_CRSR_POS_NUM = 3;
    public const int DMD_OPT_SET_TEX_NUM = 3;
    public const int DMD_OPT_VOL_DATA_MAX = 10;
    public const int DMD_OPT_DRAW_STATE_ID = 0;
    public const int DMD_OPT_BGM_FADEIN_TIME = 32;
    public const int DMD_OPT_BGM_FADEOUT_TIME = 32;
    public const int DMD_OPT_ACT_VRTCL_CHNG_NUM = 3;
    public const float DMD_OPT_STAGE_TAB_NODISP_POS_X = 1120f;
    public const float DMD_OPT_CTRL_MENU_CTRLR_POS_X = 720f;
    public const float DMD_OPT_CTRL_MENU_CTRLR_POS_Y = 384f;
    public const float DMD_OPT_WINDOW_SIZE_W = 840f;
    public const float DMD_OPT_WINDOW_SIZE_H = 400f;
    public const float DMD_OPT_WIN_DEF_RATE = 1f;
    public const float DMD_OPT_FADEIN_TIME = 32f;
    public const float DMD_OPT_FADEOUT_TIME = 32f;
    public const float DMD_OPT_SIZE_WIDTH = 960f;
    public const float DMD_OPT_SIZE_HEIGHT = 720f;
    public const float DMD_OPT_SIZE_HALF_WIDTH = 480f;
    public const float DMD_OPT_SIZE_HALF_HEIGHT = 360f;
    public const float DMD_OPT_TOP_MENU_DIST_X = 480f;
    public const float DMD_OPT_TOP_MENU_DIST_Y = 220f;
    public const float DMD_OPT_TOP_MENU_TOP_POS_X = 240f;
    public const float DMD_OPT_TOP_MENU_TOP_POS_Y = 250f;
    public const float DMD_OPT_FOCUS_FILE_CHNG_TIME = 16f;
    public const float DMD_OPT_IN_EFCT_START_POS = 720f;
    public const float DMD_OPT_IN_EFCT_TIME = 32f;
    public const float DMD_OPT_OUT_EFCT_END_POS = 720f;
    public const float DMD_OPT_OUT_EFCT_TIME = 32f;
    public const float DMD_OPT_WIN_EFCT_TIME = 8f;
    public const float DMD_OPT_OBI_MOVE_START_POS = 1120f;
    public const float DMD_OPT_OBI_MOVE_END_POS = -1120f;
    public const float DMD_OPT_OBI_MOVE_SPEED = -3f;
    public const float DMD_OPT_OBI_EFCT_TIME = 16f;
    public const float DMD_OPT_OBI_NODISP_POS_Y = 192f;
    public const float DMD_OPT_OBI_DISP_POS_Y = 0.0f;
    public const float DMD_OPT_ACT_VRTCL_CHNG_DIST = 128f;
    public const float DMD_OPT_CRSR_MOVE_TIME = 8f;
    public const float DMD_OPT_DECIDE_EFCT_UP_TIME = 8f;
    public const float DMD_OPT_DECIDE_EFCT_DOWN_TIME = 8f;
    public const float DMD_OPT_DECIDE_EFCT_WAIT_TIME = 28f;
    public const float DMD_OPT_DECIDE_EFCT_END_UP_POS = -960f;
    public const float DMD_OPT_DECIDE_EFCT_END_DOWN_POS = 720f;
    public const float DMD_OPT_DECIDE_FADE_COL_MAX = 255f;
    public const float DMD_OPT_DECIDE_FADE_COL_MIN = 0.0f;
    public const float DMD_OPT_NRML_CTRL_WAIT_EFCT_TIME = 120f;
    public const float DMD_OPT_PUSH_DFLT_BTN_EFCT_DIST = 4f;
    public const float DMD_OPT_SETTING_CONTROL_WINDOW_SIZE_W = 800f;
    public const float DMD_OPT_SETTING_CONTROL_WINDOW_SIZE_H = 600f;
    public const uint DMD_OPT_FLAG_EXIT = 1;
    public const uint DMD_OPT_FLAG_CANCEL = 2;
    public const uint DMD_OPT_FLAG_DECIDE = 4;
    public const uint DMD_OPT_FLAG_DISP_MENU = 8;
    public const uint DMD_OPT_FLAG_DECIDE_EFCT = 16;
    public const uint DMD_OPT_FLAG_CHNG_CTRL = 32;
    public const uint DMD_OPT_FLAG_UP_CHNG_CRSR = 64;
    public const uint DMD_OPT_FLAG_DOWN_CHNG_CRSR = 128;
    public const uint DMD_OPT_FLAG_OPEN_SSONIC = 256;
    public const uint DMD_OPT_FLAG_NO_CHNG_CTRL = 512;
    public const uint DMD_OPT_FLAG_PUSH_DFLT_BTN = 1024;
    public const uint DMD_OPT_FLAG_WIN_EFCT_END = 2048;
    public const uint DMD_OPT_FLAG_BGM_UP_EFCT = 4096;
    public const uint DMD_OPT_FLAG_BGM_DOWN_EFCT = 8192;
    public const uint DMD_OPT_FLAG_SE_UP_EFCT = 16384;
    public const uint DMD_OPT_FLAG_SE_DOWN_EFCT = 32768;
    public const uint DMD_OPT_FLAG_MENU_CRSR_EFCT = 262144;
    public const uint DMD_OPT_FLAG_CHNG_STAFFROLL = 524288;
    public const uint DMD_OPT_FLAG_DEMO_SND_END = 1048576;
    public const uint DMD_OPT_FLAG_SIGN_OUT_EXIT = 2147483648;
    public const uint DMD_OPT_FLAG_SETTING_CONTROL_WINDOW = 16777216;
    public const uint DMD_OPT_DISP_FLAG_WIN_ACT = 1;
    public const uint DMD_OPT_DISP_FLAG_TB_ARROW = 2;
    public const uint DMD_OPT_DISP_FLAG_ACT_CRSR = 4;
    public const uint DMD_OPT_DISP_FLAG_OBI_TEX = 8;
    public const int DME_OPT_NEXT_EVT_STAFFROLL = 0;
    public const int DME_OPT_NEXT_EVT_TITLE = 1;
    public const int DME_OPT_NEXT_EVT_MAX = 2;
    public const int DME_OPT_DATA_TYPE_CMN_DATA = 0;
    public const int DME_OPT_DATA_TYPE_LANG_DATA = 1;
    public const int DME_OPT_DATA_TYPE_MAX = 2;
    public const int DME_OPT_DATA_TYPE_NONE = 3;
    public const int DME_OPT_MENU_STATE_TOP = 0;
    public const int DME_OPT_MENU_STATE_CTRL = 1;
    public const int DME_OPT_MENU_STATE_SET = 2;
    public const int DME_OPT_MENU_STATE_NUM = 3;
    public const int DME_OPT_MENU_STATE_NONE = 4;
    public const int DME_OPT_TOP_MENU_1 = 0;
    public const int DME_OPT_TOP_MENU_2 = 1;
    public const int DME_OPT_TOP_MENU_3 = 2;
    public const int DME_OPT_TOP_MENU_4 = 3;
    public const int DME_OPT_TOP_MENU_NUM = 4;
    public const int DME_OPT_TOP_MENU_NONE = 5;
    public const int DME_OPT_SET_MENU_BGM = 0;
    public const int DME_OPT_SET_MENU_SE = 1;
    public const int DME_OPT_SET_MENU_DEFAULT = 2;
    public const int DME_OPT_SET_MENU_NUM = 3;
    public const int DME_OPT_SET_MENU_NONE = 4;
    public const int DME_OPT_CTRL_VBRT_ON = 0;
    public const int DME_OPT_CTRL_VBRT_OFF = 1;
    public const int DME_OPT_CTRL_VBRT_NUM = 2;
    public const int DME_OPT_CTRL_VBRT_NONE = 3;
    public const int DME_OPT_CTRL_MENU_NORMAL = 0;
    public const int DME_OPT_CTRL_MENU_CLASSIC = 1;
    public const int DME_OPT_CTRL_MENU_NUM = 2;
    public const int DME_OPT_CTRL_MENU_NONE = 3;
    private const int ACT_TAB_TITLE1 = 0;
    private const int ACT_BACK_BTN01_L = 1;
    private const int ACT_BACK_BTN01_R = 2;
    private const int ACT_TAB_SELECT = 3;
    private const int ACT_TAB_SELECT_L = 4;
    private const int ACT_TAB_SELECT_R = 5;
    private const int ACT_NUM_VOL_1 = 6;
    private const int ACT_NUM_VOL_2 = 7;
    private const int ACT_NUM_VOL_3 = 8;
    private const int ACT_NUM_VOL_4 = 9;
    private const int ACT_ICON_VOL_UP = 10;
    private const int ACT_ICON_VOL_DOWN = 11;
    private const int ACT_GAUGE_VOL_1 = 12;
    private const int ACT_GAUGE_VOL_2 = 13;
    private const int ACT_GAUGE_VOL_3 = 14;
    private const int ACT_GAUGE_VOL_4 = 15;
    private const int ACT_GAUGE_VOL_5 = 16;
    private const int ACT_GAUGE_VOL_6 = 17;
    private const int ACT_GAUGE_VOL_7 = 18;
    private const int ACT_GAUGE_VOL_8 = 19;
    private const int ACT_GAUGE_VOL_9 = 20;
    private const int ACT_GAUGE_VOL_10 = 21;
    private const int ACT_CNT01_L = 22;
    private const int ACT_CNT01_C = 23;
    private const int ACT_CNT01_R = 24;
    private const int ACT_CNT02_L = 25;
    private const int ACT_CNT02_C = 26;
    private const int ACT_CNT02_R = 27;
    private const int ACT_TYPE_SCREEN = 28;
    private const int ACT_TYPE_SCREEN_A = 29;
    private const int ACT_TYPE_SCREEN_A2 = 30;
    private const int ACT_TYPE_SCREEN_B = 31;
    private const int ACT_TYPE_YUBI_B1 = 32;
    private const int ACT_TYPE_YUBI_B2 = 33;
    private const int ACT_TYPE_LINE_B1 = 34;
    private const int ACT_TYPE_LINE_B2 = 35;
    private const int ACT_A_TYPE_BTN_L = 36;
    private const int ACT_A_TYPE_BTN_C = 37;
    private const int ACT_A_TYPE_BTN_R = 38;
    private const int ACT_B_TYPE_BTN_L = 39;
    private const int ACT_B_TYPE_BTN_C = 40;
    private const int ACT_B_TYPE_BTN_R = 41;
    private const int ACT_TAB_SOUSA_01L = 42;
    private const int ACT_TAB_SOUSA_01C = 43;
    private const int ACT_TAB_SOUSA_01R = 44;
    private const int ACT_TAB_SOUSA_01L2 = 45;
    private const int ACT_TAB_SOUSA_01C2 = 46;
    private const int ACT_TAB_SOUSA_01R2 = 47;
    private const int ACT_LINE_SOUSA01 = 48;
    private const int ACT_LINE_SOUSA02 = 49;
    private const int ACT_SOUSA_CONT_A = 50;
    private const int ACT_SOUSA_SCREEN = 51;
    private const int ACT_SOUSA_LINE_SONIC1 = 52;
    private const int ACT_SOUSA_LINE_SONIC2 = 53;
    private const int ACT_SOUSA_LINE_SONIC3 = 54;
    private const int ACT_SOUSA_SSICON = 55;
    private const int ACT_SOUSA_FUKIDASHI = 56;
    private const int ACT_SOUSA_LINE_PA1 = 57;
    private const int ACT_SOUSA_LINE_PA2 = 58;
    private const int ACT_SOUSA_LINE_PA3 = 59;
    private const int ACT_SOUSA_LINE_JUMP1 = 60;
    private const int ACT_SOUSA_LINE_JUMP2 = 61;
    private const int ACT_SOUSA_LINE_JUMP3 = 62;
    private const int ACT_SOUSA_LINE_MOVE1 = 63;
    private const int ACT_SOUSA_LINE_MOVE2 = 64;
    private const int ACT_SOUSA_LINE_MOVE3 = 65;
    private const int ACT_SOUSA_YUBI = 66;
    private const int ACT_S_SCREEN_01A = 67;
    private const int ACT_S_SCREEN_01B = 68;
    private const int ACT_TEX_TITLE = 69;
    private const int ACT_TEX_PLAY = 70;
    private const int ACT_TEX_CONTROL = 71;
    private const int ACT_TEX_SETTING = 72;
    private const int ACT_TEX_CREDIT = 73;
    private const int ACT_TEX_BGM = 74;
    private const int ACT_TEX_SE = 75;
    private const int ACT_TEX_CTRL = 76;
    private const int ACT_TEX_DEFAULT = 77;
    private const int ACT_TEX_ON = 78;
    private const int ACT_TEX_OFF = 79;
    private const int ACT_TEX_TILT = 80;
    private const int ACT_TEX_TOUCH = 81;
    private const int ACT_TEX_MSG01 = 82;
    private const int ACT_TEX_TEX_DPAD = 83;
    private const int ACT_TEX_TYPE_A = 84;
    private const int ACT_TEX_TYPE_B = 85;
    private const int ACT_TEX_A_TILT = 86;
    private const int ACT_TEX_B_FLICK = 87;
    private const int ACT_TEX_EX_A = 88;
    private const int ACT_TEX_EX_B = 89;
    private const int ACT_TEX_HOM01 = 90;
    private const int ACT_TEX_SPIN01 = 91;
    private const int ACT_TEX_SUPER = 92;
    private const int ACT_TEX_TAP = 93;
    private const int ACT_TEX_PAUSE = 94;
    private const int ACT_TEX_JUMP = 95;
    private const int ACT_TEX_MOVE = 96;
    private const int ACT_WAVE_BG = 97;
    private const int ACT_DOWN_BG = 98;
    private const int ACT_BLUE_BG = 99;
    private const int ACT_BTN_CANCEL1 = 100;
    private const int ACT_TEX_BACK = 101;
    private const int ACT_NUM = 102;
    private const int ACT_NONE = 103;
    public const uint AOD_ACCOUNT_MAX = 4;
    public const ushort GSD_EVTSYS_TCB_PRI = 256;
    public const byte GSD_EVTSYS_TCB_GROUP = 14;
    public const int GSD_MAINSYS_PLAYER_REST_DEF = 3;
    public const uint GSD_MAINSYS_PLAYER_REST_MAX = 1000;
    public const int GSD_MAINSYS_WIN_EFCT_FRAME = 8;
    public const int GSD_GAME_MODE_STORY = 0;
    public const int GSD_GAME_MODE_TIME_ATTACK = 1;
    public const int GSD_GAME_MODE_ENDING = 2;
    public const int GSD_GAME_MODE_MAX = 3;
    private const int GSD_GAME_LEVEL_EASY = 0;
    private const int GSD_GAME_LEVEL_NORMAL = 1;
    private const int GSD_GAME_LEVEL_HARD = 2;
    private const int GSD_GAME_LEVEL_MAX = 3;
    private const int GSD_CHAR_ID_SONIC = 0;
    private const int GSD_CHAR_ID_S_SONIC = 1;
    private const int GSD_CHAR_ID_SP_SONIC = 2;
    private const int GSD_CHAR_ID_PN_SONIC = 3;
    private const int GSD_CHAR_ID_PN_S_SONIC = 4;
    private const int GSD_CHAR_ID_TR_SONIC = 5;
    private const int GSD_CHAR_ID_TR_S_SONIC = 6;
    private const int GSD_CHAR_ID_MAX = 7;
    private const int GSD_CHAR_ID_INVALID = 32767;
    public const uint GSD_MAIN_PLAYER_1P = 0;
    public const uint GSD_MAIN_PLAYER_MAX = 1;
    public const int GSD_MAIN_STAGE_ID_1_1 = 0;
    public const int GSD_MAIN_STAGE_ID_1_2 = 1;
    public const int GSD_MAIN_STAGE_ID_1_3 = 2;
    public const int GSD_MAIN_STAGE_ID_1_BOSS = 3;
    public const int GSD_MAIN_STAGE_ID_2_1 = 4;
    public const int GSD_MAIN_STAGE_ID_2_2 = 5;
    public const int GSD_MAIN_STAGE_ID_2_3 = 6;
    public const int GSD_MAIN_STAGE_ID_2_BOSS = 7;
    public const int GSD_MAIN_STAGE_ID_3_1 = 8;
    public const int GSD_MAIN_STAGE_ID_3_2 = 9;
    public const int GSD_MAIN_STAGE_ID_3_3 = 10;
    public const int GSD_MAIN_STAGE_ID_3_BOSS = 11;
    public const int GSD_MAIN_STAGE_ID_4_1 = 12;
    public const int GSD_MAIN_STAGE_ID_4_2 = 13;
    public const int GSD_MAIN_STAGE_ID_4_3 = 14;
    public const int GSD_MAIN_STAGE_ID_4_BOSS = 15;
    public const int GSD_MAIN_STAGE_ID_FINAL_1 = 16;
    public const int GSD_MAIN_STAGE_ID_FINAL_2 = 17;
    public const int GSD_MAIN_STAGE_ID_FINAL_3 = 18;
    public const int GSD_MAIN_STAGE_ID_FINAL_4 = 19;
    public const int GSD_MAIN_STAGE_ID_FINAL_5 = 20;
    public const int GSD_MAIN_STAGE_ID_SS1 = 21;
    public const int GSD_MAIN_STAGE_ID_SS2 = 22;
    public const int GSD_MAIN_STAGE_ID_SS3 = 23;
    public const int GSD_MAIN_STAGE_ID_SS4 = 24;
    public const int GSD_MAIN_STAGE_ID_SS5 = 25;
    public const int GSD_MAIN_STAGE_ID_SS6 = 26;
    public const int GSD_MAIN_STAGE_ID_SS7 = 27;
    public const int GSD_MAIN_STAGE_ID_ENDING = 28;
    public const int GSD_MAIN_STAGE_ID_MAX = 29;
    public const int GSD_MAIN_STAGE_TYPE_ACT = 0;
    public const int GSD_MAIN_STAGE_TYPE_BOSS = 1;
    public const int GSD_MAIN_STAGE_TYPE_SS = 2;
    public const int GSD_MAIN_STAGE_TYPE_MAX = 3;
    private const int GSD_MAIN_ZONE_TYPE_1 = 0;
    private const int GSD_MAIN_ZONE_TYPE_2 = 1;
    private const int GSD_MAIN_ZONE_TYPE_3 = 2;
    private const int GSD_MAIN_ZONE_TYPE_4 = 3;
    private const int GSD_MAIN_ZONE_TYPE_FINAL = 4;
    private const int GSD_MAIN_ZONE_TYPE_SS = 5;
    private const int GSD_MAIN_ZONE_TYPE_MAX = 6;
    private const int GSD_MAIN_ZONE_TYPE_NONE = -1;
    public const uint GSD_MAINSYS_GAME_FLAG_INPUT_CLASSIC = 1;
    public const uint GSD_MAINSYS_GAME_FLAG_CLEAR = 2;
    public const uint GSD_MAINSYS_GAME_FLAG_RESTART = 4;
    public const uint GSD_MAINSYS_GAME_FLAG_TIMEOVER = 8;
    public const uint GSD_MAINSYS_GAME_FLAG_DATALOADEND = 16;
    public const uint GSD_MAINSYS_GAME_FLAG_7_CHAOS_EMERALD = 32;
    public const uint GSD_MAINSYS_GAME_FLAG_PAD_VIB_ENABLE = 64;
    public const uint GSD_MAINSYS_GAME_FLAG_SPECIAL_STAGE = 128;
    public const uint GSD_MAINSYS_GAME_FLAG_TIME_RESET_AT_MARKER = 256;
    public const uint GSD_MAINSYS_GAME_FLAG_INPUT_IS_FLICK = 512;
    public const uint GSD_MAINSYS_GAME_FLAG_STARTINIT_MASK = 286;
    public const uint GSD_MAINSYS_GAME_FLAG_RETRY_MASK = 270;
    public const int GSD_MAINSYS_SYS_FLAG_SUSPEND = 1;
    public const int NNE_TEXCOORD_NONE = 0;
    public const int NNE_TEXCOORD_0 = 0;
    public const int NNE_TEXCOORD_1 = 1;
    public const int NNE_TEXCOORD_3 = 3;
    public const int NNE_TEXCOORD_2 = 2;
    public const int NNE_TEXCOORD_NRM = -1;
    public const int NNE_TEXCOORD_POS = -2;
    public const int NNE_TEXCOORD_SPHERE_MAP = -1;
    public const int NNE_TEXCOORD_PROJECTION_MAP = -2;
    public const int NNE_TEXCOORD_DUALPARABOLOID_MAP = -3;
    public const int NNE_TEXCOORD_MAX = 3;
    public const int NNE_TEXCOORD_MIN = -3;
    public const int NND_FRAGPARALIGHT_MAX = 3;
    public const int NND_FRAGPOINTLIGHT_MAX = 3;
    public const int NND_MAX_USER_PROFILE = 63;
    public const int NND_MAX_USER_PROFILE_DRAWOBJ = 255;
    public const int NND_MAX_NUM_USER_UNIFORM = 256;
    public const int GMD_START_DEMO_INVLID_ID = -1;
    public const int GMD_START_DEMO_ACT_NO_NUM = 4;
    public const float GMD_START_DEMO_FADEIN_TIME = 30f;
    public const int GMD_START_DEMO_FLAG_EXIT = 1;
    public const int GMD_START_DEMO_BUILD_REG_ALLOWANCE_NUM = 64;
    private const int GMD_START_DEMO_DATA_TYPE_CMN = 0;
    private const int GMD_START_DEMO_DATA_TYPE_LANG = 1;
    private const int GMD_START_DEMO_DATA_TYPE_NUM = 2;
    private const int GMD_START_DEMO_ACTION_INDEX_CMN_BG_WHITE = 0;
    private const int GMD_START_DEMO_ACTION_INDEX_CMN_BG_BLUE = 1;
    private const int GMD_START_DEMO_ACTION_INDEX_CMN_BG_RED = 2;
    private const int GMD_START_DEMO_ACTION_INDEX_CMN_TEX_ZONE = 3;
    private const int GMD_START_DEMO_ACTION_INDEX_CMN_NUM = 4;
    private const int GMD_START_DEMO_ACTION_INDEX_ZONE_TEX_ZNAME = 0;
    private const int GMD_START_DEMO_ACTION_INDEX_ZONE_NUM = 1;
    private const int GMD_START_DEMO_ACTION_INDEX_ACT_NUMBER = 0;
    private const int GMD_START_DEMO_ACTION_INDEX_ACT_TEX_ACT = 1;
    private const int GMD_START_DEMO_ACTION_INDEX_ACT_NUM = 2;
    public const float GMD_SPL_STAGE_FADEIN_TIME = 30f;
    public const ushort GMD_SPL_STAGE_ROLL_SPD_INIT = 256;
    public const ushort GMD_SPL_STAGE_ROLL_SPD_ACL = 56;
    public const int GMD_SPL_STAGE_ROLL_FADEWAIT = 90;
    public const float GMD_SPL_STG_BASE_LIGHT_POS_X = -1f;
    public const float GMD_SPL_STG_BASE_LIGHT_POS_Y = -1f;
    public const float GMD_SPL_STG_BASE_LIGHT_POS_Z = -1f;
    public const float GMD_SPL_STG_OPT1_LIGHT_POS_X = -0.4f;
    public const float GMD_SPL_STG_OPT1_LIGHT_POS_Y = -0.4f;
    public const float GMD_SPL_STG_OPT1_LIGHT_POS_Z = -1f;
    public const int GMD_SPL_STG_SW_MAX = 16;
    public const uint GMD_SPL_STAGE_BOUNCE_HIT = 1;
    public const uint GMD_SPL_STAGE_NUDGE_HIT = 2;
    public const uint GMD_SPL_STAGE_RESULT = 4;
    public const int GMD_SS_RINGGATE_MAX = 9;
    public const int GMD_RING_ROT_FRONT = 49152;
    public const int GMD_RING_SE_PLAY_MAX_PER_FRAME = 1;
    public const int GMD_RING_SE_PLAY_WAIT_FRAME = 3;
    public const int GMD_RING_SYS_FLAG_NODISP = 1;
    public const int GMD_RING_SYS_FLAG_GET_SE_FLIP = 8;
    public const int GMD_RING_DEF_SIZE = 20;
    public const int GMD_RING_DAMAGE_NUM = 32;
    public const int GMD_RING_MAX_NUM = 96;
    public const int GMD_RING_FALL_ACC = 288;
    public const int GMD_RING_MAGNET_ACC = 1024;
    public const int GMD_RING_MAGNET_MSPD = 126976;
    public const int GMD_RING_DUCT_ACC = 256;
    public const int GMD_RING_DUCT_MSPD = 32768;
    public const uint GMD_RING_SYS_FLAG_DAMAGE_CHK_P1 = 16777216;
    public const uint GMD_RING_SYS_FLAG_DAMAGE_CHK_P2 = 33554432;
    public const int GMD_RING_DIE_DEF_OFFSET = 72;
    public const int GMD_RING_MOVE_DIE_OFFSET = 196;
    public const int GMD_RING_SLOT_DIE_OFFSET = 512;
    public const int GMD_RING_MAGNET_PLAYER = 1;
    public const int GMD_RING_MAGNET_PLAYER_MASK = 1;
    public const int GMD_RING_FLAG_B = 2;
    public const int GMD_RING_REVERSE = 4;
    public const int GMD_RING_DAMAGE = 8;
    public const int GMD_RING_DAMAGE_PLAYER = 16;
    public const int GMD_RING_DAMAGE_PLAYER_SHIFT = 4;
    public const int GMD_RING_HIT_LEFT = -9;
    public const int GMD_RING_HIT_TOP = -9;
    public const int GMD_RING_HIT_RIGHT = 9;
    public const int GMD_RING_HIT_BOTTOM = 9;
    public const int GMD_RING_HIT_BACK = -8;
    public const int GMD_RING_HIT_FRONT = 8;
    public const int GMD_RING_HIT_HEIGHT = 18;
    public const int GMD_RING_HIT_WIDTH = 18;
    public const int GMD_RING_ROLL_UV_POS_U = 0;
    public const int GMD_RING_ROLL_UV_POS_V = 1;
    public const int GMD_RING_ROLL_UV_POS_UV = 2;
    public const int GMD_RING_ROLL_UV_POS_NUM = 16;
    public const int GMD_RING_ROLL_UV_FRAME_WAIT = 4;
    public const int GMD_RING_ROLL_UV_FRAME_MAX = 64;
    public const float GMD_RING_ROLL_UV_SIZE = 0.25f;
    public const int GMD_RING_SLOT_SPD = 24576;
    public const int GMD_RING_SLOT_DIST = 1048576;
    public const int GMD_RING_SLOT_DIR_SPD = 2048;
    public const int GMD_RING_SLOT_INT_TIME = 4;
    public const int GMD_RING_TIMER = 256;
    public const int GMD_RING_NOHIT_TIMER = 216;
    public const int GMD_RING_BLINK_TIMER = 32;
    public const int GMD_RING_DAMAGE_NUM_MAX = 4;
    private const int GME_GMK_PIPE_TYPE_C_LU = 0;
    private const int GME_GMK_PIPE_TYPE_C_RU = 1;
    private const int GME_GMK_PIPE_TYPE_C_RD = 2;
    private const int GME_GMK_PIPE_TYPE_C_LD = 3;
    private const int GME_GMK_PIPE_TYPE_GR = 4;
    private const int GME_GMK_PIPE_TYPE_GL = 5;
    private const int GME_GMK_PIPE_TYPE_E = 6;
    private const int GME_GMK_PIPE_TYPE_ER = 6;
    private const int GME_GMK_PIPE_TYPE_EL = 7;
    private const int GME_GMK_PIPE_TYPE_H = 8;
    private const int GME_GMK_PIPE_TYPE_V = 9;
    private const int GME_GMK_PIPE_TYPE_MAX = 10;
    private const int GMD_GMK_STMP_EVE_FLAG_OUT_L = 1;
    private const int GMD_GMK_STMP_EVE_FLAG_NOCOL = 2;
    private const int GMD_GMK_STEAMPIPE_USE_DIR_MODEL = 1;
    private const int GMD_GMK_STEAMPIPE_SPEED = 2;
    private const int GMD_GMK_STEAMPIPE_COL_HEIGHT = 8;
    private const int GMD_GMK_STEAMPIPE_COL_OFST_Y = -16;
    private const int GMD_GMK_STEAMPIPE_MOVE_SPEED = 61440;
    private const float GMD_GMK_STEAMPIPE_VIB_TIME = 60f;
    private const int GME_GMK_PIPE_TYPE_C = 4;
    private const int GMD_GMK_PIPE_VECT_LEFT = 1;
    private const int GMD_GMK_PIPE_VECT_RIGHT = 2;
    private const int GMD_GMK_PIPE_VECT_DOWN = 4;
    private const int GMD_GMK_PIPE_VECT_UP = 8;
    public const int GMD_GMK_SS_SQR_EVE_FLAG_COL_MASK = 3;
    public const int GMD_GMK_SS_SQR_EVE_FLAG_NUM_MASK = 7;
    public const int GMD_GMK_SS_SQUARE_UV_WAIT_FRAME = 4;
    public const int GMD_GMK_SS_SQUARE_UV_NUM = 30;
    public const short GMD_GMK_SS_SQUARE_UV_WAIT_UPDATE_SHIFT = 3;
    public const short GMD_GMK_SS_SQUARE_UV_WAIT_UPDATE_MASK = 127;
    public const short GMD_GMK_SS_SQUARE_UV_WAIT_GET_SHIFT = 5;
    public const short GMD_GMK_SS_SQUARE_UV_WAIT_GET_MASK = 31;
    private const int GMD_GMK_SS_SQR_MAT_USER_DATA_BLUE = 1;
    private const int GMD_GMK_SS_SQR_MAT_USER_DATA_YELLOW = 2;
    private const int GMD_GMK_SS_SQR_MAT_USER_DATA_PURPLE = 3;
    private const int GMD_GMK_SS_SQR_MAT_USER_DATA_GREEN = 4;
    private const int GMD_GMK_SS_SQR_MAT_USER_DATA_END = 5;
    private const uint GMD_GMK_SS_SQR_FLAG_HIT = 2147483648;
    public const int GMD_GMK_SS_ARW_EVE_FLAG_VEC_MASK = 3;
    public const int GMD_GMK_SS_ARW_ANIM_LOOP_TIME = 24;
    public const uint GMD_GMK_NEEDLE_NEON_FLAG_MODE_TIMER = 1;
    public const uint GMD_GMK_NEEDLE_NEON_SIGNAL_ON = 2;
    public const uint GMD_GMK_NEEDLE_NEON_SIGNAL_ACTIVE = 4;
    public const uint GMD_GMK_NEEDLE_NEON_SIGNAL_OFF = 8;
    public const int GMD_GMK_NEEDLE_NEON_DRAW_NUM = 5;
    public const int GMD_GMK_NEEDLE_NEON_ACTIVE_OFFSET_Y = 32;
    public const int GMD_GMK_NEEDLE_NEON_WAIT_TIME = 480;
    public const int GMD_GMK_NEEDLE_NEON_ON_TIME = 10;
    public const int GMD_GMK_NEEDLE_NEON_ACTIVE_TIME = 180;
    public const int GMD_GMK_NEEDLE_NEON_OFF_TIME = 10;
    public const int GMD_GMK_NEEDLE_NEON_MOVE_Y = 32;
    public const short GMD_ENE_UNIDES_EVE_FLAG_RIGHT = 1;
    public const short GMD_ENE_UNIDES_MOVE_SPD_X = 1536;
    public const int GMD_ENE_UNIDES_FW_TIME = 61440;
    public const short GMD_ENE_UNIDES_TURN_FRAME = 40;
    public const short GMD_ENE_UNIDES_SEARCH_LENGTH = 96;
    public const short GMD_ENE_UNIDES_NEEDLE_MAX = 4;
    public const short GMD_ENE_UNIDES_NEEDLE_SPD = 1;
    public const short GMD_ENE_UNIDES_NEEDLE_ROTATE_SPD = 1;
    public const double GMD_ENE_UNIDES_NEEDLE_DOWN_RATE = 0.98;
    public const short GMD_ENE_KANI_EVE_FLAG_SMALL = 1;
    public const short GMD_ENE_KANI_MOVE_SPD_X = 2048;
    public const int GMD_ENE_KANI_FW_TIME = 61440;
    public const short GMD_ENE_KANI_TURN_FRAME = 40;
    public const short GMD_ENE_KANI_SEARCH_LENGTH = 92;
    public const short GMD_ENE_KANI_NODE_RIGHT_HAND = 16;
    public const string GMD_ENE_KANI_SE_PUNCH = "Kani";
    public const int GMD_ENE_SNM_NO_MAX = 32;
    private const int GMD_CLRDM_FILE_PATH_NUM_MAX = 60;
    private const int GMD_CLRDM_SCORE_UPDOWN_NUM = 100;
    private const int GMD_CLRDM_1UP_SCORE = 10000;
    private const int GMD_CLRDM_NORMAL_IDLE_TIME = 120;
    private const int GMD_CLRDM_1UP_IDLE_TIME = 270;
    private const int GMD_CLRDM_PREV_SCORE_IDLE_TIME = 150;
    private const int GMD_CLRDM_PREV_TIME_IDLE_TIME = 300;
    private const int GMD_CLRDM_WAIT_SONIC_DISP_TIME = 60;
    private const int GMD_CLRDM_SONIC_DISP_TIME = 30;
    private const int GMD_CLRDM_SONIC_NODISP_TIME = 10;
    private const int DMD_CLRDM_TIME_SCORE_MAX = 80000;
    private const int DMD_CLRDM_RING_SCORE_MAX = 99900;
    private const int DMD_CLRDM_TOTAL_SCORE_MAX = 999999990;
    private const int DMD_CLRDM_INIT_SCORE_NUM = 1000000000;
    private const int DMD_CLRDM_INIT_RECORD_TIME_NUM = 36000;
    private const int DMD_CLRDM_EMER_LIGHT_DIST = 74;
    private const float DMD_CLROM_TEXT_SCALE_X = 4096f;
    private const float DMD_CLROM_TEXT_SCALE_Y = 4096f;
    private const float DMD_CLROM_SMALL_TEXT_SCALE_X = 4096f;
    private const float DMD_CLROM_SMALL_TEXT_SCALE_Y = 4096f;
    private const float GMD_CLRDM_FADEIN_TIME = 32f;
    private const float GMD_CLRDM_FADEOUT_TIME = 32f;
    private const int GMD_CLRDM_STAGE_SOUND_FADEOUT_TIME = 64;
    private const uint GMD_CLRDM_FLAG_EXIT = 1;
    private const uint GMD_CLRDM_FLAG_CANCEL = 2;
    private const uint GMD_CLRDM_FLAG_SKIP = 4;
    private const uint GMD_CLRDM_FLAG_SCORE_CALC_END = 8;
    private const uint GMD_CLRDM_FLAG_GET_1UP = 16;
    private const uint GMD_CLRDM_FLAG_DISP_LINE = 32;
    private const uint GMD_CLRDM_FLAG_DISP_SONIC_ICON = 64;
    private const uint GMD_CLRDM_FLAG_DISP_TIME_SCORE = 128;
    private const uint GMD_CLRDM_FLAG_DISP_RING_SCORE = 256;
    private const uint GMD_CLRDM_FLAG_DISP_TOTAL_SCORE = 512;
    private const uint GMD_CLRDM_FLAG_DISP_CLEAR_TIME = 1024;
    private const uint GMD_CLRDM_FLAG_DISP_TIME_SONIC = 2048;
    private const uint GMD_CLRDM_FLAG_IS_NEW_RECORD = 4096;
    private const uint GMD_CLRDM_FLAG_RETRY_GAME = 8192;
    private const uint GMD_CLRDM_FLAG_BACK_CLEAR_ACT = 16384;
    private const uint GMD_CLRDM_FLAG_CHAOS_EMERALD_GET = 32768;
    private const uint GMD_CLRDM_FLAG_DISP_SONIC_ICON2 = 65536;
    private const int GME_CLRDM_DATA_TYPE_CMN_DATA = 0;
    private const int GME_CLRDM_DATA_TYPE_LANG_DATA = 1;
    private const int GME_CLRDM_DATA_TYPE_MAX = 2;
    private const int GME_CLRDM_DATA_TYPE_NONE = 3;
    private const int GME_CLRDM_SCORE_TYPE_CALC_DATA = 0;
    private const int GME_CLRDM_SCORE_TYPE_DISP_DATA = 1;
    private const int GME_CLRDM_SCORE_TYPE_MAX = 2;
    private const int GME_CLRDM_SCORE_TYPE_NONE = 3;
    public const int GMD_BOSS5_TURRET_SEQ_LIFE_LEVEL_NUM = 5;
    private const int GME_BOSS5_TURRET_SLIDE_TYPE_RAISE = 0;
    private const int GME_BOSS5_TURRET_SLIDE_TYPE_LOWER = 1;
    private const int GME_BOSS5_TURRET_SLIDE_TYPE_MAX = 2;
    private const int GME_BOSS5_TURRET_COVER_SLIDE_TYPE_OPEN = 0;
    private const int GME_BOSS5_TURRET_COVER_SLIDE_TYPE_CLOSE = 1;
    private const int GME_BOSS5_TURRET_COVER_SLIDE_TYPE_MAX = 2;
    public const int GMD_BOSS4_CHIBI_NODE_IDX_BASE = 0;
    public const int GMD_BOSS4_CHIBI_NODE_SNM_NUM = 1;
    public const int GME_BOSS4_CHIBI_ACT_ID_NORMAL = 0;
    public const int GME_BOSS4_CHIBI_ACT_ID_MAX = 1;
    public const int GME_BOSS4_CHIBI_TYPE_ID_NORMAL = 0;
    public const int GME_BOSS4_CHIBI_TYPE_ID_BOUND = 1;
    public const int GME_BOSS4_CHIBI_TYPE_ID_BOUND_SPD = 2;
    public const int GME_BOSS4_CHIBI_TYPE_ID_BOUND_BIG = 3;
    public const int GME_BOSS4_CHIBI_TYPE_ID_BOUND_IRON = 4;
    public const int GME_BOSS4_CHIBI_TYPE_ID_MAX = 5;
    public const uint GMD_BOSS4_CHIBI_FLAG_INVINCIBLE = 4;
    public const uint GMD_BOSS4_CHIBI_FLAG_DEAD = 8;
    public const uint GMD_BOSS4_CHIBI_FLAG_NOHIT = 64;
    public const uint GMD_BOSS4_CHIBI_FLAG_BOUND_FIRST = 536870912;
    public const uint GMD_BOSS4_CHIBI_FLAG_SIGNAL_DAMAGE = 1073741824;
    public const uint GMD_BOSS4_CHIBI_FLAG_SIGNAL_DEFEAT = 2147483648;
    public const int GMD_BOSS4_CHIBI_POS_Z = 131072;
    public const float GMD_BOSS4_CHIBI_ABURNER1_DISP_OFST_X = 0.0f;
    public const float GMD_BOSS4_CHIBI_ABURNER1_DISP_OFST_Y = 8f;
    public const float GMD_BOSS4_CHIBI_ABURNER1_DISP_OFST_Z = -20f;
    public const int GMD_BOSS4_RECT_GROUP = 2;
    public const int GMD_BOSS4_RECT_TARGET_GROUP = 4;
    public const float GMD_BOSS4_CHIBI_HIT_CHIBI_MOVE = 4f;
    public const float GMD_BOSS4_CHIBI_BOUND_ADD_Y = -4f;
    public const float GMD_BOSS4_CHIBI_BOUND_IN_Y_LIMIT = 0.6f;
    public const float GMD_BOSS4_CHIBI_BOUND_IN_X_LIMIT = 1.5f;
    public const float GMD_BOSS4_CHIBI_EXPLOSION_ADD_Y = -16f;
    public const int GMD_BOSS4_CHIBI_EXPLOSION_POS_Z = 135168;
    public const int GME_BOSS4_CHIBI_ATK_TBL = 20;
    public const int GME_BOSS4_CHIBI_THW_TBL = 20;
    public const float GMD_BOSS4_SCROLL_RIGHT_LIMIT_X = 50f;
    public const float GMD_BOSS4_SCROLL_HOMING_LENGTH = 140f;
    public const float GMD_BOSS4_SCROLL_SONIC_SPD = -0.5f;
    public const float GMD_BOSS4_SCROLL_SONIC_SPD_LOW = 0.6f;
    public const float GMD_BOSS4_SCROLL_SONIC_SPD_HIGH = 1.4f;
    public const float GMD_BOSS4_SCROLL_COIN_ADDSPD_FIRST = 1f;
    public const float GMD_BOSS4_SCROLL_COIN_ADDSPD = -0.1f;
    public const int GMD_BOSS4_SCROLL_LIMIT_OFFSET_X = 48;
    public const int GMD_BOSS4_DEFAULT_POS_Z = -131072;
    public const int GMD_BOSS4_GROUND_POS_Y = 1286144;
    public const float GMD_BOSS4_DEFAULT_BLEND_SPD = 0.125f;
    public const uint GMD_BOSS4_MGR_FLAG_LOAD_END = 1;
    public const uint GMD_BOSS4_MGR_FLAG_CLEAR_BOSS = 2;
    public const int GME_BOSS4_ACT_ID_APP_FALL = 0;
    public const int GME_BOSS4_ACT_ID_APP_END = 1;
    public const int GME_BOSS4_ACT_ID_PRE_ATK_NML_MOVE = 2;
    public const int GME_BOSS4_ACT_ID_ATK_NML_MOVE = 3;
    public const int GME_BOSS4_ACT_ID_START_2 = 4;
    public const int GME_BOSS4_ACT_ID_ATK_NML_MOVE2 = 5;
    public const int GME_BOSS4_ACT_ID_DAMAGE_NML = 6;
    public const int GME_BOSS4_ACT_ID_ESCAPE = 7;
    public const int GME_BOSS4_ACT_ID_ANGRY_L1 = 8;
    public const int GME_BOSS4_ACT_ID_ANGRY_L2 = 9;
    public const int GME_BOSS4_ACT_ID_ANGRY_L3 = 10;
    public const int GME_BOSS4_ACT_ID_MAX = 11;
    public const int GME_BOSS4_PART_IDX_BODY = 0;
    public const int GME_BOSS4_PART_IDX_EGG = 1;
    public const int GME_BOSS4_PART_IDX_MAX = 2;
    public const int GME_BOSS4_SCROLL_TYPE_NORMAL = 0;
    public const int GME_BOSS4_SCROLL_TYPE_ADDSPEED = 1;
    public const int GME_BOSS4_SCROLL_TYPE_SUBSPEED = 2;
    public const int GME_BOSS4_SCROLL_TYPE_MAX = 3;
    private const int DME_SOUND_BGM_IDX_MENU = 0;
    private const int DME_SOUND_BGM_IDX_MAX = 1;
    private const int DME_SOUND_JINGLE_IDX_TITLE = 0;
    private const int DME_SOUND_JINGLE_IDX_MAX = 1;
    private const int DME_SOUND_DATA_IDX_SE = 0;
    private const int DME_SOUND_DATA_IDX_BGM = 1;
    private const int DME_SOUND_DATA_IDX_MAX = 2;
    private const int AME_CRIAUDIO_STRM_BGM = 0;
    private const int AME_CRIAUDIO_STRM_BG = 1;
    private const int AME_CRIAUDIO_STRM_PLAYER = 2;
    private const int AME_CRIAUDIO_STRM_ENEMY = 3;
    private const int AME_CRIAUDIO_STRM_EX0 = 4;
    private const int AME_CRIAUDIO_STRM_EX1 = 5;
    private const int AME_CRIAUDIO_STRM_EX2 = 6;
    private const int AME_CRIAUDIO_STRM_EX3 = 7;
    private const int AME_CRIAUDIO_STRM_MAX = 8;
    private const int AME_CRIAUDIO_CSB_SYSTEM = 0;
    private const int AME_CRIAUDIO_CSB_GAME = 1;
    private const int AME_CRIAUDIO_CSB_STREAM = 2;
    private const int AME_CRIAUDIO_CSB_MAINMENU = 3;
    private const int AME_CRIAUDIO_CSB_MAX = 4;
    private const int CRIERR_OK = 0;
    private const int CRIERR_NG = -1;
    private const int CRIERR_INVALID_PARAMETER = -2;
    private const int CRIERR_FAILED_TO_ALLOCATE_MEMORY = -3;
    private const int CRIERR_UNSAFE_FUNCTION_CALL = -4;
    private const int CRIERR_FUNCTION_NOT_IMPLEMENTED = -5;
    private const int CRIERR_ENUM_BE_SINT32 = 2147483647;
    public const int OBD_RECT_GROUP_NO_1 = 0;
    public const int OBD_RECT_GROUP_NO_2 = 1;
    public const int OBD_RECT_GROUP_NO_3 = 2;
    public const int OBD_RECT_GROUP_NO_4 = 3;
    public const int OBD_RECT_GROUP_NO_5 = 4;
    public const int OBD_RECT_GROUP_NO_6 = 5;
    public const int OBD_RECT_GROUP_NO_7 = 6;
    public const int OBD_RECT_GROUP_NO_8 = 7;
    public const int OBD_RECT_GROUP_NO_NUM = 8;
    public const byte OBD_RECT_TARGET_G_FLAG_1 = 1;
    public const byte OBD_RECT_TARGET_G_FLAG_2 = 2;
    public const byte OBD_RECT_TARGET_G_FLAG_3 = 4;
    public const byte OBD_RECT_TARGET_G_FLAG_4 = 8;
    public const byte OBD_RECT_TARGET_G_FLAG_5 = 16;
    public const byte OBD_RECT_TARGET_G_FLAG_6 = 32;
    public const byte OBD_RECT_TARGET_G_FLAG_7 = 64;
    public const byte OBD_RECT_TARGET_G_FLAG_8 = 128;
    public const uint OBD_RECT_HFLIP = 1;
    public const uint OBD_RECT_VFLIP = 2;
    public const uint OBD_RECT_ENABLE = 4;
    public const uint OBD_RECT_GROUP = 32;
    public const uint OBD_RECT_NOHIT_UP = 64;
    public const uint OBD_RECT_NODAMAGE = 128;
    public const uint OBD_RECT_DAMAGE = 256;
    public const uint OBD_RECT_HIT = 512;
    public const uint OBD_RECT_OUT = 1024;
    public const uint OBD_RECT_NOHIT = 2048;
    public const uint OBD_RECT_NOPOS = 4096;
    public const uint OBD_RECT_HIT_UP = 65536;
    public const uint OBD_RECT_FRAMEHIT = 131072;
    public const uint OBD_RECT_FRAMEOUT = 262144;
    public const uint OBD_RECT_CHECK_FUNC = 524288;
    public const uint OBD_RECT_NOAUTO_ENABLEOFF = 1048576;
    public const short OBD_RECT_HIT_POWER_DEFAULT = 64;
    public const short OBD_RECT_DEF_POWER_DEFAULT = 63;
    public const ushort OBD_HIT_BODY = 1;
    public const ushort OBD_HIT_NORMAL = 2;
    public const ushort OBD_HIT_USE01 = 4;
    public const ushort OBD_HIT_USE02 = 8;
    public const ushort OBD_HIT_USE03 = 16;
    public const ushort OBD_HIT_USE04 = 32;
    public const ushort OBD_HIT_USE05 = 64;
    public const ushort OBD_HIT_USE06 = 128;
    public const ushort OBD_HIT_USE07 = 256;
    public const ushort OBD_HIT_USE08 = 512;
    public const ushort OBD_HIT_USE09 = 1024;
    public const ushort OBD_HIT_USE10 = 2048;
    public const ushort OBD_HIT_USE11 = 4096;
    public const ushort OBD_HIT_USE12 = 8192;
    public const ushort OBD_HIT_USE13 = 16384;
    public const ushort OBD_HIT_USE14 = 32768;
    public const ushort OBD_HIT_NOATK = 0;
    public const ushort OBD_HIT_NOHIT = 65535;
    public const int OBD_HIT_IGNORE = 0;
    public const int LEFT = 0;
    public const int TOP = 1;
    public const int RIGHT = 2;
    public const int BOTTOM = 3;
    public const int BACK = 4;
    public const int FRONT = 5;
    public const int OBD_RECT_USER_RESIST = 10;
    public const int OBD_RECT_NUM = 80;
    public const int OBD_RECT_DEFAULT_DEPTH = 16;
    public const int AMD_PAD_PORT_MAX = 4;
    public const int AMD_PAD_REPEAT_START = 30;
    public const int AMD_PAD_REPEAT_SPEED = 5;
    public const int AMD_PAD_MODE_AUTO = 1;
    public const int AMD_PAD_MODE_CORE = 0;
    public const int AMD_PAD_MODE_ACC = 1;
    public const int AMD_PAD_MODE_ACC_DPD = 2;
    public const int AMD_PAD_MAPPING_SINGLE_HAND = 0;
    public const int AMD_PAD_MAPPING_DOUBLE_HAND = 1;
    public const int AMD_PAD_POINT_OUT = 0;
    public const int AMD_PAD_POINT_IN = 1;
    public const ushort PAD_BUTTON_A = 32;
    public const ushort PAD_BUTTON_B = 128;
    public const ushort PAD_BUTTON_X = 64;
    public const ushort PAD_BUTTON_Y = 16;
    public const ushort PAD_BUTTON_SELECT = 16384;
    public const ushort PAD_BUTTON_START = 32768;
    public const ushort PAD_KEY_RIGHT = 8;
    public const ushort PAD_KEY_LEFT = 4;
    public const ushort PAD_KEY_UP = 1;
    public const ushort PAD_KEY_DOWN = 2;
    public const ushort PAD_BUTTON_R = 2048;
    public const ushort PAD_BUTTON_L = 256;
    private const ushort KEY_L_UP = 1;
    private const ushort KEY_L_DOWN = 2;
    private const ushort KEY_L_LEFT = 4;
    private const ushort KEY_L_RIGHT = 8;
    private const ushort KEY_R_UP = 16;
    private const ushort KEY_R_DOWN = 32;
    private const ushort KEY_R_LEFT = 64;
    private const ushort KEY_R_RIGHT = 128;
    private const ushort KEY_L1 = 256;
    private const ushort KEY_L2 = 512;
    private const ushort KEY_L3 = 1024;
    private const ushort KEY_R1 = 2048;
    private const ushort KEY_R2 = 4096;
    private const ushort KEY_R3 = 8192;
    private const ushort KEY_SELECT = 16384;
    private const ushort KEY_START = 32768;
    private const ushort KEYS_MASK1 = 65535;
    private const ushort KEYS_MASK2 = 65535;
    private const ushort KEYS_LEVER = 15;
    private const ushort KEYS_LR = 12;
    private const ushort KEYS_UD = 3;
    private const ushort KEYS_BUTTON = 65520;
    private const int KEY_ID_MAX = 0;
    private const int KEY_MAP_ID_LEFT = 0;
    private const int KEY_MAP_ID_RIGHT = 1;
    private const int KEY_MAP_ID_DOWN = 2;
    private const int KEY_MAP_ID_UP = 3;
    private const int KEY_MAP_ID_PLUS = 4;
    private const int KEY_MAP_ID_2 = 8;
    private const int KEY_MAP_ID_1 = 9;
    private const int KEY_MAP_ID_B = 10;
    private const int KEY_MAP_ID_A = 11;
    private const int KEY_MAP_ID_MINUS = 12;
    private const int KEY_MAP_ID_Z = 13;
    private const int KEY_MAP_ID_C = 14;
    private const int KEY_MAP_ID_MAX = 16;
    private const int KEY_MAP_GC_LEFT = 0;
    private const int KEY_MAP_GC_RIGHT = 1;
    private const int KEY_MAP_GC_DOWN = 2;
    private const int KEY_MAP_GC_UP = 3;
    private const int KEY_MAP_GC_Z = 4;
    private const int KEY_MAP_GC_R = 5;
    private const int KEY_MAP_GC_L = 6;
    private const int KEY_MAP_GC_A = 8;
    private const int KEY_MAP_GC_B = 9;
    private const int KEY_MAP_GC_X = 10;
    private const int KEY_MAP_GC_Y = 11;
    private const int KEY_MAP_GC_START = 15;
    private const int KEY_MAP_GC_MAX = 16;
    public const uint AMD_PAD_STAT_DEVICE_CONNECT = 1;
    public const uint AMD_PAD_STAT_IGNORE_INPUT = 2;
    private const int HGE_TROPHY_CHECK_TIMING_CLEAR_DEMO = 0;
    private const int HGE_TROPHY_CHECK_TIMING_GOAL_IN = 1;
    private const int HGE_TROPHY_CHECK_TIMING_INC_ENE_KILL_COUNT = 2;
    private const int HGE_TROPHY_CHECK_TIMING_END_CREDITS_FINISHED = 3;
    private const int HGE_TROPHY_CHECK_TIMING_UPLOAD_RECORD = 4;
    private const int HGE_TROPHY_CHECK_TIMING_INC_CHALLENGE = 5;
    private const int HGE_TROPHY_CHECK_TIMING_MAX = 6;
    public const int HGD_TROPHY_1000_ENE_KILL_THRESHOLD = 1000;
    public const int HGD_TROPHY_ENE_KILL_COUNT_LIMIT = 1000;
    public const int HGD_TROPHY_INC_PLY_DMG_COUNT_LIMIT = 1;
    public const int HGD_TROPHY_FINAL_CLEAR_COUNT_LIMIT = 2;
    private const int HGE_TROPHY_TYPE_NORMAL = 0;
    private const int HGE_TROPHY_TYPE_MAX = 1;
    private const int HGE_TROPHY_ID_STAGE11_CLEAR = 0;
    private const int HGE_TROPHY_ID_FIRST_CHAOS_EMERALD = 1;
    private const int HGE_TROPHY_ID_1000_ENE_KILL = 2;
    private const int HGE_TROPHY_ID_SSONIC_IN_ALL_ACT = 3;
    private const int HGE_TROPHY_ID_REACH_END = 4;
    private const int HGE_TROPHY_ID_UPLOAD_ALL_RECORDS = 5;
    private const int HGE_TROPHY_ID_STAGES1_ALL_RINGS = 6;
    private const int HGE_TROPHY_ID_99_CHALLENGE = 7;
    private const int HGE_TROPHY_ID_ALL_CHAOS_EMERALDS = 8;
    private const int HGE_TROPHY_ID_STAGE11_CLEAR_IN_1MIN = 9;
    private const int HGE_TROPHY_ID_STAGEF_CLEAR_NO_DAMAGE = 10;
    private const int HGE_TROPHY_ID_100_RINGS = 11;
    private const int HGE_TROPHY_ID_ZONE1_FINISHED = 12;
    private const int HGE_TROPHY_ID_ZONE2_FINISHED = 13;
    private const int HGE_TROPHY_ID_ZONE3_FINISHED = 14;
    private const int HGE_TROPHY_ID_ZONE4_FINISHED = 15;
    private const int HGE_TROPHY_ID_MAX = 16;
    private const int HGE_TROPHY_AVATAR_ID_STAGE_ENDING_ALL_RINGS = 0;
    private const int HGE_TROPHY_AVATAR_ID_MAX = 1;
    public const int GMD_GMK_SPRING_INTNSITY_MAX = 7;
    public const int GMD_GMK_SPRING_LR_INTNSITY_MAX = 5;
    public const int GMD_GMK_SPRING_SPD = 30720;
    public const int GMD_GMK_SPRING_SPDAD = 6144;
    public const int GMD_GMK_EVE_FLAG_SPRING_BEHIND = 1;
    public const int GMD_GMK_EVE_FLAG_SPRING_NOPOS = 2;
    public const int GMD_GMK_EVE_FLAG_SPRING_NODISP = 4;
    public const int GMD_GMK_EVE_FLAG_SPRING_SPD_CLEAR = 8;
    public const int GMD_GMK_EVE_FLAG_SPRING_USE_SWITCH = 16;
    public const int GMD_GMK_EVE_FLAG_SPRING_TRUCK_CAM_SLOW = 32;
    public const int GMD_GMK_SHUTTER_BLOCK_SIZE = 64;
    public const int GMD_GMK_SHUTTER_SIZE = 64;
    public const int GMD_GMK_SHUTTER_NO_PRESS_DIE_FLOW_DISTANCE = 64;
    public const int GMD_GMK_SHUTTER_NO_PRESS_DIE_MOVE_LAND = 4;
    public const int GMD_GMK_SHUTTER_NO_PRESS_DIE_MOVE_JUMP = 1;
    public const int GMD_GMK_SHUTTER_EFFECT_OFFSET_X = 16;
    public const int GMD_GMK_SHUTTER_EFFECT_OFFSET_Y = 32;
    public const int GMD_GMK_SHUTTER_IN_CLOSE_DISTANCE = 262144;
    public const int GMD_GMK_SHUTTER_IN_CLOSE_POS_OFFSET = 262144;
    public const int GMD_GMK_SHUTTER_IN_CLOSE_MOVE = 16384;
    public const int GMD_GMK_SHUTTER_OUT_CLOSE_DISTANCE = 262144;
    public const long GMD_GMK_ROCK_CHASE_SPEED_ADD_SLOW = 512;
    public const long GMD_GMK_ROCK_CHASE_SPEED_MAX_SLOW = 65536;
    public const int GMD_GMK_ROCK_CHASE_DISTANCE_FAR = 1228800;
    public const long GMD_GMK_ROCK_CHASE_SPEED_ADD_FAR = 3840;
    public const long GMD_GMK_ROCK_CHASE_SPEED_MAX_OFFSET_FAR = 32768;
    public const long GMD_GMK_ROCK_CHASE_SPEED_ADD_MID = 768;
    public const long GMD_GMK_ROCK_CHASE_SPEED_MAX_OFFSET_MID = 10240;
    public const long GMD_GMK_ROCK_CHASE_SPEED_ADD_NEAR = -768;
    public const long GMD_GMK_ROCK_CHASE_SPEED_MAX_OFFSET_NEAR = -6144;
    public const int GMD_GMK_ROCK_CHASE_BOUND = 10;
    public const int GMD_GMK_ROCK_CHASE_BOUND_VAL_MIN = 32;
    public const int GMD_GMK_ROCK_CHASE_BOUND_VAL = 16;
    public const long GMD_GMK_ROCK_CHASE_BOUND_FALL = 8192;
    public const int GMD_GMK_ROCK_CHASE_QUAKE = 12288;
    public const int GMD_GMK_ROCK_CHASE_DELETE_TCB_DISTANCE = 2097152;
    public const long GMD_GMK_ROCK_FALL_SPEED_FALL = 336;
    public const long GMD_GMK_ROCK_FALL_SPEED_FALL_MAX = 32768;
    public const int GMD_GMK_ROCK_FALL_QUAKE_FALL = 4096;
    public const int GMD_GMK_ROCK_FALL_WAIT_TIME = 30;
    public const int GMD_GMK_ROCK_FALL_INTERCAL_NO_WAIT = 120;
    public const int GMD_GMK_ROCK_FALL_EFFECT_WAIT_TIME = 30;
    public const int GMD_GMK_ROCK_FALL_ROLL = 128;
    public const int GMD_GMK_ROCK_SIZE_HIT_RECT = 40;
    public const int GMD_GMK_ROCK_SIZE_FIELD_RECT = 28;
    public const int GMD_GMK_ROCK_SIZE_FIELD_RECT_BOTTOM = 42;
    public const int GMD_GMK_ROCK_SIZE_EFFECT_OFFEST_Y = 204800;
    public const int GMD_GMK_ROCK_FX32_BITSHIFT_BLOCK_SIZE = 5;
    public const int GMD_GMK_ROCK_FALL_HOOK_CREATE_OFFSET_Y = 262144;
    public const int GMD_GMK_ROCK_HOOK_POS_OFFSET_Y = 98304;
    public const int MGD_GMK_ROCK_ADD_ANGLE_Z = 1000;
    public const int GMD_GMK_ROCK_FALL_INTERVAL = 300;
    public const int GMD_GMK_ROCK_CHASE_DISTANCE_MID = 96;
    public const int GMD_GMK_ROCK_CHASE_CHECK_SPEED = 5;
    public const int GMD_GMK_ROCK_QUAKE_FALL = 12288;
    private const int GMD_GMK_ROCK_DIR_TYPE_INVALID = 0;
    private const int GMD_GMK_ROCK_DIR_TYPE_RIGHT = 1;
    private const int GMD_GMK_ROCK_DIR_TYPE_LEFT = 2;
    private const int GMD_GMK_ROCK_DIR_TYPE_MAX = 3;
    private const int GMD_GMK_CAPSULE_RIDE_FLAG = 1;
    private const int GMD_GMK_CAPSULE_ANIMAL_MAX = 20;
    private const int GMD_GMK_CAPSULE_END_TIME = 420;
    private const int GMD_GMK_BUBBLE_MODE_WAIT = 0;
    private const int GMD_GMK_BUBBLE_MODE_LADY = 1;
    private const int GMD_GMK_BUBBLE_MODE_START = 2;
    private const int GMD_GMK_BUBBLE_MODE_HIT_PLAYER = 3;
    private const int GMD_GMK_BUBBLE_MODE_WATER_LEVEL = 4;
    private const int GMD_GMK_BUBBLE_MODE_NUM = 5;
    public const short GMD_ENE_UNIUNI_EVE_FLAG_RIGHT = 1;
    public const short GMD_ENE_UNIUNI_MOVE_SPD_X = 1536;
    public const int GMD_ENE_UNIUNI_FW_TIME = 61440;
    public const int GMD_ENE_UNIUNI_TURN_FRAME = 40;
    public const int GMD_ENE_UNIUNI_SEARCH_LENGTH = 96;
    public const int GMD_ENE_UNIUNI_NEEDLE_MAX = 4;
    public const int GMD_ENE_UNIUNI_NEEDLE_SPD = 1;
    public const int GMD_ENE_UNIUNI_NEEDLE_ROTATE_SPD = 1;
    public const double GMD_ENE_UNIUNI_NEEDLE_DOWN_RATE = 0.98;
    public const float GMD_ENE_UNIUNI_NEEDLE_LENGTH_S = 17.5f;
    public const float GMD_ENE_UNIUNI_NEEDLE_LENGTH_L = 35.5f;
    public const short GMD_ENE_MOGU_EVE_FLAG_RIGHT = 1;
    public const short GMD_ENE_MOGU_EVE_FLAG_NOSEARCH = 2;
    public const short GMD_ENE_MOGU_MOVE_SPD_X = 2048;
    public const int GMD_ENE_MOGU_FW_TIME = 61440;
    public const short GMD_ENE_MOGU_TURN_FRAME = 40;
    public const int GMD_ENE_MOGU_GRID = 64;
    public const float GMD_ENE_MOGU_LENGTH_FIRST_JUMP = 160f;
    public const float GMD_ENE_MOGU_LENGTH_SEARCH_PLAYER = 80f;
    public const float GMD_ENE_MOGU_EFCT_JUMP_OFS_Y = -30f;
    public const float GMD_ENE_MOGU_JUMP_SPD_Y = -6f;
    public const float GMD_ENE_MOGU_JUMP_SPD_ADD_Y = 0.16f;
    public const float GMD_ENE_MOGU_JUMP_ADD_Y = 4f;
    public const uint GMD_ENE_MOGU_WATER = 1;
    public const uint GMD_ENE_MOGU_EFCT_ON = 2;
    public const int GMD_SCR_PLY_Y_OFFS = 24576;
    public const float GMD_SCR_ALLOW_SPD = 4f;
    public const int GMD_SCR_ROLL_MAX = 2048;
    public const int GMD_CAMERA_ADDMAP_NUM = 4;
    private const int GME_CAMERA_NO_MAIN = 0;
    private const int GME_CAMERA_NO_FAR = 1;
    private const int GME_CAMERA_NO_SNEAR = 2;
    private const int GME_CAMERA_NO_MID1 = 3;
    private const int GME_CAMERA_NO_MID2 = 4;
    private const int GME_CAMERA_NO_MID3 = 5;
    private const int GME_CAMERA_NO_WATER = 6;
    private const int GME_CAMERA_NO_MAX = 7;
    public const int GMD_CAM_FLAG_LOOKUP = 1;
    public const int GMD_CAM_FLAG_LOOKDOWN = 2;
    public const int GMD_CAM_LOOKUP_TIME = 90;
    public const int GMD_CAM_LOOKUP_SCR_SPD = 2;
    public const int GMD_CAM_LOOKUP_SCR_LMT_UP = 80;
    public const int GMD_CAM_LOOKUP_SCR_LMT_DW = -96;
    public const int GMD_CAMERA_TRUCK_ROLL_SPEED_ACCEL = 3328;
    public const int GMD_CAMERA_TRUCK_ROLL_SPEED_MAX = 4608;
    public const int GMD_CAMERA_TRUCK_ROLL_SPEED_SLOW_MAX = 672;
    private const uint GMD_BOSS5_RKT_FLAG_HIT_DONE = 1;
    private const uint GMD_BOSS5_RKT_FLAG_GROUND_STUCK = 2;
    private const uint GMD_BOSS5_RKT_FLAG_LEAKAGE_ACTIVE = 4;
    private const uint GMD_BOSS5_RKT_FLAG_LEAKAGE_NEEDED = 8;
    private const uint GMD_BOSS5_RKT_FLAG_JET_NML_ACTIVE = 16;
    private const uint GMD_BOSS5_RKT_FLAG_JET_REV_ACTIVE = 32;
    private const uint GMD_BOSS5_RKT_FLAG_SMOKE_ACTIVE = 64;
    private const uint GMD_BOSS5_RKT_FLAG_IS_DOWN = 128;
    private const uint GMD_BOSS5_RKT_FLAG_DOWN_VIB_DONE = 256;
    private const uint GMD_BOSS5_RKT_PLY_SEARCH_HIST_NUM = 21;
    private const int GME_BOSS5_RKT_TYPE_LEFT = 0;
    private const int GME_BOSS5_RKT_TYPE_RIGHT = 1;
    private const int GME_BOSS5_RKT_TYPE_MAX = 2;
    private const int GMD_BOSS5_RKT_NODE_IDX_DRILL = 3;
    private const int GMD_BOSS5_RKT_NODE_SNM_NUM = 1;
    private const int GMD_BOSS5_RKT_HIDE_RADIUS = 196608;
    private const float GMD_BOSS5_RKT_SEARCH_ROT_SPD_DEG = 1f;
    private const int GMD_BOSS5_RKT_FIELD_RECT_SIZE_LEFT = -16;
    private const int GMD_BOSS5_RKT_FIELD_RECT_SIZE_TOP = -16;
    private const int GMD_BOSS5_RKT_FIELD_RECT_SIZE_RIGHT = 16;
    private const int GMD_BOSS5_RKT_FIELD_RECT_SIZE_BOTTOM = 16;
    private const int GMD_BOSS5_RKT_OUT_RECT_SIZE_LEFT = -20;
    private const int GMD_BOSS5_RKT_OUT_RECT_SIZE_TOP = -20;
    private const int GMD_BOSS5_RKT_OUT_RECT_SIZE_RIGHT = 20;
    private const int GMD_BOSS5_RKT_OUT_RECT_SIZE_BOTTOM = 20;
    private const int GMD_BOSS5_RKT_IN_RECT_SIZE_LEFT = -10;
    private const int GMD_BOSS5_RKT_IN_RECT_SIZE_TOP = -10;
    private const int GMD_BOSS5_RKT_IN_RECT_SIZE_RIGHT = 10;
    private const int GMD_BOSS5_RKT_IN_RECT_SIZE_BOTTOM = 10;
    private const int GMD_BOSS5_RKT_NML_SEARCH_DELAY = 20;
    private const int GMD_BOSS5_RKT_NML_FLY_INIT_ACC = 4096;
    private const int GMD_BOSS5_RKT_NML_FLY_INIT_SPD = 40960;
    private const int GMD_BOSS5_RKT_NML_FLY_MAX_SPD = 49152;
    private const int GMD_BOSS5_RKT_NML_FLY_DISTNACE = 786432;
    private const int GMD_BOSS5_RKT_NML_FLY_INIT_DECEL = 4096;
    private const int GMD_BOSS5_RKT_NML_RET_INIT_ACC = 2048;
    private const int GMD_BOSS5_RKT_NML_RET_MAX_SPD = 40960;
    private const int GMD_BOSS5_RKT_STR_SEARCH_DELAY = 20;
    private const int GMD_BOSS5_RKT_STR_FLY_INIT_ACC = 6144;
    private const int GMD_BOSS5_RKT_STR_FLY_INIT_SPD = 40960;
    private const int GMD_BOSS5_RKT_STR_FLY_MAX_SPD = 61440;
    private const int GMD_BOSS5_RKT_STR_FLY_DITANCE = 786432;
    private const int GMD_BOSS5_RKT_STR_FLY_REDIR_ACC = 2048;
    private const int GMD_BOSS5_RKT_STR_FLY_REV_H_ACC_X = -2048;
    private const float GMD_BOSS5_RKT_STR_FLY_REDIR_ROT_SPD_DEG = 5f;
    private const int GMD_BOSS5_RKT_STR_FLY_ABOVE_INIT_ACC = 2048;
    private const float GMD_BOSS5_RKT_STR_FLY_ABOVE_ROT_SPD_DEG = 1f;
    private const int GMD_BOSS5_RKT_STR_NO_SEARCH_TIME = 10;
    private const int GMD_BOSS5_RKT_STR_FALL_INIT_SPD = 8192;
    private const int GMD_BOSS5_RKT_STR_RET_INIT_ACC = 1228;
    private const int GMD_BOSS5_RKT_STR_RET_INIT_SPD = 0;
    private const int GMD_BOSS5_RKT_STR_RET_MAX_SPD = 40960;
    private const float GMD_BOSS5_RKT_STR_RET_ROT_SPD_DEG = 2f;
    private const float GMD_BOSS5_RKT_STR_DOWN_RET_ROT_SPD_DEG = 5f;
    private const float GMD_BOSS5_RKT_STR_RECOVER_SLERP_SPD = 0.1f;
    private const float GMD_BOSS5_RKT_FALL_WOBBLE_DEG_MAX = 15f;
    private const int GMD_BOSS5_RKT_GRD_STUCK_TIME_SHORT = 30;
    private const int GMD_BOSS5_RKT_GRD_STUCK_TIME_LONG = 300;
    private const float GMD_BOSS5_RKT_GRD_STUCK_LEAN_DOWN_OFST_DEG = 180f;
    private const int GMD_BOSS5_RKT_GRD_STUCK_LEAN_DOWN_EXTEND_F_COL_HEIGHT = 8;
    private const float GMD_BOSS5_RKT_GRD_STUCK_LEAN_DOWN_RATIO_ADD = 0.075f;
    private const int GMD_BOSS5_RKT_GRD_STUCK_LEAN_DOWN_MOVE_DISTANCE = 131072;
    private const float GMD_BOSS5_RKT_GRD_STUCK_LEAN_OFST_DEG_ADD = -10f;
    private const float GMD_BOSS5_RKT_GRD_STUCK_LEAN_HIT_VIB_AMP_DEG_INIT = 10f;
    private const float GMD_BOSS5_RKT_GRD_STUCK_LEAN_HIT_VIB_AMP_DEG_SUBTRACT = 0.5f;
    private const int GMD_BOSS5_RKT_BLOW_TRIGGER_HIT_NUM = 3;
    private const int GMD_BOSS5_RKT_BLOW_FLY_SPD = 49152;
    private const int GMD_BOSS5_RKT_BOUNCE_FLY_SPD = 16384;
    private const int GMD_BOSS5_RKT_BOUNCE_RET_INIT_ACC = 1228;
    private const int GMD_BOSS5_RKT_BOUNCE_RET_INIT_SPD = 0;
    private const float GMD_BOSS5_RKT_BOUNCE_RET_ROT_SPD_DEG = 5f;
    private const int GMD_BOSS5_RKT_DMG_NO_HIT_TIME = 10;
    private const float GMD_BOSS5_RKT_STR_FLY_DISP_OFST = -10f;
    private const int GMD_BOSS5_RKT_LEAKAGE_ON_TIME = 20;
    private const int GMD_BOSS5_RKT_LEAKAGE_OFF_TIME = 20;
    private const int GMD_BOSS5_RKT_PLY_NML_REBOUND_X = 12288;
    private const int GMD_BOSS5_RKT_PLY_NML_REBOUND_Y = -16384;
    private const int GMD_BOSS5_RKT_PLY_NML_REBOUND_NOJUMPMOVE_TIME = 32768;
    private const int GMD_BOSS5_RKT_PLY_HOMING_REBOUND_X = 16384;
    private const int GMD_BOSS5_RKT_PLY_HOMING_REBOUND_Y = -16384;
    private const int GMD_BOSS5_RKT_PLY_HOMING_REBOUND_NOJUMPMOVE_TIME = 49152;
    private const int GMD_BOSS5_RKT_SEQ_LIFE_LEVEL_NUM = 3;
    private const int GMD_BOSS5_RKT_SEQ_WAITFALL_CHOICE_NUM = 3;
    private const int GME_BOSS5_RKT_SIDES_DMG_OUTSIDE = 0;
    private const int GME_BOSS5_RKT_SIDES_ATK_OUTSIDE = 1;
    private const int GME_BOSS5_RKT_SIDES_MAX = 2;
    private const float GMD_BOSS3_BLEND_SPD = 0.125f;
    private const int GMD_BOSS3_PART_IDX_BODY = 0;
    private const int GMD_BOSS3_PART_IDX_EGG = 1;
    private const int GMD_BOSS3_PART_IDX_MAX = 2;
    private const int GMD_BOSS3_ACT_ID_START = 0;
    private const int GMD_BOSS3_ACT_ID_MOVE = 1;
    private const int GMD_BOSS3_ACT_ID_PRE_BATTLE = 2;
    private const int GMD_BOSS3_ACT_ID_SEARCH_L = 3;
    private const int GMD_BOSS3_ACT_ID_SEARCH_R = 4;
    private const int GMD_BOSS3_ACT_ID_SIGN = 5;
    private const int GMD_BOSS3_ACT_ID_LAUGH_L = 6;
    private const int GMD_BOSS3_ACT_ID_LAUGH_R = 7;
    private const int GMD_BOSS3_ACT_ID_ESCAPE = 8;
    private const int GMD_BOSS3_ACT_ID_MAX = 9;
    private const int GMD_BOSS3_EGG_ACT_ID_LAUGH_L = 0;
    private const int GMD_BOSS3_EGG_ACT_ID_LAUGH_R = 1;
    private const int GMD_BOSS3_EGG_ACT_ID_DAMAGE = 2;
    private const int GMD_BOSS3_EGG_ACT_ID_MAX = 3;
    private const int GMD_BOSS3_BODY_SNM_INDEX_BODY = 0;
    private const int GMD_BOSS3_BODY_SNM_INDEX_MAX = 1;
    private const int GMD_BOSS3_MGR_LIFE_CHASE = 6;
    private const int GMD_BOSS3_MGR_LIFE_BATTLE = 2;
    private const int GMD_BOSS3_MGR_LIFE = 8;
    private const int GMD_BOSS3_MGR_LIFE_FINAL = 4;
    private const int GMD_BOSS3_MGR_FLAG_SETUP_COMPLETE = 1;
    private const int GMD_BOSS3_MGR_FLAG_CLEAR_BOSS = 2;
    private const int GMD_BOSS3_BODY_MOVE_AREA_LIMIT_WIDTH = 327680;
    private const int GMD_BOSS3_BODY_FIELD_RECT_SIZE = 24;
    private const int GMD_BOSS3_EFFECT_CLIP_OFFSET = 64;
    private const int GMD_BOSS3_BODY_NODE_CNM_NUM = 0;
    private const int GMD_BOSS3_BODY_CHASE_MOVE_SPEED = 6553;
    private const int GMD_BOSS3_BODY_CHASE_MOVE_SPEED_ESCAPE = 6553;
    private const int GMD_BOSS3_BODY_BATTLE_MOVE_SPEED_MOVE = 4096;
    private const int GMD_BOSS3_BODY_START_TIME_WAIT_END = 180;
    private const int GMD_BOSS3_BODY_START_WAIT_OUT_OFFSET = 64;
    private const float GMD_BOSS3_BODY_FRAME_TURN = 60f;
    private const float GMD_BOSS3_BODY_FRAME_DRIFT = 60f;
    private const float GMD_BOSS3_CHASE_ADJUST_SPEED = 0.2f;
    private const int GMD_BOSS3_BATTLE_MOVE_NUM = 2;
    private const float GMD_BOSS3_BODY_BATTLE_CAMERA_SCALE = 0.85f;
    private const float GMD_BOSS3_BODY_BATTLE_CAMERA_FRAME = 60f;
    private const int GMD_BOSS3_BATTLE_FRAME_WAIT_START = 120;
    private const int GMD_BOSS3_BATTLE_FRAME_WAIT_ACTIVE = 240;
    private const int GMD_BOSS3_BATTLE_FRAME_WAIT_ACTIVE_FINAL = 150;
    private const int GMD_BOSS3_BATTLE_FRAME_WAIT = 120;
    private const int GMD_BOSS3_BATTLE_FRAME_WAIT_RETURN = 30;
    private const int GMD_BOSS3_BODY_DEF_PLAYER_MOVE_X_HOMING = 12288;
    private const int GMD_BOSS3_BODY_DEF_PLAYER_MOVE_Y_HOMING = 12288;
    private const int GMD_BOSS3_BODY_DEF_PLAYER_MOVE_X_NORMAL = 2048;
    private const int GMD_BOSS3_BODY_DEF_PLAYER_MOVE_Y_NORMAL = 1228;
    private const int GMD_BOSS3_BODY_DEF_PLAYER_NO_JUMP_MOVE_TIME = 102400;
    private const uint GMD_BOSS3_BODY_DEF_NO_HIT_TIME = 10;
    private const uint GMD_BOSS3_BODY_INVINVIBLE_TIME = 120;
    private const float GMD_BOSS3_BODY_DMG_FLICKER_RADIUS = 32f;
    private const int GMD_BOSS3_BODY_DEFEAT_TIME_WAIT_START = 40;
    private const int GMD_BOSS3_BODY_DEFEAT_TIME_WAIT_BOMB = 120;
    private const int GMD_BOSS3_BODY_DEFEAT_TIME_WAIT_SCATTER = 40;
    private const int GMD_BOSS3_BODY_DEFEAT_TIME_WAIT_END = 120;
    private const int GMD_BOSS3_BODY_DEFEAT_FALL_POS_Y = 1843200;
    private const int GMD_BOSS3_BODY_DEFEAT_FLASH_INTO_TIME = 4;
    private const int GMD_BOSS3_BODY_DEFEAT_FLASH_KEEP_TIME = 5;
    private const int GMD_BOSS3_BODY_DEFEAT_FLASH_RETURN_TIME = 30;
    private const int GMD_BOSS3_BODY_ESCAPE_SCROLL_UNLOCK_DISTANCE = -131072;
    private const int GMD_BOSS3_BODY_ESCAPE_SPD_X_ADD = 327;
    private const int GMD_BOSS3_BODY_ESCAPE_SPD_Y_ADD = -40;
    private const int GMD_BOSS3_BODY_ESCAPE_SPD_X_MAX = 6144;
    private const int GMD_BOSS3_BODY_ESCAPE_SPD_Y_MAX = -1228;
    private const int GMD_BOSS3_BODY_ESCAPE_SCREEN_OUT_LENGTH = 64;
    private const uint GMD_BOSS3_BODY_FLAG_INVINCIBLE = 1;
    private const uint GMD_BOSS3_BODY_FLAG_AFTERBURNER_ACTIVE = 2;
    private const uint GMD_BOSS3_BODY_FLAG_NOATTACK = 16;
    private const uint GMD_BOSS3_BODY_FLAG_SIGNAL_B2E_ESCAPE = 8388608;
    private const uint GMD_BOSS3_BODY_FLAG_SIGNAL_B2E_BURNT = 16777216;
    private const uint GMD_BOSS3_BODY_FLAG_SIGNAL_B2B_AFTERBURNER = 33554432;
    private const uint GMD_BOSS3_BODY_FLAG_SIGNAL_B2B_SCATTER = 134217728;
    private const uint GMD_BOSS3_BODY_FLAG_SIGNAL_B2E_HIT = 268435456;
    private const uint GMD_BOSS3_BODY_FLAG_SIGNAL_B2E_DAMAGE = 536870912;
    private const uint GMD_BOSS3_BODY_FLAG_SIGNAL_B2B_DAMAGE = 1073741824;
    private const uint GMD_BOSS3_BODY_FLAG_SIGNAL_B2B_DEFEAT = 2147483648;
    private const uint GMD_BOSS3_EGG_FLAG_EGG_ACT_ACTIVE = 1;
    private const uint GMD_BOSS3_EGG_FLAG_SWEAT_ACTIVE = 2;
    private const int GMD_BOSS3_BODY_STATE_NO_OPERATION = 0;
    private const int GMD_BOSS3_BODY_STATE_START = 1;
    private const int GMD_BOSS3_BODY_STATE_CHASE_MOVE = 2;
    private const int GMD_BOSS3_BODY_STATE_PRE_BATTLE = 3;
    private const int GMD_BOSS3_BODY_STATE_BATTLE = 4;
    private const int GMD_BOSS3_BODY_STATE_DEFEAT = 5;
    private const int GMD_BOSS3_BODY_STATE_ESCAPE = 6;
    private const int GMD_BOSS3_BODY_STATE_MAX = 7;
    private const int GMD_BOSS3_EGGMAN_SEQ_IDLE = 0;
    private const int GMD_BOSS3_EGGMAN_SEQ_MAX = 1;
    private const int GMD_BOSS3_EFFECT_BOMB_OFFSET_Z = 131072;
    private const float GMD_BOSS3_EFFECT_SWEAT_DIST_OFFSET_Y = 32f;
    private const float GMD_BOSS3_EFFECT_AFTERBURNER_DIST_OFFSET_Z = -30f;
    private const float GMD_BOSS3_EFFECT_AFTERBURNER_SMOKE_DIST_OFFSET_Z = -32f;
    private const float GMD_BOSS3_EFFECT_BODY_SMOKE_DIST_OFFSET_Z = -32f;
    private const float GMD_BOSS3_SCATTER_SPEED = 1f;
    public const uint AMD_AME_VERSION = 131072;
    public const uint AMD_AME_ROTATE_QUAT = 1;
    public const uint AMD_AME_NODE_NAME_LENGTH = 12;
    public const uint AMD_AME_FLAG_NODE_MASK = 4278190080;
    public const uint AMD_AME_FLAG_NODE_ZTEST = 16777216;
    public const uint AMD_AME_FLAG_NODE_ZMASK = 33554432;
    public const uint AMD_AME_FLAG_NODE_IGNORE_TRANSLATE = 67108864;
    public const uint AMD_AME_FLAG_NODE_IGNORE_ROTATE = 134217728;
    public const uint AMD_AME_FLAG_NODE_ZSORT_OFF = 268435456;
    public const uint AMD_AME_FLAG_NODE_ZSORT_OFF_NEAR = 268435456;
    public const uint AMD_AME_FLAG_NODE_ZSORT_OFF_FAR = 536870912;
    public const uint AMD_AME_FLAG_NODE_SOFTPTR_OFF = 1073741824;
    public const uint AMD_AME_FLAG_NODE_SHADOW_ON = 2147483648;
    public const uint AMD_AME_FLAG_NODE_ZTEST_BIT = 24;
    public const uint AMD_AME_FLAG_NODE_ZMASK_BIT = 25;
    public const uint AMD_AME_FLAG_TEXTURE = 4096;
    public const uint AMD_AME_FLAG_TEXTURE_CROPPING = 8192;
    public const uint AMD_AME_FLAG_TEXTURE_UV_SCROLL = 16384;
    public const uint AMD_AME_FLAG_TEXTURE_ANIMATION = 32768;
    public const uint AMD_AME_FLAG_TEXTURE_LOOP = 65536;
    public const uint AMD_AME_FLAG_TEXTURE_FLIP_U_RANDOM = 131072;
    public const uint AMD_AME_FLAG_TEXTURE_FLIP_V_RANDOM = 262144;
    public const uint AMD_AME_FLAG_TEXTURE_RANDOM_KEY = 524288;
    public const uint AMD_AME_FLAG_TEXTURE_FLIP_U_FIXED = 1048576;
    public const uint AMD_AME_FLAG_TEXTURE_FLIP_V_FIXED = 2097152;
    public const uint AMD_AME_FLAG_SPRITE_ALPHA_BLEND = 1;
    public const uint AMD_AME_FLAG_SPRITE_ALPHA_TEST = 2;
    public const uint AMD_AME_FLAG_SPRITE_RANDOM_TWIST_REVERSE = 4;
    public const uint AMD_AME_FLAG_LINE_ALPHA_BLEND = 1;
    public const uint AMD_AME_FLAG_LINE_ALPHA_TEST = 2;
    public const uint AMD_AME_FLAG_PLANE_ALPHA_BLEND = 1;
    public const uint AMD_AME_FLAG_PLANE_ALPHA_TEST = 2;
    public const uint AMD_AME_FLAG_PLANE_RANDOM_ROTATE = 4;
    public const uint AMD_AME_FLAG_PLANE_RANDOM_AXIS = 8;
    public const uint AMD_AME_FLAG_MODEL_ALPHA_BLEND = 1;
    public const uint AMD_AME_FLAG_MODEL_ALPHA_TEST = 2;
    public const uint AMD_AME_FLAG_MODEL_RANDOM_ROTATE = 4;
    public const uint AMD_AME_FLAG_MODEL_RANDOM_AXIS = 8;
    public const uint AMD_AME_FLAG_SURFACE_EDGE_ONLY = 1;
    public const uint AMD_AME_FLAG_CIRLCE_EDGE_ONLY = 1;
    public const uint AMD_AME_FLAG_CIRLCE_EQUALLY = 2;
    public const uint AMD_AME_FLAG_FIELD_ROOT_TRANSLATE = 1;
    public const uint AMD_AME_FLAG_FIELD_ROOT_ROTATE = 2;
    public const int AME_AME_SUPER_CLASS_ID_MASK = 65280;
    public const int AME_AME_CLASS_ID_MASK = 255;
    public const int AME_AME_NODE_TYPE_EMITTER = 256;
    public const int AME_AME_NODE_TYPE_PARTICLE = 512;
    public const int AME_AME_NODE_TYPE_FIELD = 768;
    private const int IZE_FADE_TYPE_BLACK_FADEIN = 0;
    private const int IZE_FADE_TYPE_BLACK_FADEOUT = 1;
    private const int IZE_FADE_TYPE_WHITE_FADEIN = 2;
    private const int IZE_FADE_TYPE_WHITE_FADEOUT = 3;
    private const int IZE_FADE_TYPE_MAX = 4;
    private const int IZE_FADE_SET_TYPE_NORMAL = 0;
    private const int IZE_FADE_SET_TYPE_TAKEOEVER = 1;
    private const int IZE_FADE_SET_TYPE_MAX = 2;
    public const int IZD_FADE_TASK_PRIO = 4096;
    public const int IZD_FADE_TASK_PAUSE_LEVEL_DEF = 0;
    public const int IZD_FADE_TASK_GROUP_DEF = 0;
    public const int IZD_FADE_DT_PRIO_DEF = 61439;
    public const int IZD_FADE_DRAW_STATE_DEF = 18;
    public const int IZD_FADE_SURFACE_SET_NUM = 2;
    public const int IZD_FADE_VTX_NUM = 4;
    public const uint IZD_FADE_FLAG_DRAW_START = 1;
    public const uint IZD_FADE_FLAG_STOP_UPDATE_1FRAME = 2;
    public const int IZD_RGBA8888_SHIFT_RED = 24;
    public const int IZD_RGBA8888_SHIFT_GREEN = 16;
    public const int IZD_RGBA8888_SHIFT_BLUE = 8;
    public const int IZD_RGBA8888_SHIFT_ALPHA = 0;
    public const float GMD_WATER_SURFACE_DRAW_WIDTH = 300f;
    public const float GMD_WATER_SURFACE_DRAW_HIEGHT = 300f;
    public const float GMD_WATER_SURFACE_TEX_V_HEIGHT = 150f;
    public const float GMD_WATER_SURFACE_TEX_U_NUM = 1f;
    public const int GMD_WATER_SURFACE_DRAW_NUM = 3;
    public const float GMD_WATER_SURFACE_DRAW_TEX_SIZE = 128f;
    public const float GMD_WATER_SURFACE_DRAW_TEX_OFFSET_V = 0.3f;
    public const float GMD_WATER_SURFACE_DRAW_TEX_BASE_SURFACE_U = 22f;
    public const float GMD_WATER_SURFACE_DRAW_TEX_BASE_SURFACE_V = 64f;
    public const float GMD_WATER_SURFACE_DRAW_TEX_ADJUST_SIZE = 0.5f;
    public const int GMD_MAP_FAR_NNMODEL_OBJECT_START = 1;
    public const float GMD_MAP_FAR_ZONE_1_CAMERA_POS_Z = 160f;
    public const float GMD_MAP_FAR_MP_DRAW_POS_Z = 32f;
    public const int GMD_MPA_FAR_OBJ_NUM = 16;
    public const int GMD_MAP_FAR_SCENE_TILE_SIZE_X = 128;
    public const int GMD_MAP_FAR_SCENE_TILE_SIZE_Z = 128;
    public const int GMD_MAP_FAR_SCENE_TILE_NUM_X = 3;
    public const int GMD_MAP_FAR_SCENE_TILE_NUM_Z = 12;
    public const int GMD_MAP_FAR_MP_OBJECT_START = 1;
    public const int GMD_MAP_FAR_MP_DRAW_WIDTH = 6;
    public const int GMD_MAP_FAR_MP_DRAW_HEIGHT = 6;
    public const int GMD_MAP_FAR_MP_DRAW_MARGIN = 1;
    public const float GMD_MAP_FAR_MP_BLOCK_SIZE = 20f;
    public const float GMD_MAP_FAR_MP_BLOCK_DRAW_SIZE = 64f;
    public const int GMD_MAP_FAR_MP_POS_Z = 131072;
    public const int GMD_MAP_FAR_DATA_INDEX_ZONE_1_MP_HEADER = 1;
    public const int GMD_MAP_FAR_DATA_INDEX_ZONE_1_MD_HEADER = 3;
    public const uint GMD_MAP_FAR_DATA_INDEX_INVALID = 4294967295;
    public const int GMD_GMD_WATER_AREA_USE_DIRECT_CHANGE_LEVEL = 0;
    public const int GMD_GMK_WATER_AREA_RECT_MARGIN = 34;
    private const uint GMD_DMK_WATER_AREA_TYPE_START = 0;
    private const uint GMD_DMK_WATER_AREA_TYPE_DELAY_LEFT = 1;
    private const uint GMD_DMK_WATER_AREA_TYPE_DELAY_RIGHT = 2;
    private const uint GMD_DMK_WATER_AREA_TYPE_DELAY_TOP = 3;
    private const uint GMD_DMK_WATER_AREA_TYPE_DELAY_BOTTOM = 4;
    private const uint GMD_DMK_WATER_AREA_TYPE_NUM = 5;
    private const uint GMD_EVENT_ID_WATER_AREA_INVALID = 4294967295;
    public const int GMD_GMK_WATER_AREA_RESTART_SIZE = 524288;
    public const int GMD_GMK_DRAIN_TANK_OFFSET_Y = -32768;
    public const int GMD_GMK_DRAIN_TANK_HIT_LENGTH = 65536;
    public const int GMD_GMK_DRAIN_TANK_SPLASH_OFFSET_Y = 65536;
    private const int GMD_GMK_DRAIN_TANK_TYPE_IN = 0;
    private const int GMD_GMK_DRAIN_TANK_TYPE_OUT = 1;
    private const int GMD_GMK_DRAIN_TANK_TYPE_SPLASH = 2;
    private const int GMD_GMK_DRAIN_TANK_TYPE_NUM = 3;
    public const int GMD_GMK_DRAIN_TANK_OFFSET_WATER_LEVEL = 196608;
    public const int GMD_GMK_DRAIN_TANK_START_WATER_LEVEL = 196608;
    public const int GMD_GMK_DRAIN_TANK_KEY_FRAME = 0;
    public const int GMD_GMK_DRAIN_TANK_KEY_MARGIN = 8192;
    public const int GMD_GMK_DRAIN_TANK_PLAYER_SPEED_MAX_X = 1792;
    public const int GMD_GMK_DRAIN_TANK_PLAYER_SPEED_MAX_Y = 1792;
    public const int GMD_GMK_DRAIN_TANK_PLAYER_SPEED_FLOAT_MAX = 2048;
    public const int GMD_GMK_DRAIN_TANK_OFFSET_FLOAT = 131072;
    public const int GMD_GMK_DRAIN_TANK_PLAYER_SPEED_OUT = 65536;
    public const int GMD_GMK_DRAIN_TANK_PLAYER_SPEED_DOWN_X = 65536;
    public const int GMD_GMK_DRAIN_TANK_PLAYER_SPEED_ADD_DOWN_X = -896;
    public const int GMD_GMK_DRAIN_TANK_BITSHIFT_CAMERA = 5;
    public const int GMD_GMK_DRAIN_TANK_BITSHIFT_SPEED_OUT = 3;
    public const int GMD_GMK_DRAIN_TANK_BITSHIFT_SPEED_PLAYER = 2;
    public const int GMD_GMK_DRAIN_TANK_BITSHIFT_WATER_LEVEL_DOWN_SPEED = 4;
    public const float GMD_GMK_DRAIN_TANK_WATER_LEVEL_DOWN_SPEED_SPLASH = 0.001f;
    public const int GMD_GMK_DRAIN_TANK_WATER_CLIP_B = 64;
    public const int GMD_GMK_DRAIN_TANK_WATER_CLIP_L = 152;
    public const int GMD_GMK_DRAIN_TANK_WATER_CLIP_R = 96;
    public const int GMD_GMK_DRAIN_TANK_WATER_CLIP_OUT_WIDTH = 64;
    public const int GMD_GMK_DRAIN_TANK_WATER_CLIP_OUT_HEIGHT = 96;
    public const int GMD_GMK_DRAIN_TANK_MAP_SIZE = 64;
    public const int GMD_GMK_DRAIN_TANK_SPLASH_EFFECT_OFFSET_Y = -131072;
    public const int GMD_GMK_DRAIN_TANK_SPLASH_EFFECT_OFFSET_Z = 131072;
    public const int GMD_GMK_DRAIN_TANK_SPLASH_EFFECT_SPEED_X = 49152;
    public const int GMD_GMK_DRAIN_TANK_SPLASH_EFFECT_SPEED_Y = 12288;
    public const int GMD_GMK_DRAIN_TANK_SPLASH_EFFECT_SPEED_ADD_X = -1376;
    public const int GMD_GMK_DRAIN_TANK_SPLASH_EFFECT_SPEED_ADD_Y = 0;
    public const int GMD_GMK_DRAIN_TANK_SPLASH_EFFECT_SPEED_ROT_Z = 384;
    public const int GMD_GMK_DRAIN_TANK_SPLASH_EFFECT_2_OFFSET_Y = -65536;
    public const int GMD_GMK_DRAIN_TANK_SPLASH_EFFECT_2_OFFSET_Z = 131072;
    public const int GMD_GMK_DRAIN_TANK_OFFSET_OUT_TO_CAMERA = 737280;
    public const int GMD_GMK_DRAIN_TANK_DELETE_TASK_DISTANCE_X_NORMAL = 1843200;
    public const int GMD_GMK_DRAIN_TANK_DELETE_TASK_DISTANCE_Y_NORMAL = 1228800;
    public const int GMD_GMK_DRAIN_TANK_DELETE_TASK_DISTANCE_X_SPLASH = 1638400;
    public const int GMD_GMK_DRAIN_TANK_DELETE_TASK_DISTANCE_Y_SPLASH = 1228800;
    public const int GMD_GMK_DRAIN_TANK_ROLL_SE_INTERVAL = 20;
    public const int GMD_GMK_DRAINTANK_SPLASH_ALPHA_TIME = 60;
    public const int GMD_GMK_CANNON_PLAYER_SHOOT_SPD = 61440;
    private const int GME_GMK_RECT_OBJ_CANNON = 0;
    private const int GME_GMK_RECT_OBJ_CANNON_COL = 1;
    private const int GME_GMK_RECT_OBJ_BASE_COL = 2;
    private const int GME_GMK_RECT_OBJ_MAX = 3;
    public const int GME_GMK_CANNON_STARTUP_RECT_X = -12;
    public const int GME_GMK_CANNON_STARTUP_RECT_W = 24;
    public const int GME_GMK_CANNON_STARTUP_RECT_Y = -38;
    public const int GME_GMK_CANNON_STARTUP_RECT_H = 32;
    public const int GME_GMK_CANNON_COL_BODY_RECT_X = -12;
    public const int GME_GMK_CANNON_COL_BODY_RECT_W = 24;
    public const int GME_GMK_CANNON_COL_BODY_RECT_Y = -30;
    public const int GME_GMK_CANNON_COL_BODY_RECT_H = 56;
    public const int GME_GMK_CANNON_COL_BASE_RECT_X = -40;
    public const int GME_GMK_CANNON_COL_BASE_RECT_W = 80;
    public const int GME_GMK_CANNON_COL_BASE_RECT_Y = -56;
    public const int GME_GMK_CANNON_COL_BASE_RECT_H = 56;
    public const int GMD_GMK_CANNON_ANGLE_PARTS = 6;
    public const int GMD_GMK_CANNON_ANGLE_1NOTCH = 2730;
    public const int GMD_GMK_CANNON_ANGLE_1NOTCH_CHK = 2730;
    public const int GMD_GMK_CANNON_ANGLE_RIGHT = 16380;
    public const int GMD_GMK_CANNON_ANGLE_LEFT = -16380;
    public const int GMD_GMK_CANNON_ANGLE_ROT_SPD = 342;
    public const int GMD_GMK_CANNON_ANGLE_270 = -16380;
    public const int GMD_GMK_CANNON_ANGLE_285 = -13650;
    public const int GMD_GMK_CANNON_ANGLE_300 = -10920;
    public const int GMD_GMK_CANNON_ANGLE_315 = -8190;
    public const int GMD_GMK_CANNON_ANGLE_330 = -5460;
    public const int GMD_GMK_CANNON_ANGLE_345 = -2730;
    public const int GMD_GMK_CANNON_ANGLE_0 = 0;
    public const int GMD_GMK_CANNON_ANGLE_15 = 2730;
    public const int GMD_GMK_CANNON_ANGLE_30 = 5460;
    public const int GMD_GMK_CANNON_ANGLE_45 = 8190;
    public const int GMD_GMK_CANNON_ANGLE_60 = 10920;
    public const int GMD_GMK_CANNON_ANGLE_75 = 13650;
    public const int GMD_GMK_CANNON_ANGLE_90 = 16380;
    private const int GMD_EVENT_ID_ENEMY_START = 0;
    private const int GMD_EVENT_ID_ENE_HARISENBO = 0;
    private const int GMD_EVENT_ID_ENE_MOTORA = 1;
    private const int GMD_EVENT_ID_ENE_STINGER = 2;
    private const int GMD_EVENT_ID_ENE_GABUCCHO = 3;
    private const int GMD_EVENT_ID_ENE_MEREON = 4;
    private const int GMD_EVENT_ID_ENE_MEREON_F = 5;
    private const int GMD_EVENT_ID_ENE_MOGRIN = 6;
    private const int GMD_EVENT_ID_ENE_GUARDON = 7;
    private const int GMD_EVENT_ID_ENE_TERUSTAR = 8;
    private const int GMD_EVENT_ID_ENE_KANI = 9;
    private const int GMD_EVENT_ID_ENE_HAROGEN = 10;
    private const int GMD_EVENT_ID_ENE_UNIDESU = 11;
    private const int GMD_EVENT_ID_ENE_UNIUNI = 12;
    private const int GMD_EVENT_ID_ENE_BUKUBUKU = 13;
    private const int GMD_EVENT_ID_ENE_KAMA = 14;
    private const int GMD_EVENT_ID_ENE_HARISENBO_R = 15;
    private const int GMD_EVENT_ID_ENE_ZAKO_END = 39;
    private const int GMD_EVENT_ID_ENE_ZAKO_NUM = 40;
    private const int GMD_EVENT_ID_ENE_BOSS_TOP = 40;
    private const int GMD_EVENT_ID_ENE_BOSS_FINAL = 55;
    private const int GMD_EVENT_ID_ENE_BOSS4 = 56;
    private const int GMD_EVENT_ID_ENE_BOSS3 = 57;
    private const int GMD_EVENT_ID_ENE_BOSS2 = 58;
    private const int GMD_EVENT_ID_ENE_BOSS1 = 59;
    private const int GMD_EVENT_ID_ENE_NUM = 60;
    private const int GMD_EVENT_ID_GIMMICK_START = 60;
    private const int GMD_EVENT_ID_GMK_TOUCH_EARTH = 60;
    private const int GMD_EVENT_ID_GMK_A = 61;
    private const int GMD_EVENT_ID_GMK_B = 62;
    private const int GMD_EVENT_ID_GMK_ITEM_HISPEED = 63;
    private const int GMD_EVENT_ID_GMK_ITEM_INVINCIBLE = 64;
    private const int GMD_EVENT_ID_GMK_ITEM_RING_10 = 65;
    private const int GMD_EVENT_ID_GMK_ITEM_BARRIER = 66;
    private const int GMD_EVENT_ID_GMK_ITEM_1UP = 67;
    private const int GMD_EVENT_ID_GMK_ITEM_RESERVE1 = 68;
    private const int GMD_EVENT_ID_GMK_ITEM_RESERVE2 = 69;
    private const int GMD_EVENT_ID_GMK_SPRING_U = 70;
    private const int GMD_EVENT_ID_GMK_SPRING_RU = 71;
    private const int GMD_EVENT_ID_GMK_SPRING_R = 72;
    private const int GMD_EVENT_ID_GMK_SPRING_RD = 73;
    private const int GMD_EVENT_ID_GMK_SPRING_D = 74;
    private const int GMD_EVENT_ID_GMK_SPRING_LD = 75;
    private const int GMD_EVENT_ID_GMK_SPRING_L = 76;
    private const int GMD_EVENT_ID_GMK_SPRING_LU = 77;
    private const int GMD_EVENT_ID_GMK_SPRING_RUG = 78;
    private const int GMD_EVENT_ID_GMK_SPRING_LUG = 79;
    private const int GMD_EVENT_ID_GMK_START = 80;
    private const int GMD_EVENT_ID_LAND_CMN = 81;
    private const int GMD_EVENT_ID_LAND_BIG = 82;
    private const int GMD_EVENT_ID_LAND_COL = 83;
    private const int GMD_EVENT_ID_ROCK_CHASE = 84;
    private const int GMD_EVENT_ID_ROCK_FALL = 85;
    private const int GMD_EVENT_ID_PULLEY_BASE = 86;
    private const int GMD_EVENT_ID_PULLEY_POLE_L = 87;
    private const int GMD_EVENT_ID_PULLEY_POLE_R = 88;
    private const int GMD_EVENT_ID_PULLEY_ROPE_F = 89;
    private const int GMD_EVENT_ID_PULLEY_ROPE_TR = 90;
    private const int GMD_EVENT_ID_NEEDLE_U = 91;
    private const int GMD_EVENT_ID_NEEDLE_L = 92;
    private const int GMD_EVENT_ID_NEEDLE_D = 93;
    private const int GMD_EVENT_ID_NEEDLE_R = 94;
    private const int GMD_EVENT_ID_PULLEY_TROPE_TL = 95;
    private const int GMD_EVENT_ID_ROCK_RIDE = 96;
    private const int GMD_EVENT_ID_ACT_NEEDLE_U = 97;
    private const int GMD_EVENT_ID_ACT_NEEDLE_D = 98;
    private const int GMD_EVENT_ID_FALLDIE = 99;
    private const int GMD_EVENT_ID_GMK_SPRING_RUG_A = 100;
    private const int GMD_EVENT_ID_GMK_SPRING_LUG_A = 101;
    private const int GMD_EVENT_ID_WATER_AREA_L = 102;
    private const int GMD_EVENT_ID_WATER_AREA_R = 103;
    private const int GMD_EVENT_ID_WATER_AREA_T = 104;
    private const int GMD_EVENT_ID_WATER_AREA_B = 105;
    private const int GMD_EVENT_ID_WATER_AREA_F = 106;
    private const int GMD_EVENT_ID_GMK_DASH_PANEL_R = 107;
    private const int GMD_EVENT_ID_GMK_DASH_PANEL_L = 108;
    private const int GMD_EVENT_ID_GMK_DASH_PANEL_VR = 109;
    private const int GMD_EVENT_ID_GMK_DASH_PANEL_VL = 110;
    private const int GMD_EVENT_ID_BUBBLE = 111;
    private const int GMD_EVENT_ID_TARZAN_ROPE = 112;
    private const int GMD_EVENT_ID_TARZAN_ROPE_L = 113;
    private const int GMD_EVENT_ID_TARZAN_ROPE_R = 114;
    private const int GMD_EVENT_ID_WATER_SLIDER_L = 115;
    private const int GMD_EVENT_ID_WATER_SLIDER_L_30D = 116;
    private const int GMD_EVENT_ID_WATER_SLIDER_L_45D = 117;
    private const int GMD_EVENT_ID_WATER_SLIDER_L_60D = 118;
    private const int GMD_EVENT_ID_WATER_SLIDER_R = 119;
    private const int GMD_EVENT_ID_WATER_SLIDER_R_30D = 120;
    private const int GMD_EVENT_ID_WATER_SLIDER_R_45D = 121;
    private const int GMD_EVENT_ID_WATER_SLIDER_R_60D = 122;
    private const int GMD_EVENT_ID_GOALPANEL = 123;
    private const int GMD_EVENT_ID_BREAKLAND1_R = 124;
    private const int GMD_EVENT_ID_BREAKLAND1_L = 125;
    private const int GMD_EVENT_ID_PISTON_UP = 126;
    private const int GMD_EVENT_ID_PISTON_DOWN = 127;
    private const int GMD_EVENT_ID_LAND_AROUND = 128;
    private const int GMD_EVENT_ID_POINTMARKER = 129;
    private const int GMD_EVENT_ID_BREAKOBJ = 130;
    private const int GMD_EVENT_ID_CHANGE_CAM_CENTER = 131;
    private const int GMD_EVENT_ID_SCR_LIMIT_SET = 132;
    private const int GMD_EVENT_ID_BELTCONVEYOR = 133;
    private const int GMD_EVENT_ID_BREAKWALL1_L1 = 134;
    private const int GMD_EVENT_ID_BREAKWALL1_L2 = 135;
    private const int GMD_EVENT_ID_BREAKWALL1_R1 = 136;
    private const int GMD_EVENT_ID_BREAKWALL1_R2 = 137;
    private const int GMD_EVENT_ID_BREAKWALL1_C = 138;
    private const int GMD_EVENT_ID_S_PIPE = 139;
    private const int GMD_EVENT_ID_BREAKWALL1_C2 = 140;
    private const int GMD_EVENT_ID_STOPPER_NORM = 141;
    private const int GMD_EVENT_ID_STOPPER_SLOT = 142;
    private const int GMD_EVENT_ID_BREAKFLOOR = 143;
    private const int GMD_EVENT_ID_UPBUMPER_L = 144;
    private const int GMD_EVENT_ID_UPBUMPER_R = 145;
    private const int GMD_EVENT_ID_BUMPER_TRI_I_TOP = 146;
    private const int GMD_EVENT_ID_BUMPER_TRI_I_BOTTOM = 147;
    private const int GMD_EVENT_ID_BUMPER_TRI_I_LEFT = 148;
    private const int GMD_EVENT_ID_BUMPER_TRI_I_RIGHT = 149;
    private const int GMD_EVENT_ID_BUMPER_TRI_R_LT = 150;
    private const int GMD_EVENT_ID_BUMPER_TRI_R_LB = 151;
    private const int GMD_EVENT_ID_BUMPER_TRI_R_RT = 152;
    private const int GMD_EVENT_ID_BUMPER_TRI_R_RB = 153;
    private const int GMD_EVENT_ID_BUMPER_HEX_W = 154;
    private const int GMD_EVENT_ID_BUMPER_HEX_H = 155;
    private const int GMD_EVENT_ID_SPEAR_U = 156;
    private const int GMD_EVENT_ID_SPEAR_D = 157;
    private const int GMD_EVENT_ID_SPEAR_L = 158;
    private const int GMD_EVENT_ID_SPEAR_R = 159;
    private const int GMD_EVENT_ID_SCREW = 160;
    private const int GMD_EVENT_ID_CANNON = 161;
    private const int GMD_EVENT_ID_LOOP_CAMERA = 162;
    private const int GMD_EVENT_ID_CAPSULE = 163;
    private const int GMD_EVENT_ID_EN_BMPR_0 = 164;
    private const int GMD_EVENT_ID_EN_BMPR_45 = 165;
    private const int GMD_EVENT_ID_EN_BMPR_90 = 166;
    private const int GMD_EVENT_ID_EN_BMPR_135 = 167;
    private const int GMD_EVENT_ID_BOBBIN = 168;
    private const int GMD_EVENT_ID_FLIPPER_UL = 169;
    private const int GMD_EVENT_ID_FLIPPER_UR = 170;
    private const int GMD_EVENT_ID_FLIPPER_LR = 171;
    private const int GMD_EVENT_ID_SLOT = 172;
    private const int GMD_EVENT_ID_SEESAW0 = 173;
    private const int GMD_EVENT_ID_SEESAW30 = 174;
    private const int GMD_EVENT_ID_SEESAW330 = 175;
    private const int GMD_EVENT_ID_BRIDGE = 176;
    private const int GMD_EVENT_ID_SCR_LIMIT_RELEASE = 177;
    private const int GMD_EVENT_ID_SP_CTPLT_0 = 178;
    private const int GMD_EVENT_ID_SP_CTPLT_45 = 179;
    private const int GMD_EVENT_ID_SP_CTPLT_315 = 180;
    private const int GMD_EVENT_ID_GMK_GEAR = 181;
    private const int GMD_EVENT_ID_GMK_MOVE_GEAR = 182;
    private const int GMD_EVENT_ID_GMK_MOVE_GEAR_END = 183;
    private const int GMD_EVENT_ID_GMK_GEAR_SWITCH = 184;
    private const int GMD_EVENT_ID_FORCESPIN_A = 185;
    private const int GMD_EVENT_ID_FORCESPIN_B = 186;
    private const int GMD_EVENT_ID_FORCESPIN_C = 187;
    private const int GMD_EVENT_ID_FORCESPIN_D = 188;
    private const int GMD_EVENT_ID_PRESSWALL = 189;
    private const int GMD_EVENT_ID_PRESSWALL_STOP = 190;
    private const int GMD_EVENT_ID_PRESSWALL_CONTROL = 191;
    private const int GMD_EVENT_ID_SS_SQUARE = 192;
    private const int GMD_EVENT_ID_SS_CIRCLE = 193;
    private const int GMD_EVENT_ID_SS_ONEWAY = 194;
    private const int GMD_EVENT_ID_SS_ONEWAY_RECT = 195;
    private const int GMD_EVENT_ID_SS_ENDURANCE = 196;
    private const int GMD_EVENT_ID_SS_GOAL = 197;
    private const int GMD_EVENT_ID_SS_EMERALD = 198;
    private const int GMD_EVENT_ID_SS_TIME = 199;
    private const int GMD_EVENT_ID_SS_RINGGATE = 200;
    private const int GMD_EVENT_ID_STEAM_PIPE_GATE_R = 201;
    private const int GMD_EVENT_ID_STEAM_PIPE_GATE_L = 202;
    private const int GMD_EVENT_ID_STEAM_PIPE_A1 = 203;
    private const int GMD_EVENT_ID_STEAM_PIPE_A2 = 204;
    private const int GMD_EVENT_ID_STEAM_PIPE_A3 = 205;
    private const int GMD_EVENT_ID_STEAM_PIPE_A4 = 206;
    private const int GMD_EVENT_ID_STEAM_PIPE_B1 = 207;
    private const int GMD_EVENT_ID_STEAM_PIPE_B2 = 208;
    private const int GMD_EVENT_ID_STEAM_PIPE_B3 = 209;
    private const int GMD_EVENT_ID_STEAM_PIPE_B4 = 210;
    private const int GMD_EVENT_ID_STEAM_PIPE_J1 = 211;
    private const int GMD_EVENT_ID_STEAM_PIPE_J2 = 212;
    private const int GMD_EVENT_ID_STEAM_PIPE_J3 = 213;
    private const int GMD_EVENT_ID_STEAM_PIPE_J4 = 214;
    private const int GMD_EVENT_ID_STEAM_PIPE_EXIT = 215;
    private const int GMD_EVENT_ID_DRAIN_TANK_IN = 216;
    private const int GMD_EVENT_ID_DRAIN_TANK_OUT = 217;
    private const int GMD_EVENT_ID_POP_STEAM_U = 218;
    private const int GMD_EVENT_ID_POP_STEAM_R = 219;
    private const int GMD_EVENT_ID_POP_STEAM_D = 220;
    private const int GMD_EVENT_ID_POP_STEAM_L = 221;
    private const int GMD_EVENT_ID_GMK_TRUCK = 222;
    private const int GMD_EVENT_ID_GMK_T_GRAVITY_00_00 = 223;
    private const int GMD_EVENT_ID_GMK_T_GRAVITY_00_40 = 224;
    private const int GMD_EVENT_ID_GMK_T_GRAVITY_00_80 = 225;
    private const int GMD_EVENT_ID_GMK_T_GRAVITY_00_C0 = 226;
    private const int GMD_EVENT_ID_GMK_T_GRAVITY_30_20 = 227;
    private const int GMD_EVENT_ID_GMK_T_GRAVITY_30_60 = 228;
    private const int GMD_EVENT_ID_GMK_T_GRAVITY_30_A0 = 229;
    private const int GMD_EVENT_ID_GMK_T_GRAVITY_30_E0 = 230;
    private const int GMD_EVENT_ID_GMK_T_GRAVITY_45_20 = 231;
    private const int GMD_EVENT_ID_GMK_T_GRAVITY_45_60 = 232;
    private const int GMD_EVENT_ID_GMK_T_GRAVITY_45_A0 = 233;
    private const int GMD_EVENT_ID_GMK_T_GRAVITY_45_E0 = 234;
    private const int GMD_EVENT_ID_GMK_T_GRAVITY_60_20 = 235;
    private const int GMD_EVENT_ID_GMK_T_GRAVITY_60_60 = 236;
    private const int GMD_EVENT_ID_GMK_T_GRAVITY_60_A0 = 237;
    private const int GMD_EVENT_ID_GMK_T_GRAVITY_60_E0 = 238;
    private const int GMD_EVENT_ID_GMK_T_GRAVITY_R_20 = 239;
    private const int GMD_EVENT_ID_GMK_T_GRAVITY_R_60 = 240;
    private const int GMD_EVENT_ID_GMK_T_GRAVITY_R_A0 = 241;
    private const int GMD_EVENT_ID_GMK_T_GRAVITY_R_E0 = 242;
    private const int GMD_EVENT_ID_GMK_T_GRAVITY_RR_20 = 243;
    private const int GMD_EVENT_ID_GMK_T_GRAVITY_RR_60 = 244;
    private const int GMD_EVENT_ID_GMK_T_GRAVITY_RR_A0 = 245;
    private const int GMD_EVENT_ID_GMK_T_GRAVITY_RR_E0 = 246;
    private const int GMD_EVENT_ID_GMK_SWITCH = 247;
    private const int GMD_EVENT_ID_GMK_SW_WALL_Z3_HR = 248;
    private const int GMD_EVENT_ID_GMK_SW_WALL_Z3_HL = 249;
    private const int GMD_EVENT_ID_GMK_SW_WALL_Z3_VB = 250;
    private const int GMD_EVENT_ID_GMK_SW_WALL_Z3_VT = 251;
    private const int GMD_EVENT_ID_GMK_SW_WALL_Z3_HR_L8 = 252;
    private const int GMD_EVENT_ID_GMK_SW_WALL_Z3_HL_L8 = 253;
    private const int GMD_EVENT_ID_GMK_SW_WALL_Z3_VB_L8 = 254;
    private const int GMD_EVENT_ID_GMK_SW_WALL_Z3_VT_L8 = 255;
    private const int GMD_EVENT_ID_GMK_SW_WALL_Z4_HR = 256;
    private const int GMD_EVENT_ID_GMK_SW_WALL_Z4_HL = 257;
    private const int GMD_EVENT_ID_GMK_SW_WALL_Z4_VB = 258;
    private const int GMD_EVENT_ID_GMK_SW_WALL_Z4_VT = 259;
    private const int GMD_EVENT_ID_SCROLL = 260;
    private const int GMD_EVENT_ID_SHUTTER_IN = 261;
    private const int GMD_EVENT_ID_SHUTTER_OUT = 262;
    private const int GMD_EVENT_ID_NEEDLE_NEON = 263;
    private const int GMD_EVENT_ID_GMK_T_NO_LANDING_D = 264;
    private const int GMD_EVENT_ID_GMK_T_NO_LANDING_L = 265;
    private const int GMD_EVENT_ID_GMK_T_NO_LANDING_U = 266;
    private const int GMD_EVENT_ID_GMK_T_NO_LANDING_R = 267;
    private const int GMD_EVENT_ID_GMK_T_FC_GRAVITY_D = 268;
    private const int GMD_EVENT_ID_GMK_T_FC_GRAVITY_L = 269;
    private const int GMD_EVENT_ID_GMK_T_FC_GRAVITY_U = 270;
    private const int GMD_EVENT_ID_GMK_T_FC_GRAVITY_R = 271;
    private const int GMD_EVENT_ID_BREAKWALL1_C_H = 272;
    private const int GMD_EVENT_ID_GMK_Z3LAND_PULLEY = 273;
    private const int GMD_EVENT_ID_GMK_Z3LAND_ROPE_V = 274;
    private const int GMD_EVENT_ID_GMK_Z3LAND_ROPE_H = 275;
    private const int GMD_EVENT_ID_END_SON_NOP = 276;
    private const int GMD_EVENT_ID_END_SON_BRAKE = 277;
    private const int GMD_EVENT_ID_BOSS3_ROUTE = 278;
    private const int GMD_EVENT_ID_BOSS3_PILLAR_MANAGER = 279;
    private const int GMD_EVENT_ID_GMK_ENDING_ANIMAL = 280;
    private const int GMD_EVENT_ID_GMK_BOSS5_TRIGGER = 281;
    private const int GMD_EVENT_ID_GMK_BOSS5_LAND_PLACE = 282;
    private const int GMD_EVENT_ID_GMK_DATA_LOAD = 283;
    private const int GMD_EVENT_ID_GMK_P_PILLAR_N = 284;
    private const int GMD_EVENT_ID_GMK_P_PILLAR_R = 285;
    private const int GMD_EVENT_ID_GMK_P_PILLAR_SW = 286;
    private const int GMD_EVENT_ID_GMK_DANGER_SIGN_D = 287;
    private const int GMD_EVENT_ID_GMK_DANGER_SIGN_L = 288;
    private const int GMD_EVENT_ID_GMK_DANGER_SIGN_U = 289;
    private const int GMD_EVENT_ID_GMK_DANGER_SIGN_R = 290;
    private const int GMD_EVENT_ID_GMK_SS_ARROW = 291;
    private const int GMD_EVENT_ID_GMK_SS_OBLONG = 292;
    private const int GMD_EVENT_ID_GMK_DECO_FRAME_MGR_WAY = 293;
    private const int GMD_EVENT_ID_GMK_DECO_FRAME_MGR_BOSS = 294;
    private const int GMD_EVENT_ID_GMK_END = 299;
    private const int GMD_EVENT_ID_NOSET_START = 300;
    private const int GMD_EVENT_ID_NOSET_ENEMY_START = 300;
    private const int GMD_EVENT_ID_NOSET_GIMMICK_START = 300;
    private const int GMD_EVENT_ID_NOSET_ROCK_FALL = 300;
    private const int GMD_EVENT_ID_NOSET_CAPSULE_BODY = 301;
    private const int GMD_EVENT_ID_NOSET_SCR_LIMIT_SET = 302;
    private const int GMD_EVENT_ID_NOSET_SCR_LIMIT_REL = 303;
    private const int GMD_EVENT_ID_NOSET_SPL_RING = 304;
    private const int GMD_EVENT_ID_NOSET_DRAIN_TANK_SPLASH = 305;
    private const int GMD_EVENT_ID_NOSET_ROCK_HOOK = 306;
    private const int GMD_EVENT_ID_NOSET_ROCK_CHASE = 307;
    private const int GMD_EVENT_ID_NOSET_NODEBUG_START = 308;
    private const int GMD_EVENT_ID_NOSET_NODEBUG_ENEMY_START = 308;
    private const int GMD_EVENT_ID_T_STAR_NEEDLE = 308;
    private const int GMD_EVENT_ID_UNIDES_NEEDLE = 309;
    private const int GMD_EVENT_ID_UNIUNI_NEEDLE = 310;
    private const int GMD_EVENT_ID_KAMA_LEFT_HAND = 311;
    private const int GMD_EVENT_ID_KAMA_RIGHT_HAND = 312;
    private const int GMD_EVENT_ID_BOSS1_BODY = 313;
    private const int GMD_EVENT_ID_BOSS1_CHAIN = 314;
    private const int GMD_EVENT_ID_BOSS1_EGG = 315;
    private const int GMD_EVENT_ID_BOSS2_BODY = 316;
    private const int GMD_EVENT_ID_BOSS2_EGG = 317;
    private const int GMD_EVENT_ID_BOSS2_BALL = 318;
    private const int GMD_EVENT_ID_BOSS3_BODY = 319;
    private const int GMD_EVENT_ID_BOSS3_EGG = 320;
    private const int GMD_EVENT_ID_BOSS4_BODY = 321;
    private const int GMD_EVENT_ID_BOSS4_EGG = 322;
    private const int GMD_EVENT_ID_BOSS4_CAP_1 = 323;
    private const int GMD_EVENT_ID_BOSS4_CAP_2 = 324;
    private const int GMD_EVENT_ID_BOSS4_CHIBI_1 = 325;
    private const int GMD_EVENT_ID_BOSS4_CHIBI_2 = 326;
    private const int GMD_EVENT_ID_BOSS4_CHIBI_2_SPD = 327;
    private const int GMD_EVENT_ID_BOSS4_CHIBI_2_BIG = 328;
    private const int GMD_EVENT_ID_BOSS4_CHIBI_2_IRON = 329;
    private const int GMD_EVENT_ID_BOSS5_BODY = 330;
    private const int GMD_EVENT_ID_BOSS5_CORE = 331;
    private const int GMD_EVENT_ID_BOSS5_ROCKET = 332;
    private const int GMD_EVENT_ID_BOSS5_TURRET = 333;
    private const int GMD_EVENT_ID_BOSS5_EGG = 334;
    private const int GMD_EVENT_ID_NOSET_NODEBUG_GIMMICK_START = 335;
    private const int GMD_EVENT_ID_NEEDLE_BACK = 335;
    private const int GMD_EVENT_ID_NEEDLE_STAND = 336;
    private const int GMD_EVENT_ID_NEEDLE_NEON_NEEDLE = 337;
    private const int GMD_EVENT_ID_NEEDLE_NEON_GLAER = 338;
    private const int GMD_EVENT_ID_BOSS3_PILLAR_LEFT = 339;
    private const int GMD_EVENT_ID_BOSS3_PILLAR_RIGHT = 340;
    private const int GMD_EVENT_ID_BOSS3_PILLAR_TOP = 341;
    private const int GMD_EVENT_ID_BOSS3_PILLAR_BOTTOM = 342;
    private const int GMD_EVENT_ID_BOSS3_PILLAR_WALL = 343;
    private const int GMD_EVENT_ID_BOSS5_LAND = 344;
    private const int GMD_EVENT_ID_BOSS5_CTPLT = 345;
    private const int GMD_EVENT_ID_MAX = 346;
    private const int GMD_DECORATE_ID_BRI_A = 0;
    private const int GMD_DECORATE_ID_BRI_B = 1;
    private const int GMD_DECORATE_ID_FISH_R = 2;
    private const int GMD_DECORATE_ID_FISH_L = 3;
    private const int GMD_DECORATE_ID_PIL_A = 4;
    private const int GMD_DECORATE_ID_PIL_B = 5;
    private const int GMD_DECORATE_ID_WATER_SLIDER_L = 6;
    private const int GMD_DECORATE_ID_WATER_SLIDER_L_J30 = 7;
    private const int GMD_DECORATE_ID_WATER_SLIDER_L_J45 = 8;
    private const int GMD_DECORATE_ID_WATER_SLIDER_L_J60 = 9;
    private const int GMD_DECORATE_ID_WATER_SLIDER_R = 10;
    private const int GMD_DECORATE_ID_WATER_SLIDER_R_J30 = 11;
    private const int GMD_DECORATE_ID_WATER_SLIDER_R_J45 = 12;
    private const int GMD_DECORATE_ID_WATER_SLIDER_R_J60 = 13;
    private const int GMD_DECORATE_ID_GLARE_ORANGE = 14;
    private const int GMD_DECORATE_ID_GLARE_RED = 15;
    private const int GMD_DECORATE_ID_GLARE_GREEN = 16;
    private const int GMD_DECORATE_ID_SUNFLOWER = 17;
    private const int GMD_DECORATE_ID_WALL_A = 18;
    private const int GMD_DECORATE_ID_WALL_B = 19;
    private const int GMD_DECORATE_ID_FALL = 20;
    private const int GMD_DECORATE_ID_ZONE1_ASIHANA_A = 21;
    private const int GMD_DECORATE_ID_ZONE1_ASIHANA_B = 22;
    private const int GMD_DECORATE_ID_ZONE1_ASIHANA_C = 23;
    private const int GMD_DECORATE_ID_ZONE1_HANA_A = 24;
    private const int GMD_DECORATE_ID_ZONE1_HANA_B = 25;
    private const int GMD_DECORATE_ID_ZONE1_WOOD_A = 26;
    private const int GMD_DECORATE_ID_FALL_BACK = 27;
    private const int GMD_DECORATE_ID_WALL_AA = 28;
    private const int GMD_DECORATE_ID_WALL_AB = 29;
    private const int GMD_DECORATE_ID_WALL_AC = 30;
    private const int GMD_DECORATE_ID_WALL_AD = 31;
    private const int GMD_DECORATE_ID_WALL_BA = 32;
    private const int GMD_DECORATE_ID_WALL_A_BACK = 33;
    private const int GMD_DECORATE_ID_WALL_B_BACK = 34;
    private const int GMD_DECORATE_ID_WALL_AA_BACK = 35;
    private const int GMD_DECORATE_ID_WALL_AB_BACK = 36;
    private const int GMD_DECORATE_ID_WALL_AC_BACK = 37;
    private const int GMD_DECORATE_ID_WALL_AD_BACK = 38;
    private const int GMD_DECORATE_ID_WALL_BA_BACK = 39;
    private const int GMD_DECORATE_ID_FALL_LEFT = 40;
    private const int GMD_DECORATE_ID_FALL_RIGHT = 41;
    private const int GMD_DECORATE_ID_FALL_ONE = 42;
    private const int GMD_DECORATE_ID_FALL_A = 43;
    private const int GMD_DECORATE_ID_FALL_LEFT_A = 44;
    private const int GMD_DECORATE_ID_FALL_RIGHT_A = 45;
    private const int GMD_DECORATE_ID_FALL_ONE_A = 46;
    private const int GMD_DECORATE_ID_FALL_LEFT_BACK = 47;
    private const int GMD_DECORATE_ID_FALL_RIGHT_BACK = 48;
    private const int GMD_DECORATE_ID_FALL_ONE_BACK = 49;
    private const int GMD_DECORATE_ID_FALL_A_BACK = 50;
    private const int GMD_DECORATE_ID_FALL_LEFT_A_BACK = 51;
    private const int GMD_DECORATE_ID_FALL_RIGHT_A_BACK = 52;
    private const int GMD_DECORATE_ID_FALL_ONE_A_BACK = 53;
    private const int GMD_DECORATE_ID_GLARE_SALMON = 54;
    private const int GMD_DECORATE_ID_HAI_FR_L = 55;
    private const int GMD_DECORATE_ID_HAI_FR_EXIT_L = 56;
    private const int GMD_DECORATE_ID_HAI_FR_R = 57;
    private const int GMD_DECORATE_ID_HAI_FR_EXIT_R = 58;
    private const int GMD_DECORATE_ID_EAR_RUB_A_A = 59;
    private const int GMD_DECORATE_ID_EAR_RUB_A_B = 60;
    private const int GMD_DECORATE_ID_EAR_RUB_B_A = 61;
    private const int GMD_DECORATE_ID_EAR_RUB_B_B = 62;
    private const int GMD_DECORATE_ID_EAR_RUB_B_C = 63;
    private const int GMD_DECORATE_ID_WAT_RUB_A = 64;
    private const int GMD_DECORATE_ID_WAT_RUB_B = 65;
    private const int GMD_DECORATE_ID_EFFECT_WATERSLIDER_UNDER = 66;
    private const int GMD_DECORATE_ID_EFFECT_WATERSLIDER_SPRAY = 67;
    private const int GMD_DECORATE_ID_EFFECT_CANDDLE = 68;
    private const int GMD_DECORATE_ID_EFFECT_FACE = 69;
    private const int GMD_DECORATE_ID_FOUN_A = 70;
    private const int GMD_DECORATE_ID_FOUN_B = 71;
    private const int GMD_DECORATE_ID_FOUN_A_BACK = 72;
    private const int GMD_DECORATE_ID_FOUN_B_BACK = 73;
    private const int GMD_DECORATE_ID_PLANT_A = 74;
    private const int GMD_DECORATE_ID_PLANT_B = 75;
    private const int GMD_DECORATE_ID_PLANT_C = 76;
    private const int GMD_DECORATE_ID_PLANT_D = 77;
    private const int GMD_DECORATE_ID_PLANT_A_FRONT = 78;
    private const int GMD_DECORATE_ID_PLANT_C_FRONT = 79;
    private const int GMD_DECORATE_ID_EAR_RUB_B_A_FRONT = 80;
    private const int GMD_DECORATE_ID_EAR_RUB_B_B_FRONT = 81;
    private const int GMD_DECORATE_ID_EAR_RUB_B_C_FRONT = 82;
    private const int GMD_DECORATE_ID_WAT_RUB_A_FRONT = 83;
    private const int GMD_DECORATE_ID_WAT_RUB_B_FRONT = 84;
    private const int GMD_DECORATE_ID_PLANT_B_FRONT = 85;
    private const int GMD_DECORATE_ID_PLANT_D_FRONT = 86;
    private const int GMD_DECORATE_ID_FISH_R_FRONT = 87;
    private const int GMD_DECORATE_ID_FISH_L_FRONT = 88;
    private const int GMD_DECORATE_ID_RAIL_EDGE_A = 89;
    private const int GMD_DECORATE_ID_RAIL_EDGE_B = 90;
    private const int GMD_DECORATE_ID_RAIL_EDGE_A_FLIP = 91;
    private const int GMD_DECORATE_ID_RAIL_EDGE_B_FLIP = 92;
    private const int GMD_DECORATE_ID_WHE_HOLD_A = 93;
    private const int GMD_DECORATE_ID_WHE_HOLD_B = 94;
    private const int GMD_DECORATE_ID_WHE_HOLD_C_L = 95;
    private const int GMD_DECORATE_ID_WHE_HOLD_D_T = 96;
    private const int GMD_DECORATE_ID_WHE_HOLD_C_R = 97;
    private const int GMD_DECORATE_ID_WHE_HOLD_D_B = 98;
    private const int GMD_DECORATE_ID_EFFECT_TAKI = 99;
    private const int GMD_DECORATE_ID_EFFECT_CROSS = 100;
    private const int GMD_DECORATE_ID_FISH_B_R = 101;
    private const int GMD_DECORATE_ID_FISH_B_L = 102;
    private const int GMD_DECORATE_ID_RAIL_J_A_ENDING = 103;
    private const int GMD_DECORATE_ID_RAIL_J_B_ENDING = 104;
    private const int GMD_DECORATE_ID_RAIL_J_C_ENDING = 105;
    private const int GMD_DECORATE_ID_RAIL_J_A_ENDING_FLIP = 106;
    private const int GMD_DECORATE_ID_RAIL_J_B_ENDING_FLIP = 107;
    private const int GMD_DECORATE_ID_RAIL_J_C_ENDING_FLIP = 108;
    private const int GMD_DECORATE_ID_GLARE_ORANGE_ENDING = 109;
    private const int GMD_DECORATE_ID_GLARE_GREEN_ENDING = 110;
    private const int GMD_DECORATE_ID_SUNFLOWER_ENDING = 111;
    private const int GMD_DECORATE_ID_ZONE1_HANA_A_ENDING = 112;
    private const int GMD_DECORATE_ID_ZONE1_HANA_B_ENDING = 113;
    private const int GMD_DECORATE_ID_ZONE1_WOOD_A_ENDING = 114;
    private const int GMD_DECORATE_ID_WHEEL_PIL_A = 115;
    private const int GMD_DECORATE_ID_WHEEL_PIL_B = 116;
    private const int GMD_DECORATE_ID_WHEEL_PIL_C = 117;
    private const int GMD_DECORATE_ID_WHEEL_PIL_A_FLIP = 118;
    private const int GMD_DECORATE_ID_WHEEL_PIL_B_FLIP = 119;
    private const int GMD_DECORATE_ID_WHEEL_PIL_C_FLIP = 120;
    private const int GMD_DECORATE_ID_WHEEL_PIL_D = 121;
    private const int GMD_DECORATE_ID_WHEEL_PIL_E = 122;
    private const int GMD_DECORATE_ID_WHEEL_PIL_F = 123;
    private const int GMD_DECORATE_ID_WHEEL_PIL_D_FLIP = 124;
    private const int GMD_DECORATE_ID_WHEEL_PIL_E_FLIP = 125;
    private const int GMD_DECORATE_ID_WHEEL_PIL_F_FLIP = 126;
    private const int GMD_DECORATE_ID_WHE_HOLD_A_FRONT = 127;
    private const int GMD_DECORATE_ID_WHE_HOLD_B_FRONT = 128;
    private const int GMD_DECORATE_ID_WHE_HOLD_C_L_FRONT = 129;
    private const int GMD_DECORATE_ID_WHE_HOLD_D_T_FRONT = 130;
    private const int GMD_DECORATE_ID_WHE_HOLD_C_R_FRONT = 131;
    private const int GMD_DECORATE_ID_WHE_HOLD_D_B_FRONT = 132;
    private const int GMD_DECORATE_ID_BRACE_A = 133;
    private const int GMD_DECORATE_ID_BRACE_B = 134;
    private const int GMD_DECORATE_ID_BRACE_C = 135;
    private const int GMD_DECORATE_ID_BRACE_D = 136;
    private const int GMD_DECORATE_ID_BRACE_E = 137;
    private const int GMD_DECORATE_ID_BRACE_F = 138;
    private const int GMD_DECORATE_ID_BRACE_G = 139;
    private const int GMD_DECORATE_ID_PIL_COR = 140;
    private const int GMD_DECORATE_ID_WARNING = 141;
    private const int GMD_DECORATE_ID_EFFECT_WARNING = 142;
    private const int GMD_DECORATE_ID_BRACE_S_A = 143;
    private const int GMD_DECORATE_ID_BRACE_S_B = 144;
    private const int GMD_DECORATE_ID_BRACE_S_C = 145;
    private const int GMD_DECORATE_ID_BRACE_S_D = 146;
    private const int GMD_DECORATE_ID_BRACE_S_E = 147;
    private const int GMD_DECORATE_ID_BRACE_S_F = 148;
    private const int GMD_DECORATE_ID_BRACE_S_G = 149;
    private const int GMD_DECORATE_ID_P_STESM_CO01 = 150;
    private const int GMD_DECORATE_ID_P_STESM_CO02 = 151;
    private const int GMD_DECORATE_ID_P_STESM_CO03 = 152;
    private const int GMD_DECORATE_ID_P_STESM_CO04 = 153;
    private const int GMD_DECORATE_ID_P_STESM_CO_L_01 = 154;
    private const int GMD_DECORATE_ID_P_STESM_CO_L_02 = 155;
    private const int GMD_DECORATE_ID_P_STESM_CO_R_01 = 156;
    private const int GMD_DECORATE_ID_P_STESM_CO_R_02 = 157;
    private const int GMD_DECORATE_ID_P_STESM_CO_T_01 = 158;
    private const int GMD_DECORATE_ID_P_STESM_CO_T_02 = 159;
    private const int GMD_DECORATE_ID_P_STESM_CO_U_01 = 160;
    private const int GMD_DECORATE_ID_P_STESM_CO_U_02 = 161;
    private const int GMD_DECORATE_ID_P_STESM_TUBE01 = 162;
    private const int GMD_DECORATE_ID_P_STESM_TUBE02 = 163;
    private const int GMD_DECORATE_ID_P_STESM_TUBE03 = 164;
    private const int GMD_DECORATE_ID_P_STESM_TUBE04 = 165;
    private const int GMD_DECORATE_ID_P_STESM_TUBE03_FLIP = 166;
    private const int GMD_DECORATE_ID_P_STESM_TUBE04_FLIP = 167;
    private const int GMD_DECORATE_ID_UKI_RAIL = 168;
    private const int GMD_DECORATE_ID_UKI_RAIL_FLIP = 169;
    private const int GMD_DECORATE_ID_SHUTTER_3_MOVE_CLOSE = 170;
    private const int GMD_DECORATE_ID_SHUTTER_3_OPEN_MOVE = 171;
    private const int GMD_DECORATE_ID_SHUTTER_3_MOVE_MOVE = 172;
    private const int GMD_DECORATE_ID_SHUTTER_3_CLOSE_CLOSE = 173;
    private const int GMD_DECORATE_ID_SHUTTER_3_OPEN_OPEN = 174;
    private const int GMD_DECORATE_ID_SHUTTER_3_OPEN_CLOSE = 175;
    private const int GMD_DECORATE_ID_SHUTTER_5_MOVE_MOVE = 176;
    private const int GMD_DECORATE_ID_SHUTTER_5_CLOSE_CLOSE = 177;
    private const int GMD_DECORATE_ID_SHUTTER_5_OPEN_OPEN = 178;
    private const int GMD_DECORATE_ID_SHUTTER_5_OPEN_CLOSE = 179;
    private const int GMD_DECORATE_ID_PLANTA = 180;
    private const int GMD_DECORATE_ID_PLANTB = 181;
    private const int GMD_DECORATE_ID_EFFECT_BOSSF_LIGHT = 182;
    private const int GMD_DECORATE_ID_SHUTTER_LOOP = 183;
    private const int GMD_DECORATE_ID_MAX = 184;
    private const int GME_END_STEP_INIT = 0;
    private const int GME_END_STEP_GAME = 1;
    private const int GME_END_STEP_NOP = 2;
    private const int GME_END_STEP_BRAKE = 3;
    private const int GME_END_STEP_WAIT = 4;
    private const int GME_END_STEP_MUTATE = 5;
    private const int GME_END_STEP_JUMP = 6;
    private const int GME_END_STEP_STOP = 7;
    private const int GME_END_STEP_FADEOUT = 8;
    private const int GME_END_STEP_MAX = 9;
    private const int GMD_END_SCR_LMT_BOTTOM_DEC = 32;
    private const int GME_END_TYPE_NORM1 = 0;
    private const int GME_END_TYPE_NORM2 = 1;
    private const int GME_END_TYPE_SUPER = 2;
    private const int GMD_END_SON_FRONTSIDE_TIME = 720;
    private const uint GMD_END_FLAG_SON_NOMOVE = 1;
    private const uint GMD_END_FLAG_SON_ACCEL = 2;
    private const uint GMD_END_FLAG_SON_BRAKE = 4;
    private const int GMD_END_START_WAIT = 16;
    private const int GMD_END_SON_BRAKE_RELEASE_SPD = -4096;
    private const int GMD_END_SON_FINISHJUMP_TIME = 900;
    private const int GMD_END_SON_FADEOUT_TIME = 1140;
    private const float GMD_BOSS2_BLEND_SPD = 0.125f;
    private const int GMD_BOSS2_PART_IDX_BODY = 0;
    private const int GMD_BOSS2_PART_IDX_EGG = 1;
    private const int GMD_BOSS2_PART_IDX_MAX = 2;
    private const int GMD_BOSS2_ACT_ID_START = 0;
    private const int GMD_BOSS2_ACT_ID_CATCH_MOVE = 1;
    private const int GMD_BOSS2_ACT_ID_CATCH_ARM_OPEN = 2;
    private const int GMD_BOSS2_ACT_ID_CATCH_ARM_READY = 3;
    private const int GMD_BOSS2_ACT_ID_CATCH_ARM_DOWN = 4;
    private const int GMD_BOSS2_ACT_ID_CATCH_ARM_CLOSE = 5;
    private const int GMD_BOSS2_ACT_ID_CATCH_ARM_UP = 6;
    private const int GMD_BOSS2_ACT_ID_CATCH_ARM_CARRY = 7;
    private const int GMD_BOSS2_ACT_ID_CATCH_ARM_THROW = 8;
    private const int GMD_BOSS2_ACT_ID_BALL_MOVE = 9;
    private const int GMD_BOSS2_ACT_ID_BALL_READY = 10;
    private const int GMD_BOSS2_ACT_ID_BALL_SHOOT = 11;
    private const int GMD_BOSS2_ACT_ID_PINBALL_START = 12;
    private const int GMD_BOSS2_ACT_ID_PINBALL_MOVE = 13;
    private const int GMD_BOSS2_ACT_ID_PINBALL_MOVE_CLOSE = 14;
    private const int GMD_BOSS2_ACT_ID_PINBALL_SEARCH = 15;
    private const int GMD_BOSS2_ACT_ID_PINBALL_FIND = 16;
    private const int GMD_BOSS2_ACT_ID_ANGRY = 17;
    private const int GMD_BOSS2_ACT_ID_ESCAPE = 18;
    private const int GMD_BOSS2_ACT_ID_MAX = 19;
    private const int GMD_BOSS2_EGG_ACT_ID_LAUGH_L = 0;
    private const int GMD_BOSS2_EGG_ACT_ID_LAUGH_R = 1;
    private const int GMD_BOSS2_EGG_ACT_ID_DAMAGE = 2;
    private const int GMD_BOSS2_EGG_ACT_ID_MAX = 3;
    private const int GMD_BOSS2_MGR_LIFE_CATCH = 3;
    private const int GMD_BOSS2_MGR_LIFE_BALL = 2;
    private const int GMD_BOSS2_MGR_LIFE_RUSH = 3;
    private const int GMD_BOSS2_MGR_LIFE = 8;
    private const int GMD_BOSS2_MGR_LIFE_FINAL = 4;
    private const int GMD_BOSS2_MGR_FLAG_SETUP_COMPLETE = 1;
    private const int GMD_BOSS2_MGR_FLAG_CLEAR_BOSS = 2;
    private const int GMD_BOSS2_BODY_MOVE_AREA_LIMIT_WIDTH = 348160;
    private const int GMD_BOSS2_BODY_FIELD_RECT_SIZE = 24;
    private const int GMD_BOSS2_EFFECT_CLIP_OFFSET = 64;
    private const int GMD_BOSS2_BODY_SNM_INDEX_BODY = 0;
    private const int GMD_BOSS2_BODY_SNM_INDEX_BALL = 1;
    private const int GMD_BOSS2_BODY_SNM_INDEX_START_ARM = 2;
    private const int GMD_BOSS2_BODY_SNM_INDEX_CATCH = 2;
    private const int GMD_BOSS2_BODY_SNM_INDEX_BOT_R = 3;
    private const int GMD_BOSS2_BODY_SNM_INDEX_BOT_L = 4;
    private const int GMD_BOSS2_BODY_SNM_INDEX_L_ARM1 = 5;
    private const int GMD_BOSS2_BODY_SNM_INDEX_L_ARM2 = 6;
    private const int GMD_BOSS2_BODY_SNM_INDEX_L_ARM3 = 7;
    private const int GMD_BOSS2_BODY_SNM_INDEX_R_ARM1 = 8;
    private const int GMD_BOSS2_BODY_SNM_INDEX_R_ARM2 = 9;
    private const int GMD_BOSS2_BODY_SNM_INDEX_R_ARM3 = 10;
    private const int GMD_BOSS2_BODY_SNM_INDEX_L_CHAIN1 = 11;
    private const int GMD_BOSS2_BODY_SNM_INDEX_R_CHAIN1 = 12;
    private const int GMD_BOSS2_BODY_SNM_INDEX_L_CHAIN2 = 13;
    private const int GMD_BOSS2_BODY_SNM_INDEX_R_CHAIN2 = 14;
    private const int GMD_BOSS2_BODY_SNM_INDEX_MAX = 15;
    private const int GMD_BOSS2_BODY_SNM_INDEX_BLITZ_CORE_L = 7;
    private const int GMD_BOSS2_BODY_SNM_INDEX_BLITZ_CORE_R = 10;
    private const int GMD_BOSS2_BODY_SNM_INDEX_BLITZ_L = 6;
    private const int GMD_BOSS2_BODY_SNM_INDEX_BLITZ_R = 9;
    private const int GMD_BOSS2_BODY_CNM_INDEX_CATCH = 0;
    private const int GMD_BOSS2_BODY_CNM_INDEX_BOT_R = 1;
    private const int GMD_BOSS2_BODY_CNM_INDEX_BOT_L = 2;
    private const int GMD_BOSS2_BODY_CNM_INDEX_L_ARM1 = 3;
    private const int GMD_BOSS2_BODY_CNM_INDEX_L_ARM2 = 4;
    private const int GMD_BOSS2_BODY_CNM_INDEX_L_ARM3 = 5;
    private const int GMD_BOSS2_BODY_CNM_INDEX_R_ARM1 = 6;
    private const int GMD_BOSS2_BODY_CNM_INDEX_R_ARM2 = 7;
    private const int GMD_BOSS2_BODY_CNM_INDEX_R_ARM3 = 8;
    private const int GMD_BOSS2_BODY_CNM_INDEX_L_CHAIN1 = 9;
    private const int GMD_BOSS2_BODY_CNM_INDEX_R_CHAIN1 = 10;
    private const int GMD_BOSS2_BODY_CNM_INDEX_L_CHAIN2 = 11;
    private const int GMD_BOSS2_BODY_CNM_INDEX_R_CHAIN2 = 12;
    private const int GMD_BOSS2_BODY_CNM_INDEX_MAX = 13;
    private const int GMD_BOSS2_BODY_CATCH_MOVE_SPEED = 4915;
    private const int GMD_BOSS2_BODY_BALL_MOVE_SPEED = 4915;
    private const int GMD_BOSS2_BODY_BALL_POS_Y = 409600;
    private const int GMD_BOSS2_BODY_PINBALL_MOVE_SPEED_MOVE = 0;
    private const int GMD_BOSS2_BODY_PINBALL_MOVE_SPEED_ROLL = 20480;
    private const int GMD_BOSS2_BODY_ADJUST_SPEED_FINAL = 6144;
    private const int GMD_BOSS2_BODY_START_TIME_WAIT_END = 180;
    private const float GMD_BOSS2_BODY_CATCH_FRAME_TURN = 60f;
    private const float GMD_BOSS2_BODY_CATCH_FRAME_DRIFT = 60f;
    private const int GMD_BOSS2_BODY_CATCH_AREA_WIDTH = 32768;
    private const int GMD_BOSS2_BODY_CATCH_FRAME_WAIT_DOWN = 5;
    private const float GMD_BOSS2_BODY_CATCH_ARM_STRETCH_DOWN = 6f;
    private const float GMD_BOSS2_BODY_CATCH_ARM_STRETCH_UP = 1f;
    private const float GMD_BOSS2_BODY_CATCH_ARM_STRETCH_MAX = 60f;
    private const float GMD_BOSS2_BODY_CATCH_FRAME_CATCH_END = 10f;
    private const int GMD_BOSS2_BODY_CATCH_OFFSET_SONIC = 163840;
    private const float GMD_BOSS2_BODY_CATCH_FRAME_CARRY_OPEN = 40f;
    private const int GMD_BOSS2_BODY_CATCH_RELEASE_KEY = 255;
    private const int GMD_BOSS2_BODY_CATCH_RELEASE_KEY_PUSH_NUM = 6;
    private const int GMD_BOSS2_BODY_CATCH_SHAKE_WIDTH = 10;
    private const int GMD_BOSS2_BODY_CATCH_SHAKE_SPEED = 2;
    private const float GMD_BOSS2_BODY_BALL_FRAME_RISE = 60f;
    private const float GMD_BOSS2_BODY_BALL_FRAME_TURN = 60f;
    private const float GMD_BOSS2_BODY_BALL_FRAME_DRIFT = 60f;
    private const int GMD_BOSS2_BODY_BALL_AREA_WIDTH = 32768;
    private const float GMD_BOSS2_BODY_BALL_WAIT_FRAME_CREATE = 30f;
    private const float GMD_BOSS2_BODY_BALL_FLICKER_RADIUS = 16f;
    private const float GMD_BOSS2_BODY_BALL_CAMERA_SCALE = 0.82f;
    private const int GMD_BOSS2_BODY_PINBALL_FRAME_MOVE = 180;
    private const int GMD_BOSS2_BODY_PINBALL_FRAME_READY = 10;
    private const int GMD_BOSS2_BODY_PINBALL_FRAME_ROLL = 180;
    private const int GMD_BOSS2_BODY_PINBALL_FRAME_ROLL_STOP = 10;
    private const float GMD_BOSS2_BODY_PINBALL_FRAME_TURN = 20f;
    private const float GMD_BOSS2_BODY_PINBALL_FRAME_CREATE_BLITZ = 119f;
    private const float GMD_BOSS2_BODY_PINBALL_FRAME_CREATE_BLITZ_END = 64f;
    private const int GMD_BOSS2_BODY_PINBALL_NO_STOP_AREA_SIZE_X = 70;
    private const int GMD_BOSS2_BODY_PINBALL_NO_STOP_AREA_SIZE_Y = 110;
    private const int GMD_BOSS2_BODY_PINBALL_MOVE_DISTANCE_MAX = 500;
    private const int GMD_BOSS2_BODY_DEF_PLAYER_MOVE_X = 20480;
    private const int GMD_BOSS2_BODY_DEF_PLAYER_MOVE_Y = 16384;
    private const int GMD_BOSS2_BODY_DEF_PLAYER_NO_JUMP_MOVE_TIME = 102400;
    private const uint GMD_BOSS2_BODY_DEF_NO_HIT_TIME = 10;
    private const uint GMD_BOSS2_BODY_INVINVIBLE_TIME = 90;
    private const float GMD_BOSS2_BODY_DMG_FLICKER_RADIUS = 32f;
    private const int GMD_BOSS2_BODY_DEFEAT_TIME_WAIT_START = 40;
    private const int GMD_BOSS2_BODY_DEFEAT_TIME_WAIT_BOMB = 120;
    private const int GMD_BOSS2_BODY_DEFEAT_TIME_WAIT_SCATTER = 40;
    private const int GMD_BOSS2_BODY_DEFEAT_TIME_WAIT_END = 120;
    private const int GMD_BOSS2_BODY_DEFEAT_FALL_POS_Y = 614400;
    private const int GMD_BOSS2_BODY_DEFEAT_FLASH_INTO_TIME = 4;
    private const int GMD_BOSS2_BODY_DEFEAT_FLASH_KEEP_TIME = 5;
    private const int GMD_BOSS2_BODY_DEFEAT_FLASH_RETURN_TIME = 30;
    private const int GMD_BOSS2_BODY_ESCAPE_SCROLL_UNLOCK_DISTANCE = 131072;
    private const int GMD_BOSS2_BODY_ESCAPE_SPD_X_ADD = 0;
    private const int GMD_BOSS2_BODY_ESCAPE_SPD_Y_ADD = 655;
    private const int GMD_BOSS2_BODY_ESCAPE_SPD_X_MAX = 0;
    private const int GMD_BOSS2_BODY_ESCAPE_SPD_Y_MAX = -3276;
    private const int GMD_BOSS2_BODY_ESCAPE_SCREEN_OUT_LENGTH = 64;
    private const uint GMD_BOSS2_BODY_FLAG_INVINCIBLE = 1;
    private const uint GMD_BOSS2_BODY_FLAG_AFTERBURNER_ACTIVE = 2;
    private const uint GMD_BOSS2_BODY_FLAG_BLITZ_ACTIVE = 4;
    private const uint GMD_BOSS2_BODY_FLAG_CATCH = 8;
    private const uint GMD_BOSS2_BODY_FLAG_NOATTACK = 16;
    private const uint GMD_BOSS2_BODY_FLAG_ROLL_ACTIVE = 32;
    private const uint GMD_BOSS2_BODY_FLAG_EGG_NODISP = 64;
    private const uint GMD_BOSS2_BODY_FLAG_NO_SE_HIT_WALL = 128;
    private const uint GMD_BOSS2_BODY_FLAG_SIGNAL_B2N_SHOOT = 4194304;
    private const uint GMD_BOSS2_BODY_FLAG_SIGNAL_B2E_ESCAPE = 8388608;
    private const uint GMD_BOSS2_BODY_FLAG_SIGNAL_B2E_BURNT = 16777216;
    private const uint GMD_BOSS2_BODY_FLAG_SIGNAL_B2B_AFTERBURNER = 33554432;
    private const uint GMD_BOSS2_BODY_FLAG_SIGNAL_B2B_SCATTER = 134217728;
    private const uint GMD_BOSS2_BODY_FLAG_SIGNAL_B2E_HIT = 268435456;
    private const uint GMD_BOSS2_BODY_FLAG_SIGNAL_B2E_DAMAGE = 536870912;
    private const uint GMD_BOSS2_BODY_FLAG_SIGNAL_B2B_DAMAGE = 1073741824;
    private const uint GMD_BOSS2_BODY_FLAG_SIGNAL_B2B_DEFEAT = 2147483648;
    private const uint GMD_BOSS2_EGG_FLAG_EGG_ACT_ACTIVE = 1;
    private const uint GMD_BOSS2_EGG_FLAG_SWEAT_ACTIVE = 2;
    private const int GMD_BOSS2_BODY_STATE_NO_OPERATION = 0;
    private const int GMD_BOSS2_BODY_STATE_START = 1;
    private const int GMD_BOSS2_BODY_STATE_CATCH_MOVE = 2;
    private const int GMD_BOSS2_BODY_STATE_CATCH_ARM = 3;
    private const int GMD_BOSS2_BODY_STATE_CATCH_CARRY = 4;
    private const int GMD_BOSS2_BODY_STATE_PRE_BALL = 5;
    private const int GMD_BOSS2_BODY_STATE_BALL_MOVE = 6;
    private const int GMD_BOSS2_BODY_STATE_BALL_SHOOT = 7;
    private const int GMD_BOSS2_BODY_STATE_PRE_PINBALL = 8;
    private const int GMD_BOSS2_BODY_STATE_PINBALL_MOVE = 9;
    private const int GMD_BOSS2_BODY_STATE_PINBALL_ROLL = 10;
    private const int GMD_BOSS2_BODY_STATE_DEFEAT = 11;
    private const int GMD_BOSS2_BODY_STATE_ESCAPE = 12;
    private const int GMD_BOSS2_BODY_STATE_MAX = 13;
    private const int GMD_BOSS2_EGGMAN_SEQ_IDLE = 0;
    private const int GMD_BOSS2_EGGMAN_SEQ_MAX = 1;
    private const int GMD_BOSS2_BALL_OFFSET_CATCH = 229376;
    private const int GMD_BOSS2_BALL_BOMB_TIME = 120;
    private const int GMD_BOSS2_BALL_FLICKER_TIME = 60;
    private const int GMD_BOSS2_BALL_PART_SPEED_X = 4096;
    private const int GMD_BOSS2_BALL_PART_SPEED_Y = 16384;
    private const int GMD_BOSS2_EFFECT_BOMB_OFFSET_Z = 131072;
    private const float GMD_BOSS2_EFFECT_SWEAT_DISP_OFFSET_Y = 32f;
    private const float GMD_BOSS2_EFFECT_AFTERBURNER_DISP_OFFSET_Z = -30f;
    private const float GMD_BOSS2_EFFECT_AFTERBURNER_SMOKE_DISP_OFFSET_Z = -32f;
    private const float GMD_BOSS2_EFFECT_BODY_SMOKE_DISP_OFFSET_Z = -32f;
    private const float GMD_BOSS2_EFFECT_BLITZ_LINE_DISP_OFFSET_Y_CREATE = -30f;
    private const float GMD_BOSS2_EFFECT_BLITZ_LINE_DISP_OFFSET_Y_NORMAL = -4f;
    private const float GMD_BOSS2_EFFECT_BLITZ_CORE_DISP_OFFSET = 24f;
    private const float GMD_BOSS2_EFFECT_BLITZ_ARM_DISP_OFFSET = 4f;
    private const float GMD_BOSS2_EFFECT_ROLLATTACK_DISP_ROT_Y = 90f;
    private const float GMD_BOSS2_EFFECT_ROLLATTACK_DISP_OFFSET_Z = 64f;
    private const float GMD_BOSS2_SCATTER_SPEED = 1f;
    public const int DMD_STGSLCT_TASK_PAUSELEVEL = 0;
    public const int DMD_STGSLCT_TASK_PRIO_MAIN = 8192;
    public const int DMD_STGSLCT_TASK_GROUP_MAIN = 0;
    public const int DMD_STGSLCT_FILE_PATH_NUM_MAX = 60;
    public const string DMD_STGSLCT_CMN_DATA_FILENAME = "DEMO/CMN/D_CMN_WIN.AMB";
    public const string DMD_STGSLCT_DATA_FILENAME = "DEMO/STGSLCT/D_STGSLCT.AMB";
    public const float DMD_STGSLCT_SIZE_WIDTH = 960f;
    public const float DMD_STGSLCT_SIZE_HEIGHT = 720f;
    public const float DMD_STGSLCT_SIZE_HALF_WIDTH = 480f;
    public const float DMD_STGSLCT_SIZE_HALF_HEIGHT = 360f;
    public const int DMD_STGSLCT_DISP_SCORE_DIGIT_NUM = 9;
    public const int DMD_STGSLCT_DRAW_PRIO_ZONE = 8192;
    public const int DMD_STGSLCT_DRAW_PRIO_STAGE = 8192;
    public const int DMD_STGSLCT_DRAW_PRIO_BG = 4096;
    public const int DMD_STGSLCT_DRAW_PRIO_FIX = 12288;
    public const int DMD_STGSLCT_DRAW_PRIO_WIN = 13568;
    public const int DMD_STGSLCT_DRAW_PRIO_WIN_FIX = 16384;
    public const float DMD_STGSLCT_ACT_TABLE_TOP_POS_X = 100f;
    public const float DMD_STGSLCT_ACT_TABLE_DIST_Y = 128f;
    public const int DMD_STGSLCT_INIT_SCORE_NUM = 1000000000;
    public const int DMD_STGSLCT_INIT_RECORD_TIME_NUM = 36000;
    public const int DMD_STGSLCT_CONV_SCORE_RATE = 10;
    public const int DMD_STGSLCT_DOWN_ACT_DISP_POS = 0;
    public const int DMD_STGSLCT_DOWN_ACT_NODISP_POS = 180;
    public const int DMD_STGSLCT_MODE_TEX_FRAME_MAX = 60;
    public const float DMD_STGSLCT_NO_ACTIVE_NUM_ID = 10f;
    public const float DMD_STGSLCT_TIME_COLON_ID = 11f;
    public const float DMD_STGSLCT_WINDOW_SIZE_W = 420f;
    public const float DMD_STGSLCT_WINDOW_SIZE_H = 180f;
    public const float DMD_STGSLCT_WIN_DEF_RATE = 1f;
    public const float DMD_STGSLCT_FADEIN_TIME = 32f;
    public const float DMD_STGSLCT_FADEOUT_TIME = 32f;
    public const int DMD_STGSLCT_BGM_FADEIN_TIME = 32;
    public const int DMD_STGSLCT_BGM_FADEOUT_TIME = 32;
    public const int DMD_STGSLCT_BG_FADE_SPEED = 20;
    public const float DMD_STGSLCT_ZONE_EFCT_TIME = 16f;
    public const float DMD_STGSLCT_ACT_EFCT_TIME = 16f;
    public const float DMD_STGSLCT_WIN_EFCT_TIME = 8f;
    public const float DMD_STGSLCT_OBI_MOVE_START_POS = 1120f;
    public const float DMD_STGSLCT_OBI_MOVE_END_POS = -1120f;
    public const float DMD_STGSLCT_OBI_MOVE_SPEED = -3f;
    public const float DMD_STGSLCT_ACT_VRTCL_CHNG_DIST = 128f;
    public const int DMD_STGSLCT_ACT_VRTCL_CHNG_NUM = 3;
    public const float DMD_STGSLCT_ACT_VRTCL_MOVE_TIME = 12f;
    public const float DMD_STGSLCT_CRSR_MOVE_TIME = 8f;
    public const int DMD_STGSLCT_ZONE_FINAL_OPEN = 1;
    public const int DMD_STGSLCT_ZONE_SPECIAL_OPEN = 2;
    public const int DMD_STGSLCT_ZONE_ALL_OPEN = 3;
    public const int DMD_STGSLCT_ZONE_DECIDE_EFCT_ON = 6;
    public const int DMD_STGSLCT_ZONE_DECIDE_EFCT_TIME = 10;
    public const int DMD_STGSLCT_ZONE_DECIDE_EFCT_ON_POS_X = 8;
    public const int DMD_STGSLCT_ZONE_DECIDE_EFCT_ON_POS_Y = 8;
    public const int DMD_STGSLCT_ZONE_SCR_ID_NUM = 3;
    public const int DMD_STGSLCT_ZONE_SCR_CHANGE_ALL_FRM = 360;
    public const int DMD_STGSLCT_ZONE_CHNG_BTN_END_FRM = 12;
    public const uint DMD_STGSLCT_FLAG_EXIT = 1;
    public const uint DMD_STGSLCT_FLAG_CANCEL = 2;
    public const uint DMD_STGSLCT_FLAG_DECIDE = 4;
    public const uint DMD_STGSLCT_FLAG_DISP_MENU = 8;
    public const uint DMD_STGSLCT_FLAG_WIN_EFCT_END = 16;
    public const uint DMD_STGSLCT_FLAG_ACT_CHNG_ZONE = 32;
    public const uint DMD_STGSLCT_FLAG_ACT_CHNG_VRTCL = 64;
    public const uint DMD_STGSLCT_FLAG_ACT_CHNG_CRSR = 128;
    public const uint DMD_STGSLCT_FLAG_ACT_RE_CHNG_ZONE = 256;
    public const uint DMD_STGSLCT_FLAG_ACT_RE_CHNG_VRTCL = 512;
    public const uint DMD_STGSLCT_FLAG_ACT_RE_CHNG_CRSR = 1024;
    public const uint DMD_STGSLCT_FLAG_UP_CHNG_CRSR = 2048;
    public const uint DMD_STGSLCT_FLAG_DOWN_CHNG_CRSR = 4096;
    public const uint DMD_STGSLCT_FLAG_EME_TBL_MOVE_NODISP = 8192;
    public const uint DMD_STGSLCT_FLAG_EME_TBL_MOVE_DISP = 16384;
    public const uint DMD_STGSLCT_FLAG_MODE_TEX_MOVE_NODISP = 32768;
    public const uint DMD_STGSLCT_FLAG_MODE_TEX_MOVE_DISP = 65536;
    public const uint DMD_STGSLCT_FLAG_WHITE_FLASH_EFCT = 131072;
    public const uint DMD_STGSLCT_FLAG_DECIDE_ZONE_TABLE_EFCT = 262144;
    public const uint DMD_STGSLCT_FLAG_CHANGE_EVT_RANKING = 524288;
    public const uint DMD_STGSLCT_FLAG_CHANGE_DISP_BG = 1048576;
    public const uint DMD_STGSLCT_FLAG_BG_FADE_EFCT = 2097152;
    public const uint DMD_STGSLCT_FLAG_ACT_PUSH_L_BTN = 4194304;
    public const uint DMD_STGSLCT_FLAG_ACT_PUSH_R_BTN = 8388608;
    public const uint DMD_STGSLCT_FLAG_PREV_EVT_RANKING = 16777216;
    public const uint DMD_STGSLCT_FLAG_DEMO_SND_END = 33554432;
    public const uint DMD_STGSLCT_FLAG_CHECK_SIGN_OUT_OK = 1073741824;
    public const uint DMD_STGSLCT_FLAG_SIGN_OUT_EXIT = 2147483648;
    public const uint DMD_STGSLCT_DISP_FLAG_WIN_ACT = 1;
    public const uint DMD_STGSLCT_DISP_FLAG_LR_ARROW = 2;
    public const uint DMD_STGSLCT_DISP_FLAG_ACT_CRSR = 4;
    public const float DMD_STGSLCT_DISP_SCALE_TEXT = 1.68f;
    public const float DMD_STGSLCT_STAGE_TAB_NODISP_POS_X = 1120f;
    private const int DME_STGSLCT_NEXT_EVT_MAINGAME = 0;
    private const int DME_STGSLCT_NEXT_EVT_SPESTE = 1;
    private const int DME_STGSLCT_NEXT_EVT_RANKING = 2;
    private const int DME_STGSLCT_NEXT_EVT_MAINMENU = 3;
    private const int DME_STGSLCT_NEXT_EVT_TITLE = 4;
    private const int DME_STGSLCT_NEXT_EVT_MAX = 5;
    private const int DME_STGSLCT_DATA_TYPE_CMN_DATA = 0;
    private const int DME_STGSLCT_DATA_TYPE_LANG_DATA = 1;
    private const int DME_STGSLCT_DATA_TYPE_MAX = 2;
    private const int DME_STGSLCT_DATA_TYPE_NONE = 3;
    private const int DME_STGSLCT_PLATFORM_TYPE_PC = 0;
    private const int DME_STGSLCT_PLATFORM_TYPE_XBOX = 1;
    private const int DME_STGSLCT_PLATFORM_TYPE_PS3 = 2;
    private const int DME_STGSLCT_PLATFORM_TYPE_WII = 3;
    private const int DME_STGSLCT_PLATFORM_TYPE_IPHONE = 4;
    private const int DME_STGSLCT_PLATFORM_TYPE_MAX = 5;
    private const int DME_STGSLCT_PLATFORM_TYPE_NONE = 6;
    private const int DME_STGSLCT_ZONE_TYPE_1 = 0;
    private const int DME_STGSLCT_ZONE_TYPE_2 = 1;
    private const int DME_STGSLCT_ZONE_TYPE_3 = 2;
    private const int DME_STGSLCT_ZONE_TYPE_4 = 3;
    private const int DME_STGSLCT_ZONE_TYPE_FINAL = 4;
    private const int DME_STGSLCT_ZONE_TYPE_SPE = 5;
    private const int DME_STGSLCT_ZONE_TYPE_NUM = 6;
    private const int DME_STGSLCT_ZONE_TYPE_NONE = 7;
    private const int DME_STGSLCT_MODE_STATE_ZONE_SLCT = 0;
    private const int DME_STGSLCT_MODE_STATE_ACT_SLCT = 1;
    private const int DME_STGSLCT_MODE_STATE_NUM = 2;
    private const int DME_STGSLCT_MODE_STATE_NONE = 3;
    private const int DME_STGSLCT_PLAY_MODE_NORMAL = 0;
    private const int DME_STGSLCT_PLAY_MODE_TIME_ATK = 1;
    private const int DME_STGSLCT_PLAY_MODE_NUM = 2;
    private const int DME_STGSLCT_PLAY_MODE_NONE = 3;
    private const int DME_STGSLCT_WIN_MENU = 0;
    private const int DME_STGSLCT_WIN_STG_SLCT = 1;
    private const int DME_STGSLCT_WIN_1_1_CLEAR = 2;
    private const int DME_STGSLCT_WIN_BOSS1_CAN_PLAY = 3;
    private const int DME_STGSLCT_WIN_BOSS2_CAN_PLAY = 4;
    private const int DME_STGSLCT_WIN_BOSS3_CAN_PLAY = 5;
    private const int DME_STGSLCT_WIN_BOSS4_CAN_PLAY = 6;
    private const int DME_STGSLCT_WIN_FINAL_CAN_SLCT = 7;
    private const int DME_STGSLCT_WIN_SSONIC_SLCT = 8;
    private const int DME_STGSLCT_WIN_SPESTE_CAN_SLCT = 9;
    private const int DME_STGSLCT_WIN_NUM = 10;
    private const int DME_STGSLCT_WIN_NONE = 11;
    private const int DME_STGSLCT_ACT_PAGE_1 = 0;
    private const int DME_STGSLCT_ACT_PAGE_2 = 1;
    private const int DME_STGSLCT_ACT_PAGE_3 = 2;
    private const int DME_STGSLCT_ACT_PAGE_4 = 3;
    private const int DME_STGSLCT_ACT_PAGE_FINAL = 4;
    private const int DME_STGSLCT_ACT_PAGE_SPE = 5;
    private const int DME_STGSLCT_ACT_PAGE_NUM = 6;
    private const int DME_STGSLCT_ACT_PAGE_NONE = 7;
    private const int DME_STGSLCT_STAGE_1_1 = 0;
    private const int DME_STGSLCT_STAGE_1_2 = 1;
    private const int DME_STGSLCT_STAGE_1_3 = 2;
    private const int DME_STGSLCT_STAGE_1_B = 3;
    private const int DME_STGSLCT_STAGE_2_1 = 4;
    private const int DME_STGSLCT_STAGE_2_2 = 5;
    private const int DME_STGSLCT_STAGE_2_3 = 6;
    private const int DME_STGSLCT_STAGE_2_B = 7;
    private const int DME_STGSLCT_STAGE_3_1 = 8;
    private const int DME_STGSLCT_STAGE_3_2 = 9;
    private const int DME_STGSLCT_STAGE_3_3 = 10;
    private const int DME_STGSLCT_STAGE_3_B = 11;
    private const int DME_STGSLCT_STAGE_4_1 = 12;
    private const int DME_STGSLCT_STAGE_4_2 = 13;
    private const int DME_STGSLCT_STAGE_4_3 = 14;
    private const int DME_STGSLCT_STAGE_4_B = 15;
    private const int DME_STGSLCT_STAGE_F_1 = 16;
    private const int DME_STGSLCT_STAGE_S_1 = 17;
    private const int DME_STGSLCT_STAGE_S_2 = 18;
    private const int DME_STGSLCT_STAGE_S_3 = 19;
    private const int DME_STGSLCT_STAGE_S_4 = 20;
    private const int DME_STGSLCT_STAGE_S_5 = 21;
    private const int DME_STGSLCT_STAGE_S_6 = 22;
    private const int DME_STGSLCT_STAGE_S_7 = 23;
    private const int DME_STGSLCT_STAGE_NUM = 24;
    private const int DME_STGSLCT_STAGE_NONE = 25;
    public const int SYD_NEXT_EVT_MAX = 8;
    public const int SYD_EVT_ARG_SIZE = 8;
    public const int SYD_OVL_CONTROL_NUM = 1;
    public const int SYD_EVT_FLAG_NOP = 0;
    public const int SYD_EVT_FLAG_REQ = 1;
    public const int RAND_MAX = 32767;
    public const float INVRANDMAX = 3.051758E-05f;
    public const int GMD_GMK_PISTON_STROKE_SPEED = 16384;
    public const int GMD_GMK_PISTON_STROKE = 524288;
    public const int GMD_GMK_PISTON_OFF_Z = 262144;
    private const int GME_GMK_RECT_DATA_COL_WIDTH = 0;
    private const int GME_GMK_RECT_DATA_COL_HEIGHT = 1;
    private const int GME_GMK_RECT_DATA_COL_OFST_X = 2;
    private const int GME_GMK_RECT_DATA_COL_OFST_Y = 3;
    private const int GME_GMK_RECT_DATA_DEF_LEFT = 4;
    private const int GME_GMK_RECT_DATA_DEF_TOP = 5;
    private const int GME_GMK_RECT_DATA_DEF_RIGHT = 6;
    private const int GME_GMK_RECT_DATA_DEF_BOTTOM = 7;
    private const int GME_GMK_RECT_DATA_MAX = 8;
    public const int GMD_GMK_BOSS3_PILLAR_PATTERN_NUM = 7;
    public const int GMD_GMK_BOSS_PILLAR_NUM = 26;
    public const float GMD_GMK_BOSS3_PILLAR_SCALE = 1.25f;
    public const int GMD_GMK_BOSS3_PILLAR_SIZE = 40;
    public const int GMD_GMK_BOSS3_PILLAR_OFFSET_Y = -4;
    public const int GMD_GMK_BOSS3_PILLAR_DEFAULT_OFFSET = 16;
    public const int GMD_GMK_BOSS3_PILLAR_MARGIN_FRONT = 10;
    public const float GMD_GMK_BOSS3_PILLAR_SPEED_NORMAL = 0.5f;
    public const float GMD_GMK_BOSS3_PILLAR_SPEED_ADJUST = 1.5f;
    public const int GMD_GMK_BOSS3_PILLAR_FRAME_HURRY = 50;
    public const int GMD_GMK_BOSS3_PILLAR_FRAME_RETURN = 30;
    public const int GMD_GMK_BOSS3_PILLAR_QUAKE_FALL = 12288;
    public const uint GMD_GMK_BOSS3_PILLAR_BYTE_PARAM_FLAG_FINISH = 1;
    public const uint GMD_GMK_BOSS3_PILLAR_FLAG_HIT_EFFECT = 1;
    public const uint GMD_GMK_BOSS3_PILLAR_FLAG_CAMERA_VIBRATION = 2;
    public const uint GMD_GMK_BOSS3_PILLAR_FLAG_SE_1 = 4;
    public const uint GMD_GMK_BOSS3_PILLAR_FLAG_SE_2 = 8;
    public const uint GMD_GMK_BOSS3_PILLAR_FLAG_DRAW_WALL_BACK = 16;
    public const int GMD_GMK_BOSS3_PILLAR_TIME_EFFECT_APPEAR = 45;
    private const int GMD_GMK_BOSS3_PILLAR_TYPE_LEFT = 0;
    private const int GMD_GMK_BOSS3_PILLAR_TYPE_RIGHT = 1;
    private const int GMD_GMK_BOSS3_PILLAR_TYPE_TOP = 2;
    private const int GMD_GMK_BOSS3_PILLAR_TYPE_BOTTOM = 3;
    private const int GMD_GMK_BOSS3_PILLAR_TYPE_NUM = 4;
    public const int GMD_GMK_BOSS3_PILLAR_HORIZONTAL_TYPE_NUM = 3;
    public const int GMD_GMK_BOSS3_PILLAR_HORIZONTAL_PARTS_NUM = 6;
    public const int GMD_GMK_BOSS3_PILLAR_F_HORIZONTAL_PARTS_NUM = 9;
    public const int GMD_GMK_BOSS3_PILLAR_HORIZONTAL_WIDTH = 310;
    public const int GMD_GMK_BOSS3_PILLAR_HORIZONTAL_HEIGHT = 40;
    public const int GMD_GMK_BOSS3_PILLAR_VERTICAL_TYPE_NUM = 5;
    public const int GMD_GMK_BOSS3_PILLAR_VERTICAL_PARTS_NUM = 4;
    public const int GMD_GMK_BOSS3_PILLAR_F_VERTICAL_PARTS_NUM = 5;
    public const int GMD_GMK_BOSS3_PILLAR_VERTICAL_WIDTH = 40;
    public const int GMD_GMK_BOSS3_PILLAR_VERTICAL_HEIGHT = 190;
    public const int GMD_GMK_BOSS3_PILLAR_PARTS_NUM_MAX = 9;
    public const int GMD_GMK_BOSS3_PILLAR_WALL_SPEED = 12288;
    public const int GMD_GMK_BOSS3_PILLAR_WALL_SIZE = 32;
    public const int GMD_GMK_BOSS3_PILLAR_WALL_HEIGHT = 6;
    public const int GMD_GMK_BOSS3_PILLAR_WALL_OFFSET_Y = 224;
    public const int GMD_GMK_BOSS3_PILLAR_WALL_HEIGHT_F = 3;
    public const int GMD_GMK_BOSS3_PILLAR_WALL_SIZE_F = 64;
    public const int GMD_GMK_BOSS3_PILLAR_WALL_OFFSET_Y_F = 192;
    public const int GMD_GMK_BOSS3_PILLAR_WALL_NO_PRESS_DIE_FLOW_DISTANCE = 64;
    public const int GMD_GMK_BOSS3_PILLAR_WALL_NO_PRESS_DIE_MOVE_LAND = 4;
    public const int GMD_GMK_BOSS3_PILLAR_WALL_NO_PRESS_DIE_MOVE_JUMP = 1;
    private const int GMD_GMK_BOSS3_PILLAR_WALL_TYPE_LEFT = 0;
    private const int GMD_GMK_BOSS3_PILLAR_WALL_TYPE_RIGHT = 1;
    private const int GMD_GMK_BOSS3_PILLAR_WALL_TYPE_NUM = 2;
    public const int GMD_GMK_BOSS3_PILLAR_PILLAR_EFFECT_OFFSET_Y = 188416;
    public const int GMD_GMK_BOSS3_PILLAR_WALL_EFFECT_OFFSET_Y = 196608;
    public const int GMD_GMK_BOSS3_PILLAR_PILLAR_EFFECT_OFFSET_Y_FINAL = 229376;
    public const int GMD_GMK_BOSS3_PILLAR_WALL_EFFECT_OFFSET_Y_FINAL = 131072;
    private const int GMD_GMK_BOSS3_PILLAR_WALL_PARTS_B = 0;
    private const int GMD_GMK_BOSS3_PILLAR_WALL_PARTS_GLARE = 1;
    private const int GMD_GMK_BOSS3_PILLAR_WALL_PARTS_NUM = 2;
    private const int GMD_GMK_BOBBIN_MODE_WAIT = 0;
    private const int GMD_GMK_BOBBIN_MODE_HIT = 1;
    private const int GMD_GMK_BOBBIN_MODE_NUM = 2;
    public const long GMD_GMK_BOBBIN_RECT_MARGIN_PLAYER_X = 32768;
    public const long GMD_GMK_BOBBIN_RECT_MARGIN_PLAYER_Y = 65536;
    public const long GMD_GMK_BOBBIN_RECT_OFFSET_PLAYER_Y = -12288;
    public const int GMD_GMK_BOBBIN_OFFSET_RADIUS = 114688;
    public const int GMD_GMK_BOBBIN_SPEED_X = 24576;
    public const int GMD_GMK_BOBBIN_SPEED_Y = 24576;
    public const int GMD_GMK_BOBBIN_NO_MOVE_TIME = 5;
    public const int GMD_GMK_BOBBIN_FLAG_NO_RECOVER_HOMING = 1;
    public const int GMD_GMK_BOBBIN_SCORE_LIMIT_NUM = 10;
    private const int GME_EFFECT_3DES_POS_TYPE_MTX = 0;
    private const int GME_EFFECT_3DES_POS_TYPE_EMT = 1;
    private const int GME_EFFECT_3DES_POS_TYPE_EMT_DEPEND = 2;
    private const int GME_EFFECT_3DES_POS_TYPE_MAX = 3;
    private const int GME_EFFECT_RECT_DEF = 0;
    private const int GME_EFFECT_RECT_ATK = 1;
    private const int GME_EFFECT_RECT_NUM = 2;
    private const int GMD_EFFECT_CR_PARAM_MODEL_IDX_NONE = -1;
    private const int GMD_EFFECT_3DES_FLAG_NOFLIP = 1;
    private const int GMD_EFFECT_3DES_FLAG_STICKPARENT = 2;
    private const int GMD_EFFECT_3DES_FLAG_SCALE_BY_MTX = 4;
    private const int GMD_EFFECT_3DES_FLAG_ENABLE_DIR = 16;
    private const int GMD_EFFECT_3DES_FLAG_COPY_NODISP = 32;
    private const int GMD_EFFECT_3DES_FLAG_EMT_USE_DATA_ROT = 64;
    public const int GMD_BOSS1_BODY_NODE_IDX_CHAIN_CONNECT = 13;
    public const int GMD_BOSS1_BODY_NODE_IDX_EGG_CONNECT = 11;
    public const int GMD_BOSS1_BODY_NODE_IDX_BODY_POSTURE = 2;
    public const int GMD_BOSS1_BODY_NODE_IDX_CHAIN_ROOT_PART = 9;
    public const int GMD_BOSS1_BODY_NODE_SNM_NUM = 4;
    public const int GMD_BOSS1_BODY_NODE_CNM_NUM = 1;
    public const int GMD_BOSS1_CHAIN_NODE_IDX_BALL = 11;
    public const int GMD_BOSS1_CHAIN_NODE_IDX_RING_START = 2;
    public const int GMD_BOSS1_CHAIN_NODE_SNM_NUM = 10;
    public const int GMD_BOSS1_CHAIN_NODE_CNM_NUM = 9;
    public const int GMD_BOSS1_LIFE = 8;
    public const int GMD_BOSS1_FINAL_LIFE = 4;
    public const int GMD_BOSS1_EXTRA_ATK_THRESHOLD_LIFE = 3;
    public const int GMD_BOSS1_DEFAULT_POS_Z = 0;
    public const int GMD_BOSS1_SCATTER_PARTS_NUM = 9;
    public const float GMD_BOSS1_DEFAULT_BLEND_SPD = 0.125f;
    public const uint GMD_BOSS1_MGR_FLAG_SETUP_END = 1;
    public const uint GMD_BOSS1_MGR_FLAG_CLEAR_BOSS = 2;
    public const uint GMD_BOSS1_BODY_FLAG_CHAIN_DEPEND = 1;
    public const uint GMD_BOSS1_BODY_FLAG_INDP_ACT_FORBIDDEN = 2;
    public const uint GMD_BOSS1_BODY_FLAG_INVINCIBLE = 4;
    public const uint GMD_BOSS1_BODY_FLAG_CHAIN_DEAD = 8;
    public const uint GMD_BOSS1_BODY_FLAG_ABURNER_ACTIVE = 16;
    public const uint GMD_BOSS1_BODY_FLAG_CHAIN_NODISP = 32;
    public const uint GMD_BOSS1_BODY_FLAG_CHAIN_NOHIT = 64;
    public const uint GMD_BOSS1_BODY_FLAG_MANUAL_CHAIN_MOTION = 128;
    public const uint GMD_BOSS1_BODY_FLAG_EFF_DEBRIS_CREATED = 256;
    public const uint GMD_BOSS1_BODY_FLAG_SIGNAL_B2E_EGG_ESCAPE = 8388608;
    public const uint GMD_BOSS1_BODY_FLAG_SIGNAL_B2E_EGG_BURNT = 16777216;
    public const uint GMD_BOSS1_BODY_FLAG_SIGNAL_B2F_ABURNER = 33554432;
    public const uint GMD_BOSS1_BODY_FLAG_SIGNAL_B2C_SCATTER = 67108864;
    public const uint GMD_BOSS1_BODY_FLAG_SIGNAL_B2C_EFF_SW = 134217728;
    public const uint GMD_BOSS1_BODY_FLAG_SIGNAL_C2E_ATK_HIT = 268435456;
    public const uint GMD_BOSS1_BODY_FLAG_SIGNAL_B2E_EGG_DAMAGE = 536870912;
    public const uint GMD_BOSS1_BODY_FLAG_SIGNAL_B2B_BODY_DAMAGE = 1073741824;
    public const uint GMD_BOSS1_BODY_FLAG_SIGNAL_B2B_DEFEAT = 2147483648;
    public const int GMD_BOSS1_BODY_HIDE_RADIUS_V = 0;
    public const int GMD_BOSS1_BODY_HIDE_RADIUS_H = 262144;
    public const float GMD_BOSS1_BODY_DMG_FLICKER_RADIUS = 32f;
    public const int GMD_BOSS1_BODY_DMG_NO_HIT_TIME = 10;
    public const int GMD_BOSS1_BODY_START_MOVE_DEST_AREA_X = 786432;
    public const int GMD_BOSS1_BODY_START_WAIT_END_TIME = 10;
    public const int GMD_BOSS1_BODY_START_MOVE_FALL_SPD = 4096;
    public const int GMD_BOSS1_BODY_START_MOVE_SIDE_SPD = -4096;
    public const int GMD_BOSS1_BODY_PREP_CHAIN_ACTIVE_TIMING_FRAME = 95;
    public const int GMD_BOSS1_BODY_PRE_ATKNML_SPD_ADD = 81;
    public const int GMD_BOSS1_BODY_PRE_ATKNML_SPD_MAX_ABS = 7372;
    public const float GMD_BOSS1_BODY_PRE_ATKNML_CHAIN_INI_MTN_FRAME = 160f;
    public const int GMD_BOSS1_BODY_ATKNML_LEFT_LIMIT = 589824;
    public const int GMD_BOSS1_BODY_ATKNML_RIGHT_LIMIT = 983040;
    public const float GMD_BOSS1_BODY_ATKNML_CHAIN_INI_BLD_SPD = 0.01f;
    public const float GMD_BOSS1_BODY_ATKNML_CHAIN_MTN_SPD = 1.25f;
    public const int GMD_BOSS1_BODY_ATKNML_MOVE_FRAME = 56;
    public const int GMD_BOSS1_BODY_ATKNML_DRIFT_FRAME = 72;
    public const int GMD_BOSS1_BODY_ATKNML_DRIFT_AMP = 131072;
    public const int GMD_BOSS1_BODY_ATKNML_TURN_FRAME = 40;
    public const int GMD_BOSS1_BODY_ATKBASH_HEIGHT = 360448;
    public const int GMD_BOSS1_BODY_ATKBASH_TARG_X_LEFT = 720896;
    public const int GMD_BOSS1_BODY_ATKBASH_TARG_X_RIGHT = 851968;
    public const int GMD_BOSS1_BODY_ATKBASH_MTN_FRAME = 39;
    public const float GMD_BOSS1_BODY_ATKBASH_SPD_ADD_FACTOR = 0.03125f;
    public const int GMD_BOSS1_BODY_ATKBASH_HOMEPOS_X_LEFT = 524288;
    public const int GMD_BOSS1_BODY_ATKBASH_HOMEPOS_X_RIGHT = 1048576;
    public const int GMD_BOSS1_BODY_ATKBASH_QUAKE_VAL_Y = 65536;
    public const int GMD_BOSS1_BODY_ATBASH_RETURN_TIME = 60;
    public const int GMD_BOSS1_BODY_DEFEAT_WAIT_START_TIME = 40;
    public const int GMD_BOSS1_BODY_DEFEAT_BOMB_CREATE_WIDTH = 327680;
    public const int GMD_BOSS1_BODY_DEFEAT_BOMB_CREATE_HEIGHT = 327680;
    public const int GMD_BOSS1_BODY_DEFEAT_BOMB_CREATE_INTERVAL_MIN = 10;
    public const int GMD_BOSS1_BODY_DEFEAT_BOMB_CREATE_INTERVAL_MAX = 10;
    public const int GMD_BOSS1_BODY_DEFEAT_BOMB_CREATE_TIME = 120;
    public const int GMD_BOSS1_BODY_DEFEAT_BURNT_WAIT_TIME = 40;
    public const int GMD_BOSS1_BODY_ESCAPE_SCR_UNLOCK_X_FROM_RIGHT = -131072;
    public const int GMD_BOSS1_BODY_ESCAPE_OUT_FINAL_ZONE_X_FROM_RIGHT = 393216;
    public const int GMD_BOSS1_BODY_ESCAPE_SPD_X_ADD = 409;
    public const int GMD_BOSS1_BODY_ESCAPE_SPD_Y_ADD = -256;
    public const int GMD_BOSS1_BODY_ESCAPE_SPD_X_MAX = 4915;
    public const int GMD_BOSS1_BODY_ESCAPE_SPD_Y_MAX = -3072;
    public const int GMD_BOSS1_BODY_PLY_NML_REBOUND_X = 16384;
    public const int GMD_BOSS1_BODY_PLY_NML_REBOUND_Y = 12288;
    public const int GMD_BOSS1_BODY_PLY_NML_REBOUND_NOJUMPMOVE_TIME = 102400;
    public const int GMD_BOSS1_BODY_PLY_HOMING_REBOUND_X = 20480;
    public const int GMD_BOSS1_BODY_PLY_HOMING_REBOUND_Y = 16384;
    public const int GMD_BOSS1_BODY_PLY_HOMING_REBOUND_NOJUMPMOVE_TIME = 102400;
    public const int GMD_BOSS1_BODY_ATKNML_DMG_RECT_SIZE_LEFT = -24;
    public const int GMD_BOSS1_BODY_ATKNML_DMG_RECT_SIZE_TOP = -24;
    public const int GMD_BOSS1_BODY_ATKNML_DMG_RECT_SIZE_RIGHT = 24;
    public const int GMD_BOSS1_BODY_ATKNML_DMG_RECT_SIZE_BOTTOM = 16;
    public const int GMD_BOSS1_BODY_DMG_RECT_SIZE_LEFT = -24;
    public const int GMD_BOSS1_BODY_DMG_RECT_SIZE_TOP = -24;
    public const int GMD_BOSS1_BODY_DMG_RECT_SIZE_RIGHT = 24;
    public const int GMD_BOSS1_BODY_DMG_RECT_SIZE_BOTTOM = 24;
    public const int GMD_BOSS1_BODY_ATK_RECT_SIZE_LEFT = -16;
    public const int GMD_BOSS1_BODY_ATK_RECT_SIZE_TOP = -16;
    public const int GMD_BOSS1_BODY_ATK_RECT_SIZE_RIGHT = 16;
    public const int GMD_BOSS1_BODY_ATK_RECT_SIZE_BOTTOM = 16;
    public const uint GMD_BOSS1_CHAIN_FLAG_MANUAL_MOTION_MERGE = 1;
    public const int GMD_BOSS1_CHAIN_ATK_RECT_SIZE_LEFT = -16;
    public const int GMD_BOSS1_CHAIN_ATK_RECT_SIZE_TOP = -16;
    public const int GMD_BOSS1_CHAIN_ATK_RECT_SIZE_RIGHT = 16;
    public const int GMD_BOSS1_CHAIN_ATK_RECT_SIZE_BOTTOM = 16;
    public const uint GMD_BOSS1_EGG_FLAG_INDP_ACT_SET = 1;
    public const uint GMD_BOSS1_EGG_FLAG_SWEAT_ACTIVE = 2;
    public const int GMD_BOSS1_EFF_SHOCKWAVE_SUB_NUM = 3;
    public const int GMD_BOSS1_EFF_SHOCKWAVE_SUB_START_OFST_X = 163840;
    public const int GMD_BOSS1_EFF_SHOCKWAVE_SUB_OFST_Y = -16384;
    public const int GMD_BOSS1_EFF_SHOCKWAVE_ATK_RECT_TIME = 10;
    public const int GMD_BOSS1_EFF_SHOCKWAVE_ATK_RECT_SIZE_LEFT = -64;
    public const int GMD_BOSS1_EFF_SHOCKWAVE_ATK_RECT_SIZE_TOP = -32;
    public const int GMD_BOSS1_EFF_SHOCKWAVE_ATK_RECT_SIZE_RIGHT = 64;
    public const int GMD_BOSS1_EFF_SHOCKWAVE_ATK_RECT_SIZE_BOTTOM = 32;
    public const int GMD_BOSS1_EFF_SCT_SPIN_AXIS_NUM = 2;
    public const float GMD_BOSS1_EFF_SCT_PART_RING_OFST_Y = 8f;
    public const float GMD_BOSS1_EFF_SCT_PART_IBALL_OFST_Y = 32f;
    public const float GMD_BOSS1_EFF_SCT_PART_RING_FLY_SPD = 5f;
    public const float GMD_BOSS1_EFF_SCT_PART_IBALL_FLY_SPD = 3f;
    public const int GMD_BOSS1_EFF_SCT_PART_FLY_DELAY_MAX = 20;
    public const int GMD_BOSS1_EFF_SCT_PART_FLY_DELETE_TIME = 180;
    public const int GMD_BOSS1_EFF_SCT_PART_RING_FRECT_LEFT = -8;
    public const int GMD_BOSS1_EFF_SCT_PART_RING_FRECT_TOP = -8;
    public const int GMD_BOSS1_EFF_SCT_PART_RING_FRECT_RIGHT = 8;
    public const int GMD_BOSS1_EFF_SCT_PART_RING_FRECT_BOTTOM = 8;
    public const int GMD_BOSS1_EFF_SCT_PART_IBALL_FRECT_LEFT = -24;
    public const int GMD_BOSS1_EFF_SCT_PART_IBALL_FRECT_TOP = -24;
    public const int GMD_BOSS1_EFF_SCT_PART_IBALL_FRECT_RIGHT = 24;
    public const int GMD_BOSS1_EFF_SCT_PART_IBALL_FRECT_BOTTOM = 24;
    public const int GMD_BOSS1_EFF_BOMB_OFST_Z = 131072;
    public const int GMD_BOSS1_EFF_DAMAGE_OFST_Z = 131072;
    public const float GMD_BOSS1_EFF_ABURNER_DISP_OFST_Z = -30f;
    public const float GMD_BOSS1_EFF_ABSMOKE_DISP_OFST_Z = -32f;
    public const float GMD_BOSS1_EFF_BODYSMOKE_DISP_OFST_Z = -32f;
    public const int GMD_BOSS1_EFF_SMALL_SMOKE_NUM = 3;
    public const int GMD_BOSS1_EFF_DEBRIS_PARENT_OFST_X = -65536;
    public const float GMD_BOSS1_EFF_SWEAT_DISP_OFST_Y = 32f;
    public const int GMD_BOSS1_FLASH_SCREEN_FADEOUT_TIME = 4;
    public const int GMD_BOSS1_FLASH_SCREEN_DURATION_TIME = 5;
    public const int GMD_BOSS1_FLASH_SCREEN_FADEIN_TIME = 30;
    public const int GMD_BOSS1_SE_REEL_INTERVAL_TIME = 15;
    public const int GMD_BOSS1_SE_ATK_BASH_PREP_REEL_START_WAIT_TIME = 110;
    public const int GMD_BOSS1_SE_ATK_BASH_PREP_REEL_PLAY_NUM = 3;
    public const int GMD_BOSS1_SE_ATK_BASH_FIN_REEL_START_WAIT_TIME = 70;
    public const int GMD_BOSS1_SE_ATK_BASH_FIN_REEL_PLAY_NUM = 2;
    public const int GMD_BOSS1_SE_ATK_BASH_FIN_REEL_INTERVAL_TIME = 15;
    public const int GME_BOSS1_BODY_STATE_NOP = 0;
    public const int GME_BOSS1_BODY_STATE_START = 1;
    public const int GME_BOSS1_BODY_STATE_PREP = 2;
    public const int GME_BOSS1_BODY_STATE_PRE_ATK_NML = 3;
    public const int GME_BOSS1_BODY_STATE_ATK_NML = 4;
    public const int GME_BOSS1_BODY_STATE_ATK_BASH = 5;
    public const int GME_BOSS1_BODY_STATE_DAMAGE_NML = 6;
    public const int GME_BOSS1_BODY_STATE_DEFEAT = 7;
    public const int GME_BOSS1_BODY_STATE_ESCAPE = 8;
    public const int GME_BOSS1_BODY_STATE_MAX = 9;
    public const int GME_BOSS1_PART_IDX_BODY = 0;
    public const int GME_BOSS1_PART_IDX_CHAIN = 1;
    public const int GME_BOSS1_PART_IDX_EGG = 2;
    public const int GME_BOSS1_PART_IDX_MAX = 3;
    public const int GME_BOSS1_ACT_ID_APP_FALL = 0;
    public const int GME_BOSS1_ACT_ID_APP_END = 1;
    public const int GME_BOSS1_ACT_ID_PREP_CHAIN = 2;
    public const int GME_BOSS1_ACT_ID_PRE_ATK_NML_MOVE = 3;
    public const int GME_BOSS1_ACT_ID_ATK_NML_MOVE = 4;
    public const int GME_BOSS1_ACT_ID_ATK_BASH_LOCK = 5;
    public const int GME_BOSS1_ACT_ID_ATK_BASH_PREP = 6;
    public const int GME_BOSS1_ACT_ID_ATK_BASH_SWING = 7;
    public const int GME_BOSS1_ACT_ID_ATK_BASH_FINISH = 8;
    public const int GME_BOSS1_ACT_ID_ATK_BASH_HOMING = 9;
    public const int GME_BOSS1_ACT_ID_ATK_BASH_RESTORE = 10;
    public const int GME_BOSS1_ACT_ID_DAMAGE_NML = 11;
    public const int GME_BOSS1_ACT_ID_ESCAPE = 12;
    public const int GME_BOSS1_ACT_ID_MAX = 13;
    public const int GME_BOSS1_EGG_ACT_ID_LAUGH = 0;
    public const int GME_BOSS1_EGG_ACT_ID_DAMAGE = 1;
    public const int GME_BOSS1_EGG_ACT_ID_MAX = 2;
    public const int GME_BOSS1_EFF_BOMB_TYPE_SMALL = 0;
    public const int GME_BOSS1_EFF_BOMB_TYPE_MAX = 1;
    public const byte OBD_TBLWORK_ACTFLAG_REPEAT_POINT = 1;
    public const byte OBD_TBLWORK_ACTFLAG_REPEAT = 2;
    public const byte OBD_TBLWORK_MOVE_REPEAT_POINT = 1;
    public const byte OBD_TBLWORK_SCALE_REPEAT_POINT = 1;
    public const byte OBD_TBLWORK_DIR_REPEAT_POINT = 1;
    public const uint OBD_TBLWORK_FLAG_ACT_END = 1;
    public const uint OBD_TBLWORK_FLAG_MOVE_END = 2;
    public const uint OBD_TBLWORK_FLAG_SCALE_END = 4;
    public const uint OBD_TBLWORK_FLAG_DIR_END = 8;
    public const uint OBD_TBLWORK_FLAG_SPD_VFLIP = 16;
    public const uint OBD_TBLWORK_FLAG_SPD_HFLIP = 32;
    public const uint OBD_TBLWORK_FLAG_REPEAT = 64;
    public const uint OBD_TBLWORK_FLAG_SPD_DIR = 128;
    public const uint OBD_TBLWORK_FLAG_NO_DISP = 256;
    public const uint OBD_TBLWORK_FLAG_MOVE_PARENT = 512;
    public const uint OBD_TBLWORK_FLAG_FLIP_PARRENT_FIX = 1024;
    public const uint OBD_TBLWORK_FLAG_NO_ACT = 16777216;
    public const uint OBD_TBLWORK_FLAG_NO_MOVE = 33554432;
    public const uint OBD_TBLWORK_FLAG_NO_SCALE = 67108864;
    public const uint OBD_TBLWORK_FLAG_NO_DIR = 134217728;
    public const uint MTD_MATH_MAX_ANGLE = 65536;
    public const uint MTD_MATH_ANGLE_MASK = 65535;
    private const int NNE_PRIM3D_POINT_FMT_P = 0;
    private const int NNE_PRIM3D_POINT_FMT_PC = 1;
    private const int NNE_PRIM_ALPHABLEND_OFF = 0;
    private const int NNE_PRIM_ALPHABLEND_ON = 1;
    private const int NNE_PRIM_TEXBLEND_MODULATE = 0;
    private const int NNE_PRIM_TEXBLEND_REPLACE = 1;
    private const int NNE_PRIM_TEXWRAP_REPEAT = 0;
    private const int NNE_PRIM_TEXWRAP_CLAMP = 1;
    private const int NNE_PRIM_TEXWRAP_REGION_REPEAT = 2;
    private const int NNE_PRIM_TEXWRAP_REGION_CLAMP = 3;
    private const int NNE_PRIM_TEXCOORD_UV = 0;
    private const int NNE_PRIM_TEXCOORD_ENVIRONMENT = 1;
    private const int NNE_PRIM2D_FMT_P = 0;
    private const int NNE_PRIM2D_FMT_PC = 1;
    private const int NNE_PRIM2D_FMT_PCT = 2;
    private const int NNE_PRIM2D_POINT_FMT_P = 0;
    private const int NNE_PRIM2D_POINT_FMT_PC = 1;
    private const int NNE_PRIM3D_FMT_P = 0;
    private const int NNE_PRIM3D_FMT_PN = 1;
    private const int NNE_PRIM3D_FMT_PC = 2;
    private const int NNE_PRIM3D_FMT_PNT = 3;
    private const int NNE_PRIM3D_FMT_PCT = 4;
    private const int NNE_PRIM_LIGHT_DISABLE = 0;
    private const int NNE_PRIM_LIGHT_ENABLE = 1;
    private const int NNE_PRIM_LIGHT_SPECULAR = 2;
    private const int NNE_PRIM_BLEND_ADD = 0;
    private const int NNE_PRIM_BLEND_BLEND = 1;
    private const int NNE_PRIM_BLEND_PS2_CUSTOM = 2;
    private const int NNE_PRIM_BLEND_PSP_CUSTOM = 3;
    private const int NNE_PRIM_CULL_NONE = 0;
    private const int NNE_PRIM_CULL_R = 1;
    private const int NNE_PRIM_CULL_L = 2;
    public const int NNE_PRIM_TRIANGLE_LIST = 0;
    public const int NNE_PRIM_TRIANGLE_STRIP = 1;
    public const double X16 = 0.0625;
    public const uint BIT_0 = 1;
    public const uint BIT_1 = 2;
    public const uint BIT_2 = 4;
    public const uint BIT_3 = 8;
    public const uint BIT_4 = 16;
    public const uint BIT_5 = 32;
    public const uint BIT_6 = 64;
    public const uint BIT_7 = 128;
    public const uint BIT_8 = 256;
    public const uint BIT_9 = 512;
    public const uint BIT_10 = 1024;
    public const uint BIT_11 = 2048;
    public const uint BIT_12 = 4096;
    public const uint BIT_13 = 8192;
    public const uint BIT_14 = 16384;
    public const uint BIT_15 = 32768;
    public const uint BIT_16 = 65536;
    public const uint BIT_17 = 131072;
    public const uint BIT_18 = 262144;
    public const uint BIT_19 = 524288;
    public const uint BIT_20 = 1048576;
    public const uint BIT_21 = 2097152;
    public const uint BIT_22 = 4194304;
    public const uint BIT_23 = 8388608;
    public const uint BIT_24 = 16777216;
    public const uint BIT_25 = 33554432;
    public const uint BIT_26 = 67108864;
    public const uint BIT_27 = 134217728;
    public const uint BIT_28 = 268435456;
    public const uint BIT_29 = 536870912;
    public const uint BIT_30 = 1073741824;
    public const uint BIT_31 = 2147483648;
    private const int GME_PMENU_RESULT_RETRY = 0;
    private const int GME_PMENU_RESULT_OPTION = 1;
    private const int GME_PMENU_RESULT_BACK = 2;
    private const int GME_PMENU_RESULT_MAINMENU = 3;
    private const int GME_PMENU_RESULT_CANCEL = 4;
    private const int GME_PMENU_RESULT_NUM = 5;
    private const int GME_PMENU_RESULT_NONE = 6;
    public const int GMD_GMK_LOOP_BLOCK_SIZE = 64;
    public const uint GMD_GMK_LOOP_FLAG_EXECUTE = 1;
    public const int GMD_GMK_EVE_FLAG_FORCE_SPIN_SPD_DEC = 1;
    public const int GMD_GMK_EVE_FLAG_FORCE_SPIN_TO_SPIN = 1;
    private const int GMD_GMK_FLIPPER_TYPE_UL = 0;
    private const int GMD_GMK_FLIPPER_TYPE_UR = 1;
    private const int GMD_GMK_FLIPPER_TYPE_LR = 2;
    private const int GMD_GMK_FLIPPER_TYPE_NUM = 3;
    private const int GMD_GMK_FLIPPER_RECT_OFFSET_PLAYER_Y = 12;
    private const int GMD_GMK_FLIPPER_POS_Z = -122880;
    private const int GMD_GMK_FLIPPER_WIDTH = 25;
    private const int GMD_GMK_FLIPPER_UL_RECT_LEFT = -8;
    private const int GMD_GMK_FLIPPER_UL_RECT_RIGHT = 40;
    private const int GMD_GMK_FLIPPER_UL_RECT_TOP = -12;
    private const int GMD_GMK_FLIPPER_UL_RECT_BOTTOM = 16;
    private const int GMD_GMK_FLIPPER_UR_RECT_LEFT = -40;
    private const int GMD_GMK_FLIPPER_UR_RECT_RIGHT = 8;
    private const int GMD_GMK_FLIPPER_UR_RECT_TOP = -12;
    private const int GMD_GMK_FLIPPER_UR_RECT_BOTTOM = 16;
    private const int GMD_GMK_FLIPPER_LR_RECT_LEFT = -8;
    private const int GMD_GMK_FLIPPER_LR_RECT_RIGHT = 8;
    private const int GMD_GMK_FLIPPER_LR_RECT_TOP = 8;
    private const int GMD_GMK_FLIPPER_LR_RECT_BOTTOM = 32;
    private const float GMD_GMK_FLIPPER_CALC_RIDE_OFFSET = -2f;
    private const int GMD_GMK_FLIPPER_OFFSET_PLAYER_Y_NORMAL = -36864;
    private const int GMD_GMK_FLIPPER_OFFSET_PLAYER_Y_PINBALL = -61440;
    private const float GMD_GMK_FLIPPER_RIDE_SPEED_X = 0.6857143f;
    private const float GMD_GMK_FLIPPER_RIDE_SPEED_Y = 0.3714286f;
    private const int GMD_GMK_FLIPPER_WAIT_SPEED_LR_X = 86016;
    private const int GMD_GMK_FLIPPER_WAIT_SPEED_LR_Y = 0;
    private const int GMD_GMK_FLIPPER_WAIT_SPEED_U_X = 12288;
    private const int GMD_GMK_FLIPPER_WAIT_SPEED_U_Y = -53248;
    private const short GMD_GMK_FLIPPER_ANGLE_READY = 7936;
    private const int GMD_GMK_FLIPPER_FOOK_MOTION_FRAME = 6;
    private const int GMD_GMK_FLIPPER_FOOK_MARGIN_X = 16384;
    private const int GMD_GMK_FLIPPER_NO_MOVE_TIME = 5;
    private const int GMD_GMK_FLIPPER_NO_SPDDOWN_TIMER_LR_DEFAULT = 0;
    private const int GMD_GMK_FLIPPER_NO_SPDDOWN_TIMER_LR_SPECIAL = 30;
    private const int GMD_GMK_FLIPPER_NO_SPDDOWN_TIMER_U_DEFAULT = 12;
    private const int GMD_GMK_FLIPPER_NO_SPDDOWN_TIMER_U_SPECIAL = 180;
    private const short GMD_GMK_FLIPPER_FLAG_NO_RECOVER_HOMING = 1;
    private const short GMD_GMK_FLIPPER_FLAG_NO_SPDDOWN_TIMER = 2;
    private const int GMD_GMK_FLIPPER_HIT_FRAME = 6;
    private const float GMD_GMK_FLIPPER_HIT_ANGLE = 70f;
    private const int GME_GMK_TYPE_BREAK_WALL = 0;
    private const int GME_GMK_TYPE_BREAK_WALL_H = 1;
    private const int GME_GMK_TYPE_BREAK_FLOOR = 2;
    private const int GMD_GMK_TYPE_WALL = 0;
    private const int GMD_GMK_TYPE_FLOOR = 1;
    private const int GME_GMK_WALL_TYPE_L1 = 0;
    private const int GME_GMK_WALL_TYPE_L2 = 1;
    private const int GME_GMK_WALL_TYPE_R1 = 2;
    private const int GME_GMK_WALL_TYPE_R2 = 3;
    private const int GME_GMK_WALL_TYPE_C1 = 4;
    private const int GME_GMK_WALL_TYPE_C2 = 5;
    private const int GME_GMK_WALL_TYPE_FLOOR = 6;
    private const int GME_GMK_WALL_TYPE_C1_H = 7;
    private const int GME_GMK_WALL_TYPE_MAX = 8;
    private const int GMD_GMK_BWALL_H_RECT_MARGIN = 32;
    private const int GMD_GMK_BWALL_H_RECT_W = 32;
    private const int GMD_GMK_BFLOOR_V_RECT_MARGIN = 32;
    private const int GMD_GMK_BFLOOR_V_RECT_H = 32;
    private const int GME_GMK_BWALL_PARTS_ACT_ID = 0;
    private const int GME_GMK_BWALL_PARTS_OFF_X = 1;
    private const int GME_GMK_BWALL_PARTS_OFF_Y = 2;
    private const int GME_GMK_BWALL_PARTS_VECT = 3;
    private const int GME_GMK_BWALL_PARTS_VECT_Z = 4;
    private const int GME_GMK_BWALL_PARTS_SPEED = 5;
    private const int GME_GMK_BWALL_PARTS_MAX = 6;
    public const int GMD_ENE_STING_BULLET_CLIP_OFST = 16;
    public const int GMD_BOSS4_BODY_NODE_IDX_EGG_CONNECT = 2;
    public const int GMD_BOSS4_BODY_NODE_IDX_BODY_POSTURE = 2;
    public const int GMD_BOSS4_BODY_NODE_IDX_BODY_BOOSTER_L = 5;
    public const int GMD_BOSS4_BODY_NODE_IDX_BODY_BOOSTER_R = 8;
    public const int GMD_BOSS4_BODY_NODE_IDX_BODY_LIGHT_L = 9;
    public const int GMD_BOSS4_BODY_NODE_IDX_BODY_LIGHT_R = 10;
    public const int GMD_BOSS4_BODY_NODE_SNM_NUM = 6;
    public const int GMD_BOSS4_BODY_NODE_CNM_NUM = 1;
    public const uint GMD_BOSS4_BODY_FLAG_CHAIN_DEPEND = 1;
    public const uint GMD_BOSS4_BODY_FLAG_INDP_ACT_FORBIDDEN = 2;
    public const uint GMD_BOSS4_BODY_FLAG_INVINCIBLE = 4;
    public const uint GMD_BOSS4_BODY_FLAG_CHAIN_DEAD = 8;
    public const uint GMD_BOSS4_BODY_FLAG_ABURNER_ACTIVE = 16;
    public const uint GMD_BOSS4_BODY_FLAG_CHAIN_NODISP = 32;
    public const uint GMD_BOSS4_BODY_FLAG_CHAIN_NOHIT = 64;
    public const uint GMD_BOSS4_BODY_FLAG_MANUAL_CHAIN_MOTION = 128;
    public const uint GMD_BOSS4_BODY_FLAG_ABURNER_ACTIVE_EX = 256;
    public const uint GMD_BOSS4_BODY_FLAG_BOSSLIGHT_ACTIVE = 512;
    public const uint GMD_BOSS4_BODY_FLAG_ABURNER_ACTIVE_DWN = 1024;
    public const uint GMD_BOSS4_BODY_FLAG_UP_AVOID = 2048;
    public const uint GMD_BOSS4_BODY_FLAG_DOWN_AVOID = 4096;
    public const uint GMD_BOSS4_BODY_FLAG_SIGNAL_B2F_BOSSLIGHT = 524288;
    public const uint GMD_BOSS4_BODY_FLAG_SIGNAL_B2F_ABURNER_EX = 1048576;
    public const uint GMD_BOSS4_BODY_FLAG_SIGNAL_B2E_EGG_THROW = 2097152;
    public const uint GMD_BOSS4_BODY_FLAG_SIGNAL_B2E_EGG_THROW_L = 4194304;
    public const uint GMD_BOSS4_BODY_FLAG_SIGNAL_B2E_EGG_ESCAPE = 8388608;
    public const uint GMD_BOSS4_BODY_FLAG_SIGNAL_B2E_EGG_BURNT = 16777216;
    public const uint GMD_BOSS4_BODY_FLAG_SIGNAL_B2F_ABURNER = 33554432;
    public const uint GMD_BOSS4_BODY_FLAG_SIGNAL_B2C_SCATTER = 67108864;
    public const uint GMD_BOSS4_BODY_FLAG_SIGNAL_B2C_EFF_SW = 134217728;
    public const uint GMD_BOSS4_BODY_FLAG_SIGNAL_C2E_ATK_HIT = 268435456;
    public const uint GMD_BOSS4_BODY_FLAG_SIGNAL_B2E_EGG_DAMAGE = 536870912;
    public const uint GMD_BOSS4_BODY_FLAG_SIGNAL_B2B_BODY_DAMAGE = 1073741824;
    public const uint GMD_BOSS4_BODY_FLAG_SIGNAL_B2B_DEFEAT = 2147483648;
    public const int GME_BOSS4_BODY_ABURNER_TYPE_NONE = 0;
    public const int GME_BOSS4_BODY_ABURNER_TYPE_NORMAL = 1;
    public const int GME_BOSS4_BODY_ABURNER_TYPE_EX = 2;
    public const int GME_BOSS4_BODY_ABURNER_TYPE_MAX = 3;
    public const int GME_BOSS4_BODY_STATE_NOP = 0;
    public const int GME_BOSS4_BODY_STATE_START = 1;
    public const int GME_BOSS4_BODY_STATE_PRE_ATK_NML = 2;
    public const int GME_BOSS4_BODY_STATE_ATK_NML = 3;
    public const int GME_BOSS4_BODY_STATE_1ST_END = 4;
    public const int GME_BOSS4_BODY_STATE_2ND = 5;
    public const int GME_BOSS4_BODY_STATE_DAMAGE_NML = 6;
    public const int GME_BOSS4_BODY_STATE_DEFEAT = 7;
    public const int GME_BOSS4_BODY_STATE_ESCAPE = 8;
    public const int GME_BOSS4_BODY_STATE_MAX = 9;
    public const int GMD_BOSS4_BODY_HIDE_RADIUS = 0;
    public const float GMD_BOSS4_BODY_DMG_FLICKER_RADIUS = 32f;
    public const int GMD_BOSS4_BODY_ATKNML_LEFT_LIMIT = 74;
    public const int GMD_BOSS4_BODY_ATKNML_RIGHT_LIMIT = 310;
    public const int GMD_BOSS4_BODY_ATKNML_DRIFT_AMP = 16;
    public const float GMD_BOSS4_BODY_UP_POS_Y = 190f;
    public const float GMD_BOSS4_BODY_UP_POS_Y_1 = 240f;
    public const float GMD_BOSS4_BODY_BOSSLIGHT_R_OFFSET_X = 0.0f;
    public const float GMD_BOSS4_BODY_BOSSLIGHT_R_OFFSET_Y = 0.0f;
    public const float GMD_BOSS4_BODY_BOSSLIGHT_R_OFFSET_Z = 0.0f;
    public const float GMD_BOSS4_BODY_BOSSLIGHT_R_ROTATE_X = 0.0f;
    public const float GMD_BOSS4_BODY_BOSSLIGHT_R_ROTATE_Y = 0.0f;
    public const float GMD_BOSS4_BODY_BOSSLIGHT_R_ROTATE_Z = 0.0f;
    public const float GMD_BOSS4_BODY_BOSSLIGHT_L_OFFSET_X = 0.0f;
    public const float GMD_BOSS4_BODY_BOSSLIGHT_L_OFFSET_Y = 0.0f;
    public const float GMD_BOSS4_BODY_BOSSLIGHT_L_OFFSET_Z = 0.0f;
    public const float GMD_BOSS4_BODY_BOSSLIGHT_L_ROTATE_X = 0.0f;
    public const float GMD_BOSS4_BODY_BOSSLIGHT_L_ROTATE_Y = 0.0f;
    public const float GMD_BOSS4_BODY_BOSSLIGHT_L_ROTATE_Z = 0.0f;
    public const float GMD_BOSS4_BODY_1STEND_POS_Y_FROM_CENTER = -50f;
    public const float GMD_BOSS4_BODY_1STEND_POS_Y = 220f;
    public const int GMD_BOSS4_BODY_1STEND_ARRIVED_TIME = 180;
    public const int GMD_BOSS4_BODY_1STEND_TRUN_TIME = 40;
    public const int GMD_BOSS4_BODY_1STEND_EXPLOSION_TIME = 180;
    public const float GMD_BOSS4_BODY_1STEND_EXPLOSION_POS_Y_FROM_CENTER = 20f;
    public const int GMD_BOSS4_BODY_1STEND_EXPLOSION_ARRIVED_TIME = 60;
    public const float GMD_BOSS4_BODY_1STEND_ESCAPE_POS = 200f;
    public const float GMD_BOSS4_BODY_1STEND_ESCAPE_ARRIVED_TIME = 150f;
    public const float GMD_BOSS4_BODY_CREATE_CAP_OFFSET_X = 0.0f;
    public const float GMD_BOSS4_BODY_CREATE_CAP_OFFSET_Y = -22f;
    public const float GMD_BOSS4_BODY_DEFEAT_BOMB_SMALL_LEN_X = 80f;
    public const float GMD_BOSS4_BODY_DEFEAT_BOMB_SMALL_LEN_Y = 80f;
    public const float GMD_BOSS4_BODY_DEFEAT_BOMB_PARTS_LEN_X = 80f;
    public const float GMD_BOSS4_BODY_DEFEAT_BOMB_PARTS_LEN_Y = 80f;
    public const float GMD_BOSS4_BODY_DEFEAT_FLASH_INTO_TIME = 4f;
    public const float GMD_BOSS4_BODY_DEFEAT_FLASH_KEEP_TIME = 5f;
    public const float GMD_BOSS4_BODY_DEFEAT_FLASH_RETURN_TIME = 30f;
    public const int GMD_BOSS4_BODY_ESCAPE_SPD_X_ADD = 409;
    public const int GMD_BOSS4_BODY_ESCAPE_SPD_Y_ADD = -204;
    public const int GMD_BOSS4_BODY_ESCAPE_SPD_X_MAX = 11264;
    public const int GMD_BOSS4_BODY_ESCAPE_SPD_Y_MAX = -1536;
    public const float GMD_BOSS4_EFF_ABURNER1_DISP_OFST_X = 0.0f;
    public const float GMD_BOSS4_EFF_ABURNER1_DISP_OFST_Y = -15f;
    public const float GMD_BOSS4_EFF_ABURNER1_DISP_OFST_Z = -45f;
    public const float GMD_BOSS4_EFF_ABURNER2_DISP_OFST_X = 0.0f;
    public const float GMD_BOSS4_EFF_ABURNER2_DISP_OFST_Y = 5f;
    public const float GMD_BOSS4_EFF_ABURNER2_DISP_OFST_Z = -45f;
    public const float GMD_BOSS4_EFF_ABURNER3_DISP_OFST_X = -0.0f;
    public const float GMD_BOSS4_EFF_ABURNER3_DISP_OFST_Y = -0.0f;
    public const float GMD_BOSS4_EFF_ABURNER3_DISP_OFST_Z = 0.0f;
    public const float GMD_BOSS4_EFF_ABURNER4_DISP_OFST_X = 0.0f;
    public const float GMD_BOSS4_EFF_ABURNER4_DISP_OFST_Y = -0.0f;
    public const float GMD_BOSS4_EFF_ABURNER4_DISP_OFST_Z = 0.0f;
    public const float GMD_BOSS4_EFF_ABURNER5_DISP_OFST_X = 0.0f;
    public const float GMD_BOSS4_EFF_ABURNER5_DISP_OFST_Y = -30f;
    public const float GMD_BOSS4_EFF_ABURNER5_DISP_OFST_Z = 0.0f;
    public const float GMD_BOSS4_EFF_ABURNER5_DISP_ROT_X = 180f;
    public const float GMD_BOSS4_EFF_ABURNER5_DISP_ROT_Y = 0.0f;
    public const float GMD_BOSS4_EFF_ABURNER5_DISP_ROT_Z = 0.0f;
    public const float GMD_BOSS4_EFF_ABSMOKE_DISP_OFST_Z = -32f;
    public const float GMD_BOSS4_EFF_BODYSMOKE_DISP_OFST_Z = -32f;
    private const int AOD_TVX_PRIMTYPE_POINTS = 0;
    private const int AOD_TVX_PRIMTYPE_LINES = 1;
    private const int AOD_TVX_PRIMTYPE_LINESTRIP = 2;
    private const int AOD_TVX_PRIMTYPE_TRIANGLES = 3;
    private const int AOD_TVX_PRIMTYPE_TRIANGLESTRIP = 4;
    private const int AOD_TVX_PRIMTYPE_TRIANGLEFAN = 5;
    private const int AOD_TVX_PRIMTYPE_NUM = 6;
    public const int AOD_ACT_SYS_DEF_SPR_BUF_NUM = 128;
    public const int AOD_ACT_SYS_DEF_ACT_BUF_NUM = 128;
    public const int AOD_ACT_SYS_DEF_SORT_BUF_NUM = 128;
    public const int AOD_ACT_SYS_DEF_ACM_STACK_NUM = 32;
    public const int AOD_ACT_SYS_DEF_DTASK_PRIO = 4096;
    public const int AOD_ACT_STATE_ACT_SHIFT = 0;
    public const int AOD_ACT_STATE_TRS_SHIFT = 1;
    public const int AOD_ACT_STATE_MTN_SHIFT = 2;
    public const int AOD_ACT_STATE_ANM_SHIFT = 3;
    public const int AOD_ACT_STATE_MAT_SHIFT = 4;
    public const int AOD_ACT_STATE_ATRS_SHIFT = 5;
    public const int AOD_ACT_STATE_AMTN_SHIFT = 6;
    public const int AOD_ACT_STATE_AMAT_SHIFT = 7;
    public const int AOD_ACT_STATE_USR_SHIFT = 8;
    public const int AOD_ACT_STATE_HIT_SHIFT = 9;
    public const int AOD_ACT_STATE_ACT_END = 1;
    public const int AOD_ACT_STATE_TRS_END = 2;
    public const int AOD_ACT_STATE_MTN_END = 4;
    public const int AOD_ACT_STATE_ANM_END = 8;
    public const int AOD_ACT_STATE_MAT_END = 16;
    public const int AOD_ACT_STATE_ATRS_END = 32;
    public const int AOD_ACT_STATE_AMTN_END = 64;
    public const int AOD_ACT_STATE_AMAT_END = 128;
    public const int AOD_ACT_STATE_USR_END = 256;
    public const int AOD_ACT_STATE_HIT_END = 512;
    public const int AOD_ACT_STATE_ALL_END = 1023;
    public const uint AOD_ACT_ACM_FLAG_NO_TRS = 1;
    public const uint AOD_ACT_ACM_FLAG_NO_MAT = 2;
    public const uint AOD_ACT_ACM_FLAG_NO_ACM = 4;
    public const uint AOD_ACT_ACM_FLAG_NO_ALL = 7;
    public const uint AOD_ACT_ACM_FLAG_IGNORE_TRS = 8;
    public const uint AOD_ACT_ACM_FLAG_IGNORE_MAT = 16;
    public const uint AOD_ACT_ACM_FLAG_IGNORE_ACM = 32;
    public const uint AOD_ACT_ACM_FLAG_IGNORE_ALL = 56;
    public const int AOD_ACT_SCREEN_WIDTH = 480;
    public const int AOD_ACT_SCREEN_HEIGHT = 320;
    public const int A2D_AMA_USR_FLAG_USR_LOOP = 1;
    public const int A2D_AMA_HIT_FLAG_HIT_LOOP = 1;
    public const uint AOD_ACT_FLAG_UPDATE = 1;
    private const float g_ao_act_base_w = 960f;
    private const float g_ao_act_base_h = 720f;
    private const float g_ao_act_wide_w = 1080f;
    private const float g_ao_act_wide_h = 720f;
    public const ushort MTD_TASK_DEF_ATTR = 2;
    public const ushort MTD_TASK_GROUP_MAX = 15;
    public const ushort MTD_TASK_PRIORITY_TAIL = 61439;
    public const ushort MTD_TASK_ERROR_ADDR = 0;
    public const uint MTD_TASK_TCB_FLAG_NO_PAUSE = 1;
    public const uint MTD_TASK_TCB_FLAG_IMMORTAL = 2;
    public const uint MTD_TASK_SYS_GROUP = 15;
    public const uint MTD_TASK_SYS_UID = 32768;
    public const uint MTD_TASK_SYS_ATTR = 1;
    public const uint MTD_TASK_TCB_FLAG_SYSTEM = 2147483648;
    public const uint NND_CLIP_NEAR = 256;
    public const uint NND_CLIP_FAR = 512;
    public const uint NND_CLIP_RIGHT = 4096;
    public const uint NND_CLIP_LEFT = 8192;
    public const uint NND_CLIP_TOP = 16384;
    public const uint NND_CLIP_BOTTOM = 32768;
    public const uint NND_CLIP_GS_RIGHT = 65536;
    public const uint NND_CLIP_GS_LEFT = 131072;
    public const uint NND_CLIP_GS_TOP = 262144;
    public const uint NND_CLIP_GS_BOTTOM = 524288;
    public const uint NND_CLIP_GS_MASK = 983040;
    private const float g_ZeroVal = 0.0f;
    private const float g_OneVal = 1f;
    public const int GMD_PL_DEF_MAX_SPD = 61440;
    public const int GMD_PL_DEF_ROLL_MAX = 24576;
    public const int GMD_PL_SJUMP_SPD = -16384;
    public const uint GMD_PLY_SEQ_SETJUMPSTATE_IGNORE_JUMPBTN = 1;
    public const uint GMD_PLY_SEQ_SETJUMPSTATE_GMK_JUMP = 2;
    public const uint GMD_PLY_SEQ_SETJUMPSTATE_NOHOMING = 4;
    public const uint GMD_PLY_SEQ_SETJUMPSTATE_NOJUMPMOVE = 8;
    public const int GMD_PL_REC_L = -6;
    public const int GMD_PL_REC_T = -12;
    public const int GMD_PL_REC_R = 6;
    public const int GMD_PL_REC_B = 13;
    public const int GMD_PL_DISP_OFST_Y = -15;
    public const int GMD_PL_DISP_OFST_Y_PINBALL = -21;
    public const int GMD_PL_DISP_OFST_X_TRUCK = 0;
    public const int GMD_PL_DISP_OFST_Y_TRUCK = 0;
    public const int GMD_PL_STAGGER_NORMAL_OFST = 2;
    public const int GMD_PL_STAGGER_DANGER_OFST = -4;
    public const int GMD_PL_ATK_REF_X = 6144;
    public const int GMD_PL_ATK_REF_Y = -16384;
    public const int GMD_PL_ATK_NOSPD_TIME = 24;
    public const int GMD_PL_HOMING_DIR_S = 0;
    public const int GMD_PL_HOMING_DIR_E = 14563;
    public const int GMD_PL_HOMING_DIST = 786432;
    public const int GMD_PL_HOMING_DIST_UNDER = 524288;
    public const float GMD_PL_HOMING_DIST_PER = 1.5f;
    public const int GMD_PL_HOMING_SPD = 61440;
    public const int GMD_PL_HOMING_TIME = 32;
    public const int GMD_PL_HOMING_WAIT_TIME = 24;
    public const int GMD_PL_HOMING_BOOST_TIME = 64;
    public const int GMD_PL_HOMING_HIT_NOMOVE_TIME = 10;
    public const int GMD_PL_HOMING_REF_SPD_Y = -20480;
    public const int GMD_PL_JUMP_DASH_NOSPD_TIME = 8;
    public const int GMD_PL_JUMP_DASH_DIR = 63488;
    public const int GMD_PL_JUMP_DASH_SPD = 16384;
    public const int GMD_PL_JUMP_DASH_TIME = 20;
    public const int GMD_PL_JUMP_DASH_AUTO_RUN_SPD = 4096;
    public const int GMD_PL_JUMP_DASH_AUTO_RUN_NOSPD_TIME = 8;
    public const int GMD_PL_JUMP_DASH_AUTO_RUN_TIME = 20;
    public const int GMD_PL_PGM_TURN_SPD_DEF = 4096;
    public const int GMD_PL_SUPER_SONIC_RING_DEC_INT = 60;
    public const int GMD_PL_ITEM_GENOCIDE_TIME = 999;
    public const int GMD_PL_ITEM_HISPEED_SCALE = 8192;
    public const int GMD_PL_ITEM_HISPEED_TIME = 900;
    public const int GMD_PLAYER_RING_NUM_MAX = 999;
    public const int GMD_PLAYER_RING_STAGE_NUM_MAX = 9999;
    public const int GMD_PL_SPIN_SPDDA_SHIFT = 5;
    public const int GMD_PL_SPINDASH_SPD = 48128;
    public const int GMD_PL_SPINDASH_MUL = 512;
    public const int GMD_PL_SPINDASH_NOSPD_TIME = 72;
    public const int GMD_PL_SPINDASH_JUMP_NOSPD_TIME = 20;
    public const int GMD_PL_STOP_SPD = 2048;
    public const int GMD_PL_MAXDASH_TIME = 30;
    public const int GMD_PL_MAXDASH_DIR = 4096;
    public const int GMD_PL_1ST_SPD = 5120;
    public const int GMD_PL_2ND_SPD = 10240;
    public const int GMD_PL_3RD_SPD = 16384;
    public const int GMD_PL_4TH_SPD = 28672;
    public const int GMD_PL_5TH_SPD = 36864;
    public const int GMD_PL_MAX_SPD = 40960;
    public const int GMD_PL_FALL_SPD = 8192;
    public const int GMD_PL_KEI_DIR = 192;
    public const int GMD_PL_KEI_DIR_SPIN = 640;
    public const int GMD_PL_KEI_DIR_PINBALL_SPIN = 256;
    public const int GMD_PL_KEI_DIR_TRUCK = 512;
    public const int GMD_PL_DAMAGE_JUMP_X = 6144;
    public const int GMD_PL_DAMAGE_JUMP_Y = -12288;
    public const int GMD_PL_DAMAGE_CHECK_SPD = 6144;
    public const int GMD_PL_DAMAGE_AUTO_RUN_JUMP_X_LEFT = -24576;
    public const int GMD_PL_DAMAGE_AUTO_RUN_JUMP_X_RIGHT = 40960;
    public const int GMD_PL_BRAKE_PERMIT_SPD = 16384;
    public const int GMD_PL_GRAIND_SPDMI = 8192;
    public const int GMD_PL_GRAIND_KEI_SPD = 640;
    public const int GMD_PL_GRAIND_KEY_SPD = 256;
    public const int GMD_PL_SPRASH_TIMER = 10;
    public const int GMD_PL_JUMP_SPSONIC = 24576;
    public const int GMD_PL_WATER_ATTENSION_SE_INT = 300;
    public const int GMD_PL_AUTO_RUN_MAX_SPD_OFST = 8192;
    public const int GMD_PL_AUTO_RUN_FREE_DEC_MIN_SPD_OFST = -4096;
    public const int GMD_PL_TRUCK_STICK_TIME = 60;
    public const int GMD_PL_TRUCK_WALK_SPD_MIN = 64;
    public const int GMD_PL_TRUCK_LEFT_FLIP_TIMER = 60;
    public const int GMD_PL_TRUCK_TRANS_SUPER_POS_Z = -32768;
    public const int GMD_PL_TRUCK_DANGER_DIR = 27392;
    public const int GMD_PL_TRUCK_DANGER_DIR_REV = 38144;
    public const int GMD_PL_SS_NUDGING_DI_TIME = 30;
    public const int GMD_PL_SS_NUDGING_TIME = 30;
    public const int GMD_PL_SS_NUDGING_WIDTH = 8;
    public const int GMD_PLY_SEQ_T_SLOPEFLY_DEC_PER = 3072;
    public const int GMD_PLY_SEQ_T_SLOPEFLY_RANDING_ACC_PER = 2048;
    public const int GMD_PLY_SEQ_PLAY_SE_TIMER = 25;
    public const int GMD_PLY_SEQ_PLAY_BACK_SE_TIMER = 50;
    public const int GMD_PLY_SEQ_TURN_FRAME = 10;
    public const int GMD_PLY_SEQ_FALL_TURN_FRAME = 10;
    public const int GMD_GMK_SS_TIME_EVE_FLAG_TIME_MASK = 3;
    private const int GME_GMK_SS_TIME_5SEC = 0;
    private const int GME_GMK_SS_TIME_10SEC = 1;
    private const int GME_GMK_SS_TIME_15SEC = 2;
    private const int GME_GMK_SS_TIME_END = 3;
    public const int GMD_GMK_SEESAW_SONIC_OFFSET_Y = 14;
    public const int GMD_GMK_SEESAW_TABLE_OFFSET_Y = 15;
    public const int GMD_GMK_SEESAW_TILT_MAX = 4608;
    public const int GMD_GMK_SEESAW_TILT_DELTA_MAX = 256;
    public const int GMD_GMK_SEESAW_RECT_X = 0;
    public const int GMD_GMK_SEESAW_RECT_Y = -8;
    public const int GMD_GMK_SEESAW_RECT_W = 112;
    public const int GMD_GMK_SEESAW_RECT_H = 8;
    public const int GMD_GMK_SEESAW_MAX = 16;
    public const ushort DMD_MANUAL_TASK_PAUSELEVEL = 32767;
    public const ushort DMD_MANUAL_TASK_PRIO_MAIN = 12288;
    public const ushort DMD_MANUAL_TASK_GROUP_MAIN = 10;
    public const string DMD_MANUAL_CMN_DATA_FILENAME = "DEMO/CMN/D_CMN_WIN.AMB";
    public const string DMD_MANUAL_DATA_FILENAME = "DEMO/OPTION/D_OPTION_USER.AMB";
    public const float DMD_MANUAL_SIZE_WIDTH = 960f;
    public const float DMD_MANUAL_SIZE_HEIGHT = 720f;
    public const float DMD_MANUAL_SIZE_HALF_WIDTH = 480f;
    public const float DMD_MANUAL_SIZE_HALF_HEIGHT = 360f;
    public const uint DMD_MANUAL_DRAW_PRIO_CHAR = 12288;
    public const uint DMD_MANUAL_DRAW_PRIO_BG = 8192;
    public const uint DMD_MANUAL_DRAW_PRIO_FIX = 10240;
    public const uint DMD_MANUAL_DRAW_STATE_ID = 0;
    public const int DMD_MANUAL_DISP_PAGE_NUM = 15;
    public const float DMD_MANUAL_FADEIN_TIME = 32f;
    public const float DMD_MANUAL_FADEOUT_TIME = 32f;
    public const int DMD_MANUAL_PAGE_NO_SRC = 0;
    public const int DMD_MANUAL_PAGE_NO_DST = 15;
    public const int DMD_MANUAL_CAUTION_PAGE_NUM = 1;
    public const float DMD_MANUAL_MAX_PAGE_DISP_10 = 0.0f;
    public const float DMD_MANUAL_MAX_PAGE_DISP_1 = 0.0f;
    public const uint DMD_MANUAL_FLAG_EXIT = 1;
    public const uint DMD_MANUAL_FLAG_CANCEL = 2;
    public const uint DMD_MANUAL_FLAG_DECIDE = 4;
    public const uint DMD_MANUAL_FLAG_NEXT_PAGE = 8;
    public const uint DMD_MANUAL_FLAG_PREV_PAGE = 16;
    public const uint DMD_MANUAL_FLAG_SIGN_OUT_EXIT = 2147483648;
    private const int ACT_BG04A = 0;
    private const int ACT_BG04B = 1;
    private const int ACT_BG01A = 2;
    private const int ACT_BG01B = 3;
    private const int ACT_BG02 = 4;
    private const int ACT_NUM1 = 5;
    private const int ACT_NUM2 = 6;
    private const int ACT_NUM3 = 7;
    private const int ACT_NUM4 = 8;
    private const int ACT_NUM5 = 9;
    private const int ACT_ARROW_L = 10;
    private const int ACT_ARROW_R = 11;
    private const int ACT_BACK_L = 12;
    private const int ACT_BACK_C = 13;
    private const int ACT_TAB01_L = 14;
    private const int ACT_TAB01_C = 15;
    private const int ACT_TAB01_R = 16;
    private const int ACT_SCR01 = 17;
    private const int ACT_TAB02_L = 18;
    private const int ACT_TAB02_C = 19;
    private const int ACT_TAB02_R = 20;
    private const int ACT_TAB02_L2 = 21;
    private const int ACT_TAB02_C2 = 22;
    private const int ACT_TAB02_R2 = 23;
    private const int ACT_SONIC = 24;
    private const int ACT_EGGMAN = 25;
    private const int ACT_TAB03_L = 26;
    private const int ACT_TAB03_C = 27;
    private const int ACT_TAB03_R = 28;
    private const int ACT_TAB03_L2 = 29;
    private const int ACT_TAB03_C2 = 30;
    private const int ACT_TAB03_R2 = 31;
    private const int ACT_CNT01A = 32;
    private const int ACT_CNT01B = 33;
    private const int ACT_CNT01C = 34;
    private const int ACT_YUBI = 35;
    private const int ACT_TAB03_L3 = 36;
    private const int ACT_TAB03_C3 = 37;
    private const int ACT_TAB03_R3 = 38;
    private const int ACT_TAB03_L4 = 39;
    private const int ACT_TAB03_C4 = 40;
    private const int ACT_TAB03_R4 = 41;
    private const int ACT_CNT02A = 42;
    private const int ACT_CNT02B = 43;
    private const int ACT_TAB04_L = 44;
    private const int ACT_TAB04_C = 45;
    private const int ACT_TAB04_R = 46;
    private const int ACT_SCR04 = 47;
    private const int ACT_TAB05_L = 48;
    private const int ACT_TAB05_C = 49;
    private const int ACT_TAB05_R = 50;
    private const int ACT_TAB05_L2 = 51;
    private const int ACT_TAB05_C2 = 52;
    private const int ACT_TAB05_R2 = 53;
    private const int ACT_SCR05A = 54;
    private const int ACT_SCR05B = 55;
    private const int ACT_TAB06A = 56;
    private const int ACT_TAB06B = 57;
    private const int ACT_TAB06C = 58;
    private const int ACT_TAB06D_L = 59;
    private const int ACT_TAB06D_C = 60;
    private const int ACT_TAB06D_R = 61;
    private const int ACT_BOU_A = 62;
    private const int ACT_BOU_B = 63;
    private const int ACT_BOU_C = 64;
    private const int ACT_BOU_D = 65;
    private const int ACT_SCR06 = 66;
    private const int ACT_TAB07_L = 67;
    private const int ACT_TAB07_C = 68;
    private const int ACT_TAB07_R = 69;
    private const int ACT_TAB07_L2 = 70;
    private const int ACT_TAB07_C2 = 71;
    private const int ACT_TAB07_R2 = 72;
    private const int ACT_SCR07 = 73;
    private const int ACT_TAB08_L = 74;
    private const int ACT_TAB08_C = 75;
    private const int ACT_TAB08_R = 76;
    private const int ACT_TAB08_L2 = 77;
    private const int ACT_TAB08_C2 = 78;
    private const int ACT_TAB08_R2 = 79;
    private const int ACT_SCR08A = 80;
    private const int ACT_SCR08B = 81;
    private const int ACT_TAB09_L = 82;
    private const int ACT_TAB09_C = 83;
    private const int ACT_TAB09_R = 84;
    private const int ACT_TAB09_L2 = 85;
    private const int ACT_TAB09_C2 = 86;
    private const int ACT_TAB09_R2 = 87;
    private const int ACT_TAB09_L3 = 88;
    private const int ACT_TAB09_C3 = 89;
    private const int ACT_TAB09_R3 = 90;
    private const int ACT_SCR09A = 91;
    private const int ACT_SCR09B = 92;
    private const int ACT_SCR09C = 93;
    private const int ACT_TAB10_L = 94;
    private const int ACT_TAB10_C = 95;
    private const int ACT_TAB10_R = 96;
    private const int ACT_TAB10_L2 = 97;
    private const int ACT_TAB10_C2 = 98;
    private const int ACT_TAB10_R2 = 99;
    private const int ACT_TAB10_L3 = 100;
    private const int ACT_TAB10_C3 = 101;
    private const int ACT_TAB10_R3 = 102;
    private const int ACT_SCR10A = 103;
    private const int ACT_SCR10B = 104;
    private const int ACT_SCR10C = 105;
    private const int ACT_TAB11_L = 106;
    private const int ACT_TAB11_C = 107;
    private const int ACT_TAB11_R = 108;
    private const int ACT_SCR11 = 109;
    private const int ACT_TAB13_L = 110;
    private const int ACT_TAB13_C = 111;
    private const int ACT_TAB13_R = 112;
    private const int ACT_SCR13 = 113;
    private const int ACT_TAB_CRI_L = 114;
    private const int ACT_TAB_CRI_C = 115;
    private const int ACT_TAB_CRI_R = 116;
    private const int ACT_DYNA = 117;
    private const int ACT_CRILOGO = 118;
    private const int ACT_TEX_MODORU = 119;
    private const int ACT_TEX_ASOBI = 120;
    private const int ACT_TEX_TIT01 = 121;
    private const int ACT_TEX_EX01 = 122;
    private const int ACT_TEX_TIT02 = 123;
    private const int ACT_TEX_EX02A = 124;
    private const int ACT_TEX_EX02B = 125;
    private const int ACT_TEX_TIT03A = 126;
    private const int ACT_TEX_TIT03B = 127;
    private const int ACT_TEX_EX03A = 128;
    private const int ACT_TEX_EX03B = 129;
    private const int ACT_TEX_EX03TAP = 130;
    private const int ACT_TEX_TIT03A_CNT = 131;
    private const int ACT_TEX_TIT03B_CNT = 132;
    private const int ACT_TEX_TIT03A2 = 133;
    private const int ACT_TEX_TIT03B2 = 134;
    private const int ACT_TEX_EX03A2 = 135;
    private const int ACT_TEX_EX03B2 = 136;
    private const int ACT_TEX_TIT03A_CNT2 = 137;
    private const int ACT_TEX_TIT03B_CNT2 = 138;
    private const int ACT_TEX_TIT04 = 139;
    private const int ACT_TEX_EX04 = 140;
    private const int ACT_TEX_TIT05A = 141;
    private const int ACT_TEX_TIT05B = 142;
    private const int ACT_TEX_EX05A = 143;
    private const int ACT_TEX_EX05B = 144;
    private const int ACT_TEX_TIT05A_CNT = 145;
    private const int ACT_TEX_TIT05B_CNT = 146;
    private const int ACT_TEX_TIT05A2 = 147;
    private const int ACT_TEX_TIT05B2 = 148;
    private const int ACT_TEX_EX05A2 = 149;
    private const int ACT_TEX_EX05B2 = 150;
    private const int ACT_TEX_TIT05A_CNT2 = 151;
    private const int ACT_TEX_TIT05B_CNT2 = 152;
    private const int ACT_TEX_TIT06 = 153;
    private const int ACT_TEX_EX06A = 154;
    private const int ACT_TEX_EX06B = 155;
    private const int ACT_TEX_EX06C = 156;
    private const int ACT_TEX_EX06D = 157;
    private const int ACT_TEX_TIT07 = 158;
    private const int ACT_TEX_EX07A = 159;
    private const int ACT_TEX_EX07B = 160;
    private const int ACT_TEX_TIT08A = 161;
    private const int ACT_TEX_TIT08B = 162;
    private const int ACT_TEX_EX08A = 163;
    private const int ACT_TEX_EX08B = 164;
    private const int ACT_TEX_TIT09A = 165;
    private const int ACT_TEX_TIT09B = 166;
    private const int ACT_TEX_EX09A = 167;
    private const int ACT_TEX_EX09B = 168;
    private const int ACT_TEX_EX09C = 169;
    private const int ACT_TEX_TIT10 = 170;
    private const int ACT_TEX_EX10A = 171;
    private const int ACT_TEX_EX10B = 172;
    private const int ACT_TEX_EX10C = 173;
    private const int ACT_TEX_EX10D = 174;
    private const int ACT_TEX_TIT11 = 175;
    private const int ACT_TEX_EX11 = 176;
    private const int ACT_TEX_TIT13 = 177;
    private const int ACT_TEX_EX13 = 178;
    private const int ACT_NUM_M = 179;
    private const int ACT_NONE_M = 180;
    public const int GSD_LANGUAGE_JP = 0;
    public const int GSD_LANGUAGE_US = 1;
    public const int GSD_LANGUAGE_FR = 2;
    public const int GSD_LANGUAGE_IT = 3;
    public const int GSD_LANGUAGE_GE = 4;
    public const int GSD_LANGUAGE_SP = 5;
    public const int GSD_LANGUAGE_FI = 6;
    public const int GSD_LANGUAGE_PT = 7;
    public const int GSD_LANGUAGE_RU = 8;
    public const int GSD_LANGUAGE_CN = 9;
    public const int GSD_LANGUAGE_HK = 10;
    public const int GSD_LANGUAGE_NUM = 11;
    public const int GSD_LANGUAGE_DEF = 1;
    public const ushort OBD_TASK_GROUP_SYSTEM = 0;
    public const ushort OBD_TASK_PRIO_SYSTEM = 61437;
    public const ushort OBD_TASK_PRIO_OBJECT = 4096;
    public const byte OBD_TASK_GROUP_OBJECT = 1;
    public const ushort OBD_OBJ_PRIORITY = 16;
    public const ushort OBD_OBJ_BG_PRIORITY = 2;
    public const ushort OBD_OBJ_RECT_MAX = 32;
    public const uint OBD_OBJ_PAUSE = 1;
    public const uint OBD_OBJ_PAUSE_START = 2;
    public const uint OBD_OBJ_CAMERA = 8;
    public const uint OBD_OBJ_COL_BLOCK = 16;
    public const uint OBD_OBJ_COL_DIFF = 32;
    public const uint OBD_OBJ_COLMAP = 48;
    public const uint OBD_OBJ_RECT = 64;
    public const uint OBD_OBJ_RECT_D = 128;
    public const uint OBD_OBJ_RECTF_D = 256;
    public const uint OBD_OBJ_FULL3D = 512;
    public const uint OBD_OBJ_BELT = 1024;
    public const uint OBD_OBJ_CAMERA_STICK = 2048;
    public const uint OBD_OBJ_TIME_MOVE = 4096;
    public const uint OBD_OBJ_VRAM_AB = 8192;
    public const uint OBD_OBJ_VRAM_B = 16384;
    public const uint OBD_OBJ_HS_FUNC_STOP = 32768;
    public const uint OBD_OBJ_DEFAULT_NOCLIP = 65536;
    public const uint OBD_OBJ_RECT_JUSTFRAME = 131072;
    public const uint OBD_OBJ_RECT_D_NOVRAM_A = 262144;
    public const uint OBD_OBJ_RECT_D_NOVRAM_B = 524288;
    public const uint OBD_OBJ_USE_TEX_VRAM_DB = 1048576;
    public const uint OBD_OBJ_HS_COL_STOP = 2097152;
    public const uint OBD_OBJ_RECT_NOUSE_DRAWSCALE = 4194304;
    public const uint OBD_OBJ_SAVE_DATAWORK = 1073741824;
    public const uint OBD_OBJ_EXIT_WAIT = 2147483648;
    public const uint OBD_LIGHT_USE_FLAG_0 = 1;
    public const uint OBD_LIGHT_USE_FLAG_1 = 2;
    public const uint OBD_LIGHT_USE_FLAG_2 = 4;
    public const uint OBD_LIGHT_USE_FLAG_3 = 8;
    public const uint OBD_LIGHT_USE_FLAG_4 = 16;
    public const uint OBD_LIGHT_USE_FLAG_5 = 32;
    public const uint OBD_LIGHT_USE_FLAG_6 = 64;
    public const uint OBD_LIGHT_USE_FLAG_7 = 128;
    public const uint MPP_ALTERNATIVE_OBJECT_LIGHTING = 65536;
    public const uint MPP_ALTERNATIVE_OBJECT_LIGHTING_1 = 32768;
    public const int GSD_SHADER_USER_PROFILE_ID_TOON = 0;
    public const int NND_DRAWOBJ_SHADER_USER_PROFILE_TOON = 0;
    public const int OBD_ACTION3D_NN_MTN_BUF_NUM = 2;
    public const float OBD_ACTION3D_NN_DEF_BLEND_SPD = 0.25f;
    public const int OBD_ACTION3D_NN_MTN_FILENAME_LEN = 64;
    public const uint OBD_ACTFLAG_3D_NN_BLEND = 1;
    public const uint OBD_ACTFLAG_3D_NN_BG_ANM = 2;
    public const uint OBD_ACTFLAG_3D_NN_ARCHIVE_MATMTN_0 = 4096;
    public const uint OBD_ACTFLAG_3D_NN_ARCHIVE_MATMTN_1 = 8192;
    public const uint OBD_ACTFLAG_3D_NN_ARCHIVE_MATMTN_2 = 16384;
    public const uint OBD_ACTFLAG_3D_NN_ARCHIVE_MATMTN_3 = 32768;
    public const uint OBD_ACTFLAG_3D_NN_ARCHIVE = 65536;
    public const uint OBD_ACTFLAG_3D_NN_ARCHIVE_MTN_0 = 131072;
    public const uint OBD_ACTFLAG_3D_NN_ARCHIVE_MTN_1 = 262144;
    public const uint OBD_ACTFLAG_3D_NN_ARCHIVE_MTN_2 = 524288;
    public const uint OBD_ACTFLAG_3D_NN_ARCHIVE_MTN_3 = 1048576;
    public const uint OBD_ACTFLAG_3D_NN_RELEASE_WAIT = 134217728;
    public const uint OBD_ACTFLAG_3D_NN_REG_MATMTN_WAIT = 268435456;
    public const uint OBD_ACTFLAG_3D_NN_REG_MTN_WAIT = 536870912;
    public const uint OBD_ACTFLAG_3D_NN_REG_FINISH = 1073741824;
    public const uint OBD_ACTFLAG_3D_NN_REG_WAIT = 2147483648;
    public const uint OBD_ACTFLAG_3D_ES_POSITION_EMITTER = 1;
    public const uint OBD_ACTFLAG_3D_ES_PARTICLE_DEPEND = 2;
    public const uint OBD_ACTFLAG_3D_ES_Z_AXIS_FLIP = 4;
    public const uint OBD_ACTFLAG_3D_ES_SCALE_BY_MTX = 8;
    public const uint OBD_ACTFLAG_3D_ES_EMT_USE_DATA_ROT = 16;
    public const uint OBD_ACTFLAG_3D_ES_USER_DIR_QUAT = 32;
    public const uint OBD_ACTFLAG_3D_ES_DUPLICATE_DRAW = 64;
    public const uint OBD_ACTFLAG_3D_ES_EFF_ARCHIVE = 65536;
    public const uint OBD_ACTFLAG_3D_ES_AMBTEX_ARCHIVE = 131072;
    public const uint OBD_ACTFLAG_3D_ES_MODEL_ARCHIVE = 262144;
    public const uint OBD_ACTFLAG_3D_ES_REG_TEX_WAIT = 1073741824;
    public const uint OBD_ACTFLAG_3D_ES_REG_MODEL_WAIT = 2147483648;
    public const uint OBD_ACTFLAG_2D_AMA_REG_TEX_FINISH = 536870912;
    public const uint OBD_ACTFLAG_2D_AMA_REG_TEX_WAIT = 1073741824;
    public const uint OBD_ACTFLAG_2D_AMA_ARCHIVE = 2147483648;
    public const uint OBD_COLOBJ_HFLIP = 1;
    public const uint OBD_COLOBJ_VFLIP = 2;
    public const uint OBD_COLOBJ_DIR = 4;
    public const uint OBD_COLOBJ_DIR_FLIP = 8;
    public const uint OBD_COLOBJ_NOPOS_PARENT = 16;
    public const uint OBD_COLOBJ_NODIR_PARENT = 32;
    public const uint OBD_COLOBJ_NODIR = 64;
    public const uint OBD_COLOBJ_NOATTR = 128;
    public const uint OBD_COLOBJ_NOHIT = 256;
    public const uint OBD_COLOBJ_NOFREE_DIFF_DATA = 134217728;
    public const uint OBD_COLOBJ_NOFREE_DIR_DATA = 268435456;
    public const uint OBD_COLOBJ_NOFREE_ATTR_DATA = 536870912;
    public const uint OBD_COLOBJ_SYS_HFLIP = 1073741824;
    public const uint OBD_COLOBJ_SYS_VFLIP = 2147483648;
    public const uint OBD_OBJECT_B = 1;
    public const uint OBD_OBJECT_NOHIT = 2;
    public const uint OBD_OBJECT_TASKCLEAR = 4;
    public const uint OBD_OBJECT_TASKCLEAR_REQUEST = 8;
    public const uint OBD_OBJECT_NOCLIP = 16;
    public const uint OBD_OBJECT_NOPAUSE = 32;
    public const uint OBD_OBJECT_NOPAUSE_IN = 64;
    public const uint OBD_OBJECT_NOFUNC = 128;
    public const uint OBD_OBJECT_NOWAITLOAD = 256;
    public const uint OBD_OBJECT_PARENT_NODIE = 512;
    public const uint OBD_OBJECT_PARENT_FIX = 1024;
    public const uint OBD_OBJECT_PARENT_ACT_FIX = 2048;
    public const uint OBD_OBJECT_PLT_ANIME = 4096;
    public const uint OBD_OBJECT_NO_HITSTOP = 8192;
    public const uint OBD_OBJECT_NO_VIB = 16384;
    public const uint OBD_OBJECT_PLT_B = 32768;
    public const uint OBD_OBJECT_NOPAUSE_REC = 65536;
    public const uint OBD_OBJECT_PARENT_FIX_NOFLIP = 131072;
    public const uint OBD_OBJECT_NOPAUSE_LAST = 262144;
    public const uint OBD_OBJECT_PARENT_FIX_NODISP = 524288;
    public const uint OBD_OBJECT_ACT_NOA = 1048576;
    public const uint OBD_OBJECT_ACT_NOB = 2097152;
    public const uint OBD_OBJECT_FREE_TBL = 4194304;
    public const uint OBD_OBJECT_FREE_EX = 8388608;
    public const uint OBD_OBJECT_FREE_COL = 16777216;
    public const uint OBD_OBJECT_FREE_HIT = 33554432;
    public const uint OBD_OBJECT_FREE_2D = 67108864;
    public const uint OBD_OBJECT_FREE_3D = 134217728;
    public const uint OBD_OBJECT_FREE_3DES = 268435456;
    public const uint OBD_OBJECT_NORELEASE_3D = 536870912;
    public const uint OBD_OBJECT_NOEXIST_ENABLE = 1073741824;
    public const uint OBD_OBJECT_NOEXIST = 2147483648;
    public const uint OBD_DISP_HFLIP = 1;
    public const uint OBD_DISP_VFLIP = 2;
    public const uint OBD_DISP_REPEAT = 4;
    public const uint OBD_DISP_END = 8;
    public const uint OBD_DISP_STOP = 16;
    public const uint OBD_DISP_NODISP = 32;
    public const uint OBD_DISP_NOMAP = 128;
    public const uint OBD_DISP_NODIR = 256;
    public const uint OBD_DISP_3D_PARALLEL = 512;
    public const uint OBD_DISP_3D_BLEND = 1024;
    public const uint OBD_DISP_3D_LOCK_LIGHT = 2048;
    public const uint OBD_DISP_NOUPDATE = 4096;
    public const uint OBD_DISP_NOPOS = 8192;
    public const uint OBD_DISP_NOOFST = 16384;
    public const uint OBD_DISP_RECTONLY = 32768;
    public const uint OBD_DISP_NOSCALE = 65536;
    public const uint OBD_DISP_3D_SPRITE = 131072;
    public const uint OBD_DISP_NOBELT = 262144;
    public const uint OBD_DISP_NOGLBSCALE = 524288;
    public const uint OBD_DISP_NODRAWSCALE = 1048576;
    public const uint OBD_DISP_3D_COORDINATE = 2097152;
    public const uint OBD_DISP_NODIRFLIP = 4194304;
    public const uint OBD_DISP_USERMTX = 8388608;
    public const uint OBD_DISP_USERMTX_RIGHT = 16777216;
    public const uint OBD_DISP_MAT_END = 33554432;
    public const uint OBD_DISP_DIR2DFLIP = 67108864;
    public const uint OBD_DISP_DRAWSTATE = 134217728;
    public const uint OBD_DISP_NOCLIP = 268435456;
    public const uint OBD_DISP_NOEXIST_ENABLE = 536870912;
    public const uint OBD_DISP_NOEXIST = 1073741824;
    public const uint OBD_MOVE_UNDER = 1;
    public const uint OBD_MOVE_OVER = 2;
    public const uint OBD_MOVE_FRONT = 4;
    public const uint OBD_MOVE_BACK = 8;
    public const uint OBD_MOVE_COL_MASK = 15;
    public const uint OBD_MOVE_JUMP = 16;
    public const uint OBD_MOVE_THROUGH = 32;
    public const uint OBD_MOVE_DIR = 64;
    public const uint OBD_MOVE_FALL = 128;
    public const uint OBD_MOVE_NOCOL = 256;
    public const uint OBD_MOVE_NOCOLOBJ = 512;
    public const uint OBD_MOVE_NOCOL_W = 1024;
    public const uint OBD_MOVE_NOCOL_H = 2048;
    public const uint OBD_MOVE_NOCOLFIELD = 4096;
    public const uint OBD_MOVE_NOCOL_MASK = 7936;
    public const uint OBD_MOVE_NOMOVE = 8192;
    public const uint OBD_MOVE_NOSPD = 16384;
    public const uint OBD_MOVE_NOSPDM = 32768;
    public const uint OBD_MOVE_COL_VIB = 65536;
    public const uint OBD_MOVE_SLOPE = 131072;
    public const uint OBD_MOVE_SLOPE_STICK = 262144;
    public const uint OBD_MOVE_LIMIT_OUT = 524288;
    public const uint OBD_MOVE_AIRFOOT = 1048576;
    public const uint OBD_MOVE_UNDERALL = 2097152;
    public const uint OBD_MOVE_UNDERPREV = 4194304;
    public const uint OBD_MOVE_DIR_SLOW = 8388608;
    public const uint OBD_MOVE_PUSH = 16777216;
    public const uint OBD_MOVE_PUSH_COL = 33554432;
    public const uint OBD_MOVE_NO_AUTO_SCROLL = 67108864;
    public const uint OBD_MOVE_NOFLOW = 134217728;
    public const uint OBD_MOVE_FLY = 268435456;
    public const uint OBD_MOVE_NOCLR_SPDXY = 536870912;
    public const uint OBD_MOVE_TOP_DIFF = 1073741824;
    public const uint OBD_MOVE_NOBODYPUSH = 2147483648;
    public const uint OBD_GMK_NO_COLPOSADJUST = 4;
    public const uint OBD_GMK_NO_OBJCOLTHROUGH = 8;
    public const uint OBD_GMK_NO_CHECK_OBJCOLTHROUGH = 16;
    public const uint OBD_GMK_NO_UNDER_FIELD = 32;
    public const uint OBD_GMK_NO_UNDER_FIELDPREV = 64;
    public const uint OBD_SYSF_NOLANDING_UNDER = 1;
    public const uint OBD_SYSF_NOLANDING_LEFT = 2;
    public const uint OBD_SYSF_NOLANDING_TOP = 4;
    public const uint OBD_SYSF_NOLANDING_RIGHT = 8;
    public const uint OBD_SYSF_NOLANDING_MASK = 15;
    public const uint OBD_SYSF_NOLANDING_UNDERPREV = 16;
    public const uint OBD_SYSF_NOLANDING_LEFTPREV = 32;
    public const uint OBD_SYSF_NOLANDING_TOPPREV = 64;
    public const uint OBD_SYSF_NOLANDING_RIGHTPREV = 128;
    public const uint OBD_SYSF_NOLANDING_PREVMASK = 240;
    public const int OBD_COLAT_CLIFF = 1;
    public const int OBD_COLAT_THROUGH = 2;
    public const int OBD_COLAT_GRAIND = 4;
    public const int OBD_COLAT_WATER = 8;
    public const uint OBD_OBJECT_USER_0 = 1;
    public const uint OBD_OBJECT_USER_1 = 2;
    public const uint OBD_OBJECT_USER_2 = 4;
    public const uint OBD_OBJECT_USER_3 = 8;
    public const uint OBD_OBJECT_USER_4 = 16;
    public const uint OBD_OBJECT_USER_5 = 32;
    public const uint OBD_OBJECT_USER_6 = 64;
    public const uint OBD_OBJECT_USER_7 = 128;
    public const int OBD_OBJECT_STANDARD_DIR = 16384;
    public const int OBD_OBJECT_LEFT_DIR = 49152;
    public const int OBD_LEFT = 0;
    public const int OBD_TOP = 1;
    public const int OBD_RIGHT = 2;
    public const int OBD_BOTTOM = 3;
    public const int OBD_BACK = 4;
    public const int OBD_FRONT = 5;
    public const int OBD_BOX = 6;
    public const int OBD_WIDTH = 2;
    public const int OBD_HEIGHT = 3;
    public const int OBD_OBJECT_DIE_OFFSET = 64;
    public const int OBD_OBJECT_COL_MAX = 32768;
    public const int OBD_CAMERA_2DSPRITE_FOV = 16128;
    public const int OBD_COL_THROUGH_CHECK_LENGTH = 5;
    public const uint NND_NODESTATUS_NONE = 0;
    public const uint NND_NODESTATUS_HIDE = 1;
    public const uint NND_NODESTATUS_INSIDE = 2;
    public const uint NND_NODESTATUS_CROSSNEAR = 4;
    public const uint NND_NODESTATUS_CROSSFAR = 8;
    public const uint NND_NODESTATUS_OUTSIDE = 16;
    public const uint NND_NODESTATUS_PS2_GSINSIDE = 32;
    public const uint NND_NODESTATUS_CLIP_MASK = 62;
    public const uint NND_NODESTATUS_WIRE = 1024;
    public const uint NND_SETNODESTATUS_CLIP_HIDE = 1;
    public const uint NND_SETNODESTATUS_CLIP_WIRE = 2;
    public const uint NND_SETNODESTATUS_CLIP_BRANCH = 8;
    public const uint NND_SETNODESTATUS_CLIP_SCALE = 16;
    public const uint NND_SETNODESTATUS_CLIP_SPHERE = 32;
    public const uint NND_SETNODESTATUS_CLIP_MASK = 59;
    public const uint NND_SETNODESTATUS_HIDE = 4;
    public const uint NND_DRAWCS_OBJECT = 256;
    public const uint NND_DRAWCS_NODE = 512;
    public const uint NND_DRAWCS_MESHSET = 1024;
    public const uint NND_DRAWCS_SPHERE = 32768;
    public const uint NND_DRAWCS_HIDE = 65536;
    public const uint NND_DRAWSIIKBONE_WIRE = 1;
    public const uint NND_DRAWSIIKBONE_POLY = 2;
    public const uint NND_DRAWNODETREE_WIRE = 1;
    public const uint NND_DRAWNODETREE_POLY = 2;
    public const uint NND_DRAWNODETREE_ALLNODE = 4;
    public const uint NND_DRAWNODETREE_DRAWNODE = 8;
    public const uint NND_DRAWNODETREE_STRATPOINT = 16;
    public const uint NND_DRAWNODETREE_DRAWTYPEMASK = 1;
    public const uint NND_BINDOBJ_EXCLUDE_PLIABLE_VERTICES = 1;
    public const uint NND_BINDOBJ_DETACHED_ARRAY = 2;
    public const int NND_WEIGHT_LOCATION = 1;
    public const int NND_MTXIDX_LOCATION = 5;
    public const int NND_TANGENT_LOCATION = 6;
    public const int NND_BINORMAL_LOCATION = 7;
    private const int NNE_TEXCOORDSRC_DISABLE = 0;
    private const int NNE_TEXCOORDSRC_TEXCOORD0 = 1;
    private const int NNE_TEXCOORDSRC_TEXCOORD1 = 2;
    private const int NNE_TEXCOORDSRC_NORMAL = 3;
    private const int NNE_TEXCOORDSRC_POSITION = 4;
    public const int AMD_IPHONE_TOUCH_POS_MAX = 4;
    public const uint A2D_AMA_ACT_FLAG_W_NONE = 0;
    public const uint A2D_AMA_ACT_FLAG_W_CENTER = 1;
    public const uint A2D_AMA_ACT_FLAG_W_LEFT = 2;
    public const uint A2D_AMA_ACT_FLAG_W_RIGHT = 3;
    public const uint A2D_AMA_ACT_FLAG_W_MASK = 3;
    public const uint A2D_AMA_ACT_FLAG_W_ASPECT = 8;
    public const uint A2D_AMA_ACT_FLAG_W_SHIFT = 16;
    public const uint A2D_AMA_ACT_FLAG_USR1 = 256;
    public const uint A2D_AMA_ACT_FLAG_USR2 = 512;
    public const uint A2D_AMA_ACT_FLAG_USR3 = 1024;
    public const uint A2D_AMA_ACT_FLAG_USR4 = 2048;
    public const uint A2D_AMA_ACT_FLAG_USR5 = 4096;
    public const uint A2D_AMA_ACT_FLAG_USR6 = 8192;
    public const uint A2D_AMA_ACT_FLAG_USR7 = 16384;
    public const uint A2D_AMA_ACT_FLAG_USR8 = 32768;
    public const uint A2D_AMA_MTN_FLAG_MTN_LOOP = 1;
    public const uint A2D_AMA_MTN_FLAG_TRS_LOOP = 2;
    public const uint A2D_AMA_ANM_FLAG_ANM_LOOP = 1;
    public const uint A2D_AMA_ANM_FLAG_MAT_LOOP = 2;
    public const uint A2D_AMA_ACM_FLAG_ACM_LOOP = 1;
    public const uint A2D_AMA_ACM_FLAG_TRS_LOOP = 2;
    public const uint A2D_AMA_ACM_FLAG_MAT_LOOP = 4;
    public const uint A2D_AMA_ACM_FLAG_ACM_BODY = 8;
    public const uint A2D_AMA_ACM_FLAG_TRS_BODY = 16;
    public const uint A2D_AMA_ACM_FLAG_MAT_BODY = 32;
    public const uint A2D_AMA_HIT_FLAG_SCL_DISABLE = 1;
    public const uint A2D_AMA_HIT_FLAG_ROT_DISABLE = 2;
    public const int A2D_AMA_HIT_TYPE_NONE = 0;
    public const int A2D_AMA_HIT_TYPE_RECT = 1;
    public const int A2D_AMA_HIT_TYPE_CIRCLE = 2;
    public const int A2D_AMA_BLEND_NONE = 0;
    public const int A2D_AMA_BLEND_NORMAL = 1;
    public const int A2D_AMA_BLEND_ADD = 2;
    public const int A2D_AMA_BLEND_SUB = 3;
    public const int A2D_AMA_CLAMP_NONE = 0;
    public const int A2D_AMA_CLAMP_V = 1;
    public const int A2D_AMA_CLAMP_U = 2;
    public const int A2D_AMA_CLAMP_UV = 3;
    public const int A2D_AMA_INT_NONE = 0;
    public const int A2D_AMA_INT_LINEAR = 1;
    public const int A2D_AMA_INT_SPLINE = 2;
    public const int A2D_AMA_INT_USR = 3;
    private const int GME_MAP_ADD_MAP_NEAR = 0;
    private const int GME_MAP_ADD_MAP_MID = 1;
    private const int GME_MAP_ADD_MAP_MID1 = 2;
    private const int GME_MAP_ADD_MAP_MID2 = 3;
    private const int GME_MAP_ADD_MAP_MID3 = 4;
    private const int GME_MAP_ADD_MAP_MAX = 5;
    private const int GME_MAP_DRAW_SIZE_DEF = 0;
    private const int GME_MAP_DRAW_SIZE_HORI = 1;
    private const int GME_MAP_DRAW_SIZE_VERT = 2;
    private const int GME_MAP_DRAW_SIZE_ZONE1_BOSS = 3;
    private const int GME_MAP_DRAW_SIZE_ZONE2_BOSS = 4;
    private const int GME_MAP_DRAW_SIZE_ZONE3_BOSS = 5;
    private const int GME_MAP_DRAW_SIZE_ZONE4_BOSS = 6;
    private const int GME_MAP_DRAW_SIZE_ZONE4_BOSS_2 = 7;
    private const int GME_MAP_DRAW_SIZE_ZONEF_BOSS = 8;
    private const int GME_MAP_DRAW_SIZE_NUM = 9;
    public const int GMD_MAP_DRAW_INIT_COUNT = 1;
    public const int GMD_MAP_USE_PRIM_MTX_NUM = 16;
    public const int GMD_MAP_OBJECT_NUM = 300;
    public const int GMD_MAP_OBJECT_START = 1;
    public const int GMD_MAP_DRAW_MARGIN = 1;
    public const int GMD_MAP_DRAW_DF_SIZE = 8;
    public const int GMD_MAP_DRAW_WIDTH_DEF = 6;
    public const int GMD_MAP_DRAW_HEIGHT_DEF = 6;
    public const int GMD_MAP_DRAW_CHECK_WIDTH = 24;
    public const int GMD_MAP_DRAW_CHECK_HEIGHT = 24;
    public const float GMD_MAP_A_POS_Z = 128f;
    public const float GMD_MAP_B_POS_Z = -128f;
    public const float GMD_MAP_N_POS_Z = 256f;
    public const float GMD_MAP_M_POS_Z = -256f;
    public const float GMD_MAP_M1_POS_Z = -384f;
    public const float GMD_MAP_M2_POS_Z = -512f;
    public const float GMD_MAP_M3_POS_Z = -640f;
    public const uint GMD_MAP_FLAG_ADD_MAP_1 = 1;
    public const uint GMD_MAP_FLAG_ADD_MAP_2 = 2;
    public const uint GMD_MAP_FLAG_ADD_MAP_3 = 4;
    public const uint GMD_MAP_FLAG_ADD_MAP_4 = 8;
    public const uint GMD_MAP_FLAG_ADD_MAP_5 = 16;
    public const uint GMD_MAP_FLAG_DISP_OFF = 134217728;
    public const uint GMD_MAP_FLAG_DISP_OFF_B = 268435456;
    public const uint GMD_MAP_FLAG_ADD_MAP_MAIN_ADD_SCRL_H = 536870912;
    public const uint GMD_MAP_FLAG_ADD_MAP_LOOP_X = 2147483648;
    public const uint GMD_MAP_MODEL_USER_FLAG0_WATER = 1;
    public const uint GMD_MAP_MODEL_USER_FLAG0_EX_LIGHT = 2;
    public const int GMD_MAP_ADDMAP_DRAW_START = 0;
    public const int GMD_MAP_ADDMAP_DRAW_END = 5;
    public const int GMD_MAP_PRIM_DRAW_USE_SORT = 1;
    public const int GMD_MAP_PRIM_DRAW_SORT_NUM = 8;
    public const int GMD_MAP_PRIM_DRAW_OP_NON = 0;
    public const int GMD_MAP_PRIM_DRAW_OP_BLEND = 1;
    public const int GMD_MAP_PRIM_DRAW_OP_ADD = 2;
    public const int GMD_MAP_PRIM_DRAW_WORK_NUM = 16;
    public const int GMD_MAP_PRIM_DRAW_STACK_NUM = 255;
    public const int GMD_GMK_SCREW_RECT_LF = 4;
    public const int GMD_GMK_SCREW_RECT_RT = 16;
    public const int GMD_GMK_SCREW_RECT_UP = -8;
    public const int GMD_GMK_SCREW_RECT_DW = 0;
    public const int GMD_GMK_TOUCH_EARTH_LAND_FLIP_OFF = 1;
    public const int GMD_GMK_TOUCH_EARTH_LAND_FLIP_ON = 2;
    public const int GMD_GMK_TOUCH_EARTH_LAND_FLIP_REV = 16;
    public const int GMD_GMK_TOUCH_EARTH_LAND_EXTRA = 128;
    public const int GMD_GMK_CHANGE_CAM_CENTER_EVE_FLAG_OFST_X_MASK = 7;
    public const int GMD_GMK_CHANGE_CAM_CENTER_EVE_FLAG_OFST_X_SIGN = 8;
    public const int GMD_GMK_CHANGE_CAM_CENTER_EVE_FLAG_OFST_Y_MASK = 112;
    public const int GMD_GMK_CHANGE_CAM_CENTER_EVE_FLAG_OFST_Y_SIGN = 128;
    public const int GMD_GMK_CHANGE_CAM_CENTER_EVE_FLAG_OFST_Y_SHIFT = 4;
    public const int GMD_GMK_CHANGE_CAM_CENTER_EVE_FLAG_MUL_SHIFT = 3;
    private const int GME_GMK_COL_DATA_WIDTH = 0;
    private const int GME_GMK_COL_DATA_HEIGHT = 1;
    private const int GME_GMK_COL_DATA_OFST_X = 2;
    private const int GME_GMK_COL_DATA_OFST_Y = 3;
    private const int GME_GMK_COL_DATA_MAX = 4;
    public const int GMD_GMK_BREAKLAND_COLRECT_LEFT = 68;
    public const int GMD_GMK_BREAKLAND_COLRECT_RIGHT = 128;
    private const int GME_BLAND_PARTS_PARAM_OFF_X = 0;
    private const int GME_BLAND_PARTS_PARAM_OFF_Y = 1;
    private const int GME_BLAND_PARTS_PARAM_OFF_Z = 2;
    private const int GME_BLAND_PARTS_PARAM_MODEL_ID = 3;
    private const int GME_BLAND_PARTS_PARAM_NUM_MAX = 4;
    public const int GMD_GMK_LAND_EVE_FLAG_NO_THROUGH = 128;
    private const int GSD_GMK_ANM_TYPE_PIG = 0;
    private const int GSD_GMK_ANM_TYPE_BIRD = 1;
    private const int GSD_GMK_ANM_TYPE_PENGUIN = 2;
    private const int GSD_GMK_ANM_TYPE_RABBIT = 3;
    private const int GSD_GMK_ANM_TYPE_CHICKEN = 4;
    private const int GSD_GMK_ANM_TYPE_MAX = 5;
    private const int GSD_GMK_ANM_MODEL_TYPE_ST = 0;
    private const int GSD_GMK_ANM_MODEL_TYPE_UP = 1;
    private const int GSD_GMK_ANM_MODEL_TYPE_DOWN = 2;
    private const int GSD_GMK_ANM_MODEL_TYPE_DOWN_L = 3;
    private const int GSD_GMK_ANM_MODE_TYPE_MAX = 4;
    public const int GMD_GMK_ANIMAL_ANGLE = 6144;
    public const int GMD_GMK_ANIMAL_ANML_TYPE_MASK = 7;
    public const int GMD_GMK_ANIMAL_MOVE_TYPE_MASK = 24;
    public const int GMD_GMK_ANIMAL_MOVE_TYPE_LEFT = 8;
    public const int GMD_GMK_ANIMAL_MOVE_TYPE_RIGHT = 16;
    public const int IDA_D_COMP_ACT_BTN_BUY_L = 0;
    public const int IDA_D_COMP_ACT_BTN_BUY_C = 1;
    public const int IDA_D_COMP_ACT_BTN_BUY_R = 2;
    public const int IDA_D_COMP_ACT_BTN_RETURN_L = 3;
    public const int IDA_D_COMP_ACT_BTN_RETURN_C = 4;
    public const int IDA_D_COMP_ACT_BTN_RETURN_R = 5;
    public const int IDA_D_COMP_JP_ACT_BG = 0;
    public const int IDA_D_COMP_JP_ACT_TEX_BUY = 1;
    public const int IDA_D_COMP_JP_ACT_TEX_RETURN = 2;
    public const int IDA_D_CMN_BG_ACT_BG_BLUE = 0;
    public const int IDA_D_CMN_BG_ACT_BG_WAVE = 1;
    public const int IDA_D_CMN_BG_ACT_BG_DOWN_WHITE = 2;
    public const int IDA_D_CMN_BTN_ACT_BTN_Y = 0;
    public const int IDA_D_CMN_BTN_ACT_BACK_BTN = 1;
    public const int IDA_D_CMN_BTN_ACT_BTN_X = 2;
    public const int IDA_D_CMN_BTN_ACT_BTN_BACK_STGSLCT = 3;
    public const int IDA_D_CMN_BTN_ACT_BTN_LB_STGSLCT = 4;
    public const int IDA_D_CMN_BTN_ACT_BTN_Y_STGSLCT = 5;
    public const int IDA_D_CMN_BTN_ACT_BTN_BACK_OPT = 6;
    public const int IDA_D_CMN_BTN_ACT_BTN_BACK_RANK = 7;
    public const int IDA_D_CMN_BTN_ACT_BTN_Y_RANK = 8;
    public const int IDA_D_CMN_BTN_ACT_BTN_X_RANK = 9;
    public const int IDA_D_CMN_BTN_ACT_BTN_X_TITLE = 10;
    public const int IDA_D_CMN_BTN_ACT_BTN_LEFT_LB_STGSLCT = 11;
    public const int IDA_D_CMN_BTN_ACT_BTN_LEFT_RB_STGSLCT = 12;
    public const int IDA_D_CMN_BTN_ACT_BUT_DEL = 13;
    public const int IDA_D_CMN_BTN_ACT_BTN_BACK_FILESLCT = 14;
    public const int IDA_D_CMN_MSG_JP_ACT_TEX_BACK = 0;
    public const int IDA_D_CMN_MSG_JP_ACT_TEX_YES = 1;
    public const int IDA_D_CMN_MSG_JP_ACT_TEX_NO = 2;
    public const int IDA_D_CMN_MSG_JP_ACT_TEX_BACK_STGSLCT = 3;
    public const int IDA_D_CMN_MSG_JP_ACT_TEX_BACK_OPT = 4;
    public const int IDA_D_CMN_MSG_JP_ACT_TEX_MSG01 = 5;
    public const int IDA_D_CMN_MSG_JP_ACT_TEX_MSG02 = 6;
    public const int IDA_D_CMN_MSG_JP_ACT_TEX_MSG03 = 7;
    public const int IDA_D_CMN_OBI_ACT_OBI_CENTER = 0;
    public const int IDA_D_CMN_OBI_ACT_OBI_LEFT = 1;
    public const int IDA_D_CMN_OBI_ACT_OBI_RIGHT = 2;
    public const int IDA_D_CMN_OBI_ACT_OBI_RIGHT2_R = 3;
    public const int IDA_D_CMN_OBI_ACT_OBI_RIGHT2_L = 4;
    public const int IDA_D_CMN_WIN_ACT_BTN01_L = 0;
    public const int IDA_D_CMN_WIN_ACT_BTN01_C = 1;
    public const int IDA_D_CMN_WIN_ACT_BTN01_R = 2;
    public const int IDA_D_CMN_WIN_ACT_BACK_BTN_L = 3;
    public const int IDA_D_CMN_WIN_ACT_BACK_BTN_C = 4;
    public const int IDA_D_CMN_WIN_ACT_BACK_BTN_R = 5;
    public const int IDA_D_CMN_WIN_ACT_STGSLCT_BACK_L = 6;
    public const int IDA_D_CMN_WIN_ACT_STGSLCT_BACK_C = 7;
    public const int IDA_D_FILESLCT_ACT_1_TAB04_A = 0;
    public const int IDA_D_FILESLCT_ACT_1_TAB04_B = 1;
    public const int IDA_D_FILESLCT_ACT_1_TAB04_C = 2;
    public const int IDA_D_FILESLCT_ACT_1_TAB01 = 3;
    public const int IDA_D_FILESLCT_ACT_1_TAB03_A = 4;
    public const int IDA_D_FILESLCT_ACT_1_TAB03_B = 5;
    public const int IDA_D_FILESLCT_ACT_1_TAB03_C = 6;
    public const int IDA_D_FILESLCT_ACT_1_NUM02 = 7;
    public const int IDA_D_FILESLCT_ACT_1_SCREEN = 8;
    public const int IDA_D_FILESLCT_ACT_1_TEX_ALPHA_1 = 9;
    public const int IDA_D_FILESLCT_ACT_1_YEAR_1 = 10;
    public const int IDA_D_FILESLCT_ACT_1_YEAR_2 = 11;
    public const int IDA_D_FILESLCT_ACT_1_YEAR_3 = 12;
    public const int IDA_D_FILESLCT_ACT_1_YEAR_4 = 13;
    public const int IDA_D_FILESLCT_ACT_1_SLASH_1 = 14;
    public const int IDA_D_FILESLCT_ACT_1_MON_1 = 15;
    public const int IDA_D_FILESLCT_ACT_1_MON_2 = 16;
    public const int IDA_D_FILESLCT_ACT_1_SLASH_2 = 17;
    public const int IDA_D_FILESLCT_ACT_1_DAY_1 = 18;
    public const int IDA_D_FILESLCT_ACT_1_DAY_2 = 19;
    public const int IDA_D_FILESLCT_ACT_1_TIME_1 = 20;
    public const int IDA_D_FILESLCT_ACT_1_TIME_2 = 21;
    public const int IDA_D_FILESLCT_ACT_1_TIME_COLON = 22;
    public const int IDA_D_FILESLCT_ACT_1_TIME_3 = 23;
    public const int IDA_D_FILESLCT_ACT_1_TIME_4 = 24;
    public const int IDA_D_FILESLCT_ACT_1_TAB05 = 25;
    public const int IDA_D_FILESLCT_ACT_1_ICON_EMER_1 = 26;
    public const int IDA_D_FILESLCT_ACT_1_ICON_EMER_2 = 27;
    public const int IDA_D_FILESLCT_ACT_1_ICON_EMER_3 = 28;
    public const int IDA_D_FILESLCT_ACT_1_ICON_EMER_4 = 29;
    public const int IDA_D_FILESLCT_ACT_1_ICON_EMER_5 = 30;
    public const int IDA_D_FILESLCT_ACT_1_ICON_EMER_6 = 31;
    public const int IDA_D_FILESLCT_ACT_1_ICON_EMER_7 = 32;
    public const int IDA_D_FILESLCT_ACT_BG_BLACK = 33;
    public const int IDA_D_FILESLCT_ACT_KUROOBI = 34;
    public const int IDA_D_FILESLCT_ACT_OBI_RIGHT = 35;
    public const int IDA_D_FILESLCT_ACT_OBI_LEFT = 36;
    public const int IDA_D_FILESLCT_ACT_BUT_DEL = 37;
    public const int IDA_D_FILESLCT_ACT_ARROW_UP = 38;
    public const int IDA_D_FILESLCT_ACT_ARROW_DOWN = 39;
    public const int IDA_D_FILESLCT_ACT_ACT_TAB04 = 40;
    public const int IDA_D_FILESLCT_ACT_ACT_LIGHT = 41;
    public const int IDA_D_FILESLCT_ACT_ACT_SAVE1 = 42;
    public const int IDA_D_FILESLCT_ACT_ACT_SAVE2 = 43;
    public const int IDA_D_FILESLCT_ACT_ACT_SAVE3 = 44;
    public const int IDA_D_FILESLCT_ACT_ACT_SAVE4 = 45;
    public const int IDA_D_FILESLCT_ACT_ACT_SAVE5 = 46;
    public const int IDA_D_FILESLCT_ACT_ACT_SAVE6 = 47;
    public const int IDA_D_FILESLCT_ACT_WIN_LINE = 48;
    public const int IDA_D_FILESLCT_ACT_BTN_CANCEL = 49;
    public const int IDA_D_FILESLCT_ACT_SCREEN_BASE = 50;
    public const int IDA_D_FILESLCT_ACT_GRADATION_TOP = 51;
    public const int IDA_D_FILESLCT_ACT_GRADATION_BOTTOM = 52;
    public const int IDA_D_FILESLCT_ACT_1_YEAR_1_US = 53;
    public const int IDA_D_FILESLCT_ACT_1_YEAR_2_US = 54;
    public const int IDA_D_FILESLCT_ACT_1_YEAR_3_US = 55;
    public const int IDA_D_FILESLCT_ACT_1_YEAR_4_US = 56;
    public const int IDA_D_FILESLCT_ACT_1_SLASH_1_US = 57;
    public const int IDA_D_FILESLCT_ACT_1_MON_1_US = 58;
    public const int IDA_D_FILESLCT_ACT_1_MON_2_US = 59;
    public const int IDA_D_FILESLCT_ACT_1_SLASH_2_US = 60;
    public const int IDA_D_FILESLCT_ACT_1_DAY_1_US = 61;
    public const int IDA_D_FILESLCT_ACT_1_DAY_2_US = 62;
    public const int IDA_D_FILESLCT_ACT_1_YEAR_1_EU = 63;
    public const int IDA_D_FILESLCT_ACT_1_YEAR_2_EU = 64;
    public const int IDA_D_FILESLCT_ACT_1_YEAR_3_EU = 65;
    public const int IDA_D_FILESLCT_ACT_1_YEAR_4_EU = 66;
    public const int IDA_D_FILESLCT_ACT_1_SLASH_1_EU = 67;
    public const int IDA_D_FILESLCT_ACT_1_MON_1_EU = 68;
    public const int IDA_D_FILESLCT_ACT_1_MON_2_EU = 69;
    public const int IDA_D_FILESLCT_ACT_1_SLASH_2_EU = 70;
    public const int IDA_D_FILESLCT_ACT_1_DAY_1_EU = 71;
    public const int IDA_D_FILESLCT_ACT_1_DAY_2_EU = 72;
    public const int IDA_D_FILESLCT_JP_ACT_1_TEX_NEWGAME = 0;
    public const int IDA_D_FILESLCT_JP_ACT_1_TEX_NAME = 1;
    public const int IDA_D_FILESLCT_JP_ACT_TEX_EXP = 2;
    public const int IDA_D_FILESLCT_JP_ACT_TEX_DEL = 3;
    public const int IDA_D_FILESLCT_JP_ACT_WIN_MSG = 4;
    public const int IDA_D_FILESLCT_JP_ACT_TEX_BACK = 5;
    public const int IDA_D_LOAD_ACT_BG_WHITE = 0;
    public const int IDA_D_LOAD_ACT_BG_BOTTOM = 1;
    public const int IDA_D_LOAD_ACT_OBI = 2;
    public const int IDA_D_LOAD_ACT_RUN = 3;
    public const int IDA_D_LOAD_ACT_STOP = 4;
    public const int IDA_D_LOAD_ACT_PERIOD1 = 5;
    public const int IDA_D_LOAD_ACT_PERIOD2 = 6;
    public const int IDA_D_LOAD_ACT_PERIOD3 = 7;
    public const int IDA_D_LOAD_ACT_TEXT_LOAD = 8;
    public const int IDA_D_LOGO_ESRB_ACT_BG_WHITE = 0;
    public const int IDA_D_LOGO_ESRB_ACT_LOGO_ESRB = 1;
    public const int IDA_D_LOGO_SEGA_ACT_BG_WHITE = 0;
    public const int IDA_D_LOGO_SEGA_ACT_LOGO_SEGA = 1;
    public const int IDA_D_LOGO_SEGA_ACT_COVER = 2;
    public const int IDA_D_LOGO_SEGA_ACT_LINE01 = 3;
    public const int IDA_D_LOGO_SEGA_ACT_LINE02 = 4;
    public const int IDA_D_LOGO_SEGA_ACT_LINE03 = 5;
    public const int IDA_D_LOGO_SEGA_ACT_LINE04 = 6;
    public const int IDA_D_LOGO_SEGA_ACT_LINE05 = 7;
    public const int IDA_D_LOGO_SONIC_ACT_BG_WHITE = 0;
    public const int IDA_D_LOGO_SONIC_ACT_LOGO_SONICTEAM = 1;
    public const int IDA_D_MANUAL_ACT_BG01B = 0;
    public const int IDA_D_MANUAL_ACT_BG02 = 1;
    public const int IDA_D_MANUAL_ACT_BG01A = 2;
    public const int IDA_D_MANUAL_ACT_BG04A = 3;
    public const int IDA_D_MANUAL_ACT_BG04B = 4;
    public const int IDA_D_MANUAL_ACT_OBI = 5;
    public const int IDA_D_MANUAL_ACT_NUM1 = 6;
    public const int IDA_D_MANUAL_ACT_NUM2 = 7;
    public const int IDA_D_MANUAL_ACT_NUM3 = 8;
    public const int IDA_D_MANUAL_ACT_NUM4 = 9;
    public const int IDA_D_MANUAL_ACT_NUM5 = 10;
    public const int IDA_D_MANUAL_ACT_ARROW_L = 11;
    public const int IDA_D_MANUAL_ACT_ARROW_R = 12;
    public const int IDA_D_MANUAL_ACT_TAB01_C = 13;
    public const int IDA_D_MANUAL_ACT_TAB01_L = 14;
    public const int IDA_D_MANUAL_ACT_TAB01_R = 15;
    public const int IDA_D_MANUAL_ACT_SCR01 = 16;
    public const int IDA_D_MANUAL_ACT_TAB02_L = 17;
    public const int IDA_D_MANUAL_ACT_TAB02_C = 18;
    public const int IDA_D_MANUAL_ACT_TAB02_R = 19;
    public const int IDA_D_MANUAL_ACT_TAB02_C2 = 20;
    public const int IDA_D_MANUAL_ACT_TAB02_L2 = 21;
    public const int IDA_D_MANUAL_ACT_TAB02_R2 = 22;
    public const int IDA_D_MANUAL_ACT_SONIC = 23;
    public const int IDA_D_MANUAL_ACT_EGGMAN = 24;
    public const int IDA_D_MANUAL_ACT_TAB03_L = 25;
    public const int IDA_D_MANUAL_ACT_TAB03_C = 26;
    public const int IDA_D_MANUAL_ACT_TAB03_R = 27;
    public const int IDA_D_MANUAL_ACT_TAB03_L2 = 28;
    public const int IDA_D_MANUAL_ACT_TAB03_C2 = 29;
    public const int IDA_D_MANUAL_ACT_TAB03_R2 = 30;
    public const int IDA_D_MANUAL_ACT_CNT01A = 31;
    public const int IDA_D_MANUAL_ACT_CNT01B = 32;
    public const int IDA_D_MANUAL_ACT_CNT01C = 33;
    public const int IDA_D_MANUAL_ACT_YUBI = 34;
    public const int IDA_D_MANUAL_ACT_TAB04_L = 35;
    public const int IDA_D_MANUAL_ACT_TAB04_C = 36;
    public const int IDA_D_MANUAL_ACT_TAB04_R = 37;
    public const int IDA_D_MANUAL_ACT_SCR04 = 38;
    public const int IDA_D_MANUAL_ACT_TAB05_L = 39;
    public const int IDA_D_MANUAL_ACT_TAB05_C = 40;
    public const int IDA_D_MANUAL_ACT_TAB05_R = 41;
    public const int IDA_D_MANUAL_ACT_TAB05_L2 = 42;
    public const int IDA_D_MANUAL_ACT_TAB05_C2 = 43;
    public const int IDA_D_MANUAL_ACT_TAB05_R2 = 44;
    public const int IDA_D_MANUAL_ACT_SCR05A = 45;
    public const int IDA_D_MANUAL_ACT_SCR05B = 46;
    public const int IDA_D_MANUAL_ACT_TAB06B = 47;
    public const int IDA_D_MANUAL_ACT_TAB06A = 48;
    public const int IDA_D_MANUAL_ACT_TAB06C = 49;
    public const int IDA_D_MANUAL_ACT_TAB06D_L = 50;
    public const int IDA_D_MANUAL_ACT_TAB06D_C = 51;
    public const int IDA_D_MANUAL_ACT_TAB06D_R = 52;
    public const int IDA_D_MANUAL_ACT_BOU_A = 53;
    public const int IDA_D_MANUAL_ACT_BOU_B = 54;
    public const int IDA_D_MANUAL_ACT_BOU_C = 55;
    public const int IDA_D_MANUAL_ACT_BOU_D = 56;
    public const int IDA_D_MANUAL_ACT_SCR06 = 57;
    public const int IDA_D_MANUAL_ACT_TAB07_L = 58;
    public const int IDA_D_MANUAL_ACT_TAB07_C = 59;
    public const int IDA_D_MANUAL_ACT_TAB07_R = 60;
    public const int IDA_D_MANUAL_ACT_TAB07_L2 = 61;
    public const int IDA_D_MANUAL_ACT_TAB07_C2 = 62;
    public const int IDA_D_MANUAL_ACT_TAB07_R2 = 63;
    public const int IDA_D_MANUAL_ACT_SCR07 = 64;
    public const int IDA_D_MANUAL_ACT_TAB08_L = 65;
    public const int IDA_D_MANUAL_ACT_TAB08_C = 66;
    public const int IDA_D_MANUAL_ACT_TAB08_R = 67;
    public const int IDA_D_MANUAL_ACT_TAB08_L2 = 68;
    public const int IDA_D_MANUAL_ACT_TAB08_C2 = 69;
    public const int IDA_D_MANUAL_ACT_TAB08_R2 = 70;
    public const int IDA_D_MANUAL_ACT_SCR08A = 71;
    public const int IDA_D_MANUAL_ACT_SCR08B = 72;
    public const int IDA_D_MANUAL_ACT_TAB09_L = 73;
    public const int IDA_D_MANUAL_ACT_TAB09_C = 74;
    public const int IDA_D_MANUAL_ACT_TAB09_R = 75;
    public const int IDA_D_MANUAL_ACT_TAB09_L2 = 76;
    public const int IDA_D_MANUAL_ACT_TAB09_C2 = 77;
    public const int IDA_D_MANUAL_ACT_TAB09_R2 = 78;
    public const int IDA_D_MANUAL_ACT_TAB09_L3 = 79;
    public const int IDA_D_MANUAL_ACT_TAB09_C3 = 80;
    public const int IDA_D_MANUAL_ACT_TAB09_R3 = 81;
    public const int IDA_D_MANUAL_ACT_SCR09A = 82;
    public const int IDA_D_MANUAL_ACT_SCR09B = 83;
    public const int IDA_D_MANUAL_ACT_SCR09C = 84;
    public const int IDA_D_MANUAL_ACT_TAB10_L = 85;
    public const int IDA_D_MANUAL_ACT_TAB10_C = 86;
    public const int IDA_D_MANUAL_ACT_TAB10_R = 87;
    public const int IDA_D_MANUAL_ACT_TAB10_L2 = 88;
    public const int IDA_D_MANUAL_ACT_TAB10_C2 = 89;
    public const int IDA_D_MANUAL_ACT_TAB10_R2 = 90;
    public const int IDA_D_MANUAL_ACT_TAB10_L3 = 91;
    public const int IDA_D_MANUAL_ACT_TAB10_C3 = 92;
    public const int IDA_D_MANUAL_ACT_TAB10_R3 = 93;
    public const int IDA_D_MANUAL_ACT_SCR10A = 94;
    public const int IDA_D_MANUAL_ACT_SCR10B = 95;
    public const int IDA_D_MANUAL_ACT_SCR10C = 96;
    public const int IDA_D_MANUAL_ACT_TAB11_L = 97;
    public const int IDA_D_MANUAL_ACT_TAB11_C = 98;
    public const int IDA_D_MANUAL_ACT_TAB11_R = 99;
    public const int IDA_D_MANUAL_ACT_SCR11 = 100;
    public const int IDA_D_MANUAL_ACT_TAB13_L = 101;
    public const int IDA_D_MANUAL_ACT_TAB13_C = 102;
    public const int IDA_D_MANUAL_ACT_TAB13_R = 103;
    public const int IDA_D_MANUAL_ACT_SCR13 = 104;
    public const int IDA_D_MANUAL_ACT_BACK_L = 105;
    public const int IDA_D_MANUAL_ACT_BACK_C = 106;
    public const int IDA_D_MANUAL_ACT_TAB_CRI_L = 107;
    public const int IDA_D_MANUAL_ACT_TAB_CRI_C = 108;
    public const int IDA_D_MANUAL_ACT_TAB_CRI_R = 109;
    public const int IDA_D_MANUAL_ACT_DYNA = 110;
    public const int IDA_D_MANUAL_ACT_CRILOGO = 111;
    public const int IDA_D_MANUAL_ACT_CNT02A = 112;
    public const int IDA_D_MANUAL_ACT_CNT02B = 113;
    public const int IDA_D_MANUAL_JP_ACT_TEX_MODORU = 0;
    public const int IDA_D_MANUAL_JP_ACT_TEX_ASOBI = 1;
    public const int IDA_D_MANUAL_JP_ACT_TEX_TIT01 = 2;
    public const int IDA_D_MANUAL_JP_ACT_TEX_EX01 = 3;
    public const int IDA_D_MANUAL_JP_ACT_TEX_TIT02 = 4;
    public const int IDA_D_MANUAL_JP_ACT_TEX_EX02A = 5;
    public const int IDA_D_MANUAL_JP_ACT_TEX_EX02B = 6;
    public const int IDA_D_MANUAL_JP_ACT_TEX_TIT03A = 7;
    public const int IDA_D_MANUAL_JP_ACT_TEX_TIT03B = 8;
    public const int IDA_D_MANUAL_JP_ACT_TEX_TIT03A_CNT = 9;
    public const int IDA_D_MANUAL_JP_ACT_TEX_TIT03B_CNT = 10;
    public const int IDA_D_MANUAL_JP_ACT_TEX_EX03A = 11;
    public const int IDA_D_MANUAL_JP_ACT_TEX_EX03B = 12;
    public const int IDA_D_MANUAL_JP_ACT_TEX_EX03TAP = 13;
    public const int IDA_D_MANUAL_JP_ACT_TEX_TIT04 = 14;
    public const int IDA_D_MANUAL_JP_ACT_TEX_EX04 = 15;
    public const int IDA_D_MANUAL_JP_ACT_TEX_TIT05A = 16;
    public const int IDA_D_MANUAL_JP_ACT_TEX_TIT05B = 17;
    public const int IDA_D_MANUAL_JP_ACT_TEX_TIT05A_CNT = 18;
    public const int IDA_D_MANUAL_JP_ACT_TEX_TIT05B_CNT = 19;
    public const int IDA_D_MANUAL_JP_ACT_TEX_EX05A = 20;
    public const int IDA_D_MANUAL_JP_ACT_TEX_EX05B = 21;
    public const int IDA_D_MANUAL_JP_ACT_TEX_TIT06 = 22;
    public const int IDA_D_MANUAL_JP_ACT_TEX_EX06A = 23;
    public const int IDA_D_MANUAL_JP_ACT_TEX_EX06B = 24;
    public const int IDA_D_MANUAL_JP_ACT_TEX_EX06C = 25;
    public const int IDA_D_MANUAL_JP_ACT_TEX_EX06D = 26;
    public const int IDA_D_MANUAL_JP_ACT_TEX_TIT07 = 27;
    public const int IDA_D_MANUAL_JP_ACT_TEX_EX07A = 28;
    public const int IDA_D_MANUAL_JP_ACT_TEX_EX07B = 29;
    public const int IDA_D_MANUAL_JP_ACT_TEX_TIT08A = 30;
    public const int IDA_D_MANUAL_JP_ACT_TEX_TIT08B = 31;
    public const int IDA_D_MANUAL_JP_ACT_TEX_EX08A = 32;
    public const int IDA_D_MANUAL_JP_ACT_TEX_EX08B = 33;
    public const int IDA_D_MANUAL_JP_ACT_TEX_TIT09A = 34;
    public const int IDA_D_MANUAL_JP_ACT_TEX_TIT09B = 35;
    public const int IDA_D_MANUAL_JP_ACT_TEX_EX09A = 36;
    public const int IDA_D_MANUAL_JP_ACT_TEX_EX09B = 37;
    public const int IDA_D_MANUAL_JP_ACT_TEX_EX09C = 38;
    public const int IDA_D_MANUAL_JP_ACT_TEX_TIT10 = 39;
    public const int IDA_D_MANUAL_JP_ACT_TEX_EX10A = 40;
    public const int IDA_D_MANUAL_JP_ACT_TEX_EX10B = 41;
    public const int IDA_D_MANUAL_JP_ACT_TEX_EX10C = 42;
    public const int IDA_D_MANUAL_JP_ACT_TEX_EX10D = 43;
    public const int IDA_D_MANUAL_JP_ACT_TEX_TIT11 = 44;
    public const int IDA_D_MANUAL_JP_ACT_TEX_EX11 = 45;
    public const int IDA_D_MANUAL_JP_ACT_TEX_TIT13 = 46;
    public const int IDA_D_MANUAL_JP_ACT_TEX_EX13 = 47;
    public const int IDA_D_MANUAL_JP_ACT_TEX_TIT03A_CNT2 = 48;
    public const int IDA_D_MANUAL_JP_ACT_TEX_TIT03B_CNT2 = 49;
    public const int IDA_D_MANUAL_JP_ACT_TEX_EX03A2 = 50;
    public const int IDA_D_MANUAL_JP_ACT_TEX_EX03B2 = 51;
    public const int IDA_D_MANUAL_JP_ACT_TEX_TIT05A_CNT2 = 52;
    public const int IDA_D_MANUAL_JP_ACT_TEX_TIT05B_CNT2 = 53;
    public const int IDA_D_MANUAL_JP_ACT_TEX_EX05A2 = 54;
    public const int IDA_D_MANUAL_JP_ACT_TEX_EX05B2 = 55;
    public const int IDA_D_OPTION_ACT_TAB_TITLE2 = 0;
    public const int IDA_D_OPTION_ACT_NUM_VOL_100 = 1;
    public const int IDA_D_OPTION_ACT_NUM_VOL_10 = 2;
    public const int IDA_D_OPTION_ACT_NUM_VOL_1 = 3;
    public const int IDA_D_OPTION_ACT_NUM_VOL_PERCENT = 4;
    public const int IDA_D_OPTION_ACT_ICON_VOL_UP = 5;
    public const int IDA_D_OPTION_ACT_ICON_VOL_DOWN = 6;
    public const int IDA_D_OPTION_ACT_ICON_VOL_GAUGE1 = 7;
    public const int IDA_D_OPTION_ACT_ICON_VOL_GAUGE2 = 8;
    public const int IDA_D_OPTION_ACT_ICON_VOL_GAUGE3 = 9;
    public const int IDA_D_OPTION_ACT_ICON_VOL_GAUGE4 = 10;
    public const int IDA_D_OPTION_ACT_ICON_VOL_GAUGE5 = 11;
    public const int IDA_D_OPTION_ACT_ICON_VOL_GAUGE6 = 12;
    public const int IDA_D_OPTION_ACT_ICON_VOL_GAUGE7 = 13;
    public const int IDA_D_OPTION_ACT_ICON_VOL_GAUGE8 = 14;
    public const int IDA_D_OPTION_ACT_ICON_VOL_GAUGE9 = 15;
    public const int IDA_D_OPTION_ACT_ICON_VOL_GAUGE10 = 16;
    public const int IDA_D_OPTION_ACT_TAB_DEFAULT_1L = 17;
    public const int IDA_D_OPTION_ACT_TAB_DEFAULT_1C = 18;
    public const int IDA_D_OPTION_ACT_TAB_DEFAULT_1R = 19;
    public const int IDA_D_OPTION_ACT_LINE_SE_01 = 20;
    public const int IDA_D_OPTION_ACT_SOUSA_CONT_A = 21;
    public const int IDA_D_OPTION_ACT_TAB_SOUSA_01L = 22;
    public const int IDA_D_OPTION_ACT_TAB_SOUSA_01C = 23;
    public const int IDA_D_OPTION_ACT_TAB_SOUSA_01R = 24;
    public const int IDA_D_OPTION_ACT_TAB_SOUSA_01L2 = 25;
    public const int IDA_D_OPTION_ACT_TAB_SOUSA_01C2 = 26;
    public const int IDA_D_OPTION_ACT_TAB_SOUSA_01R2 = 27;
    public const int IDA_D_OPTION_ACT_LINE_SOUSA01 = 28;
    public const int IDA_D_OPTION_ACT_LINE_SOUSA02 = 29;
    public const int IDA_D_OPTION_ACT_S_SCREEN_01A = 30;
    public const int IDA_D_OPTION_ACT_S_SCREEN_01B = 31;
    public const int IDA_D_OPTION_ACT_SCREEN_NORMAL = 32;
    public const int IDA_D_OPTION_ACT_SOUSA_LINE_SONIC1 = 33;
    public const int IDA_D_OPTION_ACT_SOUSA_LINE_SONIC2 = 34;
    public const int IDA_D_OPTION_ACT_SOUSA_LINE_SONIC3 = 35;
    public const int IDA_D_OPTION_ACT_SOUSA_LINE_PA1 = 36;
    public const int IDA_D_OPTION_ACT_SOUSA_LINE_PA2 = 37;
    public const int IDA_D_OPTION_ACT_SOUSA_LINE_PA3 = 38;
    public const int IDA_D_OPTION_ACT_SOUSA_LINE_MOVE1 = 39;
    public const int IDA_D_OPTION_ACT_SOUSA_LINE_MOVE2 = 40;
    public const int IDA_D_OPTION_ACT_SOUSA_LINE_JUMP1 = 41;
    public const int IDA_D_OPTION_ACT_SOUSA_LINE_JUMP2 = 42;
    public const int IDA_D_OPTION_ACT_SOUSA_LINE_JUMP3 = 43;
    public const int IDA_D_OPTION_ACT_SOUSA_HUKIDASHI = 44;
    public const int IDA_D_OPTION_ACT_SOUSA_SSICON = 45;
    public const int IDA_D_OPTION_ACT_SOUSA_YUBI = 46;
    public const int IDA_D_OPTION_ACT_TAB_MANU_L = 47;
    public const int IDA_D_OPTION_ACT_TAB_MANU_C = 48;
    public const int IDA_D_OPTION_ACT_TAB_MANU_R = 49;
    public const int IDA_D_OPTION_ACT_CNT01_L = 50;
    public const int IDA_D_OPTION_ACT_CNT01_C = 51;
    public const int IDA_D_OPTION_ACT_CNT01_R = 52;
    public const int IDA_D_OPTION_ACT_CNT02_L = 53;
    public const int IDA_D_OPTION_ACT_CNT02_C = 54;
    public const int IDA_D_OPTION_ACT_CNT02_R = 55;
    public const int IDA_D_OPTION_ACT_SCREEN_A = 56;
    public const int IDA_D_OPTION_ACT_A_SOUSA_LINE_SONIC1 = 57;
    public const int IDA_D_OPTION_ACT_A_SOUSA_LINE_SONIC2 = 58;
    public const int IDA_D_OPTION_ACT_A_SOUSA_LINE_SONIC3 = 59;
    public const int IDA_D_OPTION_ACT_A_SOUSA_LINE_PA1 = 60;
    public const int IDA_D_OPTION_ACT_A_SOUSA_LINE_PA2 = 61;
    public const int IDA_D_OPTION_ACT_A_SOUSA_LINE_PA3 = 62;
    public const int IDA_D_OPTION_ACT_A_SOUSA_LINE_MOVE1 = 63;
    public const int IDA_D_OPTION_ACT_A_SOUSA_LINE_MOVE2 = 64;
    public const int IDA_D_OPTION_ACT_A_SOUSA_LINE_MOVE3 = 65;
    public const int IDA_D_OPTION_ACT_A_SOUSA_LINE_JUMP1 = 66;
    public const int IDA_D_OPTION_ACT_A_SOUSA_LINE_JUMP2 = 67;
    public const int IDA_D_OPTION_ACT_A_SOUSA_LINE_JUMP3 = 68;
    public const int IDA_D_OPTION_ACT_A_SOUSA_SSICON = 69;
    public const int IDA_D_OPTION_ACT_A_TYPE_BTN_L = 70;
    public const int IDA_D_OPTION_ACT_A_TYPE_BTN_C = 71;
    public const int IDA_D_OPTION_ACT_A_TYPE_BTN_R = 72;
    public const int IDA_D_OPTION_ACT_B_TYPE_BTN_L = 73;
    public const int IDA_D_OPTION_ACT_B_TYPE_BTN_C = 74;
    public const int IDA_D_OPTION_ACT_B_TYPE_BTN_R = 75;
    public const int IDA_D_OPTION_ACT_TYPE_SCREEN_DPAD = 76;
    public const int IDA_D_OPTION_ACT_TYPE_SCREEN_A = 77;
    public const int IDA_D_OPTION_ACT_TYPE_SCREEN_A2 = 78;
    public const int IDA_D_OPTION_ACT_TYPE_SCREEN_B = 79;
    public const int IDA_D_OPTION_ACT_TYPE_YUBI_B1 = 80;
    public const int IDA_D_OPTION_ACT_TYPE_YUBI_B2 = 81;
    public const int IDA_D_OPTION_ACT_TYPE_LINE_B1 = 82;
    public const int IDA_D_OPTION_ACT_TYPE_LINE_B2 = 83;
    public const int IDA_D_OPTION_JP_ACT_TEX_TITLE = 0;
    public const int IDA_D_OPTION_JP_ACT_TEX_ITEM_BGM = 1;
    public const int IDA_D_OPTION_JP_ACT_TEX_ITEM_SE = 2;
    public const int IDA_D_OPTION_JP_ACT_TEX_ITEM_CONT = 3;
    public const int IDA_D_OPTION_JP_ACT_TEX_ON = 4;
    public const int IDA_D_OPTION_JP_ACT_TEX_OFF = 5;
    public const int IDA_D_OPTION_JP_ACT_TEX_DEFAULT = 6;
    public const int IDA_D_OPTION_JP_ACT_TEX_TOP_PLAY = 7;
    public const int IDA_D_OPTION_JP_ACT_TEX_TOP_CONTROL = 8;
    public const int IDA_D_OPTION_JP_ACT_TEX_TOP_SETTING = 9;
    public const int IDA_D_OPTION_JP_ACT_TEX_TOP_CREDIT = 10;
    public const int IDA_D_OPTION_JP_ACT_SOUSA_TEX_EX_A = 11;
    public const int IDA_D_OPTION_JP_ACT_SOUSA_TEX_EX_B = 12;
    public const int IDA_D_OPTION_JP_ACT_SOUSA_TEX_HOM01 = 13;
    public const int IDA_D_OPTION_JP_ACT_SOUSA_TEX_SPIN01 = 14;
    public const int IDA_D_OPTION_JP_ACT_SOUSA_TEX_SUPER = 15;
    public const int IDA_D_OPTION_JP_ACT_SOUSA_TEX_JUMP = 16;
    public const int IDA_D_OPTION_JP_ACT_SOUSA_TEX_MOVE = 17;
    public const int IDA_D_OPTION_JP_ACT_SOUSA_TEX_PAUSE = 18;
    public const int IDA_D_OPTION_JP_ACT_SOUSA_TEX_TAP = 19;
    public const int IDA_D_OPTION_JP_ACT_TEX_MSG01 = 20;
    public const int IDA_D_OPTION_JP_ACT_TEX_TYPE_A = 21;
    public const int IDA_D_OPTION_JP_ACT_TEX_TYPE_B = 22;
    public const int IDA_D_OPTION_JP_ACT_TEX_DPAD = 23;
    public const int IDA_D_OPTION_JP_ACT_TEX_A_TILT = 24;
    public const int IDA_D_OPTION_JP_ACT_TEX_B_FLICK = 25;
    public const int IDA_D_OPTION_JP_ACT_TEX_CONT_TILT = 26;
    public const int IDA_D_OPTION_JP_ACT_TEX_CONT_TOUCH = 27;
    public const int IDA_D_OPTION_JP_ACT_A_SOUSA_TEX_SUPER = 28;
    public const int IDA_D_OPTION_JP_ACT_A_SOUSA_TEX_PAUSE = 29;
    public const int IDA_D_OPTION_JP_ACT_A_SOUSA_TEX_MOVE = 30;
    public const int IDA_D_OPTION_JP_ACT_A_SOUSA_TEX_JUMP = 31;
    public const int IDA_D_OPTION_JP_ACT_SOUSA_TEX_EX_A2 = 32;
    public const int IDA_D_OPTION_JP_ACT_SOUSA_TEX_EX_B2 = 33;
    public const int IDA_D_OPTION_USER_ROOT_NODE_TABLE = 0;
    public const int IDA_D_OPTION_USER_NODE_TABLE = 0;
    public const int IDA_D_OPTION_USER_NODE_1 = 1;
    public const int IDA_D_OPTION_USER_NODE_2 = 2;
    public const int IDA_D_OPTION_USER_NODE_3 = 3;
    public const int IDA_D_OPTION_USER_NODE_4 = 4;
    public const int IDA_D_OPTION_USER_NODE_5 = 5;
    public const int IDA_D_OPTION_USER_NODE_6 = 6;
    public const int IDA_D_OPTION_USER_NODE_7 = 7;
    public const int IDA_D_OPTION_USER_NODE_8 = 8;
    public const int IDA_D_OPTION_USER_NODE_9 = 9;
    public const int IDA_D_OPTION_USER_NODE_0 = 10;
    public const int IDA_D_OPTION_USER_NODE_A = 11;
    public const int IDA_D_OPTION_USER_NODE_B = 12;
    public const int IDA_D_OPTION_USER_NODE_C = 13;
    public const int IDA_D_OPTION_USER_NODE_D = 14;
    public const int IDA_D_OPTION_USER_NODE_E = 15;
    public const int IDA_D_OPTION_USER_NODE_F = 16;
    public const int IDA_D_OPTION_USER_NODE_G = 17;
    public const int IDA_D_OPTION_USER_NODE_H = 18;
    public const int IDA_D_OPTION_USER_NODE_I = 19;
    public const int IDA_D_OPTION_USER_NODE_J = 20;
    public const int IDA_D_OPTION_USER_NODE_K = 21;
    public const int IDA_D_OPTION_USER_NODE_L = 22;
    public const int IDA_D_OPTION_USER_NODE_N = 23;
    public const int IDA_D_OPTION_USER_NODE_M = 24;
    public const int IDA_D_OPTION_USER_NODE_O = 25;
    public const int IDA_D_OPTION_USER_NODE_P = 26;
    public const int IDA_D_OPTION_USER_NODE_Q = 27;
    public const int IDA_D_OPTION_USER_NODE_R = 28;
    public const int IDA_D_OPTION_USER_NODE_S = 29;
    public const int IDA_D_OPTION_USER_NODE_T = 30;
    public const int IDA_D_OPTION_USER_NODE_U = 31;
    public const int IDA_D_OPTION_USER_NODE_V = 32;
    public const int IDA_D_OPTION_USER_NODE_W = 33;
    public const int IDA_D_OPTION_USER_NODE_X = 34;
    public const int IDA_D_OPTION_USER_NODE_Y = 35;
    public const int IDA_D_OPTION_USER_NODE_Z = 36;
    public const int IDA_D_OPTION_USER_NODE_11 = 37;
    public const int IDA_D_OPTION_USER_NODE_12 = 38;
    public const int IDA_D_OPTION_USER_NODE_13 = 39;
    public const int IDA_D_OPTION_USER_NODE_14 = 40;
    public const int IDA_D_OPTION_USER_NODE_15 = 41;
    public const int IDA_D_OPTION_USER_NODE_16 = 42;
    public const int IDA_D_OPTION_USER_NODE_17 = 43;
    public const int IDA_D_OPTION_USER_NODE_18 = 44;
    public const int IDA_D_OPTION_USER_NODE_19 = 45;
    public const int IDA_D_OPTION_USER_NODE_20 = 46;
    public const int IDA_D_OPTION_USER_NODE_21 = 47;
    public const int IDA_D_OPTION_USER_NODE_22 = 48;
    public const int IDA_D_OPTION_USER_NODE_23 = 49;
    public const int IDA_D_OPTION_USER_ACT_TAB04_LEFT = 0;
    public const int IDA_D_OPTION_USER_ACT_TAB04_CENTER = 1;
    public const int IDA_D_OPTION_USER_ACT_TAB04_RIGHT = 2;
    public const int IDA_D_OPTION_USER_ACT_TAB06_UE = 3;
    public const int IDA_D_OPTION_USER_ACT_TAB06_SHITA01 = 4;
    public const int IDA_D_OPTION_USER_ACT_TAB06_SHITA02 = 5;
    public const int IDA_D_OPTION_USER_ACT_1 = 6;
    public const int IDA_D_OPTION_USER_ACT_2 = 7;
    public const int IDA_D_OPTION_USER_ACT_3 = 8;
    public const int IDA_D_OPTION_USER_ACT_4 = 9;
    public const int IDA_D_OPTION_USER_ACT_5 = 10;
    public const int IDA_D_OPTION_USER_ACT_6 = 11;
    public const int IDA_D_OPTION_USER_ACT_7 = 12;
    public const int IDA_D_OPTION_USER_ACT_8 = 13;
    public const int IDA_D_OPTION_USER_ACT_9 = 14;
    public const int IDA_D_OPTION_USER_ACT_0 = 15;
    public const int IDA_D_OPTION_USER_ACT_A = 16;
    public const int IDA_D_OPTION_USER_ACT_B = 17;
    public const int IDA_D_OPTION_USER_ACT_C = 18;
    public const int IDA_D_OPTION_USER_ACT_D = 19;
    public const int IDA_D_OPTION_USER_ACT_E = 20;
    public const int IDA_D_OPTION_USER_ACT_F = 21;
    public const int IDA_D_OPTION_USER_ACT_G = 22;
    public const int IDA_D_OPTION_USER_ACT_H = 23;
    public const int IDA_D_OPTION_USER_ACT_I = 24;
    public const int IDA_D_OPTION_USER_ACT_J = 25;
    public const int IDA_D_OPTION_USER_ACT_K = 26;
    public const int IDA_D_OPTION_USER_ACT_L = 27;
    public const int IDA_D_OPTION_USER_ACT_M = 28;
    public const int IDA_D_OPTION_USER_ACT_N = 29;
    public const int IDA_D_OPTION_USER_ACT_O = 30;
    public const int IDA_D_OPTION_USER_ACT_P = 31;
    public const int IDA_D_OPTION_USER_ACT_Q = 32;
    public const int IDA_D_OPTION_USER_ACT_R = 33;
    public const int IDA_D_OPTION_USER_ACT_S = 34;
    public const int IDA_D_OPTION_USER_ACT_T = 35;
    public const int IDA_D_OPTION_USER_ACT_U = 36;
    public const int IDA_D_OPTION_USER_ACT_V = 37;
    public const int IDA_D_OPTION_USER_ACT_W = 38;
    public const int IDA_D_OPTION_USER_ACT_X = 39;
    public const int IDA_D_OPTION_USER_ACT_Y = 40;
    public const int IDA_D_OPTION_USER_ACT_Z = 41;
    public const int IDA_D_OPTION_USER_ACT_KIGO01 = 42;
    public const int IDA_D_OPTION_USER_ACT_KIGO02 = 43;
    public const int IDA_D_OPTION_USER_ACT_KIGO03 = 44;
    public const int IDA_D_OPTION_USER_ACT_KIGO04 = 45;
    public const int IDA_D_OPTION_USER_ACT_KIGO05 = 46;
    public const int IDA_D_OPTION_USER_ACT_KIGO06 = 47;
    public const int IDA_D_OPTION_USER_ACT_KIGO07 = 48;
    public const int IDA_D_OPTION_USER_ACT_KIGO08 = 49;
    public const int IDA_D_OPTION_USER_ACT_KIGO09 = 50;
    public const int IDA_D_OPTION_USER_ACT_KIGO10 = 51;
    public const int IDA_D_OPTION_USER_ACT_KIGO11 = 52;
    public const int IDA_D_OPTION_USER_ACT_KIGO12 = 53;
    public const int IDA_D_OPTION_USER_ACT_KIGO13 = 54;
    public const int IDA_D_OPTION_USER_ACT_CUR_ALPHA1 = 55;
    public const int IDA_D_OPTION_USER_ACT_CUR_ALPHA2 = 56;
    public const int IDA_D_OPTION_USER_ACT_CUR_ALPHA3 = 57;
    public const int IDA_D_OPTION_USER_ACT_BUT_BS = 58;
    public const int IDA_D_OPTION_USER_ACT_BUT_CAP = 59;
    public const int IDA_D_OPTION_USER_ACT_BUT_SPACE = 60;
    public const int IDA_D_OPTION_USER_ACT_BUT_KETTEI_LEFT = 61;
    public const int IDA_D_OPTION_USER_ACT_BUT_KETTEI_RIGHT = 62;
    public const int IDA_D_OPTION_USER_ACT_ALP_1 = 63;
    public const int IDA_D_OPTION_USER_ACT_ALP_2 = 64;
    public const int IDA_D_OPTION_USER_ACT_ALP_3 = 65;
    public const int IDA_D_OPTION_USER_ACT_ALP_4 = 66;
    public const int IDA_D_OPTION_USER_ACT_ALP_5 = 67;
    public const int IDA_D_OPTION_USER_ACT_ALP_6 = 68;
    public const int IDA_D_OPTION_USER_ACT_ALP_7 = 69;
    public const int IDA_D_OPTION_USER_ACT_ALP_8 = 70;
    public const int IDA_D_OPTION_USER_ACT_ALP_9 = 71;
    public const int IDA_D_OPTION_USER_ACT_ALP_10 = 72;
    public const int IDA_D_OPTION_USER_ACT_CUR02 = 73;
    public const int IDA_D_OPTION_USER_ACT_TAB_1 = 74;
    public const int IDA_D_OPTION_USER_ACT_TAB_2 = 75;
    public const int IDA_D_OPTION_USER_ACT_TAB_3 = 76;
    public const int IDA_D_OPTION_USER_ACT_TAB_4 = 77;
    public const int IDA_D_OPTION_USER_ACT_TAB_5 = 78;
    public const int IDA_D_OPTION_USER_ACT_TAB_6 = 79;
    public const int IDA_D_OPTION_USER_ACT_TAB_7 = 80;
    public const int IDA_D_OPTION_USER_ACT_TAB_8 = 81;
    public const int IDA_D_OPTION_USER_ACT_TAB_9 = 82;
    public const int IDA_D_OPTION_USER_ACT_TAB_0 = 83;
    public const int IDA_D_OPTION_USER_ACT_TAB_A = 84;
    public const int IDA_D_OPTION_USER_ACT_TAB_B = 85;
    public const int IDA_D_OPTION_USER_ACT_TAB_C = 86;
    public const int IDA_D_OPTION_USER_ACT_TAB_D = 87;
    public const int IDA_D_OPTION_USER_ACT_TAB_E = 88;
    public const int IDA_D_OPTION_USER_ACT_TAB_F = 89;
    public const int IDA_D_OPTION_USER_ACT_TAB_G = 90;
    public const int IDA_D_OPTION_USER_ACT_TAB_H = 91;
    public const int IDA_D_OPTION_USER_ACT_TAB_I = 92;
    public const int IDA_D_OPTION_USER_ACT_TAB_J = 93;
    public const int IDA_D_OPTION_USER_ACT_TAB_K = 94;
    public const int IDA_D_OPTION_USER_ACT_TAB_L = 95;
    public const int IDA_D_OPTION_USER_ACT_TAB_M = 96;
    public const int IDA_D_OPTION_USER_ACT_TAB_N = 97;
    public const int IDA_D_OPTION_USER_ACT_TAB_O = 98;
    public const int IDA_D_OPTION_USER_ACT_TAB_P = 99;
    public const int IDA_D_OPTION_USER_ACT_TAB_Q = 100;
    public const int IDA_D_OPTION_USER_ACT_TAB_R = 101;
    public const int IDA_D_OPTION_USER_ACT_TAB_S = 102;
    public const int IDA_D_OPTION_USER_ACT_TAB_T = 103;
    public const int IDA_D_OPTION_USER_ACT_TAB_U = 104;
    public const int IDA_D_OPTION_USER_ACT_TAB_V = 105;
    public const int IDA_D_OPTION_USER_ACT_TAB_W = 106;
    public const int IDA_D_OPTION_USER_ACT_TAB_X = 107;
    public const int IDA_D_OPTION_USER_ACT_TAB_Y = 108;
    public const int IDA_D_OPTION_USER_ACT_TAB_Z = 109;
    public const int IDA_D_OPTION_USER_ACT_TAB_11 = 110;
    public const int IDA_D_OPTION_USER_ACT_TAB_12 = 111;
    public const int IDA_D_OPTION_USER_ACT_TAB_13 = 112;
    public const int IDA_D_OPTION_USER_ACT_TAB_14 = 113;
    public const int IDA_D_OPTION_USER_ACT_TAB_15 = 114;
    public const int IDA_D_OPTION_USER_ACT_TAB_16 = 115;
    public const int IDA_D_OPTION_USER_ACT_TAB_17 = 116;
    public const int IDA_D_OPTION_USER_ACT_TAB_18 = 117;
    public const int IDA_D_OPTION_USER_ACT_TAB_19 = 118;
    public const int IDA_D_OPTION_USER_ACT_TAB_20 = 119;
    public const int IDA_D_OPTION_USER_ACT_TAB_21 = 120;
    public const int IDA_D_OPTION_USER_ACT_TAB_22 = 121;
    public const int IDA_D_OPTION_USER_ACT_TAB_23 = 122;
    public const int IDA_D_OPTION_USER_ACT_TAB_ROOT = 123;
    public const int IDA_D_OPTION_USER_JP_ACT_TEX_BS = 0;
    public const int IDA_D_OPTION_USER_JP_ACT_TEX_CAP = 1;
    public const int IDA_D_OPTION_USER_JP_ACT_TEX_SPACE = 2;
    public const int IDA_D_OPTION_USER_JP_ACT_TEX_KETTEI = 3;
    public const int IDA_D_OPTION_USER_JP_ACT_TEX_OBI1 = 4;
    public const int IDA_D_OPTION_USER_JP_ACT_TEX_WIN_MSG2 = 5;
    public const int IDA_D_RANK_ACT_TAB_TITLE1 = 0;
    public const int IDA_D_RANK_ACT_TAB_BACK_LIST = 1;
    public const int IDA_D_RANK_ACT_NUM_ACT = 2;
    public const int IDA_D_RANK_ACT_CUR01_UE = 3;
    public const int IDA_D_RANK_ACT_CUR01_SHITA = 4;
    public const int IDA_D_RANK_ACT_CUR01_RIGHT = 5;
    public const int IDA_D_RANK_ACT_CUR01_LEFT = 6;
    public const int IDA_D_RANK_ACT_BUT04_LEFT = 7;
    public const int IDA_D_RANK_ACT_BUT04_RIGHT = 8;
    public const int IDA_D_RANK_ACT_CUR02_L = 9;
    public const int IDA_D_RANK_ACT_CUR02_R = 10;
    public const int IDA_D_RANK_ACT_CUR02_C = 11;
    public const int IDA_D_RANK_ACT_CUR03 = 12;
    public const int IDA_D_RANK_ACT_TAB_A_LEFT = 13;
    public const int IDA_D_RANK_ACT_TAB_A_CENTER = 14;
    public const int IDA_D_RANK_ACT_TAB_A_RIGHT = 15;
    public const int IDA_D_RANK_ACT_TAB07_LEFT = 16;
    public const int IDA_D_RANK_ACT_TAB07_CENTER = 17;
    public const int IDA_D_RANK_ACT_TAB07_RIGHT = 18;
    public const int IDA_D_RANK_ACT_TAB06 = 19;
    public const int IDA_D_RANK_ACT_TAB08_LEFT02 = 20;
    public const int IDA_D_RANK_ACT_TAB08_RIGHT02 = 21;
    public const int IDA_D_RANK_ACT_ARROW = 22;
    public const int IDA_D_RANK_ACT_TEX_ACT1 = 23;
    public const int IDA_D_RANK_ACT_TEX_ACT2 = 24;
    public const int IDA_D_RANK_ACT_TEX_ACT3 = 25;
    public const int IDA_D_RANK_ACT_TEX_ACT4 = 26;
    public const int IDA_D_RANK_ACT_TEX_ACT6 = 27;
    public const int IDA_D_RANK_ACT_TEX_ACT5 = 28;
    public const int IDA_D_RANK_ACT_TEX_ACT7 = 29;
    public const int IDA_D_RANK_ACT_TAB_NONACT_LEFT = 30;
    public const int IDA_D_RANK_ACT_TAB_NONACT_CENTER = 31;
    public const int IDA_D_RANK_ACT_TAB_NONACT_RIGHT = 32;
    public const int IDA_D_RANK_ACT_TAB_ACT_LEFT = 33;
    public const int IDA_D_RANK_ACT_TAB_ACT_CENTER = 34;
    public const int IDA_D_RANK_ACT_TAB_ACT_RIGHT = 35;
    public const int IDA_D_RANK_ACT_INDEX01_A = 36;
    public const int IDA_D_RANK_ACT_INDEX01_B = 37;
    public const int IDA_D_RANK_ACT_INDEX01_C = 38;
    public const int IDA_D_RANK_ACT_INDEX02 = 39;
    public const int IDA_D_RANK_ACT_LIGHT_SCORE = 40;
    public const int IDA_D_RANK_ACT_LIGHT_SONIC = 41;
    public const int IDA_D_RANK_ACT_TAB_LIST = 42;
    public const int IDA_D_RANK_ACT_TAB_BOTTOM = 43;
    public const int IDA_D_RANK_ACT_ICON_SONIC01 = 44;
    public const int IDA_D_RANK_ACT_ICON_SONIC03 = 45;
    public const int IDA_D_RANK_ACT_ICON_SONIC04 = 46;
    public const int IDA_D_RANK_ACT_ICON_SONIC02 = 47;
    public const int IDA_D_RANK_ACT_JUN01 = 48;
    public const int IDA_D_RANK_ACT_JUN02 = 49;
    public const int IDA_D_RANK_ACT_JUN03 = 50;
    public const int IDA_D_RANK_ACT_JUN04 = 51;
    public const int IDA_D_RANK_ACT_JUN05 = 52;
    public const int IDA_D_RANK_ACT_JUN06 = 53;
    public const int IDA_D_RANK_ACT_JUN07 = 54;
    public const int IDA_D_RANK_ACT_TEX_ALPHA01 = 55;
    public const int IDA_D_RANK_ACT_TEX_ALPHA02 = 56;
    public const int IDA_D_RANK_ACT_TEX_ALPHA03 = 57;
    public const int IDA_D_RANK_ACT_TEX_ALPHA04 = 58;
    public const int IDA_D_RANK_ACT_TEX_ALPHA05 = 59;
    public const int IDA_D_RANK_ACT_TEX_ALPHA06 = 60;
    public const int IDA_D_RANK_ACT_TEX_ALPHA07 = 61;
    public const int IDA_D_RANK_ACT_TEX_ALPHA08 = 62;
    public const int IDA_D_RANK_ACT_TEX_ALPHA09 = 63;
    public const int IDA_D_RANK_ACT_TEX_ALPHA010 = 64;
    public const int IDA_D_RANK_ACT_TEX_ALPHA011 = 65;
    public const int IDA_D_RANK_ACT_TEX_ALPHA012 = 66;
    public const int IDA_D_RANK_ACT_TEX_ALPHA013 = 67;
    public const int IDA_D_RANK_ACT_TEX_ALPHA014 = 68;
    public const int IDA_D_RANK_ACT_TEX_ALPHA015 = 69;
    public const int IDA_D_RANK_ACT_TEX_ALPHA016 = 70;
    public const int IDA_D_RANK_ACT_TIME01 = 71;
    public const int IDA_D_RANK_ACT_TIME_COLON1 = 72;
    public const int IDA_D_RANK_ACT_TIME02 = 73;
    public const int IDA_D_RANK_ACT_TIME03 = 74;
    public const int IDA_D_RANK_ACT_TIME_COLON2 = 75;
    public const int IDA_D_RANK_ACT_TIME04 = 76;
    public const int IDA_D_RANK_ACT_TIME05 = 77;
    public const int IDA_D_RANK_ACT_SCORE01 = 78;
    public const int IDA_D_RANK_ACT_SCORE02 = 79;
    public const int IDA_D_RANK_ACT_SCORE03 = 80;
    public const int IDA_D_RANK_ACT_SCORE04 = 81;
    public const int IDA_D_RANK_ACT_SCORE05 = 82;
    public const int IDA_D_RANK_ACT_SCORE06 = 83;
    public const int IDA_D_RANK_ACT_SCORE07 = 84;
    public const int IDA_D_RANK_ACT_SCORE08 = 85;
    public const int IDA_D_RANK_ACT_SCORE09 = 86;
    public const int IDA_D_RANK_ACT_TAB_ZONE_L = 87;
    public const int IDA_D_RANK_ACT_TAB_ZONE_R = 88;
    public const int IDA_D_RANK_ACT_TAB_TIME_L = 89;
    public const int IDA_D_RANK_ACT_TAB_TIME_C = 90;
    public const int IDA_D_RANK_ACT_TAB_TIME_R = 91;
    public const int IDA_D_RANK_ACT_MENU_CURSOL = 92;
    public const int IDA_D_RANK_ACT_TAB_TIME_L2 = 93;
    public const int IDA_D_RANK_ACT_TAB_TIME_C2 = 94;
    public const int IDA_D_RANK_ACT_TAB_TIME_R2 = 95;
    public const int IDA_D_RANK_ACT_TEXT_LIST_ZONE = 96;
    public const int IDA_D_RANK_ACT_TEX_ZONE = 97;
    public const int IDA_D_RANK_JP_ACT_TEX_TITLE = 0;
    public const int IDA_D_RANK_JP_ACT_TEX_OBI1 = 1;
    public const int IDA_D_RANK_JP_ACT_TEX_TIMERANK = 2;
    public const int IDA_D_RANK_JP_ACT_TEX_LIST_STAGE = 3;
    public const int IDA_D_RANK_JP_ACT_TEXT_LIST_ZONE = 4;
    public const int IDA_D_RANK_JP_ACT_TEX_LIST_ACT = 5;
    public const int IDA_D_RANK_JP_ACT_TEX_LIST_BOSS = 6;
    public const int IDA_D_RANK_JP_ACT_TEX_ALL = 7;
    public const int IDA_D_RANK_JP_ACT_TEX_MYSCORE = 8;
    public const int IDA_D_RANK_JP_ACT_TEX_FRIENDS = 9;
    public const int IDA_D_RANK_JP_ACT_TEX_JUNI = 10;
    public const int IDA_D_RANK_JP_ACT_TEX_NAMAE = 11;
    public const int IDA_D_RANK_JP_ACT_TEX_TIME = 12;
    public const int IDA_D_RANK_JP_ACT_TEX_CHIIKI = 13;
    public const int IDA_D_RANK_JP_ACT_TEX_SONIC1 = 14;
    public const int IDA_D_RANK_JP_ACT_TEX_SONIC2 = 15;
    public const int IDA_D_RANK_JP_ACT_TEX_SONIC3 = 16;
    public const int IDA_D_RANK_JP_ACT_TEX_AREA = 17;
    public const int IDA_D_RANK_JP_ACT_TEX_ZONE = 18;
    public const int IDA_D_RANK_JP_ACT_TEX_ACT = 19;
    public const int IDA_D_RANK_JP_ACT_TEX_BOSS = 20;
    public const int IDA_D_RANK_JP_ACT_TEX_F_BOSS = 21;
    public const int IDA_D_RANK_JP_ACT_TEX_WIN00 = 22;
    public const int IDA_D_RANK_JP_ACT_TEX_WIN01 = 23;
    public const int IDA_D_RANK_JP_ACT_TEX_WIN02 = 24;
    public const int IDA_D_RANK_JP_ACT_TEX_WIN03 = 25;
    public const int IDA_D_RANK_JP_ACT_TEX_SCTM01A = 26;
    public const int IDA_D_RANK_JP_ACT_TEX_SCTM01B = 27;
    public const int IDA_D_RANK_JP_ACT_TEX_SCTM02A = 28;
    public const int IDA_D_RANK_JP_ACT_TEX_SCTM02B = 29;
    public const int IDA_D_STFRL_END_ACT_BG_WHITE = 0;
    public const int IDA_D_STFRL_END_ACT_BG_BLACK = 1;
    public const int IDA_D_STFRL_END_ACT_BG_BLACK2 = 2;
    public const int IDA_D_STFRL_END_ACT_LIGHT_LT = 3;
    public const int IDA_D_STFRL_END_ACT_LIGHT_LB = 4;
    public const int IDA_D_STFRL_END_ACT_LIGHT_RT = 5;
    public const int IDA_D_STFRL_END_ACT_LIGHT_RB = 6;
    public const int IDA_D_STFRL_END_ACT_METAL = 7;
    public const int IDA_D_STFRL_END_ACT_EYE01 = 8;
    public const int IDA_D_STFRL_END_JP_ACT_TEX_TRYAGAIN = 0;
    public const int IDA_D_STFRL_END_JP_ACT_TEX_WIN_MSG = 1;
    public const int IDA_D_STFRL_END_JP_ACT_TEX_CONTI = 2;
    public const int IDA_D_STGSLCT_ACT_TAB_NORMAL_L = 0;
    public const int IDA_D_STGSLCT_ACT_ICON_SONIC = 1;
    public const int IDA_D_STGSLCT_ACT_NUM_A_100 = 2;
    public const int IDA_D_STGSLCT_ACT_NUM_A_10 = 3;
    public const int IDA_D_STGSLCT_ACT_NUM_A_1 = 4;
    public const int IDA_D_STGSLCT_ACT_ICON1 = 5;
    public const int IDA_D_STGSLCT_ACT_ICON2 = 6;
    public const int IDA_D_STGSLCT_ACT_ICON3 = 7;
    public const int IDA_D_STGSLCT_ACT_ICON4 = 8;
    public const int IDA_D_STGSLCT_ACT_ICON5 = 9;
    public const int IDA_D_STGSLCT_ACT_ICON6 = 10;
    public const int IDA_D_STGSLCT_ACT_EMER_TAB1 = 11;
    public const int IDA_D_STGSLCT_ACT_ICON_EMER1 = 12;
    public const int IDA_D_STGSLCT_ACT_ICON_EMER2 = 13;
    public const int IDA_D_STGSLCT_ACT_ICON_EMER3 = 14;
    public const int IDA_D_STGSLCT_ACT_ICON_EMER4 = 15;
    public const int IDA_D_STGSLCT_ACT_ICON_EMER5 = 16;
    public const int IDA_D_STGSLCT_ACT_ICON_EMER6 = 17;
    public const int IDA_D_STGSLCT_ACT_ICON_EMER7 = 18;
    public const int IDA_D_STGSLCT_ACT_ARROW1 = 19;
    public const int IDA_D_STGSLCT_ACT_ARROW2 = 20;
    public const int IDA_D_STGSLCT_ACT_ACT1_TAB_A = 21;
    public const int IDA_D_STGSLCT_ACT_ACT1_TAB_B = 22;
    public const int IDA_D_STGSLCT_ACT_ACT1_TAB_C = 23;
    public const int IDA_D_STGSLCT_ACT_ACT1_SCR = 24;
    public const int IDA_D_STGSLCT_ACT_ACT1_SCR_BG = 25;
    public const int IDA_D_STGSLCT_ACT_ACT1_NUM_B = 26;
    public const int IDA_D_STGSLCT_ACT_ACT1_LINE = 27;
    public const int IDA_D_STGSLCT_ACT_ACT1_ICON_EMER = 28;
    public const int IDA_D_STGSLCT_ACT_ACT_CURSOR_UP = 29;
    public const int IDA_D_STGSLCT_ACT_ACT_CURSOR_DOWN = 30;
    public const int IDA_D_STGSLCT_ACT_ACT1_NUM_A1 = 31;
    public const int IDA_D_STGSLCT_ACT_ACT1_NUM_A2 = 32;
    public const int IDA_D_STGSLCT_ACT_ACT1_NUM_A3 = 33;
    public const int IDA_D_STGSLCT_ACT_ACT1_NUM_A4 = 34;
    public const int IDA_D_STGSLCT_ACT_ACT1_NUM_A5 = 35;
    public const int IDA_D_STGSLCT_ACT_ACT1_NUM_A6 = 36;
    public const int IDA_D_STGSLCT_ACT_ACT1_NUM_A7 = 37;
    public const int IDA_D_STGSLCT_ACT_ACT1_NUM_A8 = 38;
    public const int IDA_D_STGSLCT_ACT_ACT1_NUM_A9 = 39;
    public const int IDA_D_STGSLCT_ACT_ACT1_COVER1 = 40;
    public const int IDA_D_STGSLCT_ACT_ACT1_COVER2 = 41;
    public const int IDA_D_STGSLCT_ACT_ACT1_COVER3 = 42;
    public const int IDA_D_STGSLCT_ACT_SPE_NUM_STAGE = 43;
    public const int IDA_D_STGSLCT_ACT_SPE_EMER = 44;
    public const int IDA_D_STGSLCT_ACT_ZONE_SCR1 = 45;
    public const int IDA_D_STGSLCT_ACT_ZONE_SCR2 = 46;
    public const int IDA_D_STGSLCT_ACT_ZONE_SCR3 = 47;
    public const int IDA_D_STGSLCT_ACT_ZONE_SCR4 = 48;
    public const int IDA_D_STGSLCT_ACT_ZONE_SCR5 = 49;
    public const int IDA_D_STGSLCT_ACT_ZONE_SCR6 = 50;
    public const int IDA_D_STGSLCT_ACT_ZONE_TAB = 51;
    public const int IDA_D_STGSLCT_ACT_ZONE_COVER1 = 52;
    public const int IDA_D_STGSLCT_ACT_ZONE_COVER2 = 53;
    public const int IDA_D_STGSLCT_ACT_ZONE_COVER3 = 54;
    public const int IDA_D_STGSLCT_ACT_TAB_TIME_L = 55;
    public const int IDA_D_STGSLCT_ACT_TAB_TIME_C = 56;
    public const int IDA_D_STGSLCT_ACT_TAB_TIME_R = 57;
    public const int IDA_D_STGSLCT_ACT_Z_BG_LT = 58;
    public const int IDA_D_STGSLCT_ACT_Z_BG_LB = 59;
    public const int IDA_D_STGSLCT_ACT_Z_BG_RT = 60;
    public const int IDA_D_STGSLCT_ACT_Z_BG_RB = 61;
    public const int IDA_D_STGSLCT_ACT_ZONE_SCR1_A = 62;
    public const int IDA_D_STGSLCT_ACT_ZONE_SCR1_B = 63;
    public const int IDA_D_STGSLCT_ACT_ZONE_SCR1_C = 64;
    public const int IDA_D_STGSLCT_ACT_ZONE_SCR2_A = 65;
    public const int IDA_D_STGSLCT_ACT_ZONE_SCR2_B = 66;
    public const int IDA_D_STGSLCT_ACT_ZONE_SCR2_C = 67;
    public const int IDA_D_STGSLCT_ACT_ZONE_SCR3_A = 68;
    public const int IDA_D_STGSLCT_ACT_ZONE_SCR3_B = 69;
    public const int IDA_D_STGSLCT_ACT_ZONE_SCR3_C = 70;
    public const int IDA_D_STGSLCT_ACT_ZONE_SCR4_A = 71;
    public const int IDA_D_STGSLCT_ACT_ZONE_SCR4_B = 72;
    public const int IDA_D_STGSLCT_ACT_ZONE_SCR4_C = 73;
    public const int IDA_D_STGSLCT_ACT_TAB_TIME_L2 = 74;
    public const int IDA_D_STGSLCT_ACT_TAB_TIME_C2 = 75;
    public const int IDA_D_STGSLCT_ACT_TAB_TIME_R2 = 76;
    public const int IDA_D_STGSLCT_ACT_TEX_ZNAME = 77;
    public const int IDA_D_STGSLCT_ACT_ZONE_TEXT = 78;
    public const int IDA_D_STGSLCT_ACT_TAB_TIME_MOVE = 79;
    public const int IDA_D_STGSLCT_JP_ACT_TEX_ZNAME = 0;
    public const int IDA_D_STGSLCT_JP_ACT_ACT1_TEX_ACT = 1;
    public const int IDA_D_STGSLCT_JP_ACT_ACT1_MESS = 2;
    public const int IDA_D_STGSLCT_JP_ACT_ACT1_TEX_SCORE = 3;
    public const int IDA_D_STGSLCT_JP_ACT_ACT1_TEX_TIME = 4;
    public const int IDA_D_STGSLCT_JP_ACT_BOSS_TEX_BOSS = 5;
    public const int IDA_D_STGSLCT_JP_ACT_SPE_TEX_STAGE = 6;
    public const int IDA_D_STGSLCT_JP_ACT_ZONE_TEXT = 7;
    public const int IDA_D_STGSLCT_JP_ACT_TEX_WIN_MSG = 8;
    public const int IDA_D_STGSLCT_JP_ACT_TEX_WIN_SSONIC = 9;
    public const int IDA_D_STGSLCT_JP_ACT_TEX_SCTM01A = 10;
    public const int IDA_D_STGSLCT_JP_ACT_TEX_SCTM02A = 11;
    public const int IDA_D_STGSLCT_JP_ACT_TEX_WIN_MSG2 = 12;
    public const int IDA_D_TITLE_ACT_BTN_L = 0;
    public const int IDA_D_TITLE_ACT_BTN_C = 1;
    public const int IDA_D_TITLE_ACT_BTN_R = 2;
    public const int IDA_D_TITLE_ACT_BTN02_L = 3;
    public const int IDA_D_TITLE_ACT_BTN02_C = 4;
    public const int IDA_D_TITLE_ACT_GAME_BTN_L = 5;
    public const int IDA_D_TITLE_ACT_GAME_BTN_C = 6;
    public const int IDA_D_TITLE_JP_ACT_TEX_HAZIME = 0;
    public const int IDA_D_TITLE_JP_ACT_TEX_TUZUKI = 1;
    public const int IDA_D_TITLE_JP_ACT_TEX_OPTION = 2;
    public const int IDA_D_TITLE_JP_ACT_TEX_KANZENBAN = 3;
    public const int IDA_D_TITLE_JP_ACT_TEX_WIN_MSG1 = 4;
    public const int IDA_D_TITLE_JP_ACT_TEX_WIN_MSG2 = 5;
    public const int IDA_D_TITLE_JP_ACT_TEX_START = 6;
    public const int IDA_D_TITLE_JP_ACT_TEX_MODORU = 7;
    public const int IDA_D_TITLE_JP_ACT_TEX_GAME = 8;
    public const int IDA_D_TITLE_JP_ACT_TEX_ACHIEVEMENTS = 9;
    public const int IDA_D_TITLE_JP_ACT_TEX_LEADERBOARDS = 10;
    public const int IDA_D_TITLE_OP_ACT_LOGO01 = 0;
    public const int IDA_D_TITLE_OP_ACT_LOGO02_YUBI = 1;
    public const int IDA_D_TITLE_OP_ACT_LOGO03 = 2;
    public const int IDA_D_TITLE_OP_ACT_LOGO04 = 3;
    public const int IDA_D_TITLE_OP_ACT_SEGALOGO = 4;
    public const int IDA_G_FIX_ACT_ICON_RING = 0;
    public const int IDA_G_FIX_ACT_NUM_A_100 = 1;
    public const int IDA_G_FIX_ACT_NUM_A_10 = 2;
    public const int IDA_G_FIX_ACT_NUM_A_1 = 3;
    public const int IDA_G_FIX_ACT_TAB_SCORE = 4;
    public const int IDA_G_FIX_ACT_NUM_B_1 = 5;
    public const int IDA_G_FIX_ACT_NUM_B_2 = 6;
    public const int IDA_G_FIX_ACT_NUM_B_3 = 7;
    public const int IDA_G_FIX_ACT_NUM_B_4 = 8;
    public const int IDA_G_FIX_ACT_NUM_B_5 = 9;
    public const int IDA_G_FIX_ACT_NUM_B_6 = 10;
    public const int IDA_G_FIX_ACT_NUM_B_7 = 11;
    public const int IDA_G_FIX_ACT_NUM_B_8 = 12;
    public const int IDA_G_FIX_ACT_NUM_B_9 = 13;
    public const int IDA_G_FIX_ACT_ICON_TIME = 14;
    public const int IDA_G_FIX_ACT_NUM_C_10000 = 15;
    public const int IDA_G_FIX_ACT_NUM_C_A = 16;
    public const int IDA_G_FIX_ACT_NUM_C_1000 = 17;
    public const int IDA_G_FIX_ACT_NUM_C_100 = 18;
    public const int IDA_G_FIX_ACT_NUM_C_B = 19;
    public const int IDA_G_FIX_ACT_NUM_C_10 = 20;
    public const int IDA_G_FIX_ACT_NUM_C_1 = 21;
    public const int IDA_G_FIX_ACT_ICON_SONIC = 22;
    public const int IDA_G_FIX_ACT_TEX_SONIC = 23;
    public const int IDA_G_FIX_ACT_NUM_D_100 = 24;
    public const int IDA_G_FIX_ACT_NUM_D_10 = 25;
    public const int IDA_G_FIX_ACT_NUM_D_1 = 26;
    public const int IDA_G_FIX_ACT_ICON_TIMEATTACK = 27;
    public const int IDA_G_FIX_ACT_TA_NUM_C_10000 = 28;
    public const int IDA_G_FIX_ACT_TA_NUM_C_A = 29;
    public const int IDA_G_FIX_ACT_TA_NUM_C_1000 = 30;
    public const int IDA_G_FIX_ACT_TA_NUM_C_100 = 31;
    public const int IDA_G_FIX_ACT_TA_NUM_C_B = 32;
    public const int IDA_G_FIX_ACT_TA_NUM_C_10 = 33;
    public const int IDA_G_FIX_ACT_TA_NUM_C_1 = 34;
    public const int IDA_G_FIX_ACT_ICON_SCORE = 35;
    public const int IDA_G_FIX_ACT_TA_NUM_D_9 = 36;
    public const int IDA_G_FIX_ACT_TA_NUM_D_8 = 37;
    public const int IDA_G_FIX_ACT_TA_NUM_D_7 = 38;
    public const int IDA_G_FIX_ACT_TA_NUM_D_6 = 39;
    public const int IDA_G_FIX_ACT_TA_NUM_D_5 = 40;
    public const int IDA_G_FIX_ACT_TA_NUM_D_4 = 41;
    public const int IDA_G_FIX_ACT_TA_NUM_D_3 = 42;
    public const int IDA_G_FIX_ACT_TA_NUM_D_2 = 43;
    public const int IDA_G_FIX_ACT_TA_NUM_D_1 = 44;
    public const int IDA_G_FIX_ACT_ICON_SUPER01 = 45;
    public const int IDA_G_FIX_ACT_START = 46;
    public const int IDA_G_FIX_ACT_CROSS = 47;
    public const int IDA_G_FIX_ACT_JUMP = 48;
    public const int IDA_G_FIX_ACT_DA_ICON_SONIC = 49;
    public const int IDA_G_FIX_ACT_DA_TEX_SONIC = 50;
    public const int IDA_G_FIX_ACT_DA_NUM_D_100 = 51;
    public const int IDA_G_FIX_ACT_DA_NUM_D_10 = 52;
    public const int IDA_G_FIX_ACT_DA_NUM_D_1 = 53;
    public const int IDA_G_FIX_ACT_DA_TA_NUM_D_9 = 54;
    public const int IDA_G_FIX_ACT_DA_TA_NUM_D_8 = 55;
    public const int IDA_G_FIX_ACT_DA_TA_NUM_D_7 = 56;
    public const int IDA_G_FIX_ACT_DA_TA_NUM_D_6 = 57;
    public const int IDA_G_FIX_ACT_DA_TA_NUM_D_5 = 58;
    public const int IDA_G_FIX_ACT_DA_TA_NUM_D_4 = 59;
    public const int IDA_G_FIX_ACT_DA_TA_NUM_D_3 = 60;
    public const int IDA_G_FIX_ACT_DA_TA_NUM_D_2 = 61;
    public const int IDA_G_FIX_ACT_DA_TA_NUM_D_1 = 62;
    public const int IDA_G_FIX_ACT_DA_ICON_SUPER01 = 63;
    public const int IDA_G_MSG_ACT_IPHONE = 0;
    public const int IDA_G_MSG_ACT_ARROW = 1;
    public const int IDA_G_MSG_ACT_YUBI_FLICK = 2;
    public const int IDA_G_MSG_ACT_FLIC_LINE = 3;
    public const int IDA_G_MSG_ACT_YUBI_TAP = 4;
    public const int IDA_G_MSG_ACT_TAP_LINE = 5;
    public const int IDA_G_MSG_ACT_A_BTN = 6;
    public const int IDA_G_MSG_ACT_IPHONE_2 = 7;
    public const int IDA_G_MSG_SS_JP_ACT_TEX_SS_1 = 0;
    public const int IDA_G_MSG_SS_JP_ACT_TEX_TAP = 1;
    public const int IDA_G_MSG_SS_JP_ACT_TEX_SS_2 = 2;
    public const int IDA_G_MSG_Z2_JP_ACT_TEX_Z2_1 = 0;
    public const int IDA_G_MSG_Z3_JP_ACT_TEX_Z3_1 = 0;
    public const int IDA_G_MSG_Z3_JP_ACT_TEX_TAP = 1;
    public const int IDA_G_MSG_Z3_JP_ACT_TEX_Z3_2 = 2;
    public const int IDA_G_OVER_ACT_T_FADEOUT = 0;
    public const int IDA_G_OVER_ACT_G_FADEOUT = 1;
    public const int IDA_G_OVER_FR_ACT_T_TEX_TIME = 0;
    public const int IDA_G_OVER_FR_ACT_T_TEX_OVER = 1;
    public const int IDA_G_OVER_FR_ACT_G_TEX_GAME = 2;
    public const int IDA_G_OVER_FR_ACT_G_TEX_OVER = 3;
    public const int IDA_G_OVER_GE_ACT_T_TEX_TIME = 0;
    public const int IDA_G_OVER_GE_ACT_T_TEX_OVER = 1;
    public const int IDA_G_OVER_GE_ACT_G_TEX_GAME = 2;
    public const int IDA_G_OVER_GE_ACT_G_TEX_OVER = 3;
    public const int IDA_G_OVER_IT_ACT_T_TEX_TIME = 0;
    public const int IDA_G_OVER_IT_ACT_T_TEX_OVER = 1;
    public const int IDA_G_OVER_IT_ACT_G_TEX_GAME = 2;
    public const int IDA_G_OVER_IT_ACT_G_TEX_OVER = 3;
    public const int IDA_G_OVER_JP_ACT_T_TEX_TIME = 0;
    public const int IDA_G_OVER_JP_ACT_T_TEX_OVER = 1;
    public const int IDA_G_OVER_JP_ACT_G_TEX_GAME = 2;
    public const int IDA_G_OVER_JP_ACT_G_TEX_OVER = 3;
    public const int IDA_G_OVER_SP_ACT_T_TEX_TIME = 0;
    public const int IDA_G_OVER_SP_ACT_T_TEX_OVER = 1;
    public const int IDA_G_OVER_SP_ACT_G_TEX_GAME = 2;
    public const int IDA_G_OVER_SP_ACT_G_TEX_OVER = 3;
    public const int IDA_G_OVER_US_ACT_T_TEX_TIME = 0;
    public const int IDA_G_OVER_US_ACT_T_TEX_OVER = 1;
    public const int IDA_G_OVER_US_ACT_G_TEX_GAME = 2;
    public const int IDA_G_OVER_US_ACT_G_TEX_OVER = 3;
    public const int IDA_G_OVER_FI_ACT_T_TEX_TIME = 0;
    public const int IDA_G_OVER_FI_ACT_T_TEX_OVER = 1;
    public const int IDA_G_OVER_FI_ACT_G_TEX_GAME = 2;
    public const int IDA_G_OVER_FI_ACT_G_TEX_OVER = 3;
    public const int IDA_G_OVER_PT_ACT_T_TEX_TIME = 0;
    public const int IDA_G_OVER_PT_ACT_T_TEX_OVER = 1;
    public const int IDA_G_OVER_PT_ACT_G_TEX_GAME = 2;
    public const int IDA_G_OVER_PT_ACT_G_TEX_OVER = 3;
    public const int IDA_G_OVER_RU_ACT_T_TEX_TIME = 0;
    public const int IDA_G_OVER_RU_ACT_T_TEX_OVER = 1;
    public const int IDA_G_OVER_RU_ACT_G_TEX_GAME = 2;
    public const int IDA_G_OVER_RU_ACT_G_TEX_OVER = 3;
    public const int IDA_G_OVER_CN_ACT_T_TEX_TIME = 0;
    public const int IDA_G_OVER_CN_ACT_T_TEX_OVER = 1;
    public const int IDA_G_OVER_CN_ACT_G_TEX_GAME = 2;
    public const int IDA_G_OVER_CN_ACT_G_TEX_OVER = 3;
    public const int IDA_G_OVER_HK_ACT_T_TEX_TIME = 0;
    public const int IDA_G_OVER_HK_ACT_T_TEX_OVER = 1;
    public const int IDA_G_OVER_HK_ACT_G_TEX_GAME = 2;
    public const int IDA_G_OVER_HK_ACT_G_TEX_OVER = 3;
    public const int IDA_G_PAUSE_ACT_BACK = 0;
    public const int IDA_G_PAUSE_ACT_BTN01_L = 1;
    public const int IDA_G_PAUSE_ACT_BTN01_C = 2;
    public const int IDA_G_PAUSE_ACT_BTN01_R = 3;
    public const int IDA_G_PAUSE_ACT_BTN03_L = 4;
    public const int IDA_G_PAUSE_ACT_BTN03_C = 5;
    public const int IDA_G_PAUSE_ACT_BTN03_R = 6;
    public const int IDA_G_PAUSE_ACT_BTN04_L = 7;
    public const int IDA_G_PAUSE_ACT_BTN04_C = 8;
    public const int IDA_G_PAUSE_ACT_BTN04_R = 9;
    public const int IDA_G_PAUSE_JP_ACT_TEX_RETRY = 0;
    public const int IDA_G_PAUSE_JP_ACT_TEX_WORLD = 1;
    public const int IDA_G_PAUSE_JP_ACT_TEX_MAIN = 2;
    public const int IDA_G_PAUSE_JP_ACT_TEX_MODORU = 3;
    public const int IDA_G_PAUSE_JP_ACT_MSG_RETRY = 4;
    public const int IDA_G_PAUSE_JP_ACT_MSG_WORLD = 5;
    public const int IDA_G_PAUSE_JP_ACT_MSG_RETRY2 = 6;
    public const int IDA_G_PAUSE_JP_ACT_MSG_MAIN = 7;
    public const int IDA_G_PAUSE_JP_ACT_TEX_HAI = 8;
    public const int IDA_G_PAUSE_JP_ACT_TEX_IIE = 9;
    public const int IDA_G_RSLT_ACT_TEX_SONIC = 0;
    public const int IDA_G_RSLT_ACT_TEX_1 = 1;
    public const int IDA_G_RSLT_ACT_TEX_2 = 2;
    public const int IDA_G_RSLT_ACT_TEX_3 = 3;
    public const int IDA_G_RSLT_ACT_SCORE_TIME_1 = 4;
    public const int IDA_G_RSLT_ACT_SCORE_TIME_2 = 5;
    public const int IDA_G_RSLT_ACT_SCORE_TIME_3 = 6;
    public const int IDA_G_RSLT_ACT_SCORE_TIME_4 = 7;
    public const int IDA_G_RSLT_ACT_SCORE_TIME_5 = 8;
    public const int IDA_G_RSLT_ACT_SCORE_RING_1 = 9;
    public const int IDA_G_RSLT_ACT_SCORE_RING_2 = 10;
    public const int IDA_G_RSLT_ACT_SCORE_RING_3 = 11;
    public const int IDA_G_RSLT_ACT_SCORE_RING_4 = 12;
    public const int IDA_G_RSLT_ACT_SCORE_RING_5 = 13;
    public const int IDA_G_RSLT_ACT_LINE_1 = 14;
    public const int IDA_G_RSLT_ACT_LINE_2 = 15;
    public const int IDA_G_RSLT_ACT_LINE_3 = 16;
    public const int IDA_G_RSLT_ACT_ICON_SONIC = 17;
    public const int IDA_G_RSLT_ACT_SCORE_TOTAL_1 = 18;
    public const int IDA_G_RSLT_ACT_SCORE_TOTAL_2 = 19;
    public const int IDA_G_RSLT_ACT_SCORE_TOTAL_3 = 20;
    public const int IDA_G_RSLT_ACT_SCORE_TOTAL_4 = 21;
    public const int IDA_G_RSLT_ACT_SCORE_TOTAL_5 = 22;
    public const int IDA_G_RSLT_ACT_SCORE_TOTAL_6 = 23;
    public const int IDA_G_RSLT_ACT_SCORE_TOTAL_7 = 24;
    public const int IDA_G_RSLT_ACT_SCORE_TOTAL_8 = 25;
    public const int IDA_G_RSLT_ACT_SCORE_TOTAL_9 = 26;
    public const int IDA_G_RSLT_ACT_TA_NUM1 = 27;
    public const int IDA_G_RSLT_ACT_TA_NUM2 = 28;
    public const int IDA_G_RSLT_ACT_TA_NUM3 = 29;
    public const int IDA_G_RSLT_ACT_TA_NUM4 = 30;
    public const int IDA_G_RSLT_ACT_TA_NUM5 = 31;
    public const int IDA_G_RSLT_ACT_TA_NUM6 = 32;
    public const int IDA_G_RSLT_ACT_TA_NUM7 = 33;
    public const int IDA_G_RSLT_ACT_ICON_EME1_1 = 34;
    public const int IDA_G_RSLT_ACT_ICON_EME1_2 = 35;
    public const int IDA_G_RSLT_ACT_ICON_EME1_3 = 36;
    public const int IDA_G_RSLT_ACT_ICON_EME1_4 = 37;
    public const int IDA_G_RSLT_ACT_ICON_EME1_5 = 38;
    public const int IDA_G_RSLT_ACT_ICON_EME1_6 = 39;
    public const int IDA_G_RSLT_ACT_ICON_EME1_7 = 40;
    public const int IDA_G_RSLT_ACT_ICON_EME02 = 41;
    public const int IDA_G_RSLT_ACT_ICON_EME2_1 = 42;
    public const int IDA_G_RSLT_ACT_ICON_EME2_2 = 43;
    public const int IDA_G_RSLT_ACT_ICON_EME2_3 = 44;
    public const int IDA_G_RSLT_ACT_ICON_EME2_4 = 45;
    public const int IDA_G_RSLT_ACT_ICON_EME2_5 = 46;
    public const int IDA_G_RSLT_ACT_ICON_EME2_6 = 47;
    public const int IDA_G_RSLT_ACT_ICON_EME2_7 = 48;
    public const int IDA_G_RSLT_ACT_TA_TIME1 = 49;
    public const int IDA_G_RSLT_ACT_TA_TIME2 = 50;
    public const int IDA_G_RSLT_ACT_TA_TIME3 = 51;
    public const int IDA_G_RSLT_ACT_TA_TIME5 = 52;
    public const int IDA_G_RSLT_ACT_TA_TIME6 = 53;
    public const int IDA_G_RSLT_ACT_TA_TIME7 = 54;
    public const int IDA_G_RSLT_ACT_TA_TIME8 = 55;
    public const int IDA_G_RSLT_ACT_TA_ICON_SONIC = 56;
    public const int IDA_G_RSLT_ACT_SP_SCORE_TIME_1 = 57;
    public const int IDA_G_RSLT_ACT_SP_SCORE_TIME_2 = 58;
    public const int IDA_G_RSLT_ACT_SP_SCORE_TIME_3 = 59;
    public const int IDA_G_RSLT_ACT_SP_SCORE_TIME_4 = 60;
    public const int IDA_G_RSLT_ACT_SP_SCORE_TIME_5 = 61;
    public const int IDA_G_RSLT_ACT_SP_SCORE_RING_1 = 62;
    public const int IDA_G_RSLT_ACT_SP_SCORE_RING_2 = 63;
    public const int IDA_G_RSLT_ACT_SP_SCORE_RING_3 = 64;
    public const int IDA_G_RSLT_ACT_SP_SCORE_RING_4 = 65;
    public const int IDA_G_RSLT_ACT_SP_SCORE_RING_5 = 66;
    public const int IDA_G_RSLT_ACT_SP_LINE_1 = 67;
    public const int IDA_G_RSLT_ACT_SP_LINE_2 = 68;
    public const int IDA_G_RSLT_ACT_SP_LINE_3 = 69;
    public const int IDA_G_RSLT_ACT_SP_ICON_SONIC1 = 70;
    public const int IDA_G_RSLT_ACT_SP_ICON_SONIC2 = 71;
    public const int IDA_G_RSLT_ACT_SP_SCORE_TOTAL_1 = 72;
    public const int IDA_G_RSLT_ACT_SP_SCORE_TOTAL_2 = 73;
    public const int IDA_G_RSLT_ACT_SP_SCORE_TOTAL_3 = 74;
    public const int IDA_G_RSLT_ACT_SP_SCORE_TOTAL_4 = 75;
    public const int IDA_G_RSLT_ACT_SP_SCORE_TOTAL_5 = 76;
    public const int IDA_G_RSLT_ACT_SP_SCORE_TOTAL_6 = 77;
    public const int IDA_G_RSLT_ACT_SP_SCORE_TOTAL_7 = 78;
    public const int IDA_G_RSLT_ACT_SP_SCORE_TOTAL_8 = 79;
    public const int IDA_G_RSLT_ACT_SP_SCORE_TOTAL_9 = 80;
    public const int IDA_G_RSLT_ACT_GE_TEX_1 = 81;
    public const int IDA_G_RSLT_ACT_GE_TEX_2 = 82;
    public const int IDA_G_RSLT_ACT_GE_TEX_3 = 83;
    public const int IDA_G_RSLT_ACT_IT_SONIC = 84;
    public const int IDA_G_RSLT_ACT_SP_SONIC = 85;
    public const int IDA_G_RSLT_ACT_IT_NUM1 = 86;
    public const int IDA_G_RSLT_ACT_IT_NUM2 = 87;
    public const int IDA_G_RSLT_ACT_IT_NUM3 = 88;
    public const int IDA_G_RSLT_ACT_IT_NUM4 = 89;
    public const int IDA_G_RSLT_ACT_IT_NUM5 = 90;
    public const int IDA_G_RSLT_ACT_IT_NUM6 = 91;
    public const int IDA_G_RSLT_ACT_IT_NUM7 = 92;
    public const int IDA_G_RSLT_ACT_FR_TEX_1 = 93;
    public const int IDA_G_RSLT_ACT_FR_TEX_2 = 94;
    public const int IDA_G_RSLT_ACT_FR_TEX_3 = 95;
    public const int IDA_G_RSLT_ACT_SP_TEX_1 = 96;
    public const int IDA_G_RSLT_ACT_SP_TEX_2 = 97;
    public const int IDA_G_RSLT_ACT_SP_TEX_3 = 98;
    public const int IDA_G_RSLT_ACT_RETRY_BG = 99;
    public const int IDA_G_RSLT_ACT_BTN01_L = 100;
    public const int IDA_G_RSLT_ACT_BTN01_C = 101;
    public const int IDA_G_RSLT_ACT_BTN01_R = 102;
    public const int IDA_G_RSLT_ACT_BTN02_L = 103;
    public const int IDA_G_RSLT_ACT_BTN02_C = 104;
    public const int IDA_G_RSLT_ACT_BTN02_R = 105;
    public const int IDA_G_RSLT_JP_ACT_TEX_MADE = 0;
    public const int IDA_G_RSLT_JP_ACT_TEX_DEF = 1;
    public const int IDA_G_RSLT_JP_ACT_TEX_CLEAR = 2;
    public const int IDA_G_RSLT_JP_ACT_TEX_THRO = 3;
    public const int IDA_G_RSLT_JP_ACT_TEX_ACT = 4;
    public const int IDA_G_RSLT_JP_ACT_TEX_BOS = 5;
    public const int IDA_G_RSLT_JP_ACT_TEX_FINA = 6;
    public const int IDA_G_RSLT_JP_ACT_TEX_TIME = 7;
    public const int IDA_G_RSLT_JP_ACT_TEX_RING = 8;
    public const int IDA_G_RSLT_JP_ACT_TEX_TOTAL = 9;
    public const int IDA_G_RSLT_JP_ACT_TEX_EXTE = 10;
    public const int IDA_G_RSLT_JP_ACT_TEX_SPST = 11;
    public const int IDA_G_RSLT_JP_ACT_TEX_SONIC2 = 12;
    public const int IDA_G_RSLT_JP_ACT_TEX_SP_CLEAR = 13;
    public const int IDA_G_RSLT_JP_ACT_TA_TEX_NEW = 14;
    public const int IDA_G_RSLT_JP_ACT_TA_TEX_TIME = 15;
    public const int IDA_G_RSLT_JP_ACT_RE_TEX_RETRY = 16;
    public const int IDA_G_RSLT_JP_ACT_RE_TEX_ACT = 17;
    public const int IDA_G_RSLT_JP_ACT_SP_TEX_TIME = 18;
    public const int IDA_G_RSLT_JP_ACT_SP_TEX_RING = 19;
    public const int IDA_G_RSLT_JP_ACT_SP_TEX_TOTAL = 20;
    public const int IDA_G_START_ROOT_NODE_BG_BLUE = 0;
    public const int IDA_G_START_ROOT_NODE_BG_RED = 1;
    public const int IDA_G_START_ROOT_NODE_ZONE1 = 2;
    public const int IDA_G_START_ROOT_NODE_ZONE2 = 3;
    public const int IDA_G_START_ROOT_NODE_ZONE3 = 4;
    public const int IDA_G_START_ROOT_NODE_ZONE4 = 5;
    public const int IDA_G_START_ROOT_NODE_FINAL = 6;
    public const int IDA_G_START_ROOT_NODE_NUM_1 = 7;
    public const int IDA_G_START_ROOT_NODE_NUM_2 = 8;
    public const int IDA_G_START_ROOT_NODE_NUM_3 = 9;
    public const int IDA_G_START_NODE_BG_BLUE = 0;
    public const int IDA_G_START_NODE_BG_RED = 1;
    public const int IDA_G_START_NODE_ZONE1 = 2;
    public const int IDA_G_START_NODE_ZONE2 = 3;
    public const int IDA_G_START_NODE_ZONE3 = 4;
    public const int IDA_G_START_NODE_ZONE4 = 5;
    public const int IDA_G_START_NODE_FINAL = 6;
    public const int IDA_G_START_NODE_NUM_1 = 7;
    public const int IDA_G_START_NODE_NUM_2 = 8;
    public const int IDA_G_START_NODE_NUM_3 = 9;
    public const int IDA_G_START_NODE_BG_A_1 = 10;
    public const int IDA_G_START_NODE_BG_A_2 = 11;
    public const int IDA_G_START_NODE_RED = 12;
    public const int IDA_G_START_NODE_TEX_ZNAME_1 = 13;
    public const int IDA_G_START_NODE_TEZ_ZNAME_2 = 14;
    public const int IDA_G_START_NODE_TEZ_ZNAME_3 = 15;
    public const int IDA_G_START_NODE_TEX_ZNAME_4 = 16;
    public const int IDA_G_START_NODE_TEX_ZNAME_F = 17;
    public const int IDA_G_START_NODE_NUM_A_1 = 18;
    public const int IDA_G_START_NODE_NUM_A_2 = 19;
    public const int IDA_G_START_NODE_NUM_A_3 = 20;
    public const int IDA_G_START_ACT_BG_A_1 = 0;
    public const int IDA_G_START_ACT_BG_A_2 = 1;
    public const int IDA_G_START_ACT_BG_WHITE = 2;
    public const int IDA_G_START_ACT_BG_RED = 3;
    public const int IDA_G_START_ACT_BG_A_MOVE = 4;
    public const int IDA_G_START_ACT_BG_RED_MOVE = 5;
    public const int IDA_G_START_ACT_TEX_ZNAME_1 = 6;
    public const int IDA_G_START_ACT_TEX_ZNAME_2 = 7;
    public const int IDA_G_START_ACT_TEX_ZNAME_3 = 8;
    public const int IDA_G_START_ACT_TEX_ZNAME_4 = 9;
    public const int IDA_G_START_ACT_TEX_ZNAME_F = 10;
    public const int IDA_G_START_ACT_TEX_ZNAME_MOVE = 11;
    public const int IDA_G_START_ACT_TEX_ZONE = 12;
    public const int IDA_G_START_ACT_NUM_A_1 = 13;
    public const int IDA_G_START_ACT_NUM_A_2 = 14;
    public const int IDA_G_START_ACT_NUM_A_3 = 15;
    public const int IDA_G_START_ACT_NUM_A_MOVE = 16;
    public const int IDA_G_START_FR_ROOT_NODE_TEX_ACT = 0;
    public const int IDA_G_START_FR_ROOT_NODE_TEX_BOSS = 1;
    public const int IDA_G_START_FR_ROOT_NODE_Z1_ACT1 = 2;
    public const int IDA_G_START_FR_ROOT_NODE_Z1_ACT2 = 3;
    public const int IDA_G_START_FR_ROOT_NODE_Z1_ACT3 = 4;
    public const int IDA_G_START_FR_ROOT_NODE_Z1_BOSS = 5;
    public const int IDA_G_START_FR_ROOT_NODE_Z2_ACT1 = 6;
    public const int IDA_G_START_FR_ROOT_NODE_Z2_ACT2 = 7;
    public const int IDA_G_START_FR_ROOT_NODE_Z2_ACT3 = 8;
    public const int IDA_G_START_FR_ROOT_NODE_Z2_BOSS = 9;
    public const int IDA_G_START_FR_ROOT_NODE_Z3_ACT1 = 10;
    public const int IDA_G_START_FR_ROOT_NODE_Z3_ACT2 = 11;
    public const int IDA_G_START_FR_ROOT_NODE_Z3_ACT3 = 12;
    public const int IDA_G_START_FR_ROOT_NODE_Z3_BOSS = 13;
    public const int IDA_G_START_FR_ROOT_NODE_Z4_ACT1 = 14;
    public const int IDA_G_START_FR_ROOT_NODE_Z4_ACT2 = 15;
    public const int IDA_G_START_FR_ROOT_NODE_Z4_ACT3 = 16;
    public const int IDA_G_START_FR_ROOT_NODE_Z4_BOSS = 17;
    public const int IDA_G_START_FR_ROOT_NODE_FINAL_BOSS = 18;
    public const int IDA_G_START_FR_NODE_TEX_ACT = 0;
    public const int IDA_G_START_FR_NODE_TEX_BOSS = 1;
    public const int IDA_G_START_FR_NODE_Z1_ACT1 = 2;
    public const int IDA_G_START_FR_NODE_Z1_ACT2 = 3;
    public const int IDA_G_START_FR_NODE_Z1_ACT3 = 4;
    public const int IDA_G_START_FR_NODE_Z1_BOSS = 5;
    public const int IDA_G_START_FR_NODE_Z2_ACT1 = 6;
    public const int IDA_G_START_FR_NODE_Z2_ACT2 = 7;
    public const int IDA_G_START_FR_NODE_Z2_ACT3 = 8;
    public const int IDA_G_START_FR_NODE_Z2_BOSS = 9;
    public const int IDA_G_START_FR_NODE_Z3_ACT1 = 10;
    public const int IDA_G_START_FR_NODE_Z3_ACT2 = 11;
    public const int IDA_G_START_FR_NODE_Z3_ACT3 = 12;
    public const int IDA_G_START_FR_NODE_Z3_BOSS = 13;
    public const int IDA_G_START_FR_NODE_Z4_ACT1 = 14;
    public const int IDA_G_START_FR_NODE_Z4_ACT2 = 15;
    public const int IDA_G_START_FR_NODE_Z4_ACT3 = 16;
    public const int IDA_G_START_FR_NODE_Z4_BOSS = 17;
    public const int IDA_G_START_FR_NODE_FINAL_BOSS = 18;
    public const int IDA_G_START_FR_NODE_TEX_ACT_A = 19;
    public const int IDA_G_START_FR_NODE_TEX_BOSS_A = 20;
    public const int IDA_G_START_FR_NODE_Z1_ACT1_A = 21;
    public const int IDA_G_START_FR_NODE_Z1_ACT2_A = 22;
    public const int IDA_G_START_FR_NODE_Z1_ACT3_A = 23;
    public const int IDA_G_START_FR_NODE_Z_1_BOSS_A = 24;
    public const int IDA_G_START_FR_NODE_Z2_ACT1_A = 25;
    public const int IDA_G_START_FR_NODE_Z2_ACT2_A = 26;
    public const int IDA_G_START_FR_NODE_Z2_ACT3_A = 27;
    public const int IDA_G_START_FR_NODE_Z2_BOSS_A = 28;
    public const int IDA_G_START_FR_NODE_Z3_ACT1_A = 29;
    public const int IDA_G_START_FR_NODE_Z3_ACT2_A = 30;
    public const int IDA_G_START_FR_NODE_Z3_ACT3_A = 31;
    public const int IDA_G_START_FR_NODE_Z3_BOSS_A = 32;
    public const int IDA_G_START_FR_NODE_Z4_ACT1_A = 33;
    public const int IDA_G_START_FR_NODE_Z4_ACT_2A = 34;
    public const int IDA_G_START_FR_NODE_Z4_ACT3_A = 35;
    public const int IDA_G_START_FR_NODE_Z4_BOSS_A = 36;
    public const int IDA_G_START_FR_NODE_FINAL_BOSS_A = 37;
    public const int IDA_G_START_FR_ACT_TEX_ACT = 0;
    public const int IDA_G_START_FR_ACT_TEX_BOSS = 1;
    public const int IDA_G_START_FR_ACT_TEX_ACT_MOVE = 2;
    public const int IDA_G_START_FR_ACT_Z1_ACT1 = 3;
    public const int IDA_G_START_FR_ACT_Z1_ACT2 = 4;
    public const int IDA_G_START_FR_ACT_Z1_ACT3 = 5;
    public const int IDA_G_START_FR_ACT_Z1_BOSS = 6;
    public const int IDA_G_START_FR_ACT_Z2_ACT1 = 7;
    public const int IDA_G_START_FR_ACT_Z2_ACT2 = 8;
    public const int IDA_G_START_FR_ACT_Z2_ACT3 = 9;
    public const int IDA_G_START_FR_ACT_Z2_BOSS = 10;
    public const int IDA_G_START_FR_ACT_Z3_ACT1 = 11;
    public const int IDA_G_START_FR_ACT_Z3_ACT2 = 12;
    public const int IDA_G_START_FR_ACT_Z3_ACT3 = 13;
    public const int IDA_G_START_FR_ACT_Z3_BOSS = 14;
    public const int IDA_G_START_FR_ACT_Z4_ACT1 = 15;
    public const int IDA_G_START_FR_ACT_Z4_ACT2 = 16;
    public const int IDA_G_START_FR_ACT_Z4_ACT3 = 17;
    public const int IDA_G_START_FR_ACT_Z4_BOSS = 18;
    public const int IDA_G_START_FR_ACT_FINAL_BOSS = 19;
    public const int IDA_G_START_FR_ACT_ACTNAME_MOVE = 20;
    public const int IDA_G_START_GE_ROOT_NODE_TEX_ACT = 0;
    public const int IDA_G_START_GE_ROOT_NODE_TEX_BOSS = 1;
    public const int IDA_G_START_GE_ROOT_NODE_Z1_ACT1 = 2;
    public const int IDA_G_START_GE_ROOT_NODE_Z1_ACT2 = 3;
    public const int IDA_G_START_GE_ROOT_NODE_Z1_ACT3 = 4;
    public const int IDA_G_START_GE_ROOT_NODE_Z1_BOSS = 5;
    public const int IDA_G_START_GE_ROOT_NODE_Z2_ACT1 = 6;
    public const int IDA_G_START_GE_ROOT_NODE_Z2_ACT2 = 7;
    public const int IDA_G_START_GE_ROOT_NODE_Z2_ACT3 = 8;
    public const int IDA_G_START_GE_ROOT_NODE_Z2_BOSS = 9;
    public const int IDA_G_START_GE_ROOT_NODE_Z3_ACT1 = 10;
    public const int IDA_G_START_GE_ROOT_NODE_Z3_ACT2 = 11;
    public const int IDA_G_START_GE_ROOT_NODE_Z3_ACT3 = 12;
    public const int IDA_G_START_GE_ROOT_NODE_Z3_BOSS = 13;
    public const int IDA_G_START_GE_ROOT_NODE_Z4_ACT1 = 14;
    public const int IDA_G_START_GE_ROOT_NODE_Z4_ACT2 = 15;
    public const int IDA_G_START_GE_ROOT_NODE_Z4_ACT3 = 16;
    public const int IDA_G_START_GE_ROOT_NODE_Z4_BOSS = 17;
    public const int IDA_G_START_GE_ROOT_NODE_FINAL_BOSS = 18;
    public const int IDA_G_START_GE_NODE_TEX_ACT = 0;
    public const int IDA_G_START_GE_NODE_TEX_BOSS = 1;
    public const int IDA_G_START_GE_NODE_Z1_ACT1 = 2;
    public const int IDA_G_START_GE_NODE_Z1_ACT2 = 3;
    public const int IDA_G_START_GE_NODE_Z1_ACT3 = 4;
    public const int IDA_G_START_GE_NODE_Z1_BOSS = 5;
    public const int IDA_G_START_GE_NODE_Z2_ACT1 = 6;
    public const int IDA_G_START_GE_NODE_Z2_ACT2 = 7;
    public const int IDA_G_START_GE_NODE_Z2_ACT3 = 8;
    public const int IDA_G_START_GE_NODE_Z2_BOSS = 9;
    public const int IDA_G_START_GE_NODE_Z3_ACT1 = 10;
    public const int IDA_G_START_GE_NODE_Z3_ACT2 = 11;
    public const int IDA_G_START_GE_NODE_Z3_ACT3 = 12;
    public const int IDA_G_START_GE_NODE_Z3_BOSS = 13;
    public const int IDA_G_START_GE_NODE_Z4_ACT1 = 14;
    public const int IDA_G_START_GE_NODE_Z4_ACT2 = 15;
    public const int IDA_G_START_GE_NODE_Z4_ACT3 = 16;
    public const int IDA_G_START_GE_NODE_Z4_BOSS = 17;
    public const int IDA_G_START_GE_NODE_FINAL_BOSS = 18;
    public const int IDA_G_START_GE_NODE_TEX_ACT_A = 19;
    public const int IDA_G_START_GE_NODE_TEX_BOSS_A = 20;
    public const int IDA_G_START_GE_NODE_Z1_ACT1_A = 21;
    public const int IDA_G_START_GE_NODE_Z1_ACT2_A = 22;
    public const int IDA_G_START_GE_NODE_Z1_ACT3_A = 23;
    public const int IDA_G_START_GE_NODE_Z_1_BOSS_A = 24;
    public const int IDA_G_START_GE_NODE_Z2_ACT1_A = 25;
    public const int IDA_G_START_GE_NODE_Z2_ACT2_A = 26;
    public const int IDA_G_START_GE_NODE_Z2_ACT3_A = 27;
    public const int IDA_G_START_GE_NODE_Z2_BOSS_A = 28;
    public const int IDA_G_START_GE_NODE_Z3_ACT1_A = 29;
    public const int IDA_G_START_GE_NODE_Z3_ACT2_A = 30;
    public const int IDA_G_START_GE_NODE_Z3_ACT3_A = 31;
    public const int IDA_G_START_GE_NODE_Z3_BOSS_A = 32;
    public const int IDA_G_START_GE_NODE_Z4_ACT1_A = 33;
    public const int IDA_G_START_GE_NODE_Z4_ACT_2A = 34;
    public const int IDA_G_START_GE_NODE_Z4_ACT3_A = 35;
    public const int IDA_G_START_GE_NODE_Z4_BOSS_A = 36;
    public const int IDA_G_START_GE_NODE_FINAL_BOSS_A = 37;
    public const int IDA_G_START_GE_ACT_TEX_ACT = 0;
    public const int IDA_G_START_GE_ACT_TEX_BOSS = 1;
    public const int IDA_G_START_GE_ACT_TEX_ACT_MOVE = 2;
    public const int IDA_G_START_GE_ACT_Z1_ACT1 = 3;
    public const int IDA_G_START_GE_ACT_Z1_ACT2 = 4;
    public const int IDA_G_START_GE_ACT_Z1_ACT3 = 5;
    public const int IDA_G_START_GE_ACT_Z1_BOSS = 6;
    public const int IDA_G_START_GE_ACT_Z2_ACT1 = 7;
    public const int IDA_G_START_GE_ACT_Z2_ACT2 = 8;
    public const int IDA_G_START_GE_ACT_Z2_ACT3 = 9;
    public const int IDA_G_START_GE_ACT_Z2_BOSS = 10;
    public const int IDA_G_START_GE_ACT_Z3_ACT1 = 11;
    public const int IDA_G_START_GE_ACT_Z3_ACT2 = 12;
    public const int IDA_G_START_GE_ACT_Z3_ACT3 = 13;
    public const int IDA_G_START_GE_ACT_Z3_BOSS = 14;
    public const int IDA_G_START_GE_ACT_Z4_ACT1 = 15;
    public const int IDA_G_START_GE_ACT_Z4_ACT2 = 16;
    public const int IDA_G_START_GE_ACT_Z4_ACT3 = 17;
    public const int IDA_G_START_GE_ACT_Z4_BOSS = 18;
    public const int IDA_G_START_GE_ACT_FINAL_BOSS = 19;
    public const int IDA_G_START_GE_ACT_ACTNAME_MOVE = 20;
    public const int IDA_G_START_IT_ROOT_NODE_TEX_ACT = 0;
    public const int IDA_G_START_IT_ROOT_NODE_TEX_BOSS = 1;
    public const int IDA_G_START_IT_ROOT_NODE_Z1_ACT1 = 2;
    public const int IDA_G_START_IT_ROOT_NODE_Z1_ACT2 = 3;
    public const int IDA_G_START_IT_ROOT_NODE_Z1_ACT3 = 4;
    public const int IDA_G_START_IT_ROOT_NODE_Z1_BOSS = 5;
    public const int IDA_G_START_IT_ROOT_NODE_Z2_ACT1 = 6;
    public const int IDA_G_START_IT_ROOT_NODE_Z2_ACT2 = 7;
    public const int IDA_G_START_IT_ROOT_NODE_Z2_ACT3 = 8;
    public const int IDA_G_START_IT_ROOT_NODE_Z2_BOSS = 9;
    public const int IDA_G_START_IT_ROOT_NODE_Z3_ACT1 = 10;
    public const int IDA_G_START_IT_ROOT_NODE_Z3_ACT2 = 11;
    public const int IDA_G_START_IT_ROOT_NODE_Z3_ACT3 = 12;
    public const int IDA_G_START_IT_ROOT_NODE_Z3_BOSS = 13;
    public const int IDA_G_START_IT_ROOT_NODE_Z4_ACT1 = 14;
    public const int IDA_G_START_IT_ROOT_NODE_Z4_ACT2 = 15;
    public const int IDA_G_START_IT_ROOT_NODE_Z4_ACT3 = 16;
    public const int IDA_G_START_IT_ROOT_NODE_Z4_BOSS = 17;
    public const int IDA_G_START_IT_ROOT_NODE_FINAL_BOSS = 18;
    public const int IDA_G_START_IT_NODE_TEX_ACT = 0;
    public const int IDA_G_START_IT_NODE_TEX_BOSS = 1;
    public const int IDA_G_START_IT_NODE_Z1_ACT1 = 2;
    public const int IDA_G_START_IT_NODE_Z1_ACT2 = 3;
    public const int IDA_G_START_IT_NODE_Z1_ACT3 = 4;
    public const int IDA_G_START_IT_NODE_Z1_BOSS = 5;
    public const int IDA_G_START_IT_NODE_Z2_ACT1 = 6;
    public const int IDA_G_START_IT_NODE_Z2_ACT2 = 7;
    public const int IDA_G_START_IT_NODE_Z2_ACT3 = 8;
    public const int IDA_G_START_IT_NODE_Z2_BOSS = 9;
    public const int IDA_G_START_IT_NODE_Z3_ACT1 = 10;
    public const int IDA_G_START_IT_NODE_Z3_ACT2 = 11;
    public const int IDA_G_START_IT_NODE_Z3_ACT3 = 12;
    public const int IDA_G_START_IT_NODE_Z3_BOSS = 13;
    public const int IDA_G_START_IT_NODE_Z4_ACT1 = 14;
    public const int IDA_G_START_IT_NODE_Z4_ACT2 = 15;
    public const int IDA_G_START_IT_NODE_Z4_ACT3 = 16;
    public const int IDA_G_START_IT_NODE_Z4_BOSS = 17;
    public const int IDA_G_START_IT_NODE_FINAL_BOSS = 18;
    public const int IDA_G_START_IT_NODE_TEX_ACT_A = 19;
    public const int IDA_G_START_IT_NODE_TEX_BOSS_A = 20;
    public const int IDA_G_START_IT_NODE_Z1_ACT1_A = 21;
    public const int IDA_G_START_IT_NODE_Z1_ACT2_A = 22;
    public const int IDA_G_START_IT_NODE_Z1_ACT3_A = 23;
    public const int IDA_G_START_IT_NODE_Z_1_BOSS_A = 24;
    public const int IDA_G_START_IT_NODE_Z2_ACT1_A = 25;
    public const int IDA_G_START_IT_NODE_Z2_ACT2_A = 26;
    public const int IDA_G_START_IT_NODE_Z2_ACT3_A = 27;
    public const int IDA_G_START_IT_NODE_Z2_BOSS_A = 28;
    public const int IDA_G_START_IT_NODE_Z3_ACT1_A = 29;
    public const int IDA_G_START_IT_NODE_Z3_ACT2_A = 30;
    public const int IDA_G_START_IT_NODE_Z3_ACT3_A = 31;
    public const int IDA_G_START_IT_NODE_Z3_BOSS_A = 32;
    public const int IDA_G_START_IT_NODE_Z4_ACT1_A = 33;
    public const int IDA_G_START_IT_NODE_Z4_ACT_2A = 34;
    public const int IDA_G_START_IT_NODE_Z4_ACT3_A = 35;
    public const int IDA_G_START_IT_NODE_Z4_BOSS_A = 36;
    public const int IDA_G_START_IT_NODE_FINAL_BOSS_A = 37;
    public const int IDA_G_START_IT_ACT_TEX_ACT = 0;
    public const int IDA_G_START_IT_ACT_TEX_BOSS = 1;
    public const int IDA_G_START_IT_ACT_TEX_ACT_MOVE = 2;
    public const int IDA_G_START_IT_ACT_Z1_ACT1 = 3;
    public const int IDA_G_START_IT_ACT_Z1_ACT2 = 4;
    public const int IDA_G_START_IT_ACT_Z1_ACT3 = 5;
    public const int IDA_G_START_IT_ACT_Z1_BOSS = 6;
    public const int IDA_G_START_IT_ACT_Z2_ACT1 = 7;
    public const int IDA_G_START_IT_ACT_Z2_ACT2 = 8;
    public const int IDA_G_START_IT_ACT_Z2_ACT3 = 9;
    public const int IDA_G_START_IT_ACT_Z2_BOSS = 10;
    public const int IDA_G_START_IT_ACT_Z3_ACT1 = 11;
    public const int IDA_G_START_IT_ACT_Z3_ACT2 = 12;
    public const int IDA_G_START_IT_ACT_Z3_ACT3 = 13;
    public const int IDA_G_START_IT_ACT_Z3_BOSS = 14;
    public const int IDA_G_START_IT_ACT_Z4_ACT1 = 15;
    public const int IDA_G_START_IT_ACT_Z4_ACT2 = 16;
    public const int IDA_G_START_IT_ACT_Z4_ACT3 = 17;
    public const int IDA_G_START_IT_ACT_Z4_BOSS = 18;
    public const int IDA_G_START_IT_ACT_FINAL_BOSS = 19;
    public const int IDA_G_START_IT_ACT_ACTNAME_MOVE = 20;
    public const int IDA_G_START_JP_ROOT_NODE_TEX_ACT = 0;
    public const int IDA_G_START_JP_ROOT_NODE_TEX_BOSS = 1;
    public const int IDA_G_START_JP_ROOT_NODE_Z1_ACT1 = 2;
    public const int IDA_G_START_JP_ROOT_NODE_Z1_ACT2 = 3;
    public const int IDA_G_START_JP_ROOT_NODE_Z1_ACT3 = 4;
    public const int IDA_G_START_JP_ROOT_NODE_Z1_BOSS = 5;
    public const int IDA_G_START_JP_ROOT_NODE_Z2_ACT1 = 6;
    public const int IDA_G_START_JP_ROOT_NODE_Z2_ACT2 = 7;
    public const int IDA_G_START_JP_ROOT_NODE_Z2_ACT3 = 8;
    public const int IDA_G_START_JP_ROOT_NODE_Z2_BOSS = 9;
    public const int IDA_G_START_JP_ROOT_NODE_Z3_ACT1 = 10;
    public const int IDA_G_START_JP_ROOT_NODE_Z3_ACT2 = 11;
    public const int IDA_G_START_JP_ROOT_NODE_Z3_ACT3 = 12;
    public const int IDA_G_START_JP_ROOT_NODE_Z3_BOSS = 13;
    public const int IDA_G_START_JP_ROOT_NODE_Z4_ACT1 = 14;
    public const int IDA_G_START_JP_ROOT_NODE_Z4_ACT2 = 15;
    public const int IDA_G_START_JP_ROOT_NODE_Z4_ACT3 = 16;
    public const int IDA_G_START_JP_ROOT_NODE_Z4_BOSS = 17;
    public const int IDA_G_START_JP_ROOT_NODE_FINAL_BOSS = 18;
    public const int IDA_G_START_JP_NODE_TEX_ACT = 0;
    public const int IDA_G_START_JP_NODE_TEX_BOSS = 1;
    public const int IDA_G_START_JP_NODE_Z1_ACT1 = 2;
    public const int IDA_G_START_JP_NODE_Z1_ACT2 = 3;
    public const int IDA_G_START_JP_NODE_Z1_ACT3 = 4;
    public const int IDA_G_START_JP_NODE_Z1_BOSS = 5;
    public const int IDA_G_START_JP_NODE_Z2_ACT1 = 6;
    public const int IDA_G_START_JP_NODE_Z2_ACT2 = 7;
    public const int IDA_G_START_JP_NODE_Z2_ACT3 = 8;
    public const int IDA_G_START_JP_NODE_Z2_BOSS = 9;
    public const int IDA_G_START_JP_NODE_Z3_ACT1 = 10;
    public const int IDA_G_START_JP_NODE_Z3_ACT2 = 11;
    public const int IDA_G_START_JP_NODE_Z3_ACT3 = 12;
    public const int IDA_G_START_JP_NODE_Z3_BOSS = 13;
    public const int IDA_G_START_JP_NODE_Z4_ACT1 = 14;
    public const int IDA_G_START_JP_NODE_Z4_ACT2 = 15;
    public const int IDA_G_START_JP_NODE_Z4_ACT3 = 16;
    public const int IDA_G_START_JP_NODE_Z4_BOSS = 17;
    public const int IDA_G_START_JP_NODE_FINAL_BOSS = 18;
    public const int IDA_G_START_JP_NODE_TEX_ACT_A = 19;
    public const int IDA_G_START_JP_NODE_TEX_BOSS_A = 20;
    public const int IDA_G_START_JP_NODE_Z1_ACT1_A = 21;
    public const int IDA_G_START_JP_NODE_Z1_ACT2_A = 22;
    public const int IDA_G_START_JP_NODE_Z1_ACT3_A = 23;
    public const int IDA_G_START_JP_NODE_Z_1_BOSS_A = 24;
    public const int IDA_G_START_JP_NODE_Z2_ACT1_A = 25;
    public const int IDA_G_START_JP_NODE_Z2_ACT2_A = 26;
    public const int IDA_G_START_JP_NODE_Z2_ACT3_A = 27;
    public const int IDA_G_START_JP_NODE_Z2_BOSS_A = 28;
    public const int IDA_G_START_JP_NODE_Z3_ACT1_A = 29;
    public const int IDA_G_START_JP_NODE_Z3_ACT2_A = 30;
    public const int IDA_G_START_JP_NODE_Z3_ACT3_A = 31;
    public const int IDA_G_START_JP_NODE_Z3_BOSS_A = 32;
    public const int IDA_G_START_JP_NODE_Z4_ACT1_A = 33;
    public const int IDA_G_START_JP_NODE_Z4_ACT_2A = 34;
    public const int IDA_G_START_JP_NODE_Z4_ACT3_A = 35;
    public const int IDA_G_START_JP_NODE_Z4_BOSS_A = 36;
    public const int IDA_G_START_JP_NODE_FINAL_BOSS_A = 37;
    public const int IDA_G_START_JP_ACT_TEX_ACT = 0;
    public const int IDA_G_START_JP_ACT_TEX_BOSS = 1;
    public const int IDA_G_START_JP_ACT_TEX_ACT_MOVE = 2;
    public const int IDA_G_START_JP_ACT_Z1_ACT1 = 3;
    public const int IDA_G_START_JP_ACT_Z1_ACT2 = 4;
    public const int IDA_G_START_JP_ACT_Z1_ACT3 = 5;
    public const int IDA_G_START_JP_ACT_Z1_BOSS = 6;
    public const int IDA_G_START_JP_ACT_Z2_ACT1 = 7;
    public const int IDA_G_START_JP_ACT_Z2_ACT2 = 8;
    public const int IDA_G_START_JP_ACT_Z2_ACT3 = 9;
    public const int IDA_G_START_JP_ACT_Z2_BOSS = 10;
    public const int IDA_G_START_JP_ACT_Z3_ACT1 = 11;
    public const int IDA_G_START_JP_ACT_Z3_ACT2 = 12;
    public const int IDA_G_START_JP_ACT_Z3_ACT3 = 13;
    public const int IDA_G_START_JP_ACT_Z3_BOSS = 14;
    public const int IDA_G_START_JP_ACT_Z4_ACT1 = 15;
    public const int IDA_G_START_JP_ACT_Z4_ACT2 = 16;
    public const int IDA_G_START_JP_ACT_Z4_ACT3 = 17;
    public const int IDA_G_START_JP_ACT_Z4_BOSS = 18;
    public const int IDA_G_START_JP_ACT_FINAL_BOSS = 19;
    public const int IDA_G_START_JP_ACT_ACTNAME_MOVE = 20;
    public const int IDA_G_START_SP_ROOT_NODE_TEX_ACT = 0;
    public const int IDA_G_START_SP_ROOT_NODE_TEX_BOSS = 1;
    public const int IDA_G_START_SP_ROOT_NODE_Z1_ACT1 = 2;
    public const int IDA_G_START_SP_ROOT_NODE_Z1_ACT2 = 3;
    public const int IDA_G_START_SP_ROOT_NODE_Z1_ACT3 = 4;
    public const int IDA_G_START_SP_ROOT_NODE_Z1_BOSS = 5;
    public const int IDA_G_START_SP_ROOT_NODE_Z2_ACT1 = 6;
    public const int IDA_G_START_SP_ROOT_NODE_Z2_ACT2 = 7;
    public const int IDA_G_START_SP_ROOT_NODE_Z2_ACT3 = 8;
    public const int IDA_G_START_SP_ROOT_NODE_Z2_BOSS = 9;
    public const int IDA_G_START_SP_ROOT_NODE_Z3_ACT1 = 10;
    public const int IDA_G_START_SP_ROOT_NODE_Z3_ACT2 = 11;
    public const int IDA_G_START_SP_ROOT_NODE_Z3_ACT3 = 12;
    public const int IDA_G_START_SP_ROOT_NODE_Z3_BOSS = 13;
    public const int IDA_G_START_SP_ROOT_NODE_Z4_ACT1 = 14;
    public const int IDA_G_START_SP_ROOT_NODE_Z4_ACT2 = 15;
    public const int IDA_G_START_SP_ROOT_NODE_Z4_ACT3 = 16;
    public const int IDA_G_START_SP_ROOT_NODE_Z4_BOSS = 17;
    public const int IDA_G_START_SP_ROOT_NODE_FINAL_BOSS = 18;
    public const int IDA_G_START_SP_NODE_TEX_ACT = 0;
    public const int IDA_G_START_SP_NODE_TEX_BOSS = 1;
    public const int IDA_G_START_SP_NODE_Z1_ACT1 = 2;
    public const int IDA_G_START_SP_NODE_Z1_ACT2 = 3;
    public const int IDA_G_START_SP_NODE_Z1_ACT3 = 4;
    public const int IDA_G_START_SP_NODE_Z1_BOSS = 5;
    public const int IDA_G_START_SP_NODE_Z2_ACT1 = 6;
    public const int IDA_G_START_SP_NODE_Z2_ACT2 = 7;
    public const int IDA_G_START_SP_NODE_Z2_ACT3 = 8;
    public const int IDA_G_START_SP_NODE_Z2_BOSS = 9;
    public const int IDA_G_START_SP_NODE_Z3_ACT1 = 10;
    public const int IDA_G_START_SP_NODE_Z3_ACT2 = 11;
    public const int IDA_G_START_SP_NODE_Z3_ACT3 = 12;
    public const int IDA_G_START_SP_NODE_Z3_BOSS = 13;
    public const int IDA_G_START_SP_NODE_Z4_ACT1 = 14;
    public const int IDA_G_START_SP_NODE_Z4_ACT2 = 15;
    public const int IDA_G_START_SP_NODE_Z4_ACT3 = 16;
    public const int IDA_G_START_SP_NODE_Z4_BOSS = 17;
    public const int IDA_G_START_SP_NODE_FINAL_BOSS = 18;
    public const int IDA_G_START_SP_NODE_TEX_ACT_A = 19;
    public const int IDA_G_START_SP_NODE_TEX_BOSS_A = 20;
    public const int IDA_G_START_SP_NODE_Z1_ACT1_A = 21;
    public const int IDA_G_START_SP_NODE_Z1_ACT2_A = 22;
    public const int IDA_G_START_SP_NODE_Z1_ACT3_A = 23;
    public const int IDA_G_START_SP_NODE_Z_1_BOSS_A = 24;
    public const int IDA_G_START_SP_NODE_Z2_ACT1_A = 25;
    public const int IDA_G_START_SP_NODE_Z2_ACT2_A = 26;
    public const int IDA_G_START_SP_NODE_Z2_ACT3_A = 27;
    public const int IDA_G_START_SP_NODE_Z2_BOSS_A = 28;
    public const int IDA_G_START_SP_NODE_Z3_ACT1_A = 29;
    public const int IDA_G_START_SP_NODE_Z3_ACT2_A = 30;
    public const int IDA_G_START_SP_NODE_Z3_ACT3_A = 31;
    public const int IDA_G_START_SP_NODE_Z3_BOSS_A = 32;
    public const int IDA_G_START_SP_NODE_Z4_ACT1_A = 33;
    public const int IDA_G_START_SP_NODE_Z4_ACT_2A = 34;
    public const int IDA_G_START_SP_NODE_Z4_ACT3_A = 35;
    public const int IDA_G_START_SP_NODE_Z4_BOSS_A = 36;
    public const int IDA_G_START_SP_NODE_FINAL_BOSS_A = 37;
    public const int IDA_G_START_SP_ACT_TEX_ACT = 0;
    public const int IDA_G_START_SP_ACT_TEX_BOSS = 1;
    public const int IDA_G_START_SP_ACT_TEX_ACT_MOVE = 2;
    public const int IDA_G_START_SP_ACT_Z1_ACT1 = 3;
    public const int IDA_G_START_SP_ACT_Z1_ACT2 = 4;
    public const int IDA_G_START_SP_ACT_Z1_ACT3 = 5;
    public const int IDA_G_START_SP_ACT_Z1_BOSS = 6;
    public const int IDA_G_START_SP_ACT_Z2_ACT1 = 7;
    public const int IDA_G_START_SP_ACT_Z2_ACT2 = 8;
    public const int IDA_G_START_SP_ACT_Z2_ACT3 = 9;
    public const int IDA_G_START_SP_ACT_Z2_BOSS = 10;
    public const int IDA_G_START_SP_ACT_Z3_ACT1 = 11;
    public const int IDA_G_START_SP_ACT_Z3_ACT2 = 12;
    public const int IDA_G_START_SP_ACT_Z3_ACT3 = 13;
    public const int IDA_G_START_SP_ACT_Z3_BOSS = 14;
    public const int IDA_G_START_SP_ACT_Z4_ACT1 = 15;
    public const int IDA_G_START_SP_ACT_Z4_ACT2 = 16;
    public const int IDA_G_START_SP_ACT_Z4_ACT3 = 17;
    public const int IDA_G_START_SP_ACT_Z4_BOSS = 18;
    public const int IDA_G_START_SP_ACT_FINAL_BOSS = 19;
    public const int IDA_G_START_SP_ACT_ACTNAME_MOVE = 20;
    public const int IDA_G_START_US_ROOT_NODE_TEX_ACT = 0;
    public const int IDA_G_START_US_ROOT_NODE_TEX_BOSS = 1;
    public const int IDA_G_START_US_ROOT_NODE_Z1_ACT1 = 2;
    public const int IDA_G_START_US_ROOT_NODE_Z1_ACT2 = 3;
    public const int IDA_G_START_US_ROOT_NODE_Z1_ACT3 = 4;
    public const int IDA_G_START_US_ROOT_NODE_Z1_BOSS = 5;
    public const int IDA_G_START_US_ROOT_NODE_Z2_ACT1 = 6;
    public const int IDA_G_START_US_ROOT_NODE_Z2_ACT2 = 7;
    public const int IDA_G_START_US_ROOT_NODE_Z2_ACT3 = 8;
    public const int IDA_G_START_US_ROOT_NODE_Z2_BOSS = 9;
    public const int IDA_G_START_US_ROOT_NODE_Z3_ACT1 = 10;
    public const int IDA_G_START_US_ROOT_NODE_Z3_ACT2 = 11;
    public const int IDA_G_START_US_ROOT_NODE_Z3_ACT3 = 12;
    public const int IDA_G_START_US_ROOT_NODE_Z3_BOSS = 13;
    public const int IDA_G_START_US_ROOT_NODE_Z4_ACT1 = 14;
    public const int IDA_G_START_US_ROOT_NODE_Z4_ACT2 = 15;
    public const int IDA_G_START_US_ROOT_NODE_Z4_ACT3 = 16;
    public const int IDA_G_START_US_ROOT_NODE_Z4_BOSS = 17;
    public const int IDA_G_START_US_ROOT_NODE_FINAL_BOSS = 18;
    public const int IDA_G_START_US_NODE_TEX_ACT = 0;
    public const int IDA_G_START_US_NODE_TEX_BOSS = 1;
    public const int IDA_G_START_US_NODE_Z1_ACT1 = 2;
    public const int IDA_G_START_US_NODE_Z1_ACT2 = 3;
    public const int IDA_G_START_US_NODE_Z1_ACT3 = 4;
    public const int IDA_G_START_US_NODE_Z1_BOSS = 5;
    public const int IDA_G_START_US_NODE_Z2_ACT1 = 6;
    public const int IDA_G_START_US_NODE_Z2_ACT2 = 7;
    public const int IDA_G_START_US_NODE_Z2_ACT3 = 8;
    public const int IDA_G_START_US_NODE_Z2_BOSS = 9;
    public const int IDA_G_START_US_NODE_Z3_ACT1 = 10;
    public const int IDA_G_START_US_NODE_Z3_ACT2 = 11;
    public const int IDA_G_START_US_NODE_Z3_ACT3 = 12;
    public const int IDA_G_START_US_NODE_Z3_BOSS = 13;
    public const int IDA_G_START_US_NODE_Z4_ACT1 = 14;
    public const int IDA_G_START_US_NODE_Z4_ACT2 = 15;
    public const int IDA_G_START_US_NODE_Z4_ACT3 = 16;
    public const int IDA_G_START_US_NODE_Z4_BOSS = 17;
    public const int IDA_G_START_US_NODE_FINAL_BOSS = 18;
    public const int IDA_G_START_US_NODE_TEX_ACT_A = 19;
    public const int IDA_G_START_US_NODE_TEX_BOSS_A = 20;
    public const int IDA_G_START_US_NODE_Z1_ACT1_A = 21;
    public const int IDA_G_START_US_NODE_Z1_ACT2_A = 22;
    public const int IDA_G_START_US_NODE_Z1_ACT3_A = 23;
    public const int IDA_G_START_US_NODE_Z_1_BOSS_A = 24;
    public const int IDA_G_START_US_NODE_Z2_ACT1_A = 25;
    public const int IDA_G_START_US_NODE_Z2_ACT2_A = 26;
    public const int IDA_G_START_US_NODE_Z2_ACT3_A = 27;
    public const int IDA_G_START_US_NODE_Z2_BOSS_A = 28;
    public const int IDA_G_START_US_NODE_Z3_ACT1_A = 29;
    public const int IDA_G_START_US_NODE_Z3_ACT2_A = 30;
    public const int IDA_G_START_US_NODE_Z3_ACT3_A = 31;
    public const int IDA_G_START_US_NODE_Z3_BOSS_A = 32;
    public const int IDA_G_START_US_NODE_Z4_ACT1_A = 33;
    public const int IDA_G_START_US_NODE_Z4_ACT_2A = 34;
    public const int IDA_G_START_US_NODE_Z4_ACT3_A = 35;
    public const int IDA_G_START_US_NODE_Z4_BOSS_A = 36;
    public const int IDA_G_START_US_NODE_FINAL_BOSS_A = 37;
    public const int IDA_G_START_US_ACT_TEX_ACT = 0;
    public const int IDA_G_START_US_ACT_TEX_BOSS = 1;
    public const int IDA_G_START_US_ACT_TEX_ACT_MOVE = 2;
    public const int IDA_G_START_US_ACT_Z1_ACT1 = 3;
    public const int IDA_G_START_US_ACT_Z1_ACT2 = 4;
    public const int IDA_G_START_US_ACT_Z1_ACT3 = 5;
    public const int IDA_G_START_US_ACT_Z1_BOSS = 6;
    public const int IDA_G_START_US_ACT_Z2_ACT1 = 7;
    public const int IDA_G_START_US_ACT_Z2_ACT2 = 8;
    public const int IDA_G_START_US_ACT_Z2_ACT3 = 9;
    public const int IDA_G_START_US_ACT_Z2_BOSS = 10;
    public const int IDA_G_START_US_ACT_Z3_ACT1 = 11;
    public const int IDA_G_START_US_ACT_Z3_ACT2 = 12;
    public const int IDA_G_START_US_ACT_Z3_ACT3 = 13;
    public const int IDA_G_START_US_ACT_Z3_BOSS = 14;
    public const int IDA_G_START_US_ACT_Z4_ACT1 = 15;
    public const int IDA_G_START_US_ACT_Z4_ACT2 = 16;
    public const int IDA_G_START_US_ACT_Z4_ACT3 = 17;
    public const int IDA_G_START_US_ACT_Z4_BOSS = 18;
    public const int IDA_G_START_US_ACT_FINAL_BOSS = 19;
    public const int IDA_G_START_US_ACT_ACTNAME_MOVE = 20;
    public const int IDA_SPST_ACT_1 = 0;
    public const int IDA_SPST_ACT_2 = 1;
    public const int IDA_SPST_ACT_3 = 2;
    public const int IDA_SPST_ACT_4 = 3;
    public const int IDA_SPST_ACT_5 = 4;
    public const int IDA_SPST_ACT_6 = 5;
    public const int IDA_SPST_ACT_7 = 6;
    public const int IDA_SPST_FR_ACT_TEX_TIME = 0;
    public const int IDA_SPST_GE_ACT_TEX_TIME = 0;
    public const int IDA_SPST_IT_ACT_TEX_TIME = 0;
    public const int IDA_SPST_JP_ACT_TEX_TIME = 0;
    public const int IDA_SPST_SP_ACT_TEX_TIME = 0;
    public const int IDA_SPST_US_ACT_TEX_TIME = 0;
    public const int IDA_SPST_FI_ACT_TEX_TIME = 0;
    public const int IDA_SPST_PT_ACT_TEX_TIME = 0;
    public const int IDA_SPST_RU_ACT_TEX_TIME = 0;
    public const int IDA_SPST_CN_ACT_TEX_TIME = 0;
    public const int IDA_SPST_HK_ACT_TEX_TIME = 0;
    public const int IDB_BOSS01_BOSS01_MDL_AMB = 0;
    public const int IDB_BOSS01_BOSS01_TEX_AMB = 1;
    public const int IDB_BOSS01_BOSS01_BODY_MTN_AMB = 2;
    public const int IDB_BOSS01_BOSS01_CHAIN_MTN_AMB = 3;
    public const int IDB_BOSS01_BOSS01_EGG_MTN_AMB = 4;
    public const int IDB_BOSS01_EFF_BOSSZ1_00_AME = 5;
    public const int IDB_BOSS01_EFF_BOSSZ1_01_AME = 6;
    public const int IDB_BOSS01_EFF_BOSSZ1_02_AME = 7;
    public const int IDB_BOSS01_EFF_BS1_TEX_AMB = 8;
    public const int IDU0_BOSS01_BOSS01_MDL_AMB = 0;
    public const int IDU0_BOSS01_BOSS01_TEX_AMB = 0;
    public const int IDU0_BOSS01_BOSS01_BODY_MTN_AMB = 0;
    public const int IDU0_BOSS01_BOSS01_CHAIN_MTN_AMB = 0;
    public const int IDU0_BOSS01_BOSS01_EGG_MTN_AMB = 0;
    public const int IDU0_BOSS01_EFF_BOSSZ1_00_AME = 0;
    public const int IDU0_BOSS01_EFF_BOSSZ1_01_AME = 0;
    public const int IDU0_BOSS01_EFF_BOSSZ1_02_AME = 0;
    public const int IDU0_BOSS01_EFF_BS1_TEX_AMB = 0;
    public const int IDU1_BOSS01_BOSS01_MDL_AMB = 0;
    public const int IDU1_BOSS01_BOSS01_TEX_AMB = 0;
    public const int IDU1_BOSS01_BOSS01_BODY_MTN_AMB = 0;
    public const int IDU1_BOSS01_BOSS01_CHAIN_MTN_AMB = 0;
    public const int IDU1_BOSS01_BOSS01_EGG_MTN_AMB = 0;
    public const int IDU1_BOSS01_EFF_BOSSZ1_00_AME = 0;
    public const int IDU1_BOSS01_EFF_BOSSZ1_01_AME = 0;
    public const int IDU1_BOSS01_EFF_BOSSZ1_02_AME = 0;
    public const int IDU1_BOSS01_EFF_BS1_TEX_AMB = 0;
    public const string IDS_BOSS01_BOSS01_MDL_AMB = "BOSS01_MDL.AMB";
    public const string IDS_BOSS01_BOSS01_TEX_AMB = "BOSS01_TEX.AMB";
    public const string IDS_BOSS01_BOSS01_BODY_MTN_AMB = "BOSS01_BODY_MTN.AMB";
    public const string IDS_BOSS01_BOSS01_CHAIN_MTN_AMB = "BOSS01_CHAIN_MTN.AMB";
    public const string IDS_BOSS01_BOSS01_EGG_MTN_AMB = "BOSS01_EGG_MTN.AMB";
    public const string IDS_BOSS01_EFF_BOSSZ1_00_AME = "EFF_BOSSZ1_00.AME";
    public const string IDS_BOSS01_EFF_BOSSZ1_01_AME = "EFF_BOSSZ1_01.AME";
    public const string IDS_BOSS01_EFF_BOSSZ1_02_AME = "EFF_BOSSZ1_02.AME";
    public const string IDS_BOSS01_EFF_BS1_TEX_AMB = "EFF_BS1_TEX.AMB";
    public const int IDB_BOSS02_BOSS02_MDL_AMB = 0;
    public const int IDB_BOSS02_BOSS02_TEX_AMB = 1;
    public const int IDB_BOSS02_BOSS02_BODY_MTN_AMB = 2;
    public const int IDB_BOSS02_BOSS02_BODY_MAT_AMB = 3;
    public const int IDB_BOSS02_BOSS02_EGG_MTN_AMB = 4;
    public const int IDB_BOSS02_ROLL_ZNO = 5;
    public const int IDB_BOSS02_EFF_BLITZ_CORA_AME = 6;
    public const int IDB_BOSS02_EFF_BLITZ_AME = 7;
    public const int IDB_BOSS02_EFF_BLITZ_ARM_AME = 8;
    public const int IDB_BOSS02_EFF_BLITZ_BALL_AME = 9;
    public const int IDB_BOSS02_EFF_BALL_AME = 10;
    public const int IDB_BOSS02_EFF_ROLLATTACK01_AME = 11;
    public const int IDB_BOSS02_EFF_ROLLATTACK02_AME = 12;
    public const int IDB_BOSS02_EFF_ROLLATTACK03_AME = 13;
    public const int IDB_BOSS02_EFF_BS2_TEX_AMB = 14;
    public const int IDB_BOSS02_EFF_BS2_TEX_MD_RO_AMB = 15;
    public const int IDU0_BOSS02_BOSS02_MDL_AMB = 0;
    public const int IDU0_BOSS02_BOSS02_TEX_AMB = 0;
    public const int IDU0_BOSS02_BOSS02_BODY_MTN_AMB = 0;
    public const int IDU0_BOSS02_BOSS02_BODY_MAT_AMB = 0;
    public const int IDU0_BOSS02_BOSS02_EGG_MTN_AMB = 0;
    public const int IDU0_BOSS02_ROLL_ZNO = 0;
    public const int IDU0_BOSS02_EFF_BLITZ_CORA_AME = 0;
    public const int IDU0_BOSS02_EFF_BLITZ_AME = 0;
    public const int IDU0_BOSS02_EFF_BLITZ_ARM_AME = 0;
    public const int IDU0_BOSS02_EFF_BLITZ_BALL_AME = 0;
    public const int IDU0_BOSS02_EFF_BALL_AME = 0;
    public const int IDU0_BOSS02_EFF_ROLLATTACK01_AME = 0;
    public const int IDU0_BOSS02_EFF_ROLLATTACK02_AME = 0;
    public const int IDU0_BOSS02_EFF_ROLLATTACK03_AME = 0;
    public const int IDU0_BOSS02_EFF_BS2_TEX_AMB = 0;
    public const int IDU0_BOSS02_EFF_BS2_TEX_MD_RO_AMB = 0;
    public const int IDU1_BOSS02_BOSS02_MDL_AMB = 0;
    public const int IDU1_BOSS02_BOSS02_TEX_AMB = 0;
    public const int IDU1_BOSS02_BOSS02_BODY_MTN_AMB = 0;
    public const int IDU1_BOSS02_BOSS02_BODY_MAT_AMB = 0;
    public const int IDU1_BOSS02_BOSS02_EGG_MTN_AMB = 0;
    public const int IDU1_BOSS02_ROLL_ZNO = 0;
    public const int IDU1_BOSS02_EFF_BLITZ_CORA_AME = 0;
    public const int IDU1_BOSS02_EFF_BLITZ_AME = 0;
    public const int IDU1_BOSS02_EFF_BLITZ_ARM_AME = 0;
    public const int IDU1_BOSS02_EFF_BLITZ_BALL_AME = 0;
    public const int IDU1_BOSS02_EFF_BALL_AME = 0;
    public const int IDU1_BOSS02_EFF_ROLLATTACK01_AME = 0;
    public const int IDU1_BOSS02_EFF_ROLLATTACK02_AME = 0;
    public const int IDU1_BOSS02_EFF_ROLLATTACK03_AME = 0;
    public const int IDU1_BOSS02_EFF_BS2_TEX_AMB = 0;
    public const int IDU1_BOSS02_EFF_BS2_TEX_MD_RO_AMB = 0;
    public const string IDS_BOSS02_BOSS02_MDL_AMB = "BOSS02_MDL.AMB";
    public const string IDS_BOSS02_BOSS02_TEX_AMB = "BOSS02_TEX.AMB";
    public const string IDS_BOSS02_BOSS02_BODY_MTN_AMB = "BOSS02_BODY_MTN.AMB";
    public const string IDS_BOSS02_BOSS02_BODY_MAT_AMB = "BOSS02_BODY_MAT.AMB";
    public const string IDS_BOSS02_BOSS02_EGG_MTN_AMB = "BOSS02_EGG_MTN.AMB";
    public const string IDS_BOSS02_ROLL_ZNO = "ROLL.ZNO";
    public const string IDS_BOSS02_EFF_BLITZ_CORA_AME = "EFF_BLITZ_CORA.AME";
    public const string IDS_BOSS02_EFF_BLITZ_AME = "EFF_BLITZ.AME";
    public const string IDS_BOSS02_EFF_BLITZ_ARM_AME = "EFF_BLITZ_ARM.AME";
    public const string IDS_BOSS02_EFF_BLITZ_BALL_AME = "EFF_BLITZ_BALL.AME";
    public const string IDS_BOSS02_EFF_BALL_AME = "EFF_BALL.AME";
    public const string IDS_BOSS02_EFF_ROLLATTACK01_AME = "EFF_ROLLATTACK01.AME";
    public const string IDS_BOSS02_EFF_ROLLATTACK02_AME = "EFF_ROLLATTACK02.AME";
    public const string IDS_BOSS02_EFF_ROLLATTACK03_AME = "EFF_ROLLATTACK03.AME";
    public const string IDS_BOSS02_EFF_BS2_TEX_AMB = "EFF_BS2_TEX.AMB";
    public const string IDS_BOSS02_EFF_BS2_TEX_MD_RO_AMB = "EFF_BS2_TEX_MD_RO.AMB";
    public const int IDB_BOSS03_BOSS03_MDL_AMB = 0;
    public const int IDB_BOSS03_BOSS03_TEX_AMB = 1;
    public const int IDB_BOSS03_BOSS03_BODY_MTN_AMB = 2;
    public const int IDB_BOSS03_BOSS03_EGG_MTN_AMB = 3;
    public const int IDU0_BOSS03_BOSS03_MDL_AMB = 0;
    public const int IDU0_BOSS03_BOSS03_TEX_AMB = 0;
    public const int IDU0_BOSS03_BOSS03_BODY_MTN_AMB = 0;
    public const int IDU0_BOSS03_BOSS03_EGG_MTN_AMB = 0;
    public const int IDU1_BOSS03_BOSS03_MDL_AMB = 0;
    public const int IDU1_BOSS03_BOSS03_TEX_AMB = 0;
    public const int IDU1_BOSS03_BOSS03_BODY_MTN_AMB = 0;
    public const int IDU1_BOSS03_BOSS03_EGG_MTN_AMB = 0;
    public const string IDS_BOSS03_BOSS03_MDL_AMB = "BOSS03_MDL.AMB";
    public const string IDS_BOSS03_BOSS03_TEX_AMB = "BOSS03_TEX.AMB";
    public const string IDS_BOSS03_BOSS03_BODY_MTN_AMB = "BOSS03_BODY_MTN.AMB";
    public const string IDS_BOSS03_BOSS03_EGG_MTN_AMB = "BOSS03_EGG_MTN.AMB";
    public const int IDB_BOSS04_BOSS04_MDL_AMB = 0;
    public const int IDB_BOSS04_BOSS04_TEX_AMB = 1;
    public const int IDB_BOSS04_BOSS04_BODY_MTN_AMB = 2;
    public const int IDB_BOSS04_BOSS04_EGG_MTN_AMB = 3;
    public const int IDB_BOSS04_BOSS04_CAPSULE_MTN_AMB = 4;
    public const int IDB_BOSS04_EFF_BOMB_CP_AME = 5;
    public const int IDB_BOSS04_EFF_BALLOON_R_AME = 6;
    public const int IDB_BOSS04_EFF_BALLOON_B_AME = 7;
    public const int IDB_BOSS04_EFF_BALLOON_Y_AME = 8;
    public const int IDB_BOSS04_EFF_JET_BALL_01_AME = 9;
    public const int IDB_BOSS04_EFF_JET_BALL_02_AME = 10;
    public const int IDB_BOSS04_EFF_JET_Z4_AME = 11;
    public const int IDB_BOSS04_EFF_JET_Z4_02_AME = 12;
    public const int IDB_BOSS04_EFF_PARTS_AME = 13;
    public const int IDB_BOSS04_EFF_BOSS_LIGHT_AME = 14;
    public const int IDB_BOSS04_EFF_BS4_TEX_AMB = 15;
    public const int IDU0_BOSS04_BOSS04_MDL_AMB = 0;
    public const int IDU0_BOSS04_BOSS04_TEX_AMB = 0;
    public const int IDU0_BOSS04_BOSS04_BODY_MTN_AMB = 0;
    public const int IDU0_BOSS04_BOSS04_EGG_MTN_AMB = 0;
    public const int IDU0_BOSS04_BOSS04_CAPSULE_MTN_AMB = 0;
    public const int IDU0_BOSS04_EFF_BOMB_CP_AME = 0;
    public const int IDU0_BOSS04_EFF_BALLOON_R_AME = 0;
    public const int IDU0_BOSS04_EFF_BALLOON_B_AME = 0;
    public const int IDU0_BOSS04_EFF_BALLOON_Y_AME = 0;
    public const int IDU0_BOSS04_EFF_JET_BALL_01_AME = 0;
    public const int IDU0_BOSS04_EFF_JET_BALL_02_AME = 0;
    public const int IDU0_BOSS04_EFF_JET_Z4_AME = 0;
    public const int IDU0_BOSS04_EFF_JET_Z4_02_AME = 0;
    public const int IDU0_BOSS04_EFF_PARTS_AME = 0;
    public const int IDU0_BOSS04_EFF_BOSS_LIGHT_AME = 0;
    public const int IDU0_BOSS04_EFF_BS4_TEX_AMB = 0;
    public const int IDU1_BOSS04_BOSS04_MDL_AMB = 0;
    public const int IDU1_BOSS04_BOSS04_TEX_AMB = 0;
    public const int IDU1_BOSS04_BOSS04_BODY_MTN_AMB = 0;
    public const int IDU1_BOSS04_BOSS04_EGG_MTN_AMB = 0;
    public const int IDU1_BOSS04_BOSS04_CAPSULE_MTN_AMB = 0;
    public const int IDU1_BOSS04_EFF_BOMB_CP_AME = 0;
    public const int IDU1_BOSS04_EFF_BALLOON_R_AME = 0;
    public const int IDU1_BOSS04_EFF_BALLOON_B_AME = 0;
    public const int IDU1_BOSS04_EFF_BALLOON_Y_AME = 0;
    public const int IDU1_BOSS04_EFF_JET_BALL_01_AME = 0;
    public const int IDU1_BOSS04_EFF_JET_BALL_02_AME = 0;
    public const int IDU1_BOSS04_EFF_JET_Z4_AME = 0;
    public const int IDU1_BOSS04_EFF_JET_Z4_02_AME = 0;
    public const int IDU1_BOSS04_EFF_PARTS_AME = 0;
    public const int IDU1_BOSS04_EFF_BOSS_LIGHT_AME = 0;
    public const int IDU1_BOSS04_EFF_BS4_TEX_AMB = 0;
    public const string IDS_BOSS04_BOSS04_MDL_AMB = "BOSS04_MDL.AMB";
    public const string IDS_BOSS04_BOSS04_TEX_AMB = "BOSS04_TEX.AMB";
    public const string IDS_BOSS04_BOSS04_BODY_MTN_AMB = "BOSS04_BODY_MTN.AMB";
    public const string IDS_BOSS04_BOSS04_EGG_MTN_AMB = "BOSS04_EGG_MTN.AMB";
    public const string IDS_BOSS04_BOSS04_CAPSULE_MTN_AMB = "BOSS04_CAPSULE_MTN.AMB";
    public const string IDS_BOSS04_EFF_BOMB_CP_AME = "EFF_BOMB_CP.AME";
    public const string IDS_BOSS04_EFF_BALLOON_R_AME = "EFF_BALLOON_R.AME";
    public const string IDS_BOSS04_EFF_BALLOON_B_AME = "EFF_BALLOON_B.AME";
    public const string IDS_BOSS04_EFF_BALLOON_Y_AME = "EFF_BALLOON_Y.AME";
    public const string IDS_BOSS04_EFF_JET_BALL_01_AME = "EFF_JET_BALL_01.AME";
    public const string IDS_BOSS04_EFF_JET_BALL_02_AME = "EFF_JET_BALL_02.AME";
    public const string IDS_BOSS04_EFF_JET_Z4_AME = "EFF_JET_Z4.AME";
    public const string IDS_BOSS04_EFF_JET_Z4_02_AME = "EFF_JET_Z4_02.AME";
    public const string IDS_BOSS04_EFF_PARTS_AME = "EFF_PARTS.AME";
    public const string IDS_BOSS04_EFF_BOSS_LIGHT_AME = "EFF_BOSS_LIGHT.AME";
    public const string IDS_BOSS04_EFF_BS4_TEX_AMB = "EFF_BS4_TEX.AMB";
    public const int IDB_BOSS05_BOSS05_MDL_AMB = 0;
    public const int IDB_BOSS05_BOSS05_TEX_AMB = 1;
    public const int IDB_BOSS05_BOSS05_BODY_MTN_AMB = 2;
    public const int IDB_BOSS05_BOSS05_CTPLT_MTN_AMB = 3;
    public const int IDB_BOSS05_BOSS05_EGG_MTN_AMB = 4;
    public const int IDB_BOSS05_BOSS05_LAND01_MTN_AMB = 5;
    public const int IDB_BOSS05_BOSS05_LAND02_MTN_AMB = 6;
    public const int IDB_BOSS05_BOSS05_LAND03_MTN_AMB = 7;
    public const int IDB_BOSS05_BOSS05_ROCKET_MTN_AMB = 8;
    public const int IDB_BOSS05_EFF_JET_ZNO = 9;
    public const int IDB_BOSS05_EFF_THUNDER_1_ZNO = 10;
    public const int IDB_BOSS05_EFF_BLITZ_FB_00_AME = 11;
    public const int IDB_BOSS05_EFF_BLITZ_FB_01_AME = 12;
    public const int IDB_BOSS05_EFF_BLITZ_FB_02_AME = 13;
    public const int IDB_BOSS05_EFF_BLITZ_FB_03_AME = 14;
    public const int IDB_BOSS05_EFF_BLITZ_FB_C_00_AME = 15;
    public const int IDB_BOSS05_EFF_BLITZ_FB_C_01_AME = 16;
    public const int IDB_BOSS05_EFF_BLITZ_FB_C_02_AME = 17;
    public const int IDB_BOSS05_EFF_BLITZ_FB_START_AME = 18;
    public const int IDB_BOSS05_EFF_FB_SMORK00_AME = 19;
    public const int IDB_BOSS05_EFF_FB_SMORK01_AME = 20;
    public const int IDB_BOSS05_EFF_FB_SMORK02_AME = 21;
    public const int IDB_BOSS05_EFF_GLASS_AME = 22;
    public const int IDB_BOSS05_EFF_JET_FB_AME = 23;
    public const int IDB_BOSS05_EFF_JET_FB_SMORK_AME = 24;
    public const int IDB_BOSS05_EFF_ROCKET_BLITZ_AME = 25;
    public const int IDB_BOSS05_EFF_ROCKET_E_AME = 26;
    public const int IDB_BOSS05_EFF_ROCKET_JET_AME = 27;
    public const int IDB_BOSS05_EFF_ROCKET_S_AME = 28;
    public const int IDB_BOSS05_EFF_ROCKET_SMORK_AME = 29;
    public const int IDB_BOSS05_EFF_SHOCK_AME = 30;
    public const int IDB_BOSS05_EFF_SHOCK_ATK_AME = 31;
    public const int IDB_BOSS05_EFF_TARGET_FB_AME = 32;
    public const int IDB_BOSS05_EFF_TARGET_FB_E_AME = 33;
    public const int IDB_BOSS05_EFF_TARGET_FB_S_AME = 34;
    public const int IDB_BOSS05_EFF_TARGET_FB_W_AME = 35;
    public const int IDB_BOSS05_EFF_TARGET_FB_W_E_AME = 36;
    public const int IDB_BOSS05_EFF_TARGET_FB_W_S_AME = 37;
    public const int IDB_BOSS05_EFF_BSF_TEX_AMB = 38;
    public const int IDB_BOSS05_EFF_BSF_TEX_MD_JT_AMB = 39;
    public const int IDB_BOSS05_EFF_BSF_TEX_TH_AMB = 40;
    public const int IDU0_BOSS05_BOSS05_MDL_AMB = 0;
    public const int IDU0_BOSS05_BOSS05_TEX_AMB = 0;
    public const int IDU0_BOSS05_BOSS05_BODY_MTN_AMB = 0;
    public const int IDU0_BOSS05_BOSS05_CTPLT_MTN_AMB = 0;
    public const int IDU0_BOSS05_BOSS05_EGG_MTN_AMB = 0;
    public const int IDU0_BOSS05_BOSS05_LAND01_MTN_AMB = 0;
    public const int IDU0_BOSS05_BOSS05_LAND02_MTN_AMB = 0;
    public const int IDU0_BOSS05_BOSS05_LAND03_MTN_AMB = 0;
    public const int IDU0_BOSS05_BOSS05_ROCKET_MTN_AMB = 0;
    public const int IDU0_BOSS05_EFF_JET_ZNO = 0;
    public const int IDU0_BOSS05_EFF_THUNDER_1_ZNO = 0;
    public const int IDU0_BOSS05_EFF_BLITZ_FB_00_AME = 0;
    public const int IDU0_BOSS05_EFF_BLITZ_FB_01_AME = 0;
    public const int IDU0_BOSS05_EFF_BLITZ_FB_02_AME = 0;
    public const int IDU0_BOSS05_EFF_BLITZ_FB_03_AME = 0;
    public const int IDU0_BOSS05_EFF_BLITZ_FB_C_00_AME = 0;
    public const int IDU0_BOSS05_EFF_BLITZ_FB_C_01_AME = 0;
    public const int IDU0_BOSS05_EFF_BLITZ_FB_C_02_AME = 0;
    public const int IDU0_BOSS05_EFF_BLITZ_FB_START_AME = 0;
    public const int IDU0_BOSS05_EFF_FB_SMORK00_AME = 0;
    public const int IDU0_BOSS05_EFF_FB_SMORK01_AME = 0;
    public const int IDU0_BOSS05_EFF_FB_SMORK02_AME = 0;
    public const int IDU0_BOSS05_EFF_GLASS_AME = 0;
    public const int IDU0_BOSS05_EFF_JET_FB_AME = 0;
    public const int IDU0_BOSS05_EFF_JET_FB_SMORK_AME = 0;
    public const int IDU0_BOSS05_EFF_ROCKET_BLITZ_AME = 0;
    public const int IDU0_BOSS05_EFF_ROCKET_E_AME = 0;
    public const int IDU0_BOSS05_EFF_ROCKET_JET_AME = 0;
    public const int IDU0_BOSS05_EFF_ROCKET_S_AME = 0;
    public const int IDU0_BOSS05_EFF_ROCKET_SMORK_AME = 0;
    public const int IDU0_BOSS05_EFF_SHOCK_AME = 0;
    public const int IDU0_BOSS05_EFF_SHOCK_ATK_AME = 0;
    public const int IDU0_BOSS05_EFF_TARGET_FB_AME = 0;
    public const int IDU0_BOSS05_EFF_TARGET_FB_E_AME = 0;
    public const int IDU0_BOSS05_EFF_TARGET_FB_S_AME = 0;
    public const int IDU0_BOSS05_EFF_TARGET_FB_W_AME = 0;
    public const int IDU0_BOSS05_EFF_TARGET_FB_W_E_AME = 0;
    public const int IDU0_BOSS05_EFF_TARGET_FB_W_S_AME = 0;
    public const int IDU0_BOSS05_EFF_BSF_TEX_AMB = 0;
    public const int IDU0_BOSS05_EFF_BSF_TEX_MD_JT_AMB = 0;
    public const int IDU0_BOSS05_EFF_BSF_TEX_TH_AMB = 0;
    public const int IDU1_BOSS05_BOSS05_MDL_AMB = 0;
    public const int IDU1_BOSS05_BOSS05_TEX_AMB = 0;
    public const int IDU1_BOSS05_BOSS05_BODY_MTN_AMB = 0;
    public const int IDU1_BOSS05_BOSS05_CTPLT_MTN_AMB = 0;
    public const int IDU1_BOSS05_BOSS05_EGG_MTN_AMB = 0;
    public const int IDU1_BOSS05_BOSS05_LAND01_MTN_AMB = 0;
    public const int IDU1_BOSS05_BOSS05_LAND02_MTN_AMB = 0;
    public const int IDU1_BOSS05_BOSS05_LAND03_MTN_AMB = 0;
    public const int IDU1_BOSS05_BOSS05_ROCKET_MTN_AMB = 0;
    public const int IDU1_BOSS05_EFF_JET_ZNO = 0;
    public const int IDU1_BOSS05_EFF_THUNDER_1_ZNO = 0;
    public const int IDU1_BOSS05_EFF_BLITZ_FB_00_AME = 0;
    public const int IDU1_BOSS05_EFF_BLITZ_FB_01_AME = 0;
    public const int IDU1_BOSS05_EFF_BLITZ_FB_02_AME = 0;
    public const int IDU1_BOSS05_EFF_BLITZ_FB_03_AME = 0;
    public const int IDU1_BOSS05_EFF_BLITZ_FB_C_00_AME = 0;
    public const int IDU1_BOSS05_EFF_BLITZ_FB_C_01_AME = 0;
    public const int IDU1_BOSS05_EFF_BLITZ_FB_C_02_AME = 0;
    public const int IDU1_BOSS05_EFF_BLITZ_FB_START_AME = 0;
    public const int IDU1_BOSS05_EFF_FB_SMORK00_AME = 0;
    public const int IDU1_BOSS05_EFF_FB_SMORK01_AME = 0;
    public const int IDU1_BOSS05_EFF_FB_SMORK02_AME = 0;
    public const int IDU1_BOSS05_EFF_GLASS_AME = 0;
    public const int IDU1_BOSS05_EFF_JET_FB_AME = 0;
    public const int IDU1_BOSS05_EFF_JET_FB_SMORK_AME = 0;
    public const int IDU1_BOSS05_EFF_ROCKET_BLITZ_AME = 0;
    public const int IDU1_BOSS05_EFF_ROCKET_E_AME = 0;
    public const int IDU1_BOSS05_EFF_ROCKET_JET_AME = 0;
    public const int IDU1_BOSS05_EFF_ROCKET_S_AME = 0;
    public const int IDU1_BOSS05_EFF_ROCKET_SMORK_AME = 0;
    public const int IDU1_BOSS05_EFF_SHOCK_AME = 0;
    public const int IDU1_BOSS05_EFF_SHOCK_ATK_AME = 0;
    public const int IDU1_BOSS05_EFF_TARGET_FB_AME = 0;
    public const int IDU1_BOSS05_EFF_TARGET_FB_E_AME = 0;
    public const int IDU1_BOSS05_EFF_TARGET_FB_S_AME = 0;
    public const int IDU1_BOSS05_EFF_TARGET_FB_W_AME = 0;
    public const int IDU1_BOSS05_EFF_TARGET_FB_W_E_AME = 0;
    public const int IDU1_BOSS05_EFF_TARGET_FB_W_S_AME = 0;
    public const int IDU1_BOSS05_EFF_BSF_TEX_AMB = 0;
    public const int IDU1_BOSS05_EFF_BSF_TEX_MD_JT_AMB = 0;
    public const int IDU1_BOSS05_EFF_BSF_TEX_TH_AMB = 0;
    public const string IDS_BOSS05_BOSS05_MDL_AMB = "BOSS05_MDL.AMB";
    public const string IDS_BOSS05_BOSS05_TEX_AMB = "BOSS05_TEX.AMB";
    public const string IDS_BOSS05_BOSS05_BODY_MTN_AMB = "BOSS05_BODY_MTN.AMB";
    public const string IDS_BOSS05_BOSS05_CTPLT_MTN_AMB = "BOSS05_CTPLT_MTN.AMB";
    public const string IDS_BOSS05_BOSS05_EGG_MTN_AMB = "BOSS05_EGG_MTN.AMB";
    public const string IDS_BOSS05_BOSS05_LAND01_MTN_AMB = "BOSS05_LAND01_MTN.AMB";
    public const string IDS_BOSS05_BOSS05_LAND02_MTN_AMB = "BOSS05_LAND02_MTN.AMB";
    public const string IDS_BOSS05_BOSS05_LAND03_MTN_AMB = "BOSS05_LAND03_MTN.AMB";
    public const string IDS_BOSS05_BOSS05_ROCKET_MTN_AMB = "BOSS05_ROCKET_MTN.AMB";
    public const string IDS_BOSS05_EFF_JET_ZNO = "EFF_JET.ZNO";
    public const string IDS_BOSS05_EFF_THUNDER_1_ZNO = "EFF_THUNDER_1.ZNO";
    public const string IDS_BOSS05_EFF_BLITZ_FB_00_AME = "EFF_BLITZ_FB_00.AME";
    public const string IDS_BOSS05_EFF_BLITZ_FB_01_AME = "EFF_BLITZ_FB_01.AME";
    public const string IDS_BOSS05_EFF_BLITZ_FB_02_AME = "EFF_BLITZ_FB_02.AME";
    public const string IDS_BOSS05_EFF_BLITZ_FB_03_AME = "EFF_BLITZ_FB_03.AME";
    public const string IDS_BOSS05_EFF_BLITZ_FB_C_00_AME = "EFF_BLITZ_FB_C_00.AME";
    public const string IDS_BOSS05_EFF_BLITZ_FB_C_01_AME = "EFF_BLITZ_FB_C_01.AME";
    public const string IDS_BOSS05_EFF_BLITZ_FB_C_02_AME = "EFF_BLITZ_FB_C_02.AME";
    public const string IDS_BOSS05_EFF_BLITZ_FB_START_AME = "EFF_BLITZ_FB_START.AME";
    public const string IDS_BOSS05_EFF_FB_SMORK00_AME = "EFF_FB_SMORK00.AME";
    public const string IDS_BOSS05_EFF_FB_SMORK01_AME = "EFF_FB_SMORK01.AME";
    public const string IDS_BOSS05_EFF_FB_SMORK02_AME = "EFF_FB_SMORK02.AME";
    public const string IDS_BOSS05_EFF_GLASS_AME = "EFF_GLASS.AME";
    public const string IDS_BOSS05_EFF_JET_FB_AME = "EFF_JET_FB.AME";
    public const string IDS_BOSS05_EFF_JET_FB_SMORK_AME = "EFF_JET_FB_SMORK.AME";
    public const string IDS_BOSS05_EFF_ROCKET_BLITZ_AME = "EFF_ROCKET_BLITZ.AME";
    public const string IDS_BOSS05_EFF_ROCKET_E_AME = "EFF_ROCKET_E.AME";
    public const string IDS_BOSS05_EFF_ROCKET_JET_AME = "EFF_ROCKET_JET.AME";
    public const string IDS_BOSS05_EFF_ROCKET_S_AME = "EFF_ROCKET_S.AME";
    public const string IDS_BOSS05_EFF_ROCKET_SMORK_AME = "EFF_ROCKET_SMORK.AME";
    public const string IDS_BOSS05_EFF_SHOCK_AME = "EFF_SHOCK.AME";
    public const string IDS_BOSS05_EFF_SHOCK_ATK_AME = "EFF_SHOCK_ATK.AME";
    public const string IDS_BOSS05_EFF_TARGET_FB_AME = "EFF_TARGET_FB.AME";
    public const string IDS_BOSS05_EFF_TARGET_FB_E_AME = "EFF_TARGET_FB_E.AME";
    public const string IDS_BOSS05_EFF_TARGET_FB_S_AME = "EFF_TARGET_FB_S.AME";
    public const string IDS_BOSS05_EFF_TARGET_FB_W_AME = "EFF_TARGET_FB_W.AME";
    public const string IDS_BOSS05_EFF_TARGET_FB_W_E_AME = "EFF_TARGET_FB_W_E.AME";
    public const string IDS_BOSS05_EFF_TARGET_FB_W_S_AME = "EFF_TARGET_FB_W_S.AME";
    public const string IDS_BOSS05_EFF_BSF_TEX_AMB = "EFF_BSF_TEX.AMB";
    public const string IDS_BOSS05_EFF_BSF_TEX_MD_JT_AMB = "EFF_BSF_TEX_MD_JT.AMB";
    public const string IDS_BOSS05_EFF_BSF_TEX_TH_AMB = "EFF_BSF_TEX_TH.AMB";
    public const int IDB_CPIT_MAIN_G_FIX_AMA = 0;
    public const int IDB_CPIT_MAIN_G_FIX_AMB = 1;
    public const int IDB_CPIT_MAIN_SPST_AMA = 2;
    public const int IDB_CPIT_MAIN_SPST_AMB = 3;
    public const int IDB_CPIT_MAIN_SPST_FR_AMA = 4;
    public const int IDB_CPIT_MAIN_SPST_FR_AMB = 5;
    public const int IDB_CPIT_MAIN_SPST_GE_AMA = 6;
    public const int IDB_CPIT_MAIN_SPST_GE_AMB = 7;
    public const int IDB_CPIT_MAIN_SPST_IT_AMA = 8;
    public const int IDB_CPIT_MAIN_SPST_IT_AMB = 9;
    public const int IDB_CPIT_MAIN_SPST_JP_AMA = 10;
    public const int IDB_CPIT_MAIN_SPST_JP_AMB = 11;
    public const int IDB_CPIT_MAIN_SPST_SP_AMA = 12;
    public const int IDB_CPIT_MAIN_SPST_SP_AMB = 13;
    public const int IDB_CPIT_MAIN_SPST_US_AMA = 14;
    public const int IDB_CPIT_MAIN_SPST_US_AMB = 15;
    public const int IDB_CPIT_MAIN_G_OVER_AMA = 16;
    public const int IDB_CPIT_MAIN_G_OVER_AMB = 17;
    public const int IDB_CPIT_MAIN_G_OVER_FR_AMA = 18;
    public const int IDB_CPIT_MAIN_G_OVER_FR_AMB = 19;
    public const int IDB_CPIT_MAIN_G_OVER_GE_AMA = 20;
    public const int IDB_CPIT_MAIN_G_OVER_GE_AMB = 21;
    public const int IDB_CPIT_MAIN_G_OVER_IT_AMA = 22;
    public const int IDB_CPIT_MAIN_G_OVER_IT_AMB = 23;
    public const int IDB_CPIT_MAIN_G_OVER_JP_AMA = 24;
    public const int IDB_CPIT_MAIN_G_OVER_JP_AMB = 25;
    public const int IDB_CPIT_MAIN_G_OVER_SP_AMA = 26;
    public const int IDB_CPIT_MAIN_G_OVER_SP_AMB = 27;
    public const int IDB_CPIT_MAIN_G_OVER_US_AMA = 28;
    public const int IDB_CPIT_MAIN_G_OVER_US_AMB = 29;
    public const int IDB_CPIT_MAIN_G_RSLT_AMA = 30;
    public const int IDB_CPIT_MAIN_G_RSLT_AMB = 31;
    public const int IDB_CPIT_MAIN_G_RSLT_JP_AMA = 32;
    public const int IDB_CPIT_MAIN_G_RSLT_JP_AMB = 33;
    public const int IDB_CPIT_MAIN_G_RSLT_US_AMA = 34;
    public const int IDB_CPIT_MAIN_G_RSLT_US_AMB = 35;
    public const int IDB_CPIT_MAIN_G_RSLT_FR_AMA = 36;
    public const int IDB_CPIT_MAIN_G_RSLT_FR_AMB = 37;
    public const int IDB_CPIT_MAIN_G_RSLT_IT_AMA = 38;
    public const int IDB_CPIT_MAIN_G_RSLT_IT_AMB = 39;
    public const int IDB_CPIT_MAIN_G_RSLT_GE_AMA = 40;
    public const int IDB_CPIT_MAIN_G_RSLT_GE_AMB = 41;
    public const int IDB_CPIT_MAIN_G_RSLT_SP_AMA = 42;
    public const int IDB_CPIT_MAIN_G_RSLT_SP_AMB = 43;
    public const int IDB_CPIT_MAIN_G_START_AMA = 44;
    public const int IDB_CPIT_MAIN_G_START_AMB = 45;
    public const int IDB_CPIT_MAIN_G_START_FR_AMA = 46;
    public const int IDB_CPIT_MAIN_G_START_FR_AMB = 47;
    public const int IDB_CPIT_MAIN_G_START_GE_AMA = 48;
    public const int IDB_CPIT_MAIN_G_START_GE_AMB = 49;
    public const int IDB_CPIT_MAIN_G_START_IT_AMA = 50;
    public const int IDB_CPIT_MAIN_G_START_IT_AMB = 51;
    public const int IDB_CPIT_MAIN_G_START_JP_AMA = 52;
    public const int IDB_CPIT_MAIN_G_START_JP_AMB = 53;
    public const int IDB_CPIT_MAIN_G_START_SP_AMA = 54;
    public const int IDB_CPIT_MAIN_G_START_SP_AMB = 55;
    public const int IDB_CPIT_MAIN_G_START_US_AMA = 56;
    public const int IDB_CPIT_MAIN_G_START_US_AMB = 57;
    public const int IDB_CPIT_MAIN_SPST_FI_AMA = 58;
    public const int IDB_CPIT_MAIN_SPST_FI_AMB = 59;
    public const int IDB_CPIT_MAIN_SPST_PT_AMA = 60;
    public const int IDB_CPIT_MAIN_SPST_PT_AMB = 61;
    public const int IDB_CPIT_MAIN_SPST_RU_AMA = 62;
    public const int IDB_CPIT_MAIN_SPST_RU_AMB = 63;
    public const int IDB_CPIT_MAIN_G_OVER_FI_AMA = 64;
    public const int IDB_CPIT_MAIN_G_OVER_FI_AMB = 65;
    public const int IDB_CPIT_MAIN_G_OVER_PT_AMA = 66;
    public const int IDB_CPIT_MAIN_G_OVER_PT_AMB = 67;
    public const int IDB_CPIT_MAIN_G_OVER_RU_AMA = 68;
    public const int IDB_CPIT_MAIN_G_OVER_RU_AMB = 69;
    public const int IDB_CPIT_MAIN_G_RSLT_FI_AMA = 70;
    public const int IDB_CPIT_MAIN_G_RSLT_FI_AMB = 71;
    public const int IDB_CPIT_MAIN_G_RSLT_PT_AMA = 72;
    public const int IDB_CPIT_MAIN_G_RSLT_PT_AMB = 73;
    public const int IDB_CPIT_MAIN_G_RSLT_RU_AMA = 74;
    public const int IDB_CPIT_MAIN_G_RSLT_RU_AMB = 75;
    public const int IDB_CPIT_MAIN_G_START_FI_AMA = 76;
    public const int IDB_CPIT_MAIN_G_START_FI_AMB = 77;
    public const int IDB_CPIT_MAIN_G_START_PT_AMA = 78;
    public const int IDB_CPIT_MAIN_G_START_PT_AMB = 79;
    public const int IDB_CPIT_MAIN_G_START_RU_AMA = 80;
    public const int IDB_CPIT_MAIN_G_START_RU_AMB = 81;
    public const int IDB_CPIT_MAIN_SPST_CN_AMA = 82;
    public const int IDB_CPIT_MAIN_SPST_CN_AMB = 83;
    public const int IDB_CPIT_MAIN_SPST_HK_AMA = 84;
    public const int IDB_CPIT_MAIN_SPST_HK_AMB = 85;
    public const int IDB_CPIT_MAIN_G_OVER_CN_AMA = 86;
    public const int IDB_CPIT_MAIN_G_OVER_CN_AMB = 87;
    public const int IDB_CPIT_MAIN_G_OVER_HK_AMA = 88;
    public const int IDB_CPIT_MAIN_G_OVER_HK_AMB = 89;
    public const int IDB_CPIT_MAIN_G_RSLT_CN_AMA = 90;
    public const int IDB_CPIT_MAIN_G_RSLT_CN_AMB = 91;
    public const int IDB_CPIT_MAIN_G_RSLT_HK_AMA = 92;
    public const int IDB_CPIT_MAIN_G_RSLT_HK_AMB = 93;
    public const int IDB_CPIT_MAIN_G_START_CN_AMA = 94;
    public const int IDB_CPIT_MAIN_G_START_CN_AMB = 95;
    public const int IDB_CPIT_MAIN_G_START_HK_AMA = 96;
    public const int IDB_CPIT_MAIN_G_START_HK_AMB = 97;
    public const int IDU0_CPIT_MAIN_G_FIX_AMA = 0;
    public const int IDU0_CPIT_MAIN_G_FIX_AMB = 0;
    public const int IDU0_CPIT_MAIN_SPST_AMA = 0;
    public const int IDU0_CPIT_MAIN_SPST_AMB = 0;
    public const int IDU0_CPIT_MAIN_SPST_FR_AMA = 0;
    public const int IDU0_CPIT_MAIN_SPST_FR_AMB = 0;
    public const int IDU0_CPIT_MAIN_SPST_GE_AMA = 0;
    public const int IDU0_CPIT_MAIN_SPST_GE_AMB = 0;
    public const int IDU0_CPIT_MAIN_SPST_IT_AMA = 0;
    public const int IDU0_CPIT_MAIN_SPST_IT_AMB = 0;
    public const int IDU0_CPIT_MAIN_SPST_JP_AMA = 0;
    public const int IDU0_CPIT_MAIN_SPST_JP_AMB = 0;
    public const int IDU0_CPIT_MAIN_SPST_SP_AMA = 0;
    public const int IDU0_CPIT_MAIN_SPST_SP_AMB = 0;
    public const int IDU0_CPIT_MAIN_SPST_US_AMA = 0;
    public const int IDU0_CPIT_MAIN_SPST_US_AMB = 0;
    public const int IDU0_CPIT_MAIN_G_OVER_AMA = 0;
    public const int IDU0_CPIT_MAIN_G_OVER_AMB = 0;
    public const int IDU0_CPIT_MAIN_G_OVER_FR_AMA = 0;
    public const int IDU0_CPIT_MAIN_G_OVER_FR_AMB = 0;
    public const int IDU0_CPIT_MAIN_G_OVER_GE_AMA = 0;
    public const int IDU0_CPIT_MAIN_G_OVER_GE_AMB = 0;
    public const int IDU0_CPIT_MAIN_G_OVER_IT_AMA = 0;
    public const int IDU0_CPIT_MAIN_G_OVER_IT_AMB = 0;
    public const int IDU0_CPIT_MAIN_G_OVER_JP_AMA = 0;
    public const int IDU0_CPIT_MAIN_G_OVER_JP_AMB = 0;
    public const int IDU0_CPIT_MAIN_G_OVER_SP_AMA = 0;
    public const int IDU0_CPIT_MAIN_G_OVER_SP_AMB = 0;
    public const int IDU0_CPIT_MAIN_G_OVER_US_AMA = 0;
    public const int IDU0_CPIT_MAIN_G_OVER_US_AMB = 0;
    public const int IDU0_CPIT_MAIN_G_RSLT_AMA = 0;
    public const int IDU0_CPIT_MAIN_G_RSLT_AMB = 0;
    public const int IDU0_CPIT_MAIN_G_RSLT_JP_AMA = 0;
    public const int IDU0_CPIT_MAIN_G_RSLT_JP_AMB = 0;
    public const int IDU0_CPIT_MAIN_G_RSLT_US_AMA = 0;
    public const int IDU0_CPIT_MAIN_G_RSLT_US_AMB = 0;
    public const int IDU0_CPIT_MAIN_G_RSLT_FR_AMA = 0;
    public const int IDU0_CPIT_MAIN_G_RSLT_FR_AMB = 0;
    public const int IDU0_CPIT_MAIN_G_RSLT_IT_AMA = 0;
    public const int IDU0_CPIT_MAIN_G_RSLT_IT_AMB = 0;
    public const int IDU0_CPIT_MAIN_G_RSLT_GE_AMA = 0;
    public const int IDU0_CPIT_MAIN_G_RSLT_GE_AMB = 0;
    public const int IDU0_CPIT_MAIN_G_RSLT_SP_AMA = 0;
    public const int IDU0_CPIT_MAIN_G_RSLT_SP_AMB = 0;
    public const int IDU0_CPIT_MAIN_G_START_AMA = 0;
    public const int IDU0_CPIT_MAIN_G_START_AMB = 0;
    public const int IDU0_CPIT_MAIN_G_START_FR_AMA = 0;
    public const int IDU0_CPIT_MAIN_G_START_FR_AMB = 0;
    public const int IDU0_CPIT_MAIN_G_START_GE_AMA = 0;
    public const int IDU0_CPIT_MAIN_G_START_GE_AMB = 0;
    public const int IDU0_CPIT_MAIN_G_START_IT_AMA = 0;
    public const int IDU0_CPIT_MAIN_G_START_IT_AMB = 0;
    public const int IDU0_CPIT_MAIN_G_START_JP_AMA = 0;
    public const int IDU0_CPIT_MAIN_G_START_JP_AMB = 0;
    public const int IDU0_CPIT_MAIN_G_START_SP_AMA = 0;
    public const int IDU0_CPIT_MAIN_G_START_SP_AMB = 0;
    public const int IDU0_CPIT_MAIN_G_START_US_AMA = 0;
    public const int IDU0_CPIT_MAIN_G_START_US_AMB = 0;
    public const int IDU1_CPIT_MAIN_G_FIX_AMA = 0;
    public const int IDU1_CPIT_MAIN_G_FIX_AMB = 0;
    public const int IDU1_CPIT_MAIN_SPST_AMA = 0;
    public const int IDU1_CPIT_MAIN_SPST_AMB = 0;
    public const int IDU1_CPIT_MAIN_SPST_FR_AMA = 0;
    public const int IDU1_CPIT_MAIN_SPST_FR_AMB = 0;
    public const int IDU1_CPIT_MAIN_SPST_GE_AMA = 0;
    public const int IDU1_CPIT_MAIN_SPST_GE_AMB = 0;
    public const int IDU1_CPIT_MAIN_SPST_IT_AMA = 0;
    public const int IDU1_CPIT_MAIN_SPST_IT_AMB = 0;
    public const int IDU1_CPIT_MAIN_SPST_JP_AMA = 0;
    public const int IDU1_CPIT_MAIN_SPST_JP_AMB = 0;
    public const int IDU1_CPIT_MAIN_SPST_SP_AMA = 0;
    public const int IDU1_CPIT_MAIN_SPST_SP_AMB = 0;
    public const int IDU1_CPIT_MAIN_SPST_US_AMA = 0;
    public const int IDU1_CPIT_MAIN_SPST_US_AMB = 0;
    public const int IDU1_CPIT_MAIN_G_OVER_AMA = 0;
    public const int IDU1_CPIT_MAIN_G_OVER_AMB = 0;
    public const int IDU1_CPIT_MAIN_G_OVER_FR_AMA = 0;
    public const int IDU1_CPIT_MAIN_G_OVER_FR_AMB = 0;
    public const int IDU1_CPIT_MAIN_G_OVER_GE_AMA = 0;
    public const int IDU1_CPIT_MAIN_G_OVER_GE_AMB = 0;
    public const int IDU1_CPIT_MAIN_G_OVER_IT_AMA = 0;
    public const int IDU1_CPIT_MAIN_G_OVER_IT_AMB = 0;
    public const int IDU1_CPIT_MAIN_G_OVER_JP_AMA = 0;
    public const int IDU1_CPIT_MAIN_G_OVER_JP_AMB = 0;
    public const int IDU1_CPIT_MAIN_G_OVER_SP_AMA = 0;
    public const int IDU1_CPIT_MAIN_G_OVER_SP_AMB = 0;
    public const int IDU1_CPIT_MAIN_G_OVER_US_AMA = 0;
    public const int IDU1_CPIT_MAIN_G_OVER_US_AMB = 0;
    public const int IDU1_CPIT_MAIN_G_RSLT_AMA = 0;
    public const int IDU1_CPIT_MAIN_G_RSLT_AMB = 0;
    public const int IDU1_CPIT_MAIN_G_RSLT_JP_AMA = 0;
    public const int IDU1_CPIT_MAIN_G_RSLT_JP_AMB = 0;
    public const int IDU1_CPIT_MAIN_G_RSLT_US_AMA = 0;
    public const int IDU1_CPIT_MAIN_G_RSLT_US_AMB = 0;
    public const int IDU1_CPIT_MAIN_G_RSLT_FR_AMA = 0;
    public const int IDU1_CPIT_MAIN_G_RSLT_FR_AMB = 0;
    public const int IDU1_CPIT_MAIN_G_RSLT_IT_AMA = 0;
    public const int IDU1_CPIT_MAIN_G_RSLT_IT_AMB = 0;
    public const int IDU1_CPIT_MAIN_G_RSLT_GE_AMA = 0;
    public const int IDU1_CPIT_MAIN_G_RSLT_GE_AMB = 0;
    public const int IDU1_CPIT_MAIN_G_RSLT_SP_AMA = 0;
    public const int IDU1_CPIT_MAIN_G_RSLT_SP_AMB = 0;
    public const int IDU1_CPIT_MAIN_G_START_AMA = 0;
    public const int IDU1_CPIT_MAIN_G_START_AMB = 0;
    public const int IDU1_CPIT_MAIN_G_START_FR_AMA = 0;
    public const int IDU1_CPIT_MAIN_G_START_FR_AMB = 0;
    public const int IDU1_CPIT_MAIN_G_START_GE_AMA = 0;
    public const int IDU1_CPIT_MAIN_G_START_GE_AMB = 0;
    public const int IDU1_CPIT_MAIN_G_START_IT_AMA = 0;
    public const int IDU1_CPIT_MAIN_G_START_IT_AMB = 0;
    public const int IDU1_CPIT_MAIN_G_START_JP_AMA = 0;
    public const int IDU1_CPIT_MAIN_G_START_JP_AMB = 0;
    public const int IDU1_CPIT_MAIN_G_START_SP_AMA = 0;
    public const int IDU1_CPIT_MAIN_G_START_SP_AMB = 0;
    public const int IDU1_CPIT_MAIN_G_START_US_AMA = 0;
    public const int IDU1_CPIT_MAIN_G_START_US_AMB = 0;
    public const string IDS_CPIT_MAIN_G_FIX_AMA = "G_FIX.AMA";
    public const string IDS_CPIT_MAIN_G_FIX_AMB = "G_FIX.AMB";
    public const string IDS_CPIT_MAIN_SPST_AMA = "SPST.AMA";
    public const string IDS_CPIT_MAIN_SPST_AMB = "SPST.AMB";
    public const string IDS_CPIT_MAIN_SPST_FR_AMA = "SPST_FR.AMA";
    public const string IDS_CPIT_MAIN_SPST_FR_AMB = "SPST_FR.AMB";
    public const string IDS_CPIT_MAIN_SPST_GE_AMA = "SPST_GE.AMA";
    public const string IDS_CPIT_MAIN_SPST_GE_AMB = "SPST_GE.AMB";
    public const string IDS_CPIT_MAIN_SPST_IT_AMA = "SPST_IT.AMA";
    public const string IDS_CPIT_MAIN_SPST_IT_AMB = "SPST_IT.AMB";
    public const string IDS_CPIT_MAIN_SPST_JP_AMA = "SPST_JP.AMA";
    public const string IDS_CPIT_MAIN_SPST_JP_AMB = "SPST_JP.AMB";
    public const string IDS_CPIT_MAIN_SPST_SP_AMA = "SPST_SP.AMA";
    public const string IDS_CPIT_MAIN_SPST_SP_AMB = "SPST_SP.AMB";
    public const string IDS_CPIT_MAIN_SPST_US_AMA = "SPST_US.AMA";
    public const string IDS_CPIT_MAIN_SPST_US_AMB = "SPST_US.AMB";
    public const string IDS_CPIT_MAIN_G_OVER_AMA = "G_OVER.AMA";
    public const string IDS_CPIT_MAIN_G_OVER_AMB = "G_OVER.AMB";
    public const string IDS_CPIT_MAIN_G_OVER_FR_AMA = "G_OVER_FR.AMA";
    public const string IDS_CPIT_MAIN_G_OVER_FR_AMB = "G_OVER_FR.AMB";
    public const string IDS_CPIT_MAIN_G_OVER_GE_AMA = "G_OVER_GE.AMA";
    public const string IDS_CPIT_MAIN_G_OVER_GE_AMB = "G_OVER_GE.AMB";
    public const string IDS_CPIT_MAIN_G_OVER_IT_AMA = "G_OVER_IT.AMA";
    public const string IDS_CPIT_MAIN_G_OVER_IT_AMB = "G_OVER_IT.AMB";
    public const string IDS_CPIT_MAIN_G_OVER_JP_AMA = "G_OVER_JP.AMA";
    public const string IDS_CPIT_MAIN_G_OVER_JP_AMB = "G_OVER_JP.AMB";
    public const string IDS_CPIT_MAIN_G_OVER_SP_AMA = "G_OVER_SP.AMA";
    public const string IDS_CPIT_MAIN_G_OVER_SP_AMB = "G_OVER_SP.AMB";
    public const string IDS_CPIT_MAIN_G_OVER_US_AMA = "G_OVER_US.AMA";
    public const string IDS_CPIT_MAIN_G_OVER_US_AMB = "G_OVER_US.AMB";
    public const string IDS_CPIT_MAIN_G_RSLT_AMA = "G_RSLT.AMA";
    public const string IDS_CPIT_MAIN_G_RSLT_AMB = "G_RSLT.AMB";
    public const string IDS_CPIT_MAIN_G_RSLT_JP_AMA = "G_RSLT_JP.AMA";
    public const string IDS_CPIT_MAIN_G_RSLT_JP_AMB = "G_RSLT_JP.AMB";
    public const string IDS_CPIT_MAIN_G_RSLT_US_AMA = "G_RSLT_US.AMA";
    public const string IDS_CPIT_MAIN_G_RSLT_US_AMB = "G_RSLT_US.AMB";
    public const string IDS_CPIT_MAIN_G_RSLT_FR_AMA = "G_RSLT_FR.AMA";
    public const string IDS_CPIT_MAIN_G_RSLT_FR_AMB = "G_RSLT_FR.AMB";
    public const string IDS_CPIT_MAIN_G_RSLT_IT_AMA = "G_RSLT_IT.AMA";
    public const string IDS_CPIT_MAIN_G_RSLT_IT_AMB = "G_RSLT_IT.AMB";
    public const string IDS_CPIT_MAIN_G_RSLT_GE_AMA = "G_RSLT_GE.AMA";
    public const string IDS_CPIT_MAIN_G_RSLT_GE_AMB = "G_RSLT_GE.AMB";
    public const string IDS_CPIT_MAIN_G_RSLT_SP_AMA = "G_RSLT_SP.AMA";
    public const string IDS_CPIT_MAIN_G_RSLT_SP_AMB = "G_RSLT_SP.AMB";
    public const string IDS_CPIT_MAIN_G_START_AMA = "G_START.AMA";
    public const string IDS_CPIT_MAIN_G_START_AMB = "G_START.AMB";
    public const string IDS_CPIT_MAIN_G_START_FR_AMA = "G_START_FR.AMA";
    public const string IDS_CPIT_MAIN_G_START_FR_AMB = "G_START_FR.AMB";
    public const string IDS_CPIT_MAIN_G_START_GE_AMA = "G_START_GE.AMA";
    public const string IDS_CPIT_MAIN_G_START_GE_AMB = "G_START_GE.AMB";
    public const string IDS_CPIT_MAIN_G_START_IT_AMA = "G_START_IT.AMA";
    public const string IDS_CPIT_MAIN_G_START_IT_AMB = "G_START_IT.AMB";
    public const string IDS_CPIT_MAIN_G_START_JP_AMA = "G_START_JP.AMA";
    public const string IDS_CPIT_MAIN_G_START_JP_AMB = "G_START_JP.AMB";
    public const string IDS_CPIT_MAIN_G_START_SP_AMA = "G_START_SP.AMA";
    public const string IDS_CPIT_MAIN_G_START_SP_AMB = "G_START_SP.AMB";
    public const string IDS_CPIT_MAIN_G_START_US_AMA = "G_START_US.AMA";
    public const string IDS_CPIT_MAIN_G_START_US_AMB = "G_START_US.AMB";
    public const int IDB_D_BUY_SCREEN_D_COMP_AMA = 0;
    public const int IDB_D_BUY_SCREEN_D_COMP_AMB = 1;
    public const int IDU0_D_BUY_SCREEN_D_COMP_AMA = 0;
    public const int IDU0_D_BUY_SCREEN_D_COMP_AMB = 0;
    public const int IDU1_D_BUY_SCREEN_D_COMP_AMA = 0;
    public const int IDU1_D_BUY_SCREEN_D_COMP_AMB = 0;
    public const string IDS_D_BUY_SCREEN_D_COMP_AMA = "D_COMP.AMA";
    public const string IDS_D_BUY_SCREEN_D_COMP_AMB = "D_COMP.AMB";
    public const int IDB_D_BUY_SCREEN_JP_D_COMP_JP_AMA = 0;
    public const int IDB_D_BUY_SCREEN_JP_D_COMP_JP_AMB = 1;
    public const int IDU0_D_BUY_SCREEN_JP_D_COMP_JP_AMA = 0;
    public const int IDU0_D_BUY_SCREEN_JP_D_COMP_JP_AMB = 0;
    public const int IDU1_D_BUY_SCREEN_JP_D_COMP_JP_AMA = 0;
    public const int IDU1_D_BUY_SCREEN_JP_D_COMP_JP_AMB = 0;
    public const string IDS_D_BUY_SCREEN_JP_D_COMP_JP_AMA = "D_COMP_JP.AMA";
    public const string IDS_D_BUY_SCREEN_JP_D_COMP_JP_AMB = "D_COMP_JP.AMB";
    public const int IDB_D_LOGO_ESRB_US_D_LOGO_ESRB_AMA = 0;
    public const int IDB_D_LOGO_ESRB_US_D_LOGO_ESRB_US_AMB = 1;
    public const int IDU0_D_LOGO_ESRB_US_D_LOGO_ESRB_AMA = 0;
    public const int IDU0_D_LOGO_ESRB_US_D_LOGO_ESRB_US_AMB = 0;
    public const int IDU1_D_LOGO_ESRB_US_D_LOGO_ESRB_AMA = 0;
    public const int IDU1_D_LOGO_ESRB_US_D_LOGO_ESRB_US_AMB = 0;
    public const string IDS_D_LOGO_ESRB_US_D_LOGO_ESRB_AMA = "D_LOGO_ESRB.AMA";
    public const string IDS_D_LOGO_ESRB_US_D_LOGO_ESRB_US_AMB = "D_LOGO_ESRB_US.AMB";
    public const int IDB_D_LOGO_SEGA_JP_D_LOGO_SEGA_AMA = 0;
    public const int IDB_D_LOGO_SEGA_JP_D_LOGO_SEGA_JP_AMB = 1;
    public const int IDU0_D_LOGO_SEGA_JP_D_LOGO_SEGA_AMA = 0;
    public const int IDU0_D_LOGO_SEGA_JP_D_LOGO_SEGA_JP_AMB = 0;
    public const int IDU1_D_LOGO_SEGA_JP_D_LOGO_SEGA_AMA = 0;
    public const int IDU1_D_LOGO_SEGA_JP_D_LOGO_SEGA_JP_AMB = 0;
    public const string IDS_D_LOGO_SEGA_JP_D_LOGO_SEGA_AMA = "D_LOGO_SEGA.AMA";
    public const string IDS_D_LOGO_SEGA_JP_D_LOGO_SEGA_JP_AMB = "D_LOGO_SEGA_JP.AMB";
    public const int IDB_D_LOGO_SONIC_D_LOGO_SONIC_AMA = 0;
    public const int IDB_D_LOGO_SONIC_D_LOGO_SONIC_AMB = 1;
    public const int IDU0_D_LOGO_SONIC_D_LOGO_SONIC_AMA = 0;
    public const int IDU0_D_LOGO_SONIC_D_LOGO_SONIC_AMB = 0;
    public const int IDU1_D_LOGO_SONIC_D_LOGO_SONIC_AMA = 0;
    public const int IDU1_D_LOGO_SONIC_D_LOGO_SONIC_AMB = 0;
    public const string IDS_D_LOGO_SONIC_D_LOGO_SONIC_AMA = "D_LOGO_SONIC.AMA";
    public const string IDS_D_LOGO_SONIC_D_LOGO_SONIC_AMB = "D_LOGO_SONIC.AMB";
    public const int IDB_EFF_BS_CMN_EFF_BOSS_DM_AME = 0;
    public const int IDB_EFF_BS_CMN_EFF_BOSS_PARTS_AME = 1;
    public const int IDB_EFF_BS_CMN_EFF_BOSS_SMOKE02_AME = 2;
    public const int IDB_EFF_BS_CMN_EFF_BOSS_SMORK_AME = 3;
    public const int IDB_EFF_BS_CMN_EFF_JET_B_AME = 4;
    public const int IDB_EFF_BS_CMN_EFF_JET_B_SMORK_AME = 5;
    public const int IDB_EFF_BS_CMN_EFF_BS_TEX_AMB = 6;
    public const int IDU0_EFF_BS_CMN_EFF_BOSS_DM_AME = 0;
    public const int IDU0_EFF_BS_CMN_EFF_BOSS_PARTS_AME = 0;
    public const int IDU0_EFF_BS_CMN_EFF_BOSS_SMOKE02_AME = 0;
    public const int IDU0_EFF_BS_CMN_EFF_BOSS_SMORK_AME = 0;
    public const int IDU0_EFF_BS_CMN_EFF_JET_B_AME = 0;
    public const int IDU0_EFF_BS_CMN_EFF_JET_B_SMORK_AME = 0;
    public const int IDU0_EFF_BS_CMN_EFF_BS_TEX_AMB = 0;
    public const int IDU1_EFF_BS_CMN_EFF_BOSS_DM_AME = 0;
    public const int IDU1_EFF_BS_CMN_EFF_BOSS_PARTS_AME = 0;
    public const int IDU1_EFF_BS_CMN_EFF_BOSS_SMOKE02_AME = 0;
    public const int IDU1_EFF_BS_CMN_EFF_BOSS_SMORK_AME = 0;
    public const int IDU1_EFF_BS_CMN_EFF_JET_B_AME = 0;
    public const int IDU1_EFF_BS_CMN_EFF_JET_B_SMORK_AME = 0;
    public const int IDU1_EFF_BS_CMN_EFF_BS_TEX_AMB = 0;
    public const string IDS_EFF_BS_CMN_EFF_BOSS_DM_AME = "EFF_BOSS_DM.AME";
    public const string IDS_EFF_BS_CMN_EFF_BOSS_PARTS_AME = "EFF_BOSS_PARTS.AME";
    public const string IDS_EFF_BS_CMN_EFF_BOSS_SMOKE02_AME = "EFF_BOSS_SMOKE02.AME";
    public const string IDS_EFF_BS_CMN_EFF_BOSS_SMORK_AME = "EFF_BOSS_SMORK.AME";
    public const string IDS_EFF_BS_CMN_EFF_JET_B_AME = "EFF_JET_B.AME";
    public const string IDS_EFF_BS_CMN_EFF_JET_B_SMORK_AME = "EFF_JET_B_SMORK.AME";
    public const string IDS_EFF_BS_CMN_EFF_BS_TEX_AMB = "EFF_BS_TEX.AMB";
    public const int IDB_EFF_CMN_EFF_AURA_00_AME = 0;
    public const int IDB_EFF_CMN_EFF_AURA_01_AME = 1;
    public const int IDB_EFF_CMN_EFF_AURA_02_AME = 2;
    public const int IDB_EFF_CMN_EFF_AURA_03_AME = 3;
    public const int IDB_EFF_CMN_EFF_BARRIER_AME = 4;
    public const int IDB_EFF_CMN_EFF_BARRIER_01_AME = 5;
    public const int IDB_EFF_CMN_EFF_BARRIER_LOST_AME = 6;
    public const int IDB_EFF_CMN_EFF_BOMB_AME = 7;
    public const int IDB_EFF_CMN_EFF_BOMB_BIG_AME = 8;
    public const int IDB_EFF_CMN_EFF_BOMB_KAMA_AME = 9;
    public const int IDB_EFF_CMN_EFF_BOMB_SMOKE_AME = 10;
    public const int IDB_EFF_CMN_EFF_BRAKE_AME = 11;
    public const int IDB_EFF_CMN_EFF_BRAKE_S_AME = 12;
    public const int IDB_EFF_CMN_EFF_BUBBLE_AME = 13;
    public const int IDB_EFF_CMN_EFF_BULLET_AME = 14;
    public const int IDB_EFF_CMN_EFF_BULLET_CORE_AME = 15;
    public const int IDB_EFF_CMN_EFF_BUMPER_AME = 16;
    public const int IDB_EFF_CMN_EFF_BUMPER_1_AME = 17;
    public const int IDB_EFF_CMN_EFF_BUMPER_2_AME = 18;
    public const int IDB_EFF_CMN_EFF_BUMPER_LOST_AME = 19;
    public const int IDB_EFF_CMN_EFF_CANON_AME = 20;
    public const int IDB_EFF_CMN_EFF_CAP_KEY1_AME = 21;
    public const int IDB_EFF_CMN_EFF_CAP_KEY2_AME = 22;
    public const int IDB_EFF_CMN_EFF_CAP_OPEN_AME = 23;
    public const int IDB_EFF_CMN_EFF_COUNT0_AME = 24;
    public const int IDB_EFF_CMN_EFF_COUNT1_AME = 25;
    public const int IDB_EFF_CMN_EFF_COUNT2_AME = 26;
    public const int IDB_EFF_CMN_EFF_COUNT3_AME = 27;
    public const int IDB_EFF_CMN_EFF_COUNT4_AME = 28;
    public const int IDB_EFF_CMN_EFF_COUNT5_AME = 29;
    public const int IDB_EFF_CMN_EFF_DASH_AME = 30;
    public const int IDB_EFF_CMN_EFF_DEATH_AME = 31;
    public const int IDB_EFF_CMN_EFF_GOAL_AME = 32;
    public const int IDB_EFF_CMN_EFF_H_ATTACK_00_AME = 33;
    public const int IDB_EFF_CMN_EFF_H_ATTACK_01_AME = 34;
    public const int IDB_EFF_CMN_EFF_H_ATTACK_02_AME = 35;
    public const int IDB_EFF_CMN_EFF_H_ATTACK_03_AME = 36;
    public const int IDB_EFF_CMN_EFF_HIT_E_AME = 37;
    public const int IDB_EFF_CMN_EFF_HIT_S_AME = 38;
    public const int IDB_EFF_CMN_EFF_ITEM_AME = 39;
    public const int IDB_EFF_CMN_EFF_ITEM_01_AME = 40;
    public const int IDB_EFF_CMN_EFF_JUMP_AME = 41;
    public const int IDB_EFF_CMN_EFF_MUTEKI_AME = 42;
    public const int IDB_EFF_CMN_EFF_MUTEKI2_AME = 43;
    public const int IDB_EFF_CMN_EFF_PILLAR_F_01_AME = 44;
    public const int IDB_EFF_CMN_EFF_PILLAR_F_02_AME = 45;
    public const int IDB_EFF_CMN_EFF_PILLAR_F_03_AME = 46;
    public const int IDB_EFF_CMN_EFF_PILLAR_F_HIT_AME = 47;
    public const int IDB_EFF_CMN_EFF_PISTON_AME = 48;
    public const int IDB_EFF_CMN_EFF_POINT_AME = 49;
    public const int IDB_EFF_CMN_EFF_RING_AME = 50;
    public const int IDB_EFF_CMN_EFF_ROLLDASH_AME = 51;
    public const int IDB_EFF_CMN_EFF_ROLLDASH_L_AME = 52;
    public const int IDB_EFF_CMN_EFF_ROLLDASH_R_AME = 53;
    public const int IDB_EFF_CMN_EFF_ROLLDASH_S_AME = 54;
    public const int IDB_EFF_CMN_EFF_RUN_AME = 55;
    public const int IDB_EFF_CMN_EFF_SCORE_0_AME = 56;
    public const int IDB_EFF_CMN_EFF_SCORE_1_AME = 57;
    public const int IDB_EFF_CMN_EFF_SCORE_2_AME = 58;
    public const int IDB_EFF_CMN_EFF_SCORE_3_AME = 59;
    public const int IDB_EFF_CMN_EFF_SCORE_4_AME = 60;
    public const int IDB_EFF_CMN_EFF_SCORE_5_AME = 61;
    public const int IDB_EFF_CMN_EFF_SCORE_6_AME = 62;
    public const int IDB_EFF_CMN_EFF_SCORE_7_AME = 63;
    public const int IDB_EFF_CMN_EFF_SCORE_8_AME = 64;
    public const int IDB_EFF_CMN_EFF_SCORE_9_AME = 65;
    public const int IDB_EFF_CMN_EFF_SMORK_B_Z2_AME = 66;
    public const int IDB_EFF_CMN_EFF_SMORK_B_Z4_AME = 67;
    public const int IDB_EFF_CMN_EFF_SMORK_S_Z2_AME = 68;
    public const int IDB_EFF_CMN_EFF_SMORK_S_Z4_AME = 69;
    public const int IDB_EFF_CMN_EFF_SPIN_AME = 70;
    public const int IDB_EFF_CMN_EFF_SPIN_00_AME = 71;
    public const int IDB_EFF_CMN_EFF_SPIN_01_AME = 72;
    public const int IDB_EFF_CMN_EFF_SPIN_D_AME = 73;
    public const int IDB_EFF_CMN_EFF_SPIN_D_B_AME = 74;
    public const int IDB_EFF_CMN_EFF_SPIN_START_AME = 75;
    public const int IDB_EFF_CMN_EFF_SPRAY_AME = 76;
    public const int IDB_EFF_CMN_EFF_SPRING_AME = 77;
    public const int IDB_EFF_CMN_EFF_SPRING_00_AME = 78;
    public const int IDB_EFF_CMN_EFF_SPRING_01_AME = 79;
    public const int IDB_EFF_CMN_EFF_SS_END_AME = 80;
    public const int IDB_EFF_CMN_EFF_SS_SPIN_AME = 81;
    public const int IDB_EFF_CMN_EFF_SS_SPIN_D_AME = 82;
    public const int IDB_EFF_CMN_EFF_SS_SPIN_D_B_AME = 83;
    public const int IDB_EFF_CMN_EFF_SS_SPIN_START_AME = 84;
    public const int IDB_EFF_CMN_EFF_SS_START_AME = 85;
    public const int IDB_EFF_CMN_EFF_STEAM_AME = 86;
    public const int IDB_EFF_CMN_EFF_STEAM_L_AME = 87;
    public const int IDB_EFF_CMN_EFF_STEAM_M_AME = 88;
    public const int IDB_EFF_CMN_EFF_STEAM_S_AME = 89;
    public const int IDB_EFF_CMN_EFF_STEAM_SET_AME = 90;
    public const int IDB_EFF_CMN_EFF_STEAM_SET_SS_AME = 91;
    public const int IDB_EFF_CMN_EFF_STEAM_SHOT_AME = 92;
    public const int IDB_EFF_CMN_EFF_SWEAT_AME = 93;
    public const int IDB_EFF_CMN_EFF_TARGET_E_AME = 94;
    public const int IDB_EFF_CMN_EFF_TARGET_S_AME = 95;
    public const int IDB_EFF_CMN_EFF_TOGEBALL_AME = 96;
    public const int IDB_EFF_CMN_EFF_CMN_TEX_AMB = 97;
    public const int IDB_EFF_CMN_EFF_BARRIER_ZNO = 98;
    public const int IDB_EFF_CMN_EFF_HATTACK_01_ZNO = 99;
    public const int IDB_EFF_CMN_EFF_SFOOT_L_ZNO = 100;
    public const int IDB_EFF_CMN_EFF_SFOOT_R_ZNO = 101;
    public const int IDB_EFF_CMN_EFF_SPRING1_ZNO = 102;
    public const int IDB_EFF_CMN_EFF_CMN_TEX_MD_BA_AMB = 103;
    public const int IDB_EFF_CMN_EFF_CMN_TEX_MD_HA_AMB = 104;
    public const int IDB_EFF_CMN_EFF_CMN_TEX_MD_RD_AMB = 105;
    public const int IDB_EFF_CMN_EFF_CMN_TEX_MD_SP_AMB = 106;
    public const int IDU0_EFF_CMN_EFF_AURA_00_AME = 0;
    public const int IDU0_EFF_CMN_EFF_AURA_01_AME = 0;
    public const int IDU0_EFF_CMN_EFF_AURA_02_AME = 0;
    public const int IDU0_EFF_CMN_EFF_AURA_03_AME = 0;
    public const int IDU0_EFF_CMN_EFF_BARRIER_AME = 0;
    public const int IDU0_EFF_CMN_EFF_BARRIER_01_AME = 0;
    public const int IDU0_EFF_CMN_EFF_BARRIER_LOST_AME = 0;
    public const int IDU0_EFF_CMN_EFF_BOMB_AME = 0;
    public const int IDU0_EFF_CMN_EFF_BOMB_BIG_AME = 0;
    public const int IDU0_EFF_CMN_EFF_BOMB_KAMA_AME = 0;
    public const int IDU0_EFF_CMN_EFF_BOMB_SMOKE_AME = 0;
    public const int IDU0_EFF_CMN_EFF_BRAKE_AME = 0;
    public const int IDU0_EFF_CMN_EFF_BRAKE_S_AME = 0;
    public const int IDU0_EFF_CMN_EFF_BUBBLE_AME = 0;
    public const int IDU0_EFF_CMN_EFF_BULLET_AME = 0;
    public const int IDU0_EFF_CMN_EFF_BULLET_CORE_AME = 0;
    public const int IDU0_EFF_CMN_EFF_BUMPER_AME = 0;
    public const int IDU0_EFF_CMN_EFF_BUMPER_1_AME = 0;
    public const int IDU0_EFF_CMN_EFF_BUMPER_2_AME = 0;
    public const int IDU0_EFF_CMN_EFF_BUMPER_LOST_AME = 0;
    public const int IDU0_EFF_CMN_EFF_CANON_AME = 0;
    public const int IDU0_EFF_CMN_EFF_CAP_KEY1_AME = 0;
    public const int IDU0_EFF_CMN_EFF_CAP_KEY2_AME = 0;
    public const int IDU0_EFF_CMN_EFF_CAP_OPEN_AME = 0;
    public const int IDU0_EFF_CMN_EFF_COUNT0_AME = 0;
    public const int IDU0_EFF_CMN_EFF_COUNT1_AME = 0;
    public const int IDU0_EFF_CMN_EFF_COUNT2_AME = 0;
    public const int IDU0_EFF_CMN_EFF_COUNT3_AME = 0;
    public const int IDU0_EFF_CMN_EFF_COUNT4_AME = 0;
    public const int IDU0_EFF_CMN_EFF_COUNT5_AME = 0;
    public const int IDU0_EFF_CMN_EFF_DASH_AME = 0;
    public const int IDU0_EFF_CMN_EFF_DEATH_AME = 0;
    public const int IDU0_EFF_CMN_EFF_GOAL_AME = 0;
    public const int IDU0_EFF_CMN_EFF_H_ATTACK_00_AME = 0;
    public const int IDU0_EFF_CMN_EFF_H_ATTACK_01_AME = 0;
    public const int IDU0_EFF_CMN_EFF_H_ATTACK_02_AME = 0;
    public const int IDU0_EFF_CMN_EFF_H_ATTACK_03_AME = 0;
    public const int IDU0_EFF_CMN_EFF_HIT_E_AME = 0;
    public const int IDU0_EFF_CMN_EFF_HIT_S_AME = 0;
    public const int IDU0_EFF_CMN_EFF_ITEM_AME = 0;
    public const int IDU0_EFF_CMN_EFF_ITEM_01_AME = 0;
    public const int IDU0_EFF_CMN_EFF_JUMP_AME = 0;
    public const int IDU0_EFF_CMN_EFF_MUTEKI_AME = 0;
    public const int IDU0_EFF_CMN_EFF_MUTEKI2_AME = 0;
    public const int IDU0_EFF_CMN_EFF_PILLAR_F_01_AME = 0;
    public const int IDU0_EFF_CMN_EFF_PILLAR_F_02_AME = 0;
    public const int IDU0_EFF_CMN_EFF_PILLAR_F_03_AME = 0;
    public const int IDU0_EFF_CMN_EFF_PILLAR_F_HIT_AME = 0;
    public const int IDU0_EFF_CMN_EFF_PISTON_AME = 0;
    public const int IDU0_EFF_CMN_EFF_POINT_AME = 0;
    public const int IDU0_EFF_CMN_EFF_RING_AME = 0;
    public const int IDU0_EFF_CMN_EFF_ROLLDASH_AME = 0;
    public const int IDU0_EFF_CMN_EFF_ROLLDASH_L_AME = 0;
    public const int IDU0_EFF_CMN_EFF_ROLLDASH_R_AME = 0;
    public const int IDU0_EFF_CMN_EFF_ROLLDASH_S_AME = 0;
    public const int IDU0_EFF_CMN_EFF_RUN_AME = 0;
    public const int IDU0_EFF_CMN_EFF_SCORE_0_AME = 0;
    public const int IDU0_EFF_CMN_EFF_SCORE_1_AME = 0;
    public const int IDU0_EFF_CMN_EFF_SCORE_2_AME = 0;
    public const int IDU0_EFF_CMN_EFF_SCORE_3_AME = 0;
    public const int IDU0_EFF_CMN_EFF_SCORE_4_AME = 0;
    public const int IDU0_EFF_CMN_EFF_SCORE_5_AME = 0;
    public const int IDU0_EFF_CMN_EFF_SCORE_6_AME = 0;
    public const int IDU0_EFF_CMN_EFF_SCORE_7_AME = 0;
    public const int IDU0_EFF_CMN_EFF_SCORE_8_AME = 0;
    public const int IDU0_EFF_CMN_EFF_SCORE_9_AME = 0;
    public const int IDU0_EFF_CMN_EFF_SMORK_B_Z2_AME = 0;
    public const int IDU0_EFF_CMN_EFF_SMORK_B_Z4_AME = 0;
    public const int IDU0_EFF_CMN_EFF_SMORK_S_Z2_AME = 0;
    public const int IDU0_EFF_CMN_EFF_SMORK_S_Z4_AME = 0;
    public const int IDU0_EFF_CMN_EFF_SPIN_AME = 0;
    public const int IDU0_EFF_CMN_EFF_SPIN_00_AME = 0;
    public const int IDU0_EFF_CMN_EFF_SPIN_01_AME = 0;
    public const int IDU0_EFF_CMN_EFF_SPIN_D_AME = 0;
    public const int IDU0_EFF_CMN_EFF_SPIN_D_B_AME = 0;
    public const int IDU0_EFF_CMN_EFF_SPIN_START_AME = 0;
    public const int IDU0_EFF_CMN_EFF_SPRAY_AME = 0;
    public const int IDU0_EFF_CMN_EFF_SPRING_AME = 0;
    public const int IDU0_EFF_CMN_EFF_SPRING_00_AME = 0;
    public const int IDU0_EFF_CMN_EFF_SPRING_01_AME = 0;
    public const int IDU0_EFF_CMN_EFF_SS_END_AME = 0;
    public const int IDU0_EFF_CMN_EFF_SS_SPIN_AME = 0;
    public const int IDU0_EFF_CMN_EFF_SS_SPIN_D_AME = 0;
    public const int IDU0_EFF_CMN_EFF_SS_SPIN_D_B_AME = 0;
    public const int IDU0_EFF_CMN_EFF_SS_SPIN_START_AME = 0;
    public const int IDU0_EFF_CMN_EFF_SS_START_AME = 0;
    public const int IDU0_EFF_CMN_EFF_STEAM_AME = 0;
    public const int IDU0_EFF_CMN_EFF_STEAM_L_AME = 0;
    public const int IDU0_EFF_CMN_EFF_STEAM_M_AME = 0;
    public const int IDU0_EFF_CMN_EFF_STEAM_S_AME = 0;
    public const int IDU0_EFF_CMN_EFF_STEAM_SET_AME = 0;
    public const int IDU0_EFF_CMN_EFF_STEAM_SET_SS_AME = 0;
    public const int IDU0_EFF_CMN_EFF_STEAM_SHOT_AME = 0;
    public const int IDU0_EFF_CMN_EFF_SWEAT_AME = 0;
    public const int IDU0_EFF_CMN_EFF_TARGET_E_AME = 0;
    public const int IDU0_EFF_CMN_EFF_TARGET_S_AME = 0;
    public const int IDU0_EFF_CMN_EFF_TOGEBALL_AME = 0;
    public const int IDU0_EFF_CMN_EFF_CMN_TEX_AMB = 0;
    public const int IDU0_EFF_CMN_EFF_BARRIER_ZNO = 0;
    public const int IDU0_EFF_CMN_EFF_HATTACK_01_ZNO = 0;
    public const int IDU0_EFF_CMN_EFF_SFOOT_L_ZNO = 0;
    public const int IDU0_EFF_CMN_EFF_SFOOT_R_ZNO = 0;
    public const int IDU0_EFF_CMN_EFF_SPRING1_ZNO = 0;
    public const int IDU0_EFF_CMN_EFF_CMN_TEX_MD_BA_AMB = 0;
    public const int IDU0_EFF_CMN_EFF_CMN_TEX_MD_HA_AMB = 0;
    public const int IDU0_EFF_CMN_EFF_CMN_TEX_MD_RD_AMB = 0;
    public const int IDU0_EFF_CMN_EFF_CMN_TEX_MD_SP_AMB = 0;
    public const int IDU1_EFF_CMN_EFF_AURA_00_AME = 0;
    public const int IDU1_EFF_CMN_EFF_AURA_01_AME = 0;
    public const int IDU1_EFF_CMN_EFF_AURA_02_AME = 0;
    public const int IDU1_EFF_CMN_EFF_AURA_03_AME = 0;
    public const int IDU1_EFF_CMN_EFF_BARRIER_AME = 0;
    public const int IDU1_EFF_CMN_EFF_BARRIER_01_AME = 0;
    public const int IDU1_EFF_CMN_EFF_BARRIER_LOST_AME = 0;
    public const int IDU1_EFF_CMN_EFF_BOMB_AME = 0;
    public const int IDU1_EFF_CMN_EFF_BOMB_BIG_AME = 0;
    public const int IDU1_EFF_CMN_EFF_BOMB_KAMA_AME = 0;
    public const int IDU1_EFF_CMN_EFF_BOMB_SMOKE_AME = 0;
    public const int IDU1_EFF_CMN_EFF_BRAKE_AME = 0;
    public const int IDU1_EFF_CMN_EFF_BRAKE_S_AME = 0;
    public const int IDU1_EFF_CMN_EFF_BUBBLE_AME = 0;
    public const int IDU1_EFF_CMN_EFF_BULLET_AME = 0;
    public const int IDU1_EFF_CMN_EFF_BULLET_CORE_AME = 0;
    public const int IDU1_EFF_CMN_EFF_BUMPER_AME = 0;
    public const int IDU1_EFF_CMN_EFF_BUMPER_1_AME = 0;
    public const int IDU1_EFF_CMN_EFF_BUMPER_2_AME = 0;
    public const int IDU1_EFF_CMN_EFF_BUMPER_LOST_AME = 0;
    public const int IDU1_EFF_CMN_EFF_CANON_AME = 0;
    public const int IDU1_EFF_CMN_EFF_CAP_KEY1_AME = 0;
    public const int IDU1_EFF_CMN_EFF_CAP_KEY2_AME = 0;
    public const int IDU1_EFF_CMN_EFF_CAP_OPEN_AME = 0;
    public const int IDU1_EFF_CMN_EFF_COUNT0_AME = 0;
    public const int IDU1_EFF_CMN_EFF_COUNT1_AME = 0;
    public const int IDU1_EFF_CMN_EFF_COUNT2_AME = 0;
    public const int IDU1_EFF_CMN_EFF_COUNT3_AME = 0;
    public const int IDU1_EFF_CMN_EFF_COUNT4_AME = 0;
    public const int IDU1_EFF_CMN_EFF_COUNT5_AME = 0;
    public const int IDU1_EFF_CMN_EFF_DASH_AME = 0;
    public const int IDU1_EFF_CMN_EFF_DEATH_AME = 0;
    public const int IDU1_EFF_CMN_EFF_GOAL_AME = 0;
    public const int IDU1_EFF_CMN_EFF_H_ATTACK_00_AME = 0;
    public const int IDU1_EFF_CMN_EFF_H_ATTACK_01_AME = 0;
    public const int IDU1_EFF_CMN_EFF_H_ATTACK_02_AME = 0;
    public const int IDU1_EFF_CMN_EFF_H_ATTACK_03_AME = 0;
    public const int IDU1_EFF_CMN_EFF_HIT_E_AME = 0;
    public const int IDU1_EFF_CMN_EFF_HIT_S_AME = 0;
    public const int IDU1_EFF_CMN_EFF_ITEM_AME = 0;
    public const int IDU1_EFF_CMN_EFF_ITEM_01_AME = 0;
    public const int IDU1_EFF_CMN_EFF_JUMP_AME = 0;
    public const int IDU1_EFF_CMN_EFF_MUTEKI_AME = 0;
    public const int IDU1_EFF_CMN_EFF_MUTEKI2_AME = 0;
    public const int IDU1_EFF_CMN_EFF_PILLAR_F_01_AME = 0;
    public const int IDU1_EFF_CMN_EFF_PILLAR_F_02_AME = 0;
    public const int IDU1_EFF_CMN_EFF_PILLAR_F_03_AME = 0;
    public const int IDU1_EFF_CMN_EFF_PILLAR_F_HIT_AME = 0;
    public const int IDU1_EFF_CMN_EFF_PISTON_AME = 0;
    public const int IDU1_EFF_CMN_EFF_POINT_AME = 0;
    public const int IDU1_EFF_CMN_EFF_RING_AME = 0;
    public const int IDU1_EFF_CMN_EFF_ROLLDASH_AME = 0;
    public const int IDU1_EFF_CMN_EFF_ROLLDASH_L_AME = 0;
    public const int IDU1_EFF_CMN_EFF_ROLLDASH_R_AME = 0;
    public const int IDU1_EFF_CMN_EFF_ROLLDASH_S_AME = 0;
    public const int IDU1_EFF_CMN_EFF_RUN_AME = 0;
    public const int IDU1_EFF_CMN_EFF_SCORE_0_AME = 0;
    public const int IDU1_EFF_CMN_EFF_SCORE_1_AME = 0;
    public const int IDU1_EFF_CMN_EFF_SCORE_2_AME = 0;
    public const int IDU1_EFF_CMN_EFF_SCORE_3_AME = 0;
    public const int IDU1_EFF_CMN_EFF_SCORE_4_AME = 0;
    public const int IDU1_EFF_CMN_EFF_SCORE_5_AME = 0;
    public const int IDU1_EFF_CMN_EFF_SCORE_6_AME = 0;
    public const int IDU1_EFF_CMN_EFF_SCORE_7_AME = 0;
    public const int IDU1_EFF_CMN_EFF_SCORE_8_AME = 0;
    public const int IDU1_EFF_CMN_EFF_SCORE_9_AME = 0;
    public const int IDU1_EFF_CMN_EFF_SMORK_B_Z2_AME = 0;
    public const int IDU1_EFF_CMN_EFF_SMORK_B_Z4_AME = 0;
    public const int IDU1_EFF_CMN_EFF_SMORK_S_Z2_AME = 0;
    public const int IDU1_EFF_CMN_EFF_SMORK_S_Z4_AME = 0;
    public const int IDU1_EFF_CMN_EFF_SPIN_AME = 0;
    public const int IDU1_EFF_CMN_EFF_SPIN_00_AME = 0;
    public const int IDU1_EFF_CMN_EFF_SPIN_01_AME = 0;
    public const int IDU1_EFF_CMN_EFF_SPIN_D_AME = 0;
    public const int IDU1_EFF_CMN_EFF_SPIN_D_B_AME = 0;
    public const int IDU1_EFF_CMN_EFF_SPIN_START_AME = 0;
    public const int IDU1_EFF_CMN_EFF_SPRAY_AME = 0;
    public const int IDU1_EFF_CMN_EFF_SPRING_AME = 0;
    public const int IDU1_EFF_CMN_EFF_SPRING_00_AME = 0;
    public const int IDU1_EFF_CMN_EFF_SPRING_01_AME = 0;
    public const int IDU1_EFF_CMN_EFF_SS_END_AME = 0;
    public const int IDU1_EFF_CMN_EFF_SS_SPIN_AME = 0;
    public const int IDU1_EFF_CMN_EFF_SS_SPIN_D_AME = 0;
    public const int IDU1_EFF_CMN_EFF_SS_SPIN_D_B_AME = 0;
    public const int IDU1_EFF_CMN_EFF_SS_SPIN_START_AME = 0;
    public const int IDU1_EFF_CMN_EFF_SS_START_AME = 0;
    public const int IDU1_EFF_CMN_EFF_STEAM_AME = 0;
    public const int IDU1_EFF_CMN_EFF_STEAM_L_AME = 0;
    public const int IDU1_EFF_CMN_EFF_STEAM_M_AME = 0;
    public const int IDU1_EFF_CMN_EFF_STEAM_S_AME = 0;
    public const int IDU1_EFF_CMN_EFF_STEAM_SET_AME = 0;
    public const int IDU1_EFF_CMN_EFF_STEAM_SET_SS_AME = 0;
    public const int IDU1_EFF_CMN_EFF_STEAM_SHOT_AME = 0;
    public const int IDU1_EFF_CMN_EFF_SWEAT_AME = 0;
    public const int IDU1_EFF_CMN_EFF_TARGET_E_AME = 0;
    public const int IDU1_EFF_CMN_EFF_TARGET_S_AME = 0;
    public const int IDU1_EFF_CMN_EFF_TOGEBALL_AME = 0;
    public const int IDU1_EFF_CMN_EFF_CMN_TEX_AMB = 0;
    public const int IDU1_EFF_CMN_EFF_BARRIER_ZNO = 0;
    public const int IDU1_EFF_CMN_EFF_HATTACK_01_ZNO = 0;
    public const int IDU1_EFF_CMN_EFF_SFOOT_L_ZNO = 0;
    public const int IDU1_EFF_CMN_EFF_SFOOT_R_ZNO = 0;
    public const int IDU1_EFF_CMN_EFF_SPRING1_ZNO = 0;
    public const int IDU1_EFF_CMN_EFF_CMN_TEX_MD_BA_AMB = 0;
    public const int IDU1_EFF_CMN_EFF_CMN_TEX_MD_HA_AMB = 0;
    public const int IDU1_EFF_CMN_EFF_CMN_TEX_MD_RD_AMB = 0;
    public const int IDU1_EFF_CMN_EFF_CMN_TEX_MD_SP_AMB = 0;
    public const string IDS_EFF_CMN_EFF_AURA_00_AME = "EFF_AURA_00.AME";
    public const string IDS_EFF_CMN_EFF_AURA_01_AME = "EFF_AURA_01.AME";
    public const string IDS_EFF_CMN_EFF_AURA_02_AME = "EFF_AURA_02.AME";
    public const string IDS_EFF_CMN_EFF_AURA_03_AME = "EFF_AURA_03.AME";
    public const string IDS_EFF_CMN_EFF_BARRIER_AME = "EFF_BARRIER.AME";
    public const string IDS_EFF_CMN_EFF_BARRIER_01_AME = "EFF_BARRIER_01.AME";
    public const string IDS_EFF_CMN_EFF_BARRIER_LOST_AME = "EFF_BARRIER_LOST.AME";
    public const string IDS_EFF_CMN_EFF_BOMB_AME = "EFF_BOMB.AME";
    public const string IDS_EFF_CMN_EFF_BOMB_BIG_AME = "EFF_BOMB_BIG.AME";
    public const string IDS_EFF_CMN_EFF_BOMB_KAMA_AME = "EFF_BOMB_KAMA.AME";
    public const string IDS_EFF_CMN_EFF_BOMB_SMOKE_AME = "EFF_BOMB_SMOKE.AME";
    public const string IDS_EFF_CMN_EFF_BRAKE_AME = "EFF_BRAKE.AME";
    public const string IDS_EFF_CMN_EFF_BRAKE_S_AME = "EFF_BRAKE_S.AME";
    public const string IDS_EFF_CMN_EFF_BUBBLE_AME = "EFF_BUBBLE.AME";
    public const string IDS_EFF_CMN_EFF_BULLET_AME = "EFF_BULLET.AME";
    public const string IDS_EFF_CMN_EFF_BULLET_CORE_AME = "EFF_BULLET_CORE.AME";
    public const string IDS_EFF_CMN_EFF_BUMPER_AME = "EFF_BUMPER.AME";
    public const string IDS_EFF_CMN_EFF_BUMPER_1_AME = "EFF_BUMPER_1.AME";
    public const string IDS_EFF_CMN_EFF_BUMPER_2_AME = "EFF_BUMPER_2.AME";
    public const string IDS_EFF_CMN_EFF_BUMPER_LOST_AME = "EFF_BUMPER_LOST.AME";
    public const string IDS_EFF_CMN_EFF_CANON_AME = "EFF_CANON.AME";
    public const string IDS_EFF_CMN_EFF_CAP_KEY1_AME = "EFF_CAP_KEY1.AME";
    public const string IDS_EFF_CMN_EFF_CAP_KEY2_AME = "EFF_CAP_KEY2.AME";
    public const string IDS_EFF_CMN_EFF_CAP_OPEN_AME = "EFF_CAP_OPEN.AME";
    public const string IDS_EFF_CMN_EFF_COUNT0_AME = "EFF_COUNT0.AME";
    public const string IDS_EFF_CMN_EFF_COUNT1_AME = "EFF_COUNT1.AME";
    public const string IDS_EFF_CMN_EFF_COUNT2_AME = "EFF_COUNT2.AME";
    public const string IDS_EFF_CMN_EFF_COUNT3_AME = "EFF_COUNT3.AME";
    public const string IDS_EFF_CMN_EFF_COUNT4_AME = "EFF_COUNT4.AME";
    public const string IDS_EFF_CMN_EFF_COUNT5_AME = "EFF_COUNT5.AME";
    public const string IDS_EFF_CMN_EFF_DASH_AME = "EFF_DASH.AME";
    public const string IDS_EFF_CMN_EFF_DEATH_AME = "EFF_DEATH.AME";
    public const string IDS_EFF_CMN_EFF_GOAL_AME = "EFF_GOAL.AME";
    public const string IDS_EFF_CMN_EFF_H_ATTACK_00_AME = "EFF_H_ATTACK_00.AME";
    public const string IDS_EFF_CMN_EFF_H_ATTACK_01_AME = "EFF_H_ATTACK_01.AME";
    public const string IDS_EFF_CMN_EFF_H_ATTACK_02_AME = "EFF_H_ATTACK_02.AME";
    public const string IDS_EFF_CMN_EFF_H_ATTACK_03_AME = "EFF_H_ATTACK_03.AME";
    public const string IDS_EFF_CMN_EFF_HIT_E_AME = "EFF_HIT_E.AME";
    public const string IDS_EFF_CMN_EFF_HIT_S_AME = "EFF_HIT_S.AME";
    public const string IDS_EFF_CMN_EFF_ITEM_AME = "EFF_ITEM.AME";
    public const string IDS_EFF_CMN_EFF_ITEM_01_AME = "EFF_ITEM_01.AME";
    public const string IDS_EFF_CMN_EFF_JUMP_AME = "EFF_JUMP.AME";
    public const string IDS_EFF_CMN_EFF_MUTEKI_AME = "EFF_MUTEKI.AME";
    public const string IDS_EFF_CMN_EFF_MUTEKI2_AME = "EFF_MUTEKI2.AME";
    public const string IDS_EFF_CMN_EFF_PILLAR_F_01_AME = "EFF_PILLAR_F_01.AME";
    public const string IDS_EFF_CMN_EFF_PILLAR_F_02_AME = "EFF_PILLAR_F_02.AME";
    public const string IDS_EFF_CMN_EFF_PILLAR_F_03_AME = "EFF_PILLAR_F_03.AME";
    public const string IDS_EFF_CMN_EFF_PILLAR_F_HIT_AME = "EFF_PILLAR_F_HIT.AME";
    public const string IDS_EFF_CMN_EFF_PISTON_AME = "EFF_PISTON.AME";
    public const string IDS_EFF_CMN_EFF_POINT_AME = "EFF_POINT.AME";
    public const string IDS_EFF_CMN_EFF_RING_AME = "EFF_RING.AME";
    public const string IDS_EFF_CMN_EFF_ROLLDASH_AME = "EFF_ROLLDASH.AME";
    public const string IDS_EFF_CMN_EFF_ROLLDASH_L_AME = "EFF_ROLLDASH_L.AME";
    public const string IDS_EFF_CMN_EFF_ROLLDASH_R_AME = "EFF_ROLLDASH_R.AME";
    public const string IDS_EFF_CMN_EFF_ROLLDASH_S_AME = "EFF_ROLLDASH_S.AME";
    public const string IDS_EFF_CMN_EFF_RUN_AME = "EFF_RUN.AME";
    public const string IDS_EFF_CMN_EFF_SCORE_0_AME = "EFF_SCORE_0.AME";
    public const string IDS_EFF_CMN_EFF_SCORE_1_AME = "EFF_SCORE_1.AME";
    public const string IDS_EFF_CMN_EFF_SCORE_2_AME = "EFF_SCORE_2.AME";
    public const string IDS_EFF_CMN_EFF_SCORE_3_AME = "EFF_SCORE_3.AME";
    public const string IDS_EFF_CMN_EFF_SCORE_4_AME = "EFF_SCORE_4.AME";
    public const string IDS_EFF_CMN_EFF_SCORE_5_AME = "EFF_SCORE_5.AME";
    public const string IDS_EFF_CMN_EFF_SCORE_6_AME = "EFF_SCORE_6.AME";
    public const string IDS_EFF_CMN_EFF_SCORE_7_AME = "EFF_SCORE_7.AME";
    public const string IDS_EFF_CMN_EFF_SCORE_8_AME = "EFF_SCORE_8.AME";
    public const string IDS_EFF_CMN_EFF_SCORE_9_AME = "EFF_SCORE_9.AME";
    public const string IDS_EFF_CMN_EFF_SMORK_B_Z2_AME = "EFF_SMORK_B_Z2.AME";
    public const string IDS_EFF_CMN_EFF_SMORK_B_Z4_AME = "EFF_SMORK_B_Z4.AME";
    public const string IDS_EFF_CMN_EFF_SMORK_S_Z2_AME = "EFF_SMORK_S_Z2.AME";
    public const string IDS_EFF_CMN_EFF_SMORK_S_Z4_AME = "EFF_SMORK_S_Z4.AME";
    public const string IDS_EFF_CMN_EFF_SPIN_AME = "EFF_SPIN.AME";
    public const string IDS_EFF_CMN_EFF_SPIN_00_AME = "EFF_SPIN_00.AME";
    public const string IDS_EFF_CMN_EFF_SPIN_01_AME = "EFF_SPIN_01.AME";
    public const string IDS_EFF_CMN_EFF_SPIN_D_AME = "EFF_SPIN_D.AME";
    public const string IDS_EFF_CMN_EFF_SPIN_D_B_AME = "EFF_SPIN_D_B.AME";
    public const string IDS_EFF_CMN_EFF_SPIN_START_AME = "EFF_SPIN_START.AME";
    public const string IDS_EFF_CMN_EFF_SPRAY_AME = "EFF_SPRAY.AME";
    public const string IDS_EFF_CMN_EFF_SPRING_AME = "EFF_SPRING.AME";
    public const string IDS_EFF_CMN_EFF_SPRING_00_AME = "EFF_SPRING_00.AME";
    public const string IDS_EFF_CMN_EFF_SPRING_01_AME = "EFF_SPRING_01.AME";
    public const string IDS_EFF_CMN_EFF_SS_END_AME = "EFF_SS_END.AME";
    public const string IDS_EFF_CMN_EFF_SS_SPIN_AME = "EFF_SS_SPIN.AME";
    public const string IDS_EFF_CMN_EFF_SS_SPIN_D_AME = "EFF_SS_SPIN_D.AME";
    public const string IDS_EFF_CMN_EFF_SS_SPIN_D_B_AME = "EFF_SS_SPIN_D_B.AME";
    public const string IDS_EFF_CMN_EFF_SS_SPIN_START_AME = "EFF_SS_SPIN_START.AME";
    public const string IDS_EFF_CMN_EFF_SS_START_AME = "EFF_SS_START.AME";
    public const string IDS_EFF_CMN_EFF_STEAM_AME = "EFF_STEAM.AME";
    public const string IDS_EFF_CMN_EFF_STEAM_L_AME = "EFF_STEAM_L.AME";
    public const string IDS_EFF_CMN_EFF_STEAM_M_AME = "EFF_STEAM_M.AME";
    public const string IDS_EFF_CMN_EFF_STEAM_S_AME = "EFF_STEAM_S.AME";
    public const string IDS_EFF_CMN_EFF_STEAM_SET_AME = "EFF_STEAM_SET.AME";
    public const string IDS_EFF_CMN_EFF_STEAM_SET_SS_AME = "EFF_STEAM_SET_SS.AME";
    public const string IDS_EFF_CMN_EFF_STEAM_SHOT_AME = "EFF_STEAM_SHOT.AME";
    public const string IDS_EFF_CMN_EFF_SWEAT_AME = "EFF_SWEAT.AME";
    public const string IDS_EFF_CMN_EFF_TARGET_E_AME = "EFF_TARGET_E.AME";
    public const string IDS_EFF_CMN_EFF_TARGET_S_AME = "EFF_TARGET_S.AME";
    public const string IDS_EFF_CMN_EFF_TOGEBALL_AME = "EFF_TOGEBALL.AME";
    public const string IDS_EFF_CMN_EFF_CMN_TEX_AMB = "EFF_CMN_TEX.AMB";
    public const string IDS_EFF_CMN_EFF_BARRIER_ZNO = "EFF_BARRIER.ZNO";
    public const string IDS_EFF_CMN_EFF_HATTACK_01_ZNO = "EFF_HATTACK_01.ZNO";
    public const string IDS_EFF_CMN_EFF_SFOOT_L_ZNO = "EFF_SFOOT_L.ZNO";
    public const string IDS_EFF_CMN_EFF_SFOOT_R_ZNO = "EFF_SFOOT_R.ZNO";
    public const string IDS_EFF_CMN_EFF_SPRING1_ZNO = "EFF_SPRING1.ZNO";
    public const string IDS_EFF_CMN_EFF_CMN_TEX_MD_BA_AMB = "EFF_CMN_TEX_MD_BA.AMB";
    public const string IDS_EFF_CMN_EFF_CMN_TEX_MD_HA_AMB = "EFF_CMN_TEX_MD_HA.AMB";
    public const string IDS_EFF_CMN_EFF_CMN_TEX_MD_RD_AMB = "EFF_CMN_TEX_MD_RD.AMB";
    public const string IDS_EFF_CMN_EFF_CMN_TEX_MD_SP_AMB = "EFF_CMN_TEX_MD_SP.AMB";
    public const int IDB_EFF_E002_EFF_JET_S_AME = 0;
    public const int IDB_EFF_E002_EFF_JET_S_SMORK_AME = 1;
    public const int IDB_EFF_E002_EFF_E002_TEX_AMB = 2;
    public const int IDU0_EFF_E002_EFF_JET_S_AME = 0;
    public const int IDU0_EFF_E002_EFF_JET_S_SMORK_AME = 0;
    public const int IDU0_EFF_E002_EFF_E002_TEX_AMB = 0;
    public const int IDU1_EFF_E002_EFF_JET_S_AME = 0;
    public const int IDU1_EFF_E002_EFF_JET_S_SMORK_AME = 0;
    public const int IDU1_EFF_E002_EFF_E002_TEX_AMB = 0;
    public const string IDS_EFF_E002_EFF_JET_S_AME = "EFF_JET_S.AME";
    public const string IDS_EFF_E002_EFF_JET_S_SMORK_AME = "EFF_JET_S_SMORK.AME";
    public const string IDS_EFF_E002_EFF_E002_TEX_AMB = "EFF_E002_TEX.AMB";
    public const int IDB_EFF_E004_EFF_MEREON_MISS_AME = 0;
    public const int IDB_EFF_E004_EFF_E004_TEX_AMB = 1;
    public const int IDU0_EFF_E004_EFF_MEREON_MISS_AME = 0;
    public const int IDU0_EFF_E004_EFF_E004_TEX_AMB = 0;
    public const int IDU1_EFF_E004_EFF_MEREON_MISS_AME = 0;
    public const int IDU1_EFF_E004_EFF_E004_TEX_AMB = 0;
    public const string IDS_EFF_E004_EFF_MEREON_MISS_AME = "EFF_MEREON_MISS.AME";
    public const string IDS_EFF_E004_EFF_E004_TEX_AMB = "EFF_E004_TEX.AMB";
    public const int IDB_EFF_E005_EFF_GUARD_AME = 0;
    public const int IDB_EFF_E005_EFF_E005_TEX_AMB = 1;
    public const int IDU0_EFF_E005_EFF_GUARD_AME = 0;
    public const int IDU0_EFF_E005_EFF_E005_TEX_AMB = 0;
    public const int IDU1_EFF_E005_EFF_GUARD_AME = 0;
    public const int IDU1_EFF_E005_EFF_E005_TEX_AMB = 0;
    public const string IDS_EFF_E005_EFF_GUARD_AME = "EFF_GUARD.AME";
    public const string IDS_EFF_E005_EFF_E005_TEX_AMB = "EFF_E005_TEX.AMB";
    public const int IDB_EFF_E006_EFF_HARO_AME = 0;
    public const int IDB_EFF_E006_EFF_E006_TEX_AMB = 1;
    public const int IDU0_EFF_E006_EFF_HARO_AME = 0;
    public const int IDU0_EFF_E006_EFF_E006_TEX_AMB = 0;
    public const int IDU1_EFF_E006_EFF_HARO_AME = 0;
    public const int IDU1_EFF_E006_EFF_E006_TEX_AMB = 0;
    public const string IDS_EFF_E006_EFF_HARO_AME = "EFF_HARO.AME";
    public const string IDS_EFF_E006_EFF_E006_TEX_AMB = "EFF_E006_TEX.AMB";
    public const int IDB_EFF_E007_EFF_MOGU_E_AME = 0;
    public const int IDB_EFF_E007_EFF_MOGU_W_AME = 1;
    public const int IDB_EFF_E007_EFF_E007_TEX_AMB = 2;
    public const int IDU0_EFF_E007_EFF_MOGU_E_AME = 0;
    public const int IDU0_EFF_E007_EFF_MOGU_W_AME = 0;
    public const int IDU0_EFF_E007_EFF_E007_TEX_AMB = 0;
    public const int IDU1_EFF_E007_EFF_MOGU_E_AME = 0;
    public const int IDU1_EFF_E007_EFF_MOGU_W_AME = 0;
    public const int IDU1_EFF_E007_EFF_E007_TEX_AMB = 0;
    public const string IDS_EFF_E007_EFF_MOGU_E_AME = "EFF_MOGU_E.AME";
    public const string IDS_EFF_E007_EFF_MOGU_W_AME = "EFF_MOGU_W.AME";
    public const string IDS_EFF_E007_EFF_E007_TEX_AMB = "EFF_E007_TEX.AMB";
    public const int IDB_EFF_E010_EFF_BUKUBUKU_AME = 0;
    public const int IDB_EFF_E010_EFF_E010_TEX_AMB = 1;
    public const int IDU0_EFF_E010_EFF_BUKUBUKU_AME = 0;
    public const int IDU0_EFF_E010_EFF_E010_TEX_AMB = 0;
    public const int IDU1_EFF_E010_EFF_BUKUBUKU_AME = 0;
    public const int IDU1_EFF_E010_EFF_E010_TEX_AMB = 0;
    public const string IDS_EFF_E010_EFF_BUKUBUKU_AME = "EFF_BUKUBUKU.AME";
    public const string IDS_EFF_E010_EFF_E010_TEX_AMB = "EFF_E010_TEX.AMB";
    public const int IDB_EFF_E013_EFF_CROW_AME = 0;
    public const int IDB_EFF_E013_EFF_T_STAR_AME = 1;
    public const int IDB_EFF_E013_EFF_E013_TEX_AMB = 2;
    public const int IDU0_EFF_E013_EFF_CROW_AME = 0;
    public const int IDU0_EFF_E013_EFF_T_STAR_AME = 0;
    public const int IDU0_EFF_E013_EFF_E013_TEX_AMB = 0;
    public const int IDU1_EFF_E013_EFF_CROW_AME = 0;
    public const int IDU1_EFF_E013_EFF_T_STAR_AME = 0;
    public const int IDU1_EFF_E013_EFF_E013_TEX_AMB = 0;
    public const string IDS_EFF_E013_EFF_CROW_AME = "EFF_CROW.AME";
    public const string IDS_EFF_E013_EFF_T_STAR_AME = "EFF_T_STAR.AME";
    public const string IDS_EFF_E013_EFF_E013_TEX_AMB = "EFF_E013_TEX.AMB";
    public const int IDB_EFF_E014_EFF_JET_H_AME = 0;
    public const int IDB_EFF_E014_EFF_E014_TEX_AMB = 1;
    public const int IDU0_EFF_E014_EFF_JET_H_AME = 0;
    public const int IDU0_EFF_E014_EFF_E014_TEX_AMB = 0;
    public const int IDU1_EFF_E014_EFF_JET_H_AME = 0;
    public const int IDU1_EFF_E014_EFF_E014_TEX_AMB = 0;
    public const string IDS_EFF_E014_EFF_JET_H_AME = "EFF_JET_H.AME";
    public const string IDS_EFF_E014_EFF_E014_TEX_AMB = "EFF_E014_TEX.AMB";
    public const int IDB_EFF_ZONE1_EFF_ASHIBA_AME = 0;
    public const int IDB_EFF_ZONE1_EFF_ITEM_Z1_AME = 1;
    public const int IDB_EFF_ZONE1_EFF_OBJECT_Z1_AME = 2;
    public const int IDB_EFF_ZONE1_EFF_OBJECT_Z1_A3_AME = 3;
    public const int IDB_EFF_ZONE1_EFF_SMORK_B_Z1_AME = 4;
    public const int IDB_EFF_ZONE1_EFF_SMORK_S_Z1_AME = 5;
    public const int IDB_EFF_ZONE1_EFF_SPARK_K_AME = 6;
    public const int IDB_EFF_ZONE1_EFF_TAKI_Z1_AME = 7;
    public const int IDB_EFF_ZONE1_EFF_WALL_Z1_AME = 8;
    public const int IDB_EFF_ZONE1_EFF_ZONE1_TEX_AMB = 9;
    public const int IDU0_EFF_ZONE1_EFF_ASHIBA_AME = 0;
    public const int IDU0_EFF_ZONE1_EFF_ITEM_Z1_AME = 0;
    public const int IDU0_EFF_ZONE1_EFF_OBJECT_Z1_AME = 0;
    public const int IDU0_EFF_ZONE1_EFF_OBJECT_Z1_A3_AME = 0;
    public const int IDU0_EFF_ZONE1_EFF_SMORK_B_Z1_AME = 0;
    public const int IDU0_EFF_ZONE1_EFF_SMORK_S_Z1_AME = 0;
    public const int IDU0_EFF_ZONE1_EFF_SPARK_K_AME = 0;
    public const int IDU0_EFF_ZONE1_EFF_TAKI_Z1_AME = 0;
    public const int IDU0_EFF_ZONE1_EFF_WALL_Z1_AME = 0;
    public const int IDU0_EFF_ZONE1_EFF_ZONE1_TEX_AMB = 0;
    public const int IDU1_EFF_ZONE1_EFF_ASHIBA_AME = 0;
    public const int IDU1_EFF_ZONE1_EFF_ITEM_Z1_AME = 0;
    public const int IDU1_EFF_ZONE1_EFF_OBJECT_Z1_AME = 0;
    public const int IDU1_EFF_ZONE1_EFF_OBJECT_Z1_A3_AME = 0;
    public const int IDU1_EFF_ZONE1_EFF_SMORK_B_Z1_AME = 0;
    public const int IDU1_EFF_ZONE1_EFF_SMORK_S_Z1_AME = 0;
    public const int IDU1_EFF_ZONE1_EFF_SPARK_K_AME = 0;
    public const int IDU1_EFF_ZONE1_EFF_TAKI_Z1_AME = 0;
    public const int IDU1_EFF_ZONE1_EFF_WALL_Z1_AME = 0;
    public const int IDU1_EFF_ZONE1_EFF_ZONE1_TEX_AMB = 0;
    public const string IDS_EFF_ZONE1_EFF_ASHIBA_AME = "EFF_ASHIBA.AME";
    public const string IDS_EFF_ZONE1_EFF_ITEM_Z1_AME = "EFF_ITEM_Z1.AME";
    public const string IDS_EFF_ZONE1_EFF_OBJECT_Z1_AME = "EFF_OBJECT_Z1.AME";
    public const string IDS_EFF_ZONE1_EFF_OBJECT_Z1_A3_AME = "EFF_OBJECT_Z1_A3.AME";
    public const string IDS_EFF_ZONE1_EFF_SMORK_B_Z1_AME = "EFF_SMORK_B_Z1.AME";
    public const string IDS_EFF_ZONE1_EFF_SMORK_S_Z1_AME = "EFF_SMORK_S_Z1.AME";
    public const string IDS_EFF_ZONE1_EFF_SPARK_K_AME = "EFF_SPARK_K.AME";
    public const string IDS_EFF_ZONE1_EFF_TAKI_Z1_AME = "EFF_TAKI_Z1.AME";
    public const string IDS_EFF_ZONE1_EFF_WALL_Z1_AME = "EFF_WALL_Z1.AME";
    public const string IDS_EFF_ZONE1_EFF_ZONE1_TEX_AMB = "EFF_ZONE1_TEX.AMB";
    public const int IDB_EFF_ZONE2_EFF_OBJECT_Z2_AME = 0;
    public const int IDB_EFF_ZONE2_EFF_WLL_Z2_AME = 1;
    public const int IDB_EFF_ZONE2_EFF_ZONE2_TEX_AMB = 2;
    public const int IDU0_EFF_ZONE2_EFF_OBJECT_Z2_AME = 0;
    public const int IDU0_EFF_ZONE2_EFF_WLL_Z2_AME = 0;
    public const int IDU0_EFF_ZONE2_EFF_ZONE2_TEX_AMB = 0;
    public const int IDU1_EFF_ZONE2_EFF_OBJECT_Z2_AME = 0;
    public const int IDU1_EFF_ZONE2_EFF_WLL_Z2_AME = 0;
    public const int IDU1_EFF_ZONE2_EFF_ZONE2_TEX_AMB = 0;
    public const string IDS_EFF_ZONE2_EFF_OBJECT_Z2_AME = "EFF_OBJECT_Z2.AME";
    public const string IDS_EFF_ZONE2_EFF_WLL_Z2_AME = "EFF_WLL_Z2.AME";
    public const string IDS_EFF_ZONE2_EFF_ZONE2_TEX_AMB = "EFF_ZONE2_TEX.AMB";
    public const int IDB_EFF_ZONE3_EFF_BOMB_SMOKE_Z3_AME = 0;
    public const int IDB_EFF_ZONE3_EFF_BUBBLE_BIG_AME = 1;
    public const int IDB_EFF_ZONE3_EFF_BUBBLE_LOST_AME = 2;
    public const int IDB_EFF_ZONE3_EFF_BUBBLE_LOST_2_AME = 3;
    public const int IDB_EFF_ZONE3_EFF_BUBBLE_POINT_AME = 4;
    public const int IDB_EFF_ZONE3_EFF_CANDLE_01_AME = 5;
    public const int IDB_EFF_ZONE3_EFF_CANDLE_02_AME = 6;
    public const int IDB_EFF_ZONE3_EFF_CANDLE_03_AME = 7;
    public const int IDB_EFF_ZONE3_EFF_DASH_Z3_AME = 8;
    public const int IDB_EFF_ZONE3_EFF_ITEM_Z3_AME = 9;
    public const int IDB_EFF_ZONE3_EFF_LIGHT_01_AME = 10;
    public const int IDB_EFF_ZONE3_EFF_OBJECT_W_Z3_AME = 11;
    public const int IDB_EFF_ZONE3_EFF_OBJECT_Z3_AME = 12;
    public const int IDB_EFF_ZONE3_EFF_PILLAR_01_AME = 13;
    public const int IDB_EFF_ZONE3_EFF_PILLAR_02_AME = 14;
    public const int IDB_EFF_ZONE3_EFF_PILLAR_03_AME = 15;
    public const int IDB_EFF_ZONE3_EFF_PILLAR_HIT_AME = 16;
    public const int IDB_EFF_ZONE3_EFF_ROCK_01_AME = 17;
    public const int IDB_EFF_ZONE3_EFF_ROCK_02_AME = 18;
    public const int IDB_EFF_ZONE3_EFF_ROLLDASH_S_Z3_AME = 19;
    public const int IDB_EFF_ZONE3_EFF_RUN_Z3_AME = 20;
    public const int IDB_EFF_ZONE3_EFF_SLIDER_AME = 21;
    public const int IDB_EFF_ZONE3_EFF_SLIDER_02_AME = 22;
    public const int IDB_EFF_ZONE3_EFF_SLIDER_SONIC_AME = 23;
    public const int IDB_EFF_ZONE3_EFF_SMORK_B_Z3_AME = 24;
    public const int IDB_EFF_ZONE3_EFF_SMORK_S_Z3_AME = 25;
    public const int IDB_EFF_ZONE3_EFF_SPARK_AME = 26;
    public const int IDB_EFF_ZONE3_EFF_SPARK_S_AME = 27;
    public const int IDB_EFF_ZONE3_EFF_SPIN_02_AME = 28;
    public const int IDB_EFF_ZONE3_EFF_SPIN_03_AME = 29;
    public const int IDB_EFF_ZONE3_EFF_SPRAY_L_Z3_AME = 30;
    public const int IDB_EFF_ZONE3_EFF_SPRAY_S_Z3_AME = 31;
    public const int IDB_EFF_ZONE3_EFF_WALL_M_Z3_AME = 32;
    public const int IDB_EFF_ZONE3_EFF_WALL_Z3_AME = 33;
    public const int IDB_EFF_ZONE3_EFF_WATER_AME = 34;
    public const int IDB_EFF_ZONE3_EFF_WATER_02_AME = 35;
    public const int IDB_EFF_ZONE3_EFF_ZONE3_TEX_AMB = 36;
    public const int IDU0_EFF_ZONE3_EFF_BOMB_SMOKE_Z3_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_BUBBLE_BIG_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_BUBBLE_LOST_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_BUBBLE_LOST_2_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_BUBBLE_POINT_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_CANDLE_01_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_CANDLE_02_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_CANDLE_03_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_DASH_Z3_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_ITEM_Z3_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_LIGHT_01_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_OBJECT_W_Z3_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_OBJECT_Z3_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_PILLAR_01_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_PILLAR_02_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_PILLAR_03_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_PILLAR_HIT_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_ROCK_01_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_ROCK_02_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_ROLLDASH_S_Z3_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_RUN_Z3_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_SLIDER_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_SLIDER_02_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_SLIDER_SONIC_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_SMORK_B_Z3_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_SMORK_S_Z3_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_SPARK_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_SPARK_S_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_SPIN_02_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_SPIN_03_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_SPRAY_L_Z3_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_SPRAY_S_Z3_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_WALL_M_Z3_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_WALL_Z3_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_WATER_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_WATER_02_AME = 0;
    public const int IDU0_EFF_ZONE3_EFF_ZONE3_TEX_AMB = 0;
    public const int IDU1_EFF_ZONE3_EFF_BOMB_SMOKE_Z3_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_BUBBLE_BIG_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_BUBBLE_LOST_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_BUBBLE_LOST_2_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_BUBBLE_POINT_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_CANDLE_01_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_CANDLE_02_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_CANDLE_03_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_DASH_Z3_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_ITEM_Z3_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_LIGHT_01_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_OBJECT_W_Z3_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_OBJECT_Z3_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_PILLAR_01_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_PILLAR_02_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_PILLAR_03_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_PILLAR_HIT_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_ROCK_01_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_ROCK_02_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_ROLLDASH_S_Z3_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_RUN_Z3_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_SLIDER_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_SLIDER_02_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_SLIDER_SONIC_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_SMORK_B_Z3_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_SMORK_S_Z3_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_SPARK_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_SPARK_S_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_SPIN_02_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_SPIN_03_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_SPRAY_L_Z3_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_SPRAY_S_Z3_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_WALL_M_Z3_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_WALL_Z3_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_WATER_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_WATER_02_AME = 0;
    public const int IDU1_EFF_ZONE3_EFF_ZONE3_TEX_AMB = 0;
    public const string IDS_EFF_ZONE3_EFF_BOMB_SMOKE_Z3_AME = "EFF_BOMB_SMOKE_Z3.AME";
    public const string IDS_EFF_ZONE3_EFF_BUBBLE_BIG_AME = "EFF_BUBBLE_BIG.AME";
    public const string IDS_EFF_ZONE3_EFF_BUBBLE_LOST_AME = "EFF_BUBBLE_LOST.AME";
    public const string IDS_EFF_ZONE3_EFF_BUBBLE_LOST_2_AME = "EFF_BUBBLE_LOST_2.AME";
    public const string IDS_EFF_ZONE3_EFF_BUBBLE_POINT_AME = "EFF_BUBBLE_POINT.AME";
    public const string IDS_EFF_ZONE3_EFF_CANDLE_01_AME = "EFF_CANDLE_01.AME";
    public const string IDS_EFF_ZONE3_EFF_CANDLE_02_AME = "EFF_CANDLE_02.AME";
    public const string IDS_EFF_ZONE3_EFF_CANDLE_03_AME = "EFF_CANDLE_03.AME";
    public const string IDS_EFF_ZONE3_EFF_DASH_Z3_AME = "EFF_DASH_Z3.AME";
    public const string IDS_EFF_ZONE3_EFF_ITEM_Z3_AME = "EFF_ITEM_Z3.AME";
    public const string IDS_EFF_ZONE3_EFF_LIGHT_01_AME = "EFF_LIGHT_01.AME";
    public const string IDS_EFF_ZONE3_EFF_OBJECT_W_Z3_AME = "EFF_OBJECT_W_Z3.AME";
    public const string IDS_EFF_ZONE3_EFF_OBJECT_Z3_AME = "EFF_OBJECT_Z3.AME";
    public const string IDS_EFF_ZONE3_EFF_PILLAR_01_AME = "EFF_PILLAR_01.AME";
    public const string IDS_EFF_ZONE3_EFF_PILLAR_02_AME = "EFF_PILLAR_02.AME";
    public const string IDS_EFF_ZONE3_EFF_PILLAR_03_AME = "EFF_PILLAR_03.AME";
    public const string IDS_EFF_ZONE3_EFF_PILLAR_HIT_AME = "EFF_PILLAR_HIT.AME";
    public const string IDS_EFF_ZONE3_EFF_ROCK_01_AME = "EFF_ROCK_01.AME";
    public const string IDS_EFF_ZONE3_EFF_ROCK_02_AME = "EFF_ROCK_02.AME";
    public const string IDS_EFF_ZONE3_EFF_ROLLDASH_S_Z3_AME = "EFF_ROLLDASH_S_Z3.AME";
    public const string IDS_EFF_ZONE3_EFF_RUN_Z3_AME = "EFF_RUN_Z3.AME";
    public const string IDS_EFF_ZONE3_EFF_SLIDER_AME = "EFF_SLIDER.AME";
    public const string IDS_EFF_ZONE3_EFF_SLIDER_02_AME = "EFF_SLIDER_02.AME";
    public const string IDS_EFF_ZONE3_EFF_SLIDER_SONIC_AME = "EFF_SLIDER_SONIC.AME";
    public const string IDS_EFF_ZONE3_EFF_SMORK_B_Z3_AME = "EFF_SMORK_B_Z3.AME";
    public const string IDS_EFF_ZONE3_EFF_SMORK_S_Z3_AME = "EFF_SMORK_S_Z3.AME";
    public const string IDS_EFF_ZONE3_EFF_SPARK_AME = "EFF_SPARK.AME";
    public const string IDS_EFF_ZONE3_EFF_SPARK_S_AME = "EFF_SPARK_S.AME";
    public const string IDS_EFF_ZONE3_EFF_SPIN_02_AME = "EFF_SPIN_02.AME";
    public const string IDS_EFF_ZONE3_EFF_SPIN_03_AME = "EFF_SPIN_03.AME";
    public const string IDS_EFF_ZONE3_EFF_SPRAY_L_Z3_AME = "EFF_SPRAY_L_Z3.AME";
    public const string IDS_EFF_ZONE3_EFF_SPRAY_S_Z3_AME = "EFF_SPRAY_S_Z3.AME";
    public const string IDS_EFF_ZONE3_EFF_WALL_M_Z3_AME = "EFF_WALL_M_Z3.AME";
    public const string IDS_EFF_ZONE3_EFF_WALL_Z3_AME = "EFF_WALL_Z3.AME";
    public const string IDS_EFF_ZONE3_EFF_WATER_AME = "EFF_WATER.AME";
    public const string IDS_EFF_ZONE3_EFF_WATER_02_AME = "EFF_WATER_02.AME";
    public const string IDS_EFF_ZONE3_EFF_ZONE3_TEX_AMB = "EFF_ZONE3_TEX.AMB";
    public const int IDB_EFF_ZONE4_EFF_LIGHT_Z4_AME = 0;
    public const int IDB_EFF_ZONE4_EFF_PILLAR_Z4_AME = 1;
    public const int IDB_EFF_ZONE4_EFF_WALL_M_Z4_AME = 2;
    public const int IDB_EFF_ZONE4_EFF_WLL_Z4_AME = 3;
    public const int IDB_EFF_ZONE4_EFF_ZONE4_TEX_AMB = 4;
    public const int IDU0_EFF_ZONE4_EFF_LIGHT_Z4_AME = 0;
    public const int IDU0_EFF_ZONE4_EFF_PILLAR_Z4_AME = 0;
    public const int IDU0_EFF_ZONE4_EFF_WALL_M_Z4_AME = 0;
    public const int IDU0_EFF_ZONE4_EFF_WLL_Z4_AME = 0;
    public const int IDU0_EFF_ZONE4_EFF_ZONE4_TEX_AMB = 0;
    public const int IDU1_EFF_ZONE4_EFF_LIGHT_Z4_AME = 0;
    public const int IDU1_EFF_ZONE4_EFF_PILLAR_Z4_AME = 0;
    public const int IDU1_EFF_ZONE4_EFF_WALL_M_Z4_AME = 0;
    public const int IDU1_EFF_ZONE4_EFF_WLL_Z4_AME = 0;
    public const int IDU1_EFF_ZONE4_EFF_ZONE4_TEX_AMB = 0;
    public const string IDS_EFF_ZONE4_EFF_LIGHT_Z4_AME = "EFF_LIGHT_Z4.AME";
    public const string IDS_EFF_ZONE4_EFF_PILLAR_Z4_AME = "EFF_PILLAR_Z4.AME";
    public const string IDS_EFF_ZONE4_EFF_WALL_M_Z4_AME = "EFF_WALL_M_Z4.AME";
    public const string IDS_EFF_ZONE4_EFF_WLL_Z4_AME = "EFF_WLL_Z4.AME";
    public const string IDS_EFF_ZONE4_EFF_ZONE4_TEX_AMB = "EFF_ZONE4_TEX.AMB";
    public const int IDB_EFF_ZONE5_EFF_LIGHT_Z5_AME = 0;
    public const int IDB_EFF_ZONE5_EFF_ZONE5_TEX_AMB = 1;
    public const int IDU0_EFF_ZONE5_EFF_LIGHT_Z5_AME = 0;
    public const int IDU0_EFF_ZONE5_EFF_ZONE5_TEX_AMB = 0;
    public const int IDU1_EFF_ZONE5_EFF_LIGHT_Z5_AME = 0;
    public const int IDU1_EFF_ZONE5_EFF_ZONE5_TEX_AMB = 0;
    public const string IDS_EFF_ZONE5_EFF_LIGHT_Z5_AME = "EFF_LIGHT_Z5.AME";
    public const string IDS_EFF_ZONE5_EFF_ZONE5_TEX_AMB = "EFF_ZONE5_TEX.AMB";
    public const int IDB_EFF_ZONESS_EFF_1UP_AME = 0;
    public const int IDB_EFF_ZONESS_EFF_CHAOS_E_1_AME = 1;
    public const int IDB_EFF_ZONESS_EFF_CHAOS_E_2_AME = 2;
    public const int IDB_EFF_ZONESS_EFF_CHAOS_E_3_AME = 3;
    public const int IDB_EFF_ZONESS_EFF_CHAOS_E_4_AME = 4;
    public const int IDB_EFF_ZONESS_EFF_CHAOS_E_5_AME = 5;
    public const int IDB_EFF_ZONESS_EFF_CHAOS_E_6_AME = 6;
    public const int IDB_EFF_ZONESS_EFF_CHAOS_E_7_AME = 7;
    public const int IDB_EFF_ZONESS_EFF_LOST_AME = 8;
    public const int IDB_EFF_ZONESS_EFF_RING_GATE_AME = 9;
    public const int IDB_EFF_ZONESS_EFF_TIME_DE_AME = 10;
    public const int IDB_EFF_ZONESS_EFF_TIME_DOWN_AME = 11;
    public const int IDB_EFF_ZONESS_EFF_TIME_EN_AME = 12;
    public const int IDB_EFF_ZONESS_EFF_TIME_ES_AME = 13;
    public const int IDB_EFF_ZONESS_EFF_TIME_FR_AME = 14;
    public const int IDB_EFF_ZONESS_EFF_TIME_IT_AME = 15;
    public const int IDB_EFF_ZONESS_EFF_TIME_JP_AME = 16;
    public const int IDB_EFF_ZONESS_EFF_TIME_UP_AME = 17;
    public const int IDB_EFF_ZONESS_EFF_ZONESS_TEX_AMB = 18;
    public const int IDU0_EFF_ZONESS_EFF_1UP_AME = 0;
    public const int IDU0_EFF_ZONESS_EFF_CHAOS_E_1_AME = 0;
    public const int IDU0_EFF_ZONESS_EFF_CHAOS_E_2_AME = 0;
    public const int IDU0_EFF_ZONESS_EFF_CHAOS_E_3_AME = 0;
    public const int IDU0_EFF_ZONESS_EFF_CHAOS_E_4_AME = 0;
    public const int IDU0_EFF_ZONESS_EFF_CHAOS_E_5_AME = 0;
    public const int IDU0_EFF_ZONESS_EFF_CHAOS_E_6_AME = 0;
    public const int IDU0_EFF_ZONESS_EFF_CHAOS_E_7_AME = 0;
    public const int IDU0_EFF_ZONESS_EFF_LOST_AME = 0;
    public const int IDU0_EFF_ZONESS_EFF_RING_GATE_AME = 0;
    public const int IDU0_EFF_ZONESS_EFF_TIME_DE_AME = 0;
    public const int IDU0_EFF_ZONESS_EFF_TIME_DOWN_AME = 0;
    public const int IDU0_EFF_ZONESS_EFF_TIME_EN_AME = 0;
    public const int IDU0_EFF_ZONESS_EFF_TIME_ES_AME = 0;
    public const int IDU0_EFF_ZONESS_EFF_TIME_FR_AME = 0;
    public const int IDU0_EFF_ZONESS_EFF_TIME_IT_AME = 0;
    public const int IDU0_EFF_ZONESS_EFF_TIME_JP_AME = 0;
    public const int IDU0_EFF_ZONESS_EFF_TIME_UP_AME = 0;
    public const int IDU0_EFF_ZONESS_EFF_ZONESS_TEX_AMB = 0;
    public const int IDU1_EFF_ZONESS_EFF_1UP_AME = 0;
    public const int IDU1_EFF_ZONESS_EFF_CHAOS_E_1_AME = 0;
    public const int IDU1_EFF_ZONESS_EFF_CHAOS_E_2_AME = 0;
    public const int IDU1_EFF_ZONESS_EFF_CHAOS_E_3_AME = 0;
    public const int IDU1_EFF_ZONESS_EFF_CHAOS_E_4_AME = 0;
    public const int IDU1_EFF_ZONESS_EFF_CHAOS_E_5_AME = 0;
    public const int IDU1_EFF_ZONESS_EFF_CHAOS_E_6_AME = 0;
    public const int IDU1_EFF_ZONESS_EFF_CHAOS_E_7_AME = 0;
    public const int IDU1_EFF_ZONESS_EFF_LOST_AME = 0;
    public const int IDU1_EFF_ZONESS_EFF_RING_GATE_AME = 0;
    public const int IDU1_EFF_ZONESS_EFF_TIME_DE_AME = 0;
    public const int IDU1_EFF_ZONESS_EFF_TIME_DOWN_AME = 0;
    public const int IDU1_EFF_ZONESS_EFF_TIME_EN_AME = 0;
    public const int IDU1_EFF_ZONESS_EFF_TIME_ES_AME = 0;
    public const int IDU1_EFF_ZONESS_EFF_TIME_FR_AME = 0;
    public const int IDU1_EFF_ZONESS_EFF_TIME_IT_AME = 0;
    public const int IDU1_EFF_ZONESS_EFF_TIME_JP_AME = 0;
    public const int IDU1_EFF_ZONESS_EFF_TIME_UP_AME = 0;
    public const int IDU1_EFF_ZONESS_EFF_ZONESS_TEX_AMB = 0;
    public const string IDS_EFF_ZONESS_EFF_1UP_AME = "EFF_1UP.AME";
    public const string IDS_EFF_ZONESS_EFF_CHAOS_E_1_AME = "EFF_CHAOS_E_1.AME";
    public const string IDS_EFF_ZONESS_EFF_CHAOS_E_2_AME = "EFF_CHAOS_E_2.AME";
    public const string IDS_EFF_ZONESS_EFF_CHAOS_E_3_AME = "EFF_CHAOS_E_3.AME";
    public const string IDS_EFF_ZONESS_EFF_CHAOS_E_4_AME = "EFF_CHAOS_E_4.AME";
    public const string IDS_EFF_ZONESS_EFF_CHAOS_E_5_AME = "EFF_CHAOS_E_5.AME";
    public const string IDS_EFF_ZONESS_EFF_CHAOS_E_6_AME = "EFF_CHAOS_E_6.AME";
    public const string IDS_EFF_ZONESS_EFF_CHAOS_E_7_AME = "EFF_CHAOS_E_7.AME";
    public const string IDS_EFF_ZONESS_EFF_LOST_AME = "EFF_LOST.AME";
    public const string IDS_EFF_ZONESS_EFF_RING_GATE_AME = "EFF_RING_GATE.AME";
    public const string IDS_EFF_ZONESS_EFF_TIME_DE_AME = "EFF_TIME_DE.AME";
    public const string IDS_EFF_ZONESS_EFF_TIME_DOWN_AME = "EFF_TIME_DOWN.AME";
    public const string IDS_EFF_ZONESS_EFF_TIME_EN_AME = "EFF_TIME_EN.AME";
    public const string IDS_EFF_ZONESS_EFF_TIME_ES_AME = "EFF_TIME_ES.AME";
    public const string IDS_EFF_ZONESS_EFF_TIME_FR_AME = "EFF_TIME_FR.AME";
    public const string IDS_EFF_ZONESS_EFF_TIME_IT_AME = "EFF_TIME_IT.AME";
    public const string IDS_EFF_ZONESS_EFF_TIME_JP_AME = "EFF_TIME_JP.AME";
    public const string IDS_EFF_ZONESS_EFF_TIME_UP_AME = "EFF_TIME_UP.AME";
    public const string IDS_EFF_ZONESS_EFF_ZONESS_TEX_AMB = "EFF_ZONESS_TEX.AMB";
    public const int IDB_GMK_GEAR_GMK_GEAR_00_DF = 0;
    public const int IDB_GMK_GEAR_GMK_GEAR_00_DI = 1;
    public const int IDB_GMK_GEAR_GMK_GEAR_05_625_DF = 2;
    public const int IDB_GMK_GEAR_GMK_GEAR_05_625_DI = 3;
    public const int IDB_GMK_GEAR_GMK_GEAR_11_25_DF = 4;
    public const int IDB_GMK_GEAR_GMK_GEAR_11_25_DI = 5;
    public const int IDB_GMK_GEAR_GMK_GEAR_16_825_DF = 6;
    public const int IDB_GMK_GEAR_GMK_GEAR_16_825_DI = 7;
    public const int IDB_GMK_GEAR_GMK_GEAR_22_5_DF = 8;
    public const int IDB_GMK_GEAR_GMK_GEAR_22_5_DI = 9;
    public const int IDB_GMK_GEAR_GMK_GEAR_28_125_DF = 10;
    public const int IDB_GMK_GEAR_GMK_GEAR_28_125_DI = 11;
    public const int IDB_GMK_GEAR_GMK_GEAR_33_75_DF = 12;
    public const int IDB_GMK_GEAR_GMK_GEAR_33_75_DI = 13;
    public const int IDB_GMK_GEAR_GMK_GEAR_39_375_DF = 14;
    public const int IDB_GMK_GEAR_GMK_GEAR_39_375_DI = 15;
    public const int IDB_GMK_GEAR_GMK_GEAR_C_DF = 16;
    public const int IDB_GMK_GEAR_GMK_GEAR_C_DI = 17;
    public const int IDB_GMK_GEAR_GMK_GEAR2_TXB = 18;
    public const int IDU0_GMK_GEAR_GMK_GEAR_00_DF = 0;
    public const int IDU0_GMK_GEAR_GMK_GEAR_00_DI = 0;
    public const int IDU0_GMK_GEAR_GMK_GEAR_05_625_DF = 0;
    public const int IDU0_GMK_GEAR_GMK_GEAR_05_625_DI = 0;
    public const int IDU0_GMK_GEAR_GMK_GEAR_11_25_DF = 0;
    public const int IDU0_GMK_GEAR_GMK_GEAR_11_25_DI = 0;
    public const int IDU0_GMK_GEAR_GMK_GEAR_16_825_DF = 0;
    public const int IDU0_GMK_GEAR_GMK_GEAR_16_825_DI = 0;
    public const int IDU0_GMK_GEAR_GMK_GEAR_22_5_DF = 0;
    public const int IDU0_GMK_GEAR_GMK_GEAR_22_5_DI = 0;
    public const int IDU0_GMK_GEAR_GMK_GEAR_28_125_DF = 0;
    public const int IDU0_GMK_GEAR_GMK_GEAR_28_125_DI = 0;
    public const int IDU0_GMK_GEAR_GMK_GEAR_33_75_DF = 0;
    public const int IDU0_GMK_GEAR_GMK_GEAR_33_75_DI = 0;
    public const int IDU0_GMK_GEAR_GMK_GEAR_39_375_DF = 0;
    public const int IDU0_GMK_GEAR_GMK_GEAR_39_375_DI = 0;
    public const int IDU0_GMK_GEAR_GMK_GEAR_C_DF = 0;
    public const int IDU0_GMK_GEAR_GMK_GEAR_C_DI = 0;
    public const int IDU0_GMK_GEAR_GMK_GEAR2_TXB = 0;
    public const int IDU1_GMK_GEAR_GMK_GEAR_00_DF = 0;
    public const int IDU1_GMK_GEAR_GMK_GEAR_00_DI = 0;
    public const int IDU1_GMK_GEAR_GMK_GEAR_05_625_DF = 0;
    public const int IDU1_GMK_GEAR_GMK_GEAR_05_625_DI = 0;
    public const int IDU1_GMK_GEAR_GMK_GEAR_11_25_DF = 0;
    public const int IDU1_GMK_GEAR_GMK_GEAR_11_25_DI = 0;
    public const int IDU1_GMK_GEAR_GMK_GEAR_16_825_DF = 0;
    public const int IDU1_GMK_GEAR_GMK_GEAR_16_825_DI = 0;
    public const int IDU1_GMK_GEAR_GMK_GEAR_22_5_DF = 0;
    public const int IDU1_GMK_GEAR_GMK_GEAR_22_5_DI = 0;
    public const int IDU1_GMK_GEAR_GMK_GEAR_28_125_DF = 0;
    public const int IDU1_GMK_GEAR_GMK_GEAR_28_125_DI = 0;
    public const int IDU1_GMK_GEAR_GMK_GEAR_33_75_DF = 0;
    public const int IDU1_GMK_GEAR_GMK_GEAR_33_75_DI = 0;
    public const int IDU1_GMK_GEAR_GMK_GEAR_39_375_DF = 0;
    public const int IDU1_GMK_GEAR_GMK_GEAR_39_375_DI = 0;
    public const int IDU1_GMK_GEAR_GMK_GEAR_C_DF = 0;
    public const int IDU1_GMK_GEAR_GMK_GEAR_C_DI = 0;
    public const int IDU1_GMK_GEAR_GMK_GEAR2_TXB = 0;
    public const string IDS_GMK_GEAR_GMK_GEAR_00_DF = "GMK_GEAR_00.DF";
    public const string IDS_GMK_GEAR_GMK_GEAR_00_DI = "GMK_GEAR_00.DI";
    public const string IDS_GMK_GEAR_GMK_GEAR_05_625_DF = "GMK_GEAR_05_625.DF";
    public const string IDS_GMK_GEAR_GMK_GEAR_05_625_DI = "GMK_GEAR_05_625.DI";
    public const string IDS_GMK_GEAR_GMK_GEAR_11_25_DF = "GMK_GEAR_11_25.DF";
    public const string IDS_GMK_GEAR_GMK_GEAR_11_25_DI = "GMK_GEAR_11_25.DI";
    public const string IDS_GMK_GEAR_GMK_GEAR_16_825_DF = "GMK_GEAR_16_825.DF";
    public const string IDS_GMK_GEAR_GMK_GEAR_16_825_DI = "GMK_GEAR_16_825.DI";
    public const string IDS_GMK_GEAR_GMK_GEAR_22_5_DF = "GMK_GEAR_22_5.DF";
    public const string IDS_GMK_GEAR_GMK_GEAR_22_5_DI = "GMK_GEAR_22_5.DI";
    public const string IDS_GMK_GEAR_GMK_GEAR_28_125_DF = "GMK_GEAR_28_125.DF";
    public const string IDS_GMK_GEAR_GMK_GEAR_28_125_DI = "GMK_GEAR_28_125.DI";
    public const string IDS_GMK_GEAR_GMK_GEAR_33_75_DF = "GMK_GEAR_33_75.DF";
    public const string IDS_GMK_GEAR_GMK_GEAR_33_75_DI = "GMK_GEAR_33_75.DI";
    public const string IDS_GMK_GEAR_GMK_GEAR_39_375_DF = "GMK_GEAR_39_375.DF";
    public const string IDS_GMK_GEAR_GMK_GEAR_39_375_DI = "GMK_GEAR_39_375.DI";
    public const string IDS_GMK_GEAR_GMK_GEAR_C_DF = "GMK_GEAR_C.DF";
    public const string IDS_GMK_GEAR_GMK_GEAR_C_DI = "GMK_GEAR_C.DI";
    public const string IDS_GMK_GEAR_GMK_GEAR2_TXB = "GMK_GEAR2.TXB";
    public const int IDB_BOSS01_BODY_MTN_B01_ATT01_01B_ZNM = 0;
    public const int IDB_BOSS01_BODY_MTN_B01_ATT01_03B_ZNM = 1;
    public const int IDB_BOSS01_BODY_MTN_B01_ATT02_01B_ZNM = 2;
    public const int IDB_BOSS01_BODY_MTN_B01_ATT02_02B_ZNM = 3;
    public const int IDB_BOSS01_BODY_MTN_B01_ATT02_03B_ZNM = 4;
    public const int IDB_BOSS01_BODY_MTN_B01_ATT02_04B_ZNM = 5;
    public const int IDB_BOSS01_BODY_MTN_B01_ATT02_05B_ZNM = 6;
    public const int IDB_BOSS01_BODY_MTN_B01_DMG02_01B_ZNM = 7;
    public const int IDB_BOSS01_BODY_MTN_B01_PRO01_01B_ZNM = 8;
    public const int IDB_BOSS01_BODY_MTN_B01_PRO01_02B_ZNM = 9;
    public const int IDB_BOSS01_BODY_MTN_B01_STA01_01B_ZNM = 10;
    public const int IDU0_BOSS01_BODY_MTN_B01_ATT01_01B_ZNM = 0;
    public const int IDU0_BOSS01_BODY_MTN_B01_ATT01_03B_ZNM = 0;
    public const int IDU0_BOSS01_BODY_MTN_B01_ATT02_01B_ZNM = 0;
    public const int IDU0_BOSS01_BODY_MTN_B01_ATT02_02B_ZNM = 0;
    public const int IDU0_BOSS01_BODY_MTN_B01_ATT02_03B_ZNM = 0;
    public const int IDU0_BOSS01_BODY_MTN_B01_ATT02_04B_ZNM = 0;
    public const int IDU0_BOSS01_BODY_MTN_B01_ATT02_05B_ZNM = 0;
    public const int IDU0_BOSS01_BODY_MTN_B01_DMG02_01B_ZNM = 0;
    public const int IDU0_BOSS01_BODY_MTN_B01_PRO01_01B_ZNM = 0;
    public const int IDU0_BOSS01_BODY_MTN_B01_PRO01_02B_ZNM = 0;
    public const int IDU0_BOSS01_BODY_MTN_B01_STA01_01B_ZNM = 0;
    public const int IDU1_BOSS01_BODY_MTN_B01_ATT01_01B_ZNM = 0;
    public const int IDU1_BOSS01_BODY_MTN_B01_ATT01_03B_ZNM = 0;
    public const int IDU1_BOSS01_BODY_MTN_B01_ATT02_01B_ZNM = 0;
    public const int IDU1_BOSS01_BODY_MTN_B01_ATT02_02B_ZNM = 0;
    public const int IDU1_BOSS01_BODY_MTN_B01_ATT02_03B_ZNM = 0;
    public const int IDU1_BOSS01_BODY_MTN_B01_ATT02_04B_ZNM = 0;
    public const int IDU1_BOSS01_BODY_MTN_B01_ATT02_05B_ZNM = 0;
    public const int IDU1_BOSS01_BODY_MTN_B01_DMG02_01B_ZNM = 0;
    public const int IDU1_BOSS01_BODY_MTN_B01_PRO01_01B_ZNM = 0;
    public const int IDU1_BOSS01_BODY_MTN_B01_PRO01_02B_ZNM = 0;
    public const int IDU1_BOSS01_BODY_MTN_B01_STA01_01B_ZNM = 0;
    public const string IDS_BOSS01_BODY_MTN_B01_ATT01_01B_ZNM = "B01_ATT01_01B.ZNM";
    public const string IDS_BOSS01_BODY_MTN_B01_ATT01_03B_ZNM = "B01_ATT01_03B.ZNM";
    public const string IDS_BOSS01_BODY_MTN_B01_ATT02_01B_ZNM = "B01_ATT02_01B.ZNM";
    public const string IDS_BOSS01_BODY_MTN_B01_ATT02_02B_ZNM = "B01_ATT02_02B.ZNM";
    public const string IDS_BOSS01_BODY_MTN_B01_ATT02_03B_ZNM = "B01_ATT02_03B.ZNM";
    public const string IDS_BOSS01_BODY_MTN_B01_ATT02_04B_ZNM = "B01_ATT02_04B.ZNM";
    public const string IDS_BOSS01_BODY_MTN_B01_ATT02_05B_ZNM = "B01_ATT02_05B.ZNM";
    public const string IDS_BOSS01_BODY_MTN_B01_DMG02_01B_ZNM = "B01_DMG02_01B.ZNM";
    public const string IDS_BOSS01_BODY_MTN_B01_PRO01_01B_ZNM = "B01_PRO01_01B.ZNM";
    public const string IDS_BOSS01_BODY_MTN_B01_PRO01_02B_ZNM = "B01_PRO01_02B.ZNM";
    public const string IDS_BOSS01_BODY_MTN_B01_STA01_01B_ZNM = "B01_STA01_01B.ZNM";
    public const int IDB_BOSS01_CHAIN_MTN_B01_ATT01_01C_ZNM = 0;
    public const int IDB_BOSS01_CHAIN_MTN_B01_ATT02_01C_ZNM = 1;
    public const int IDB_BOSS01_CHAIN_MTN_B01_ATT02_02C_ZNM = 2;
    public const int IDB_BOSS01_CHAIN_MTN_B01_ATT02_03C_ZNM = 3;
    public const int IDB_BOSS01_CHAIN_MTN_B01_ATT02_04C_ZNM = 4;
    public const int IDB_BOSS01_CHAIN_MTN_B01_ATT02_05C_ZNM = 5;
    public const int IDB_BOSS01_CHAIN_MTN_B01_PRO01_01C_ZNM = 6;
    public const int IDB_BOSS01_CHAIN_MTN_B01_PRO01_02C_ZNM = 7;
    public const int IDB_BOSS01_CHAIN_MTN_B01_STA01_01C_ZNM = 8;
    public const int IDU0_BOSS01_CHAIN_MTN_B01_ATT01_01C_ZNM = 0;
    public const int IDU0_BOSS01_CHAIN_MTN_B01_ATT02_01C_ZNM = 0;
    public const int IDU0_BOSS01_CHAIN_MTN_B01_ATT02_02C_ZNM = 0;
    public const int IDU0_BOSS01_CHAIN_MTN_B01_ATT02_03C_ZNM = 0;
    public const int IDU0_BOSS01_CHAIN_MTN_B01_ATT02_04C_ZNM = 0;
    public const int IDU0_BOSS01_CHAIN_MTN_B01_ATT02_05C_ZNM = 0;
    public const int IDU0_BOSS01_CHAIN_MTN_B01_PRO01_01C_ZNM = 0;
    public const int IDU0_BOSS01_CHAIN_MTN_B01_PRO01_02C_ZNM = 0;
    public const int IDU0_BOSS01_CHAIN_MTN_B01_STA01_01C_ZNM = 0;
    public const int IDU1_BOSS01_CHAIN_MTN_B01_ATT01_01C_ZNM = 0;
    public const int IDU1_BOSS01_CHAIN_MTN_B01_ATT02_01C_ZNM = 0;
    public const int IDU1_BOSS01_CHAIN_MTN_B01_ATT02_02C_ZNM = 0;
    public const int IDU1_BOSS01_CHAIN_MTN_B01_ATT02_03C_ZNM = 0;
    public const int IDU1_BOSS01_CHAIN_MTN_B01_ATT02_04C_ZNM = 0;
    public const int IDU1_BOSS01_CHAIN_MTN_B01_ATT02_05C_ZNM = 0;
    public const int IDU1_BOSS01_CHAIN_MTN_B01_PRO01_01C_ZNM = 0;
    public const int IDU1_BOSS01_CHAIN_MTN_B01_PRO01_02C_ZNM = 0;
    public const int IDU1_BOSS01_CHAIN_MTN_B01_STA01_01C_ZNM = 0;
    public const string IDS_BOSS01_CHAIN_MTN_B01_ATT01_01C_ZNM = "B01_ATT01_01C.ZNM";
    public const string IDS_BOSS01_CHAIN_MTN_B01_ATT02_01C_ZNM = "B01_ATT02_01C.ZNM";
    public const string IDS_BOSS01_CHAIN_MTN_B01_ATT02_02C_ZNM = "B01_ATT02_02C.ZNM";
    public const string IDS_BOSS01_CHAIN_MTN_B01_ATT02_03C_ZNM = "B01_ATT02_03C.ZNM";
    public const string IDS_BOSS01_CHAIN_MTN_B01_ATT02_04C_ZNM = "B01_ATT02_04C.ZNM";
    public const string IDS_BOSS01_CHAIN_MTN_B01_ATT02_05C_ZNM = "B01_ATT02_05C.ZNM";
    public const string IDS_BOSS01_CHAIN_MTN_B01_PRO01_01C_ZNM = "B01_PRO01_01C.ZNM";
    public const string IDS_BOSS01_CHAIN_MTN_B01_PRO01_02C_ZNM = "B01_PRO01_02C.ZNM";
    public const string IDS_BOSS01_CHAIN_MTN_B01_STA01_01C_ZNM = "B01_STA01_01C.ZNM";
    public const int IDB_BOSS01_EGG_MTN_B01_ATT01_01E_ZNM = 0;
    public const int IDB_BOSS01_EGG_MTN_B01_ATT01_02E_ZNM = 1;
    public const int IDB_BOSS01_EGG_MTN_B01_ATT01_03E_ZNM = 2;
    public const int IDB_BOSS01_EGG_MTN_B01_ATT02_01E_ZNM = 3;
    public const int IDB_BOSS01_EGG_MTN_B01_ATT02_02E_ZNM = 4;
    public const int IDB_BOSS01_EGG_MTN_B01_ATT02_03E_ZNM = 5;
    public const int IDB_BOSS01_EGG_MTN_B01_ATT02_04E_ZNM = 6;
    public const int IDB_BOSS01_EGG_MTN_B01_ATT02_05E_ZNM = 7;
    public const int IDB_BOSS01_EGG_MTN_B01_DMG01_01E_ZNM = 8;
    public const int IDB_BOSS01_EGG_MTN_B01_DMG02_01E_ZNM = 9;
    public const int IDB_BOSS01_EGG_MTN_B01_PRO01_01E_ZNM = 10;
    public const int IDB_BOSS01_EGG_MTN_B01_PRO01_02E_ZNM = 11;
    public const int IDB_BOSS01_EGG_MTN_B01_STA01_01E_ZNM = 12;
    public const int IDU0_BOSS01_EGG_MTN_B01_ATT01_01E_ZNM = 0;
    public const int IDU0_BOSS01_EGG_MTN_B01_ATT01_02E_ZNM = 0;
    public const int IDU0_BOSS01_EGG_MTN_B01_ATT01_03E_ZNM = 0;
    public const int IDU0_BOSS01_EGG_MTN_B01_ATT02_01E_ZNM = 0;
    public const int IDU0_BOSS01_EGG_MTN_B01_ATT02_02E_ZNM = 0;
    public const int IDU0_BOSS01_EGG_MTN_B01_ATT02_03E_ZNM = 0;
    public const int IDU0_BOSS01_EGG_MTN_B01_ATT02_04E_ZNM = 0;
    public const int IDU0_BOSS01_EGG_MTN_B01_ATT02_05E_ZNM = 0;
    public const int IDU0_BOSS01_EGG_MTN_B01_DMG01_01E_ZNM = 0;
    public const int IDU0_BOSS01_EGG_MTN_B01_DMG02_01E_ZNM = 0;
    public const int IDU0_BOSS01_EGG_MTN_B01_PRO01_01E_ZNM = 0;
    public const int IDU0_BOSS01_EGG_MTN_B01_PRO01_02E_ZNM = 0;
    public const int IDU0_BOSS01_EGG_MTN_B01_STA01_01E_ZNM = 0;
    public const int IDU1_BOSS01_EGG_MTN_B01_ATT01_01E_ZNM = 0;
    public const int IDU1_BOSS01_EGG_MTN_B01_ATT01_02E_ZNM = 0;
    public const int IDU1_BOSS01_EGG_MTN_B01_ATT01_03E_ZNM = 0;
    public const int IDU1_BOSS01_EGG_MTN_B01_ATT02_01E_ZNM = 0;
    public const int IDU1_BOSS01_EGG_MTN_B01_ATT02_02E_ZNM = 0;
    public const int IDU1_BOSS01_EGG_MTN_B01_ATT02_03E_ZNM = 0;
    public const int IDU1_BOSS01_EGG_MTN_B01_ATT02_04E_ZNM = 0;
    public const int IDU1_BOSS01_EGG_MTN_B01_ATT02_05E_ZNM = 0;
    public const int IDU1_BOSS01_EGG_MTN_B01_DMG01_01E_ZNM = 0;
    public const int IDU1_BOSS01_EGG_MTN_B01_DMG02_01E_ZNM = 0;
    public const int IDU1_BOSS01_EGG_MTN_B01_PRO01_01E_ZNM = 0;
    public const int IDU1_BOSS01_EGG_MTN_B01_PRO01_02E_ZNM = 0;
    public const int IDU1_BOSS01_EGG_MTN_B01_STA01_01E_ZNM = 0;
    public const string IDS_BOSS01_EGG_MTN_B01_ATT01_01E_ZNM = "B01_ATT01_01E.ZNM";
    public const string IDS_BOSS01_EGG_MTN_B01_ATT01_02E_ZNM = "B01_ATT01_02E.ZNM";
    public const string IDS_BOSS01_EGG_MTN_B01_ATT01_03E_ZNM = "B01_ATT01_03E.ZNM";
    public const string IDS_BOSS01_EGG_MTN_B01_ATT02_01E_ZNM = "B01_ATT02_01E.ZNM";
    public const string IDS_BOSS01_EGG_MTN_B01_ATT02_02E_ZNM = "B01_ATT02_02E.ZNM";
    public const string IDS_BOSS01_EGG_MTN_B01_ATT02_03E_ZNM = "B01_ATT02_03E.ZNM";
    public const string IDS_BOSS01_EGG_MTN_B01_ATT02_04E_ZNM = "B01_ATT02_04E.ZNM";
    public const string IDS_BOSS01_EGG_MTN_B01_ATT02_05E_ZNM = "B01_ATT02_05E.ZNM";
    public const string IDS_BOSS01_EGG_MTN_B01_DMG01_01E_ZNM = "B01_DMG01_01E.ZNM";
    public const string IDS_BOSS01_EGG_MTN_B01_DMG02_01E_ZNM = "B01_DMG02_01E.ZNM";
    public const string IDS_BOSS01_EGG_MTN_B01_PRO01_01E_ZNM = "B01_PRO01_01E.ZNM";
    public const string IDS_BOSS01_EGG_MTN_B01_PRO01_02E_ZNM = "B01_PRO01_02E.ZNM";
    public const string IDS_BOSS01_EGG_MTN_B01_STA01_01E_ZNM = "B01_STA01_01E.ZNM";
    public const int IDB_BOSS01_MDL_B01_BODY_ZNO = 0;
    public const int IDB_BOSS01_MDL_B01_CHAIN_ZNO = 1;
    public const int IDB_BOSS01_MDL_EGGMAN_ZNO = 2;
    public const int IDU0_BOSS01_MDL_B01_BODY_ZNO = 0;
    public const int IDU0_BOSS01_MDL_B01_CHAIN_ZNO = 0;
    public const int IDU0_BOSS01_MDL_EGGMAN_ZNO = 0;
    public const int IDU1_BOSS01_MDL_B01_BODY_ZNO = 0;
    public const int IDU1_BOSS01_MDL_B01_CHAIN_ZNO = 0;
    public const int IDU1_BOSS01_MDL_EGGMAN_ZNO = 0;
    public const string IDS_BOSS01_MDL_B01_BODY_ZNO = "B01_BODY.ZNO";
    public const string IDS_BOSS01_MDL_B01_CHAIN_ZNO = "B01_CHAIN.ZNO";
    public const string IDS_BOSS01_MDL_EGGMAN_ZNO = "EGGMAN.ZNO";
    public const int IDB_BOSS02_BODY_MAT_B02_BODY_ZNV = 0;
    public const int IDU0_BOSS02_BODY_MAT_B02_BODY_ZNV = 0;
    public const int IDU1_BOSS02_BODY_MAT_B02_BODY_ZNV = 0;
    public const string IDS_BOSS02_BODY_MAT_B02_BODY_ZNV = "B02_BODY.ZNV";
    public const int IDB_BOSS02_BODY_MTN_B02_1_ANG_01B_ZNM = 0;
    public const int IDB_BOSS02_BODY_MTN_B02_1_ATT01_01B_ZNM = 1;
    public const int IDB_BOSS02_BODY_MTN_B02_1_ATT02_01B_ZNM = 2;
    public const int IDB_BOSS02_BODY_MTN_B02_1_ATT03_01B_ZNM = 3;
    public const int IDB_BOSS02_BODY_MTN_B02_1_ATT04_01B_ZNM = 4;
    public const int IDB_BOSS02_BODY_MTN_B02_1_ATT04_02_1B_ZNM = 5;
    public const int IDB_BOSS02_BODY_MTN_B02_1_ATT04_02_2B_ZNM = 6;
    public const int IDB_BOSS02_BODY_MTN_B02_1_ATT04_03B_ZNM = 7;
    public const int IDB_BOSS02_BODY_MTN_B02_1_ATT04_04B_ZNM = 8;
    public const int IDB_BOSS02_BODY_MTN_B02_1_ATT04_05B_ZNM = 9;
    public const int IDB_BOSS02_BODY_MTN_B02_1_ATT04_06B_ZNM = 10;
    public const int IDB_BOSS02_BODY_MTN_B02_1_STA_01B_ZNM = 11;
    public const int IDB_BOSS02_BODY_MTN_B02_2_ATT01_01B_ZNM = 12;
    public const int IDB_BOSS02_BODY_MTN_B02_2_ATT04_01B_ZNM = 13;
    public const int IDB_BOSS02_BODY_MTN_B02_2_ATT04_02B_ZNM = 14;
    public const int IDB_BOSS02_BODY_MTN_B02_2_ATT04_03B_ZNM = 15;
    public const int IDB_BOSS02_BODY_MTN_B02_3_STA_01B_ZNM = 16;
    public const int IDB_BOSS02_BODY_MTN_B02_3_ATT01_01B_ZNM = 17;
    public const int IDB_BOSS02_BODY_MTN_B02_3_ATT01_02B_ZNM = 18;
    public const int IDB_BOSS02_BODY_MTN_B02_3_ATT04_01B_ZNM = 19;
    public const int IDB_BOSS02_BODY_MTN_B02_3_ATT05_01B_ZNM = 20;
    public const int IDB_BOSS02_BODY_MTN_B02_3_LOOK_01B_ZNM = 21;
    public const int IDB_BOSS02_BODY_MTN_B02_DMG02_01B_ZNM = 22;
    public const int IDU0_BOSS02_BODY_MTN_B02_1_ANG_01B_ZNM = 0;
    public const int IDU0_BOSS02_BODY_MTN_B02_1_ATT01_01B_ZNM = 0;
    public const int IDU0_BOSS02_BODY_MTN_B02_1_ATT02_01B_ZNM = 0;
    public const int IDU0_BOSS02_BODY_MTN_B02_1_ATT03_01B_ZNM = 0;
    public const int IDU0_BOSS02_BODY_MTN_B02_1_ATT04_01B_ZNM = 0;
    public const int IDU0_BOSS02_BODY_MTN_B02_1_ATT04_02_1B_ZNM = 0;
    public const int IDU0_BOSS02_BODY_MTN_B02_1_ATT04_02_2B_ZNM = 0;
    public const int IDU0_BOSS02_BODY_MTN_B02_1_ATT04_03B_ZNM = 0;
    public const int IDU0_BOSS02_BODY_MTN_B02_1_ATT04_04B_ZNM = 0;
    public const int IDU0_BOSS02_BODY_MTN_B02_1_ATT04_05B_ZNM = 0;
    public const int IDU0_BOSS02_BODY_MTN_B02_1_ATT04_06B_ZNM = 0;
    public const int IDU0_BOSS02_BODY_MTN_B02_1_STA_01B_ZNM = 0;
    public const int IDU0_BOSS02_BODY_MTN_B02_2_ATT01_01B_ZNM = 0;
    public const int IDU0_BOSS02_BODY_MTN_B02_2_ATT04_01B_ZNM = 0;
    public const int IDU0_BOSS02_BODY_MTN_B02_2_ATT04_02B_ZNM = 0;
    public const int IDU0_BOSS02_BODY_MTN_B02_2_ATT04_03B_ZNM = 0;
    public const int IDU0_BOSS02_BODY_MTN_B02_3_STA_01B_ZNM = 0;
    public const int IDU0_BOSS02_BODY_MTN_B02_3_ATT01_01B_ZNM = 0;
    public const int IDU0_BOSS02_BODY_MTN_B02_3_ATT01_02B_ZNM = 0;
    public const int IDU0_BOSS02_BODY_MTN_B02_3_ATT04_01B_ZNM = 0;
    public const int IDU0_BOSS02_BODY_MTN_B02_3_ATT05_01B_ZNM = 0;
    public const int IDU0_BOSS02_BODY_MTN_B02_3_LOOK_01B_ZNM = 0;
    public const int IDU0_BOSS02_BODY_MTN_B02_DMG02_01B_ZNM = 0;
    public const int IDU1_BOSS02_BODY_MTN_B02_1_ANG_01B_ZNM = 0;
    public const int IDU1_BOSS02_BODY_MTN_B02_1_ATT01_01B_ZNM = 0;
    public const int IDU1_BOSS02_BODY_MTN_B02_1_ATT02_01B_ZNM = 0;
    public const int IDU1_BOSS02_BODY_MTN_B02_1_ATT03_01B_ZNM = 0;
    public const int IDU1_BOSS02_BODY_MTN_B02_1_ATT04_01B_ZNM = 0;
    public const int IDU1_BOSS02_BODY_MTN_B02_1_ATT04_02_1B_ZNM = 0;
    public const int IDU1_BOSS02_BODY_MTN_B02_1_ATT04_02_2B_ZNM = 0;
    public const int IDU1_BOSS02_BODY_MTN_B02_1_ATT04_03B_ZNM = 0;
    public const int IDU1_BOSS02_BODY_MTN_B02_1_ATT04_04B_ZNM = 0;
    public const int IDU1_BOSS02_BODY_MTN_B02_1_ATT04_05B_ZNM = 0;
    public const int IDU1_BOSS02_BODY_MTN_B02_1_ATT04_06B_ZNM = 0;
    public const int IDU1_BOSS02_BODY_MTN_B02_1_STA_01B_ZNM = 0;
    public const int IDU1_BOSS02_BODY_MTN_B02_2_ATT01_01B_ZNM = 0;
    public const int IDU1_BOSS02_BODY_MTN_B02_2_ATT04_01B_ZNM = 0;
    public const int IDU1_BOSS02_BODY_MTN_B02_2_ATT04_02B_ZNM = 0;
    public const int IDU1_BOSS02_BODY_MTN_B02_2_ATT04_03B_ZNM = 0;
    public const int IDU1_BOSS02_BODY_MTN_B02_3_STA_01B_ZNM = 0;
    public const int IDU1_BOSS02_BODY_MTN_B02_3_ATT01_01B_ZNM = 0;
    public const int IDU1_BOSS02_BODY_MTN_B02_3_ATT01_02B_ZNM = 0;
    public const int IDU1_BOSS02_BODY_MTN_B02_3_ATT04_01B_ZNM = 0;
    public const int IDU1_BOSS02_BODY_MTN_B02_3_ATT05_01B_ZNM = 0;
    public const int IDU1_BOSS02_BODY_MTN_B02_3_LOOK_01B_ZNM = 0;
    public const int IDU1_BOSS02_BODY_MTN_B02_DMG02_01B_ZNM = 0;
    public const string IDS_BOSS02_BODY_MTN_B02_1_ANG_01B_ZNM = "B02_1_ANG_01B.ZNM";
    public const string IDS_BOSS02_BODY_MTN_B02_1_ATT01_01B_ZNM = "B02_1_ATT01_01B.ZNM";
    public const string IDS_BOSS02_BODY_MTN_B02_1_ATT02_01B_ZNM = "B02_1_ATT02_01B.ZNM";
    public const string IDS_BOSS02_BODY_MTN_B02_1_ATT03_01B_ZNM = "B02_1_ATT03_01B.ZNM";
    public const string IDS_BOSS02_BODY_MTN_B02_1_ATT04_01B_ZNM = "B02_1_ATT04_01B.ZNM";
    public const string IDS_BOSS02_BODY_MTN_B02_1_ATT04_02_1B_ZNM = "B02_1_ATT04_02_1B.ZNM";
    public const string IDS_BOSS02_BODY_MTN_B02_1_ATT04_02_2B_ZNM = "B02_1_ATT04_02_2B.ZNM";
    public const string IDS_BOSS02_BODY_MTN_B02_1_ATT04_03B_ZNM = "B02_1_ATT04_03B.ZNM";
    public const string IDS_BOSS02_BODY_MTN_B02_1_ATT04_04B_ZNM = "B02_1_ATT04_04B.ZNM";
    public const string IDS_BOSS02_BODY_MTN_B02_1_ATT04_05B_ZNM = "B02_1_ATT04_05B.ZNM";
    public const string IDS_BOSS02_BODY_MTN_B02_1_ATT04_06B_ZNM = "B02_1_ATT04_06B.ZNM";
    public const string IDS_BOSS02_BODY_MTN_B02_1_STA_01B_ZNM = "B02_1_STA_01B.ZNM";
    public const string IDS_BOSS02_BODY_MTN_B02_2_ATT01_01B_ZNM = "B02_2_ATT01_01B.ZNM";
    public const string IDS_BOSS02_BODY_MTN_B02_2_ATT04_01B_ZNM = "B02_2_ATT04_01B.ZNM";
    public const string IDS_BOSS02_BODY_MTN_B02_2_ATT04_02B_ZNM = "B02_2_ATT04_02B.ZNM";
    public const string IDS_BOSS02_BODY_MTN_B02_2_ATT04_03B_ZNM = "B02_2_ATT04_03B.ZNM";
    public const string IDS_BOSS02_BODY_MTN_B02_3_STA_01B_ZNM = "B02_3_STA_01B.ZNM";
    public const string IDS_BOSS02_BODY_MTN_B02_3_ATT01_01B_ZNM = "B02_3_ATT01_01B.ZNM";
    public const string IDS_BOSS02_BODY_MTN_B02_3_ATT01_02B_ZNM = "B02_3_ATT01_02B.ZNM";
    public const string IDS_BOSS02_BODY_MTN_B02_3_ATT04_01B_ZNM = "B02_3_ATT04_01B.ZNM";
    public const string IDS_BOSS02_BODY_MTN_B02_3_ATT05_01B_ZNM = "B02_3_ATT05_01B.ZNM";
    public const string IDS_BOSS02_BODY_MTN_B02_3_LOOK_01B_ZNM = "B02_3_LOOK_01B.ZNM";
    public const string IDS_BOSS02_BODY_MTN_B02_DMG02_01B_ZNM = "B02_DMG02_01B.ZNM";
    public const int IDB_BOSS02_EGG_MTN_B02_1_ANG_01E_ZNM = 0;
    public const int IDB_BOSS02_EGG_MTN_B02_1_ATT01_01E_ZNM = 1;
    public const int IDB_BOSS02_EGG_MTN_B02_1_ATT02_01E_ZNM = 2;
    public const int IDB_BOSS02_EGG_MTN_B02_1_ATT03_01E_ZNM = 3;
    public const int IDB_BOSS02_EGG_MTN_B02_1_ATT04_01E_ZNM = 4;
    public const int IDB_BOSS02_EGG_MTN_B02_1_ATT04_02_1E_ZNM = 5;
    public const int IDB_BOSS02_EGG_MTN_B02_1_ATT04_02_2E_ZNM = 6;
    public const int IDB_BOSS02_EGG_MTN_B02_1_ATT04_03E_ZNM = 7;
    public const int IDB_BOSS02_EGG_MTN_B02_1_ATT04_04E_ZNM = 8;
    public const int IDB_BOSS02_EGG_MTN_B02_1_ATT04_05E_ZNM = 9;
    public const int IDB_BOSS02_EGG_MTN_B02_1_STA_01E_ZNM = 10;
    public const int IDB_BOSS02_EGG_MTN_B02_1_STA_02E_ZNM = 11;
    public const int IDB_BOSS02_EGG_MTN_B02_2_ATT01_01E_ZNM = 12;
    public const int IDB_BOSS02_EGG_MTN_B02_2_ATT04_01E_ZNM = 13;
    public const int IDB_BOSS02_EGG_MTN_B02_2_ATT04_02E_ZNM = 14;
    public const int IDB_BOSS02_EGG_MTN_B02_2_ATT04_03E_ZNM = 15;
    public const int IDB_BOSS02_EGG_MTN_B02_3_STA_01E_ZNM = 16;
    public const int IDB_BOSS02_EGG_MTN_B02_3_ATT01_01E_ZNM = 17;
    public const int IDB_BOSS02_EGG_MTN_B02_3_ATT04_01E_ZNM = 18;
    public const int IDB_BOSS02_EGG_MTN_B02_3_ATT05_01E_ZNM = 19;
    public const int IDB_BOSS02_EGG_MTN_B02_3_LOOK_01E_ZNM = 20;
    public const int IDB_BOSS02_EGG_MTN_B02_DMG01_01E_ZNM = 21;
    public const int IDB_BOSS02_EGG_MTN_B02_DMG02_01E_ZNM = 22;
    public const int IDU0_BOSS02_EGG_MTN_B02_1_ANG_01E_ZNM = 0;
    public const int IDU0_BOSS02_EGG_MTN_B02_1_ATT01_01E_ZNM = 0;
    public const int IDU0_BOSS02_EGG_MTN_B02_1_ATT02_01E_ZNM = 0;
    public const int IDU0_BOSS02_EGG_MTN_B02_1_ATT03_01E_ZNM = 0;
    public const int IDU0_BOSS02_EGG_MTN_B02_1_ATT04_01E_ZNM = 0;
    public const int IDU0_BOSS02_EGG_MTN_B02_1_ATT04_02_1E_ZNM = 0;
    public const int IDU0_BOSS02_EGG_MTN_B02_1_ATT04_02_2E_ZNM = 0;
    public const int IDU0_BOSS02_EGG_MTN_B02_1_ATT04_03E_ZNM = 0;
    public const int IDU0_BOSS02_EGG_MTN_B02_1_ATT04_04E_ZNM = 0;
    public const int IDU0_BOSS02_EGG_MTN_B02_1_ATT04_05E_ZNM = 0;
    public const int IDU0_BOSS02_EGG_MTN_B02_1_STA_01E_ZNM = 0;
    public const int IDU0_BOSS02_EGG_MTN_B02_1_STA_02E_ZNM = 0;
    public const int IDU0_BOSS02_EGG_MTN_B02_2_ATT01_01E_ZNM = 0;
    public const int IDU0_BOSS02_EGG_MTN_B02_2_ATT04_01E_ZNM = 0;
    public const int IDU0_BOSS02_EGG_MTN_B02_2_ATT04_02E_ZNM = 0;
    public const int IDU0_BOSS02_EGG_MTN_B02_2_ATT04_03E_ZNM = 0;
    public const int IDU0_BOSS02_EGG_MTN_B02_3_STA_01E_ZNM = 0;
    public const int IDU0_BOSS02_EGG_MTN_B02_3_ATT01_01E_ZNM = 0;
    public const int IDU0_BOSS02_EGG_MTN_B02_3_ATT04_01E_ZNM = 0;
    public const int IDU0_BOSS02_EGG_MTN_B02_3_ATT05_01E_ZNM = 0;
    public const int IDU0_BOSS02_EGG_MTN_B02_3_LOOK_01E_ZNM = 0;
    public const int IDU0_BOSS02_EGG_MTN_B02_DMG01_01E_ZNM = 0;
    public const int IDU0_BOSS02_EGG_MTN_B02_DMG02_01E_ZNM = 0;
    public const int IDU1_BOSS02_EGG_MTN_B02_1_ANG_01E_ZNM = 0;
    public const int IDU1_BOSS02_EGG_MTN_B02_1_ATT01_01E_ZNM = 0;
    public const int IDU1_BOSS02_EGG_MTN_B02_1_ATT02_01E_ZNM = 0;
    public const int IDU1_BOSS02_EGG_MTN_B02_1_ATT03_01E_ZNM = 0;
    public const int IDU1_BOSS02_EGG_MTN_B02_1_ATT04_01E_ZNM = 0;
    public const int IDU1_BOSS02_EGG_MTN_B02_1_ATT04_02_1E_ZNM = 0;
    public const int IDU1_BOSS02_EGG_MTN_B02_1_ATT04_02_2E_ZNM = 0;
    public const int IDU1_BOSS02_EGG_MTN_B02_1_ATT04_03E_ZNM = 0;
    public const int IDU1_BOSS02_EGG_MTN_B02_1_ATT04_04E_ZNM = 0;
    public const int IDU1_BOSS02_EGG_MTN_B02_1_ATT04_05E_ZNM = 0;
    public const int IDU1_BOSS02_EGG_MTN_B02_1_STA_01E_ZNM = 0;
    public const int IDU1_BOSS02_EGG_MTN_B02_1_STA_02E_ZNM = 0;
    public const int IDU1_BOSS02_EGG_MTN_B02_2_ATT01_01E_ZNM = 0;
    public const int IDU1_BOSS02_EGG_MTN_B02_2_ATT04_01E_ZNM = 0;
    public const int IDU1_BOSS02_EGG_MTN_B02_2_ATT04_02E_ZNM = 0;
    public const int IDU1_BOSS02_EGG_MTN_B02_2_ATT04_03E_ZNM = 0;
    public const int IDU1_BOSS02_EGG_MTN_B02_3_STA_01E_ZNM = 0;
    public const int IDU1_BOSS02_EGG_MTN_B02_3_ATT01_01E_ZNM = 0;
    public const int IDU1_BOSS02_EGG_MTN_B02_3_ATT04_01E_ZNM = 0;
    public const int IDU1_BOSS02_EGG_MTN_B02_3_ATT05_01E_ZNM = 0;
    public const int IDU1_BOSS02_EGG_MTN_B02_3_LOOK_01E_ZNM = 0;
    public const int IDU1_BOSS02_EGG_MTN_B02_DMG01_01E_ZNM = 0;
    public const int IDU1_BOSS02_EGG_MTN_B02_DMG02_01E_ZNM = 0;
    public const string IDS_BOSS02_EGG_MTN_B02_1_ANG_01E_ZNM = "B02_1_ANG_01E.ZNM";
    public const string IDS_BOSS02_EGG_MTN_B02_1_ATT01_01E_ZNM = "B02_1_ATT01_01E.ZNM";
    public const string IDS_BOSS02_EGG_MTN_B02_1_ATT02_01E_ZNM = "B02_1_ATT02_01E.ZNM";
    public const string IDS_BOSS02_EGG_MTN_B02_1_ATT03_01E_ZNM = "B02_1_ATT03_01E.ZNM";
    public const string IDS_BOSS02_EGG_MTN_B02_1_ATT04_01E_ZNM = "B02_1_ATT04_01E.ZNM";
    public const string IDS_BOSS02_EGG_MTN_B02_1_ATT04_02_1E_ZNM = "B02_1_ATT04_02_1E.ZNM";
    public const string IDS_BOSS02_EGG_MTN_B02_1_ATT04_02_2E_ZNM = "B02_1_ATT04_02_2E.ZNM";
    public const string IDS_BOSS02_EGG_MTN_B02_1_ATT04_03E_ZNM = "B02_1_ATT04_03E.ZNM";
    public const string IDS_BOSS02_EGG_MTN_B02_1_ATT04_04E_ZNM = "B02_1_ATT04_04E.ZNM";
    public const string IDS_BOSS02_EGG_MTN_B02_1_ATT04_05E_ZNM = "B02_1_ATT04_05E.ZNM";
    public const string IDS_BOSS02_EGG_MTN_B02_1_STA_01E_ZNM = "B02_1_STA_01E.ZNM";
    public const string IDS_BOSS02_EGG_MTN_B02_1_STA_02E_ZNM = "B02_1_STA_02E.ZNM";
    public const string IDS_BOSS02_EGG_MTN_B02_2_ATT01_01E_ZNM = "B02_2_ATT01_01E.ZNM";
    public const string IDS_BOSS02_EGG_MTN_B02_2_ATT04_01E_ZNM = "B02_2_ATT04_01E.ZNM";
    public const string IDS_BOSS02_EGG_MTN_B02_2_ATT04_02E_ZNM = "B02_2_ATT04_02E.ZNM";
    public const string IDS_BOSS02_EGG_MTN_B02_2_ATT04_03E_ZNM = "B02_2_ATT04_03E.ZNM";
    public const string IDS_BOSS02_EGG_MTN_B02_3_STA_01E_ZNM = "B02_3_STA_01E.ZNM";
    public const string IDS_BOSS02_EGG_MTN_B02_3_ATT01_01E_ZNM = "B02_3_ATT01_01E.ZNM";
    public const string IDS_BOSS02_EGG_MTN_B02_3_ATT04_01E_ZNM = "B02_3_ATT04_01E.ZNM";
    public const string IDS_BOSS02_EGG_MTN_B02_3_ATT05_01E_ZNM = "B02_3_ATT05_01E.ZNM";
    public const string IDS_BOSS02_EGG_MTN_B02_3_LOOK_01E_ZNM = "B02_3_LOOK_01E.ZNM";
    public const string IDS_BOSS02_EGG_MTN_B02_DMG01_01E_ZNM = "B02_DMG01_01E.ZNM";
    public const string IDS_BOSS02_EGG_MTN_B02_DMG02_01E_ZNM = "B02_DMG02_01E.ZNM";
    public const int IDB_BOSS02_MDL_B02_BALL_ZNO = 0;
    public const int IDB_BOSS02_MDL_B02_BODY_ZNO = 1;
    public const int IDB_BOSS02_MDL_EGGMAN_ZNO = 2;
    public const int IDU0_BOSS02_MDL_B02_BALL_ZNO = 0;
    public const int IDU0_BOSS02_MDL_B02_BODY_ZNO = 0;
    public const int IDU0_BOSS02_MDL_EGGMAN_ZNO = 0;
    public const int IDU1_BOSS02_MDL_B02_BALL_ZNO = 0;
    public const int IDU1_BOSS02_MDL_B02_BODY_ZNO = 0;
    public const int IDU1_BOSS02_MDL_EGGMAN_ZNO = 0;
    public const string IDS_BOSS02_MDL_B02_BALL_ZNO = "B02_BALL.ZNO";
    public const string IDS_BOSS02_MDL_B02_BODY_ZNO = "B02_BODY.ZNO";
    public const string IDS_BOSS02_MDL_EGGMAN_ZNO = "EGGMAN.ZNO";
    public const int IDB_BOSS03_BODY_MTN_B03_1_ATT01_01B_ZNM = 0;
    public const int IDB_BOSS03_BODY_MTN_B03_1_ATT02_01B_ZNM = 1;
    public const int IDB_BOSS03_BODY_MTN_B03_1_ATT03_01B_ZNM = 2;
    public const int IDB_BOSS03_BODY_MTN_B03_1_STA_01B_ZNM = 3;
    public const int IDB_BOSS03_BODY_MTN_B03_2_LOOK_01B_ZNM = 4;
    public const int IDB_BOSS03_BODY_MTN_B03_2_LOOK_02B_ZNM = 5;
    public const int IDB_BOSS03_BODY_MTN_B03_2_SIGN_01B_ZNM = 6;
    public const int IDB_BOSS03_BODY_MTN_B03_2_STA_01B_ZNM = 7;
    public const int IDB_BOSS03_BODY_MTN_B03_DMG02_01B_ZNM = 8;
    public const int IDU0_BOSS03_BODY_MTN_B03_1_ATT01_01B_ZNM = 0;
    public const int IDU0_BOSS03_BODY_MTN_B03_1_ATT02_01B_ZNM = 0;
    public const int IDU0_BOSS03_BODY_MTN_B03_1_ATT03_01B_ZNM = 0;
    public const int IDU0_BOSS03_BODY_MTN_B03_1_STA_01B_ZNM = 0;
    public const int IDU0_BOSS03_BODY_MTN_B03_2_LOOK_01B_ZNM = 0;
    public const int IDU0_BOSS03_BODY_MTN_B03_2_LOOK_02B_ZNM = 0;
    public const int IDU0_BOSS03_BODY_MTN_B03_2_SIGN_01B_ZNM = 0;
    public const int IDU0_BOSS03_BODY_MTN_B03_2_STA_01B_ZNM = 0;
    public const int IDU0_BOSS03_BODY_MTN_B03_DMG02_01B_ZNM = 0;
    public const int IDU1_BOSS03_BODY_MTN_B03_1_ATT01_01B_ZNM = 0;
    public const int IDU1_BOSS03_BODY_MTN_B03_1_ATT02_01B_ZNM = 0;
    public const int IDU1_BOSS03_BODY_MTN_B03_1_ATT03_01B_ZNM = 0;
    public const int IDU1_BOSS03_BODY_MTN_B03_1_STA_01B_ZNM = 0;
    public const int IDU1_BOSS03_BODY_MTN_B03_2_LOOK_01B_ZNM = 0;
    public const int IDU1_BOSS03_BODY_MTN_B03_2_LOOK_02B_ZNM = 0;
    public const int IDU1_BOSS03_BODY_MTN_B03_2_SIGN_01B_ZNM = 0;
    public const int IDU1_BOSS03_BODY_MTN_B03_2_STA_01B_ZNM = 0;
    public const int IDU1_BOSS03_BODY_MTN_B03_DMG02_01B_ZNM = 0;
    public const string IDS_BOSS03_BODY_MTN_B03_1_ATT01_01B_ZNM = "B03_1_ATT01_01B.ZNM";
    public const string IDS_BOSS03_BODY_MTN_B03_1_ATT02_01B_ZNM = "B03_1_ATT02_01B.ZNM";
    public const string IDS_BOSS03_BODY_MTN_B03_1_ATT03_01B_ZNM = "B03_1_ATT03_01B.ZNM";
    public const string IDS_BOSS03_BODY_MTN_B03_1_STA_01B_ZNM = "B03_1_STA_01B.ZNM";
    public const string IDS_BOSS03_BODY_MTN_B03_2_LOOK_01B_ZNM = "B03_2_LOOK_01B.ZNM";
    public const string IDS_BOSS03_BODY_MTN_B03_2_LOOK_02B_ZNM = "B03_2_LOOK_02B.ZNM";
    public const string IDS_BOSS03_BODY_MTN_B03_2_SIGN_01B_ZNM = "B03_2_SIGN_01B.ZNM";
    public const string IDS_BOSS03_BODY_MTN_B03_2_STA_01B_ZNM = "B03_2_STA_01B.ZNM";
    public const string IDS_BOSS03_BODY_MTN_B03_DMG02_01B_ZNM = "B03_DMG02_01B.ZNM";
    public const int IDB_BOSS03_EGG_MTN_B03_1_ATT01_01E_ZNM = 0;
    public const int IDB_BOSS03_EGG_MTN_B03_1_ATT02_01E_ZNM = 1;
    public const int IDB_BOSS03_EGG_MTN_B03_1_ATT03_01E_ZNM = 2;
    public const int IDB_BOSS03_EGG_MTN_B03_1_STA_01E_ZNM = 3;
    public const int IDB_BOSS03_EGG_MTN_B03_1_STA_02E_ZNM = 4;
    public const int IDB_BOSS03_EGG_MTN_B03_2_ATT01_01E_ZNM = 5;
    public const int IDB_BOSS03_EGG_MTN_B03_2_ATT01_02E_ZNM = 6;
    public const int IDB_BOSS03_EGG_MTN_B03_2_LOOK_01E_ZNM = 7;
    public const int IDB_BOSS03_EGG_MTN_B03_2_LOOK_02E_ZNM = 8;
    public const int IDB_BOSS03_EGG_MTN_B03_2_SIGN_01E_ZNM = 9;
    public const int IDB_BOSS03_EGG_MTN_B03_2_STA_01E_ZNM = 10;
    public const int IDB_BOSS03_EGG_MTN_B03_DMG01_01E_ZNM = 11;
    public const int IDB_BOSS03_EGG_MTN_B03_DMG02_01E_ZNM = 12;
    public const int IDU0_BOSS03_EGG_MTN_B03_1_ATT01_01E_ZNM = 0;
    public const int IDU0_BOSS03_EGG_MTN_B03_1_ATT02_01E_ZNM = 0;
    public const int IDU0_BOSS03_EGG_MTN_B03_1_ATT03_01E_ZNM = 0;
    public const int IDU0_BOSS03_EGG_MTN_B03_1_STA_01E_ZNM = 0;
    public const int IDU0_BOSS03_EGG_MTN_B03_1_STA_02E_ZNM = 0;
    public const int IDU0_BOSS03_EGG_MTN_B03_2_ATT01_01E_ZNM = 0;
    public const int IDU0_BOSS03_EGG_MTN_B03_2_ATT01_02E_ZNM = 0;
    public const int IDU0_BOSS03_EGG_MTN_B03_2_LOOK_01E_ZNM = 0;
    public const int IDU0_BOSS03_EGG_MTN_B03_2_LOOK_02E_ZNM = 0;
    public const int IDU0_BOSS03_EGG_MTN_B03_2_SIGN_01E_ZNM = 0;
    public const int IDU0_BOSS03_EGG_MTN_B03_2_STA_01E_ZNM = 0;
    public const int IDU0_BOSS03_EGG_MTN_B03_DMG01_01E_ZNM = 0;
    public const int IDU0_BOSS03_EGG_MTN_B03_DMG02_01E_ZNM = 0;
    public const int IDU1_BOSS03_EGG_MTN_B03_1_ATT01_01E_ZNM = 0;
    public const int IDU1_BOSS03_EGG_MTN_B03_1_ATT02_01E_ZNM = 0;
    public const int IDU1_BOSS03_EGG_MTN_B03_1_ATT03_01E_ZNM = 0;
    public const int IDU1_BOSS03_EGG_MTN_B03_1_STA_01E_ZNM = 0;
    public const int IDU1_BOSS03_EGG_MTN_B03_1_STA_02E_ZNM = 0;
    public const int IDU1_BOSS03_EGG_MTN_B03_2_ATT01_01E_ZNM = 0;
    public const int IDU1_BOSS03_EGG_MTN_B03_2_ATT01_02E_ZNM = 0;
    public const int IDU1_BOSS03_EGG_MTN_B03_2_LOOK_01E_ZNM = 0;
    public const int IDU1_BOSS03_EGG_MTN_B03_2_LOOK_02E_ZNM = 0;
    public const int IDU1_BOSS03_EGG_MTN_B03_2_SIGN_01E_ZNM = 0;
    public const int IDU1_BOSS03_EGG_MTN_B03_2_STA_01E_ZNM = 0;
    public const int IDU1_BOSS03_EGG_MTN_B03_DMG01_01E_ZNM = 0;
    public const int IDU1_BOSS03_EGG_MTN_B03_DMG02_01E_ZNM = 0;
    public const string IDS_BOSS03_EGG_MTN_B03_1_ATT01_01E_ZNM = "B03_1_ATT01_01E.ZNM";
    public const string IDS_BOSS03_EGG_MTN_B03_1_ATT02_01E_ZNM = "B03_1_ATT02_01E.ZNM";
    public const string IDS_BOSS03_EGG_MTN_B03_1_ATT03_01E_ZNM = "B03_1_ATT03_01E.ZNM";
    public const string IDS_BOSS03_EGG_MTN_B03_1_STA_01E_ZNM = "B03_1_STA_01E.ZNM";
    public const string IDS_BOSS03_EGG_MTN_B03_1_STA_02E_ZNM = "B03_1_STA_02E.ZNM";
    public const string IDS_BOSS03_EGG_MTN_B03_2_ATT01_01E_ZNM = "B03_2_ATT01_01E.ZNM";
    public const string IDS_BOSS03_EGG_MTN_B03_2_ATT01_02E_ZNM = "B03_2_ATT01_02E.ZNM";
    public const string IDS_BOSS03_EGG_MTN_B03_2_LOOK_01E_ZNM = "B03_2_LOOK_01E.ZNM";
    public const string IDS_BOSS03_EGG_MTN_B03_2_LOOK_02E_ZNM = "B03_2_LOOK_02E.ZNM";
    public const string IDS_BOSS03_EGG_MTN_B03_2_SIGN_01E_ZNM = "B03_2_SIGN_01E.ZNM";
    public const string IDS_BOSS03_EGG_MTN_B03_2_STA_01E_ZNM = "B03_2_STA_01E.ZNM";
    public const string IDS_BOSS03_EGG_MTN_B03_DMG01_01E_ZNM = "B03_DMG01_01E.ZNM";
    public const string IDS_BOSS03_EGG_MTN_B03_DMG02_01E_ZNM = "B03_DMG02_01E.ZNM";
    public const int IDB_BOSS03_MDL_B03_BODY_ZNO = 0;
    public const int IDB_BOSS03_MDL_EGGMAN_ZNO = 1;
    public const int IDU0_BOSS03_MDL_B03_BODY_ZNO = 0;
    public const int IDU0_BOSS03_MDL_EGGMAN_ZNO = 0;
    public const int IDU1_BOSS03_MDL_B03_BODY_ZNO = 0;
    public const int IDU1_BOSS03_MDL_EGGMAN_ZNO = 0;
    public const string IDS_BOSS03_MDL_B03_BODY_ZNO = "B03_BODY.ZNO";
    public const string IDS_BOSS03_MDL_EGGMAN_ZNO = "EGGMAN.ZNO";
    public const int IDB_BOSS04_BODY_MTN_B04_1_ATT01_01B_ZNM = 0;
    public const int IDB_BOSS04_BODY_MTN_B04_1_STA_01B_ZNM = 1;
    public const int IDB_BOSS04_BODY_MTN_B04_1_ANG_01B_ZNM = 2;
    public const int IDB_BOSS04_BODY_MTN_B04_1_ANG_02B_ZNM = 3;
    public const int IDB_BOSS04_BODY_MTN_B04_1_ANG_03B_ZNM = 4;
    public const int IDB_BOSS04_BODY_MTN_B04_2_STA_01B_ZNM = 5;
    public const int IDB_BOSS04_BODY_MTN_B04_2_ATT01_01B_ZNM = 6;
    public const int IDB_BOSS04_BODY_MTN_B04_2_ATT02_01B_ZNM = 7;
    public const int IDB_BOSS04_BODY_MTN_B04_2_ATT03_01B_ZNM = 8;
    public const int IDB_BOSS04_BODY_MTN_B04_DMG01_01B_ZNM = 9;
    public const int IDB_BOSS04_BODY_MTN_B04_DMG02_01B_ZNM = 10;
    public const int IDU0_BOSS04_BODY_MTN_B04_1_ATT01_01B_ZNM = 0;
    public const int IDU0_BOSS04_BODY_MTN_B04_1_STA_01B_ZNM = 0;
    public const int IDU0_BOSS04_BODY_MTN_B04_1_ANG_01B_ZNM = 0;
    public const int IDU0_BOSS04_BODY_MTN_B04_1_ANG_02B_ZNM = 0;
    public const int IDU0_BOSS04_BODY_MTN_B04_1_ANG_03B_ZNM = 0;
    public const int IDU0_BOSS04_BODY_MTN_B04_2_STA_01B_ZNM = 0;
    public const int IDU0_BOSS04_BODY_MTN_B04_2_ATT01_01B_ZNM = 0;
    public const int IDU0_BOSS04_BODY_MTN_B04_2_ATT02_01B_ZNM = 0;
    public const int IDU0_BOSS04_BODY_MTN_B04_2_ATT03_01B_ZNM = 0;
    public const int IDU0_BOSS04_BODY_MTN_B04_DMG01_01B_ZNM = 0;
    public const int IDU0_BOSS04_BODY_MTN_B04_DMG02_01B_ZNM = 0;
    public const int IDU1_BOSS04_BODY_MTN_B04_1_ATT01_01B_ZNM = 0;
    public const int IDU1_BOSS04_BODY_MTN_B04_1_STA_01B_ZNM = 0;
    public const int IDU1_BOSS04_BODY_MTN_B04_1_ANG_01B_ZNM = 0;
    public const int IDU1_BOSS04_BODY_MTN_B04_1_ANG_02B_ZNM = 0;
    public const int IDU1_BOSS04_BODY_MTN_B04_1_ANG_03B_ZNM = 0;
    public const int IDU1_BOSS04_BODY_MTN_B04_2_STA_01B_ZNM = 0;
    public const int IDU1_BOSS04_BODY_MTN_B04_2_ATT01_01B_ZNM = 0;
    public const int IDU1_BOSS04_BODY_MTN_B04_2_ATT02_01B_ZNM = 0;
    public const int IDU1_BOSS04_BODY_MTN_B04_2_ATT03_01B_ZNM = 0;
    public const int IDU1_BOSS04_BODY_MTN_B04_DMG01_01B_ZNM = 0;
    public const int IDU1_BOSS04_BODY_MTN_B04_DMG02_01B_ZNM = 0;
    public const string IDS_BOSS04_BODY_MTN_B04_1_ATT01_01B_ZNM = "B04_1_ATT01_01B.ZNM";
    public const string IDS_BOSS04_BODY_MTN_B04_1_STA_01B_ZNM = "B04_1_STA_01B.ZNM";
    public const string IDS_BOSS04_BODY_MTN_B04_1_ANG_01B_ZNM = "B04_1_ANG_01B.ZNM";
    public const string IDS_BOSS04_BODY_MTN_B04_1_ANG_02B_ZNM = "B04_1_ANG_02B.ZNM";
    public const string IDS_BOSS04_BODY_MTN_B04_1_ANG_03B_ZNM = "B04_1_ANG_03B.ZNM";
    public const string IDS_BOSS04_BODY_MTN_B04_2_STA_01B_ZNM = "B04_2_STA_01B.ZNM";
    public const string IDS_BOSS04_BODY_MTN_B04_2_ATT01_01B_ZNM = "B04_2_ATT01_01B.ZNM";
    public const string IDS_BOSS04_BODY_MTN_B04_2_ATT02_01B_ZNM = "B04_2_ATT02_01B.ZNM";
    public const string IDS_BOSS04_BODY_MTN_B04_2_ATT03_01B_ZNM = "B04_2_ATT03_01B.ZNM";
    public const string IDS_BOSS04_BODY_MTN_B04_DMG01_01B_ZNM = "B04_DMG01_01B.ZNM";
    public const string IDS_BOSS04_BODY_MTN_B04_DMG02_01B_ZNM = "B04_DMG02_01B.ZNM";
    public const int IDB_BOSS04_CAPSULE_MTN_B04_1_BOM_01_ZNM = 0;
    public const int IDB_BOSS04_CAPSULE_MTN_B04_1_BOM_02_ZNM = 0;
    public const int IDB_BOSS04_CAPSULE_MTN_B04_1_BOM_03_ZNM = 0;
    public const int IDB_BOSS04_CAPSULE_MTN_B04_1_BOM_04_ZNM = 0;
    public const int IDU0_BOSS04_CAPSULE_MTN_B04_1_BOM_01_ZNM = 0;
    public const int IDU0_BOSS04_CAPSULE_MTN_B04_1_BOM_02_ZNM = 0;
    public const int IDU0_BOSS04_CAPSULE_MTN_B04_1_BOM_03_ZNM = 0;
    public const int IDU0_BOSS04_CAPSULE_MTN_B04_1_BOM_04_ZNM = 0;
    public const int IDU1_BOSS04_CAPSULE_MTN_B04_1_BOM_01_ZNM = 0;
    public const int IDU1_BOSS04_CAPSULE_MTN_B04_1_BOM_02_ZNM = 0;
    public const int IDU1_BOSS04_CAPSULE_MTN_B04_1_BOM_03_ZNM = 0;
    public const int IDU1_BOSS04_CAPSULE_MTN_B04_1_BOM_04_ZNM = 0;
    public const string IDS_BOSS04_CAPSULE_MTN_B04_1_BOM_01_ZNM = "B04_1_BOM_01.ZNM";
    public const string IDS_BOSS04_CAPSULE_MTN_B04_1_BOM_02_ZNM = "B04_1_BOM_02.ZNM";
    public const string IDS_BOSS04_CAPSULE_MTN_B04_1_BOM_03_ZNM = "B04_1_BOM_03.ZNM";
    public const string IDS_BOSS04_CAPSULE_MTN_B04_1_BOM_04_ZNM = "B04_1_BOM_04.ZNM";
    public const int IDB_BOSS04_EGG_MTN_B04_1_ATT01_01E_ZNM = 0;
    public const int IDB_BOSS04_EGG_MTN_B04_2_ATT01_01E_ZNM = 1;
    public const int IDB_BOSS04_EGG_MTN_B04_2_ATT02_01E_ZNM = 2;
    public const int IDB_BOSS04_EGG_MTN_B04_2_ATT03_01E_ZNM = 3;
    public const int IDB_BOSS04_EGG_MTN_B04_DMG01_01E_ZNM = 4;
    public const int IDB_BOSS04_EGG_MTN_B04_DMG02_01E_ZNM = 5;
    public const int IDB_BOSS04_EGG_MTN_B04_1_ANG_01E_ZNM = 6;
    public const int IDB_BOSS04_EGG_MTN_B04_1_ANG_02E_ZNM = 7;
    public const int IDB_BOSS04_EGG_MTN_B04_1_ANG_03E_ZNM = 8;
    public const int IDB_BOSS04_EGG_MTN_B04_1_STA_01E_ZNM = 9;
    public const int IDB_BOSS04_EGG_MTN_B04_1_STA_02E_ZNM = 10;
    public const int IDB_BOSS04_EGG_MTN_B04_2_STA_01E_ZNM = 11;
    public const int IDU0_BOSS04_EGG_MTN_B04_1_ATT01_01E_ZNM = 0;
    public const int IDU0_BOSS04_EGG_MTN_B04_2_ATT01_01E_ZNM = 0;
    public const int IDU0_BOSS04_EGG_MTN_B04_2_ATT02_01E_ZNM = 0;
    public const int IDU0_BOSS04_EGG_MTN_B04_2_ATT03_01E_ZNM = 0;
    public const int IDU0_BOSS04_EGG_MTN_B04_DMG01_01E_ZNM = 0;
    public const int IDU0_BOSS04_EGG_MTN_B04_DMG02_01E_ZNM = 0;
    public const int IDU0_BOSS04_EGG_MTN_B04_1_ANG_01E_ZNM = 0;
    public const int IDU0_BOSS04_EGG_MTN_B04_1_ANG_02E_ZNM = 0;
    public const int IDU0_BOSS04_EGG_MTN_B04_1_ANG_03E_ZNM = 0;
    public const int IDU0_BOSS04_EGG_MTN_B04_1_STA_01E_ZNM = 0;
    public const int IDU0_BOSS04_EGG_MTN_B04_1_STA_02E_ZNM = 0;
    public const int IDU0_BOSS04_EGG_MTN_B04_2_STA_01E_ZNM = 0;
    public const int IDU1_BOSS04_EGG_MTN_B04_1_ATT01_01E_ZNM = 0;
    public const int IDU1_BOSS04_EGG_MTN_B04_2_ATT01_01E_ZNM = 0;
    public const int IDU1_BOSS04_EGG_MTN_B04_2_ATT02_01E_ZNM = 0;
    public const int IDU1_BOSS04_EGG_MTN_B04_2_ATT03_01E_ZNM = 0;
    public const int IDU1_BOSS04_EGG_MTN_B04_DMG01_01E_ZNM = 0;
    public const int IDU1_BOSS04_EGG_MTN_B04_DMG02_01E_ZNM = 0;
    public const int IDU1_BOSS04_EGG_MTN_B04_1_ANG_01E_ZNM = 0;
    public const int IDU1_BOSS04_EGG_MTN_B04_1_ANG_02E_ZNM = 0;
    public const int IDU1_BOSS04_EGG_MTN_B04_1_ANG_03E_ZNM = 0;
    public const int IDU1_BOSS04_EGG_MTN_B04_1_STA_01E_ZNM = 0;
    public const int IDU1_BOSS04_EGG_MTN_B04_1_STA_02E_ZNM = 0;
    public const int IDU1_BOSS04_EGG_MTN_B04_2_STA_01E_ZNM = 0;
    public const string IDS_BOSS04_EGG_MTN_B04_1_ATT01_01E_ZNM = "B04_1_ATT01_01E.ZNM";
    public const string IDS_BOSS04_EGG_MTN_B04_2_ATT01_01E_ZNM = "B04_2_ATT01_01E.ZNM";
    public const string IDS_BOSS04_EGG_MTN_B04_2_ATT02_01E_ZNM = "B04_2_ATT02_01E.ZNM";
    public const string IDS_BOSS04_EGG_MTN_B04_2_ATT03_01E_ZNM = "B04_2_ATT03_01E.ZNM";
    public const string IDS_BOSS04_EGG_MTN_B04_DMG01_01E_ZNM = "B04_DMG01_01E.ZNM";
    public const string IDS_BOSS04_EGG_MTN_B04_DMG02_01E_ZNM = "B04_DMG02_01E.ZNM";
    public const string IDS_BOSS04_EGG_MTN_B04_1_ANG_01E_ZNM = "B04_1_ANG_01E.ZNM";
    public const string IDS_BOSS04_EGG_MTN_B04_1_ANG_02E_ZNM = "B04_1_ANG_02E.ZNM";
    public const string IDS_BOSS04_EGG_MTN_B04_1_ANG_03E_ZNM = "B04_1_ANG_03E.ZNM";
    public const string IDS_BOSS04_EGG_MTN_B04_1_STA_01E_ZNM = "B04_1_STA_01E.ZNM";
    public const string IDS_BOSS04_EGG_MTN_B04_1_STA_02E_ZNM = "B04_1_STA_02E.ZNM";
    public const string IDS_BOSS04_EGG_MTN_B04_2_STA_01E_ZNM = "B04_2_STA_01E.ZNM";
    public const int IDB_BOSS04_MDL_B04_BODY_ZNO = 0;
    public const int IDB_BOSS04_MDL_EGGMAN_ZNO = 1;
    public const int IDB_BOSS04_MDL_B04_CAPSULE_ZNO = 2;
    public const int IDB_BOSS04_MDL_B04_M_EGG1_ZNO = 3;
    public const int IDB_BOSS04_MDL_B04_M_EGG2_ZNO = 4;
    public const int IDB_BOSS04_MDL_B04_M_EGG3_ZNO = 5;
    public const int IDB_BOSS04_MDL_B04_M_EGG4_ZNO = 6;
    public const int IDU0_BOSS04_MDL_B04_BODY_ZNO = 0;
    public const int IDU0_BOSS04_MDL_EGGMAN_ZNO = 0;
    public const int IDU0_BOSS04_MDL_B04_CAPSULE_ZNO = 0;
    public const int IDU0_BOSS04_MDL_B04_M_EGG1_ZNO = 0;
    public const int IDU0_BOSS04_MDL_B04_M_EGG2_ZNO = 0;
    public const int IDU0_BOSS04_MDL_B04_M_EGG3_ZNO = 0;
    public const int IDU0_BOSS04_MDL_B04_M_EGG4_ZNO = 0;
    public const int IDU1_BOSS04_MDL_B04_BODY_ZNO = 0;
    public const int IDU1_BOSS04_MDL_EGGMAN_ZNO = 0;
    public const int IDU1_BOSS04_MDL_B04_CAPSULE_ZNO = 0;
    public const int IDU1_BOSS04_MDL_B04_M_EGG1_ZNO = 0;
    public const int IDU1_BOSS04_MDL_B04_M_EGG2_ZNO = 0;
    public const int IDU1_BOSS04_MDL_B04_M_EGG3_ZNO = 0;
    public const int IDU1_BOSS04_MDL_B04_M_EGG4_ZNO = 0;
    public const string IDS_BOSS04_MDL_B04_BODY_ZNO = "B04_BODY.ZNO";
    public const string IDS_BOSS04_MDL_EGGMAN_ZNO = "EGGMAN.ZNO";
    public const string IDS_BOSS04_MDL_B04_CAPSULE_ZNO = "B04_CAPSULE.ZNO";
    public const string IDS_BOSS04_MDL_B04_M_EGG1_ZNO = "B04_M_EGG1.ZNO";
    public const string IDS_BOSS04_MDL_B04_M_EGG2_ZNO = "B04_M_EGG2.ZNO";
    public const string IDS_BOSS04_MDL_B04_M_EGG3_ZNO = "B04_M_EGG3.ZNO";
    public const string IDS_BOSS04_MDL_B04_M_EGG4_ZNO = "B04_M_EGG4.ZNO";
    public const int IDB_BOSS05_BODY_MTN_B05_1_ATT01_01B_ZNM = 0;
    public const int IDB_BOSS05_BODY_MTN_B05_1_ATT02_01B_ZNM = 1;
    public const int IDB_BOSS05_BODY_MTN_B05_1_ATT03_01B_ZNM = 2;
    public const int IDB_BOSS05_BODY_MTN_B05_1_ATT06_01B_ZNM = 3;
    public const int IDB_BOSS05_BODY_MTN_B05_1_ATT06_02B_ZNM = 4;
    public const int IDB_BOSS05_BODY_MTN_B05_1_ATT06_03B_ZNM = 5;
    public const int IDB_BOSS05_BODY_MTN_B05_1_ATT07_01B_ZNM = 6;
    public const int IDB_BOSS05_BODY_MTN_B05_1_ATT08_01B_ZNM = 7;
    public const int IDB_BOSS05_BODY_MTN_B05_1_ATT09_01B_ZNM = 8;
    public const int IDB_BOSS05_BODY_MTN_B05_1_ATT09_02B_ZNM = 9;
    public const int IDB_BOSS05_BODY_MTN_B05_1_ATT09_03B_ZNM = 10;
    public const int IDB_BOSS05_BODY_MTN_B05_1_ATT09_04B_ZNM = 11;
    public const int IDB_BOSS05_BODY_MTN_B05_2_ATT01_01B_ZNM = 12;
    public const int IDB_BOSS05_BODY_MTN_B05_2_ATT02_01B_ZNM = 13;
    public const int IDB_BOSS05_BODY_MTN_B05_2_ATT02_02B_ZNM = 14;
    public const int IDB_BOSS05_BODY_MTN_B05_2_ATT02_03B_ZNM = 15;
    public const int IDB_BOSS05_BODY_MTN_B05_2_ATT02_04B_ZNM = 16;
    public const int IDB_BOSS05_BODY_MTN_B05_2_ATT02_05B_ZNM = 17;
    public const int IDB_BOSS05_BODY_MTN_B05_2_ATT02_06B_ZNM = 18;
    public const int IDB_BOSS05_BODY_MTN_B05_2_ATT02_07B_ZNM = 19;
    public const int IDB_BOSS05_BODY_MTN_B05_2_ATT03_01B_ZNM = 20;
    public const int IDB_BOSS05_BODY_MTN_B05_2_ATT03_02B_ZNM = 21;
    public const int IDB_BOSS05_BODY_MTN_B05_2_ATT03_03B_ZNM = 22;
    public const int IDB_BOSS05_BODY_MTN_B05_2_ATT03_04B_ZNM = 23;
    public const int IDB_BOSS05_BODY_MTN_B05_2_ATT03_05B_ZNM = 24;
    public const int IDB_BOSS05_BODY_MTN_B05_2_ATT03_06B_ZNM = 25;
    public const int IDB_BOSS05_BODY_MTN_B05_2_ATT03_07B_ZNM = 26;
    public const int IDB_BOSS05_BODY_MTN_B05_2_ATT04_01B_ZNM = 27;
    public const int IDB_BOSS05_BODY_MTN_B05_2_ATT05_01B_ZNM = 28;
    public const int IDB_BOSS05_BODY_MTN_B05_2_ATT06_01B_ZNM = 29;
    public const int IDB_BOSS05_BODY_MTN_B05_2_ATT07_01B_ZNM = 30;
    public const int IDB_BOSS05_BODY_MTN_B05_2_ATT08_01B_ZNM = 31;
    public const int IDB_BOSS05_BODY_MTN_B05_2_ATT09_01B_ZNM = 32;
    public const int IDB_BOSS05_BODY_MTN_B05_2_ATT09_02B_ZNM = 33;
    public const int IDB_BOSS05_BODY_MTN_B05_2_ATT09_03B_ZNM = 34;
    public const int IDB_BOSS05_BODY_MTN_B05_2_STA_02B_ZNM = 35;
    public const int IDB_BOSS05_BODY_MTN_B05_2_STA_03B_ZNM = 36;
    public const int IDB_BOSS05_BODY_MTN_B05_2_STA_04B_ZNM = 37;
    public const int IDB_BOSS05_BODY_MTN_B05_2_STA_05B_ZNM = 38;
    public const int IDB_BOSS05_BODY_MTN_B05_2_STA_06B_ZNM = 39;
    public const int IDB_BOSS05_BODY_MTN_B05_DMG01_01B_ZNM = 40;
    public const int IDB_BOSS05_BODY_MTN_B05_DMG01_02B_ZNM = 41;
    public const int IDB_BOSS05_BODY_MTN_B05_DMG01_03B_ZNM = 42;
    public const int IDU0_BOSS05_BODY_MTN_B05_1_ATT01_01B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_1_ATT02_01B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_1_ATT03_01B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_1_ATT06_01B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_1_ATT06_02B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_1_ATT06_03B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_1_ATT07_01B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_1_ATT08_01B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_1_ATT09_01B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_1_ATT09_02B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_1_ATT09_03B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_1_ATT09_04B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_2_ATT01_01B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_2_ATT02_01B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_2_ATT02_02B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_2_ATT02_03B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_2_ATT02_04B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_2_ATT02_05B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_2_ATT02_06B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_2_ATT02_07B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_2_ATT03_01B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_2_ATT03_02B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_2_ATT03_03B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_2_ATT03_04B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_2_ATT03_05B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_2_ATT03_06B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_2_ATT03_07B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_2_ATT04_01B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_2_ATT05_01B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_2_ATT06_01B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_2_ATT07_01B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_2_ATT08_01B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_2_ATT09_01B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_2_ATT09_02B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_2_ATT09_03B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_2_STA_02B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_2_STA_03B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_2_STA_04B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_2_STA_05B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_2_STA_06B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_DMG01_01B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_DMG01_02B_ZNM = 0;
    public const int IDU0_BOSS05_BODY_MTN_B05_DMG01_03B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_1_ATT01_01B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_1_ATT02_01B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_1_ATT03_01B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_1_ATT06_01B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_1_ATT06_02B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_1_ATT06_03B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_1_ATT07_01B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_1_ATT08_01B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_1_ATT09_01B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_1_ATT09_02B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_1_ATT09_03B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_1_ATT09_04B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_2_ATT01_01B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_2_ATT02_01B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_2_ATT02_02B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_2_ATT02_03B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_2_ATT02_04B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_2_ATT02_05B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_2_ATT02_06B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_2_ATT02_07B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_2_ATT03_01B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_2_ATT03_02B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_2_ATT03_03B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_2_ATT03_04B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_2_ATT03_05B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_2_ATT03_06B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_2_ATT03_07B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_2_ATT04_01B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_2_ATT05_01B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_2_ATT06_01B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_2_ATT07_01B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_2_ATT08_01B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_2_ATT09_01B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_2_ATT09_02B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_2_ATT09_03B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_2_STA_02B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_2_STA_03B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_2_STA_04B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_2_STA_05B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_2_STA_06B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_DMG01_01B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_DMG01_02B_ZNM = 0;
    public const int IDU1_BOSS05_BODY_MTN_B05_DMG01_03B_ZNM = 0;
    public const string IDS_BOSS05_BODY_MTN_B05_1_ATT01_01B_ZNM = "B05_1_ATT01_01B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_1_ATT02_01B_ZNM = "B05_1_ATT02_01B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_1_ATT03_01B_ZNM = "B05_1_ATT03_01B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_1_ATT06_01B_ZNM = "B05_1_ATT06_01B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_1_ATT06_02B_ZNM = "B05_1_ATT06_02B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_1_ATT06_03B_ZNM = "B05_1_ATT06_03B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_1_ATT07_01B_ZNM = "B05_1_ATT07_01B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_1_ATT08_01B_ZNM = "B05_1_ATT08_01B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_1_ATT09_01B_ZNM = "B05_1_ATT09_01B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_1_ATT09_02B_ZNM = "B05_1_ATT09_02B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_1_ATT09_03B_ZNM = "B05_1_ATT09_03B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_1_ATT09_04B_ZNM = "B05_1_ATT09_04B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_2_ATT01_01B_ZNM = "B05_2_ATT01_01B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_2_ATT02_01B_ZNM = "B05_2_ATT02_01B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_2_ATT02_02B_ZNM = "B05_2_ATT02_02B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_2_ATT02_03B_ZNM = "B05_2_ATT02_03B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_2_ATT02_04B_ZNM = "B05_2_ATT02_04B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_2_ATT02_05B_ZNM = "B05_2_ATT02_05B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_2_ATT02_06B_ZNM = "B05_2_ATT02_06B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_2_ATT02_07B_ZNM = "B05_2_ATT02_07B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_2_ATT03_01B_ZNM = "B05_2_ATT03_01B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_2_ATT03_02B_ZNM = "B05_2_ATT03_02B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_2_ATT03_03B_ZNM = "B05_2_ATT03_03B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_2_ATT03_04B_ZNM = "B05_2_ATT03_04B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_2_ATT03_05B_ZNM = "B05_2_ATT03_05B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_2_ATT03_06B_ZNM = "B05_2_ATT03_06B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_2_ATT03_07B_ZNM = "B05_2_ATT03_07B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_2_ATT04_01B_ZNM = "B05_2_ATT04_01B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_2_ATT05_01B_ZNM = "B05_2_ATT05_01B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_2_ATT06_01B_ZNM = "B05_2_ATT06_01B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_2_ATT07_01B_ZNM = "B05_2_ATT07_01B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_2_ATT08_01B_ZNM = "B05_2_ATT08_01B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_2_ATT09_01B_ZNM = "B05_2_ATT09_01B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_2_ATT09_02B_ZNM = "B05_2_ATT09_02B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_2_ATT09_03B_ZNM = "B05_2_ATT09_03B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_2_STA_02B_ZNM = "B05_2_STA_02B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_2_STA_03B_ZNM = "B05_2_STA_03B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_2_STA_04B_ZNM = "B05_2_STA_04B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_2_STA_05B_ZNM = "B05_2_STA_05B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_2_STA_06B_ZNM = "B05_2_STA_06B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_DMG01_01B_ZNM = "B05_DMG01_01B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_DMG01_02B_ZNM = "B05_DMG01_02B.ZNM";
    public const string IDS_BOSS05_BODY_MTN_B05_DMG01_03B_ZNM = "B05_DMG01_03B.ZNM";
    public const int IDB_BOSS05_CTPLT_MTN_GMK_DEGG_CTPLT_ZNV = 0;
    public const int IDU0_BOSS05_CTPLT_MTN_GMK_DEGG_CTPLT_ZNV = 0;
    public const int IDU1_BOSS05_CTPLT_MTN_GMK_DEGG_CTPLT_ZNV = 0;
    public const string IDS_BOSS05_CTPLT_MTN_GMK_DEGG_CTPLT_ZNV = "GMK_DEGG_CTPLT.ZNV";
    public const int IDB_BOSS05_EGG_MTN_B05_0_ATT01_01E_ZNM = 0;
    public const int IDB_BOSS05_EGG_MTN_B05_0_ATT02_01E_ZNM = 1;
    public const int IDB_BOSS05_EGG_MTN_B05_0_ATT02_02E_ZNM = 2;
    public const int IDB_BOSS05_EGG_MTN_B05_0_ATT02_03E_ZNM = 3;
    public const int IDB_BOSS05_EGG_MTN_B05_0_ATT03_01E_ZNM = 4;
    public const int IDU0_BOSS05_EGG_MTN_B05_0_ATT01_01E_ZNM = 0;
    public const int IDU0_BOSS05_EGG_MTN_B05_0_ATT02_01E_ZNM = 0;
    public const int IDU0_BOSS05_EGG_MTN_B05_0_ATT02_02E_ZNM = 0;
    public const int IDU0_BOSS05_EGG_MTN_B05_0_ATT02_03E_ZNM = 0;
    public const int IDU0_BOSS05_EGG_MTN_B05_0_ATT03_01E_ZNM = 0;
    public const int IDU1_BOSS05_EGG_MTN_B05_0_ATT01_01E_ZNM = 0;
    public const int IDU1_BOSS05_EGG_MTN_B05_0_ATT02_01E_ZNM = 0;
    public const int IDU1_BOSS05_EGG_MTN_B05_0_ATT02_02E_ZNM = 0;
    public const int IDU1_BOSS05_EGG_MTN_B05_0_ATT02_03E_ZNM = 0;
    public const int IDU1_BOSS05_EGG_MTN_B05_0_ATT03_01E_ZNM = 0;
    public const string IDS_BOSS05_EGG_MTN_B05_0_ATT01_01E_ZNM = "B05_0_ATT01_01E.ZNM";
    public const string IDS_BOSS05_EGG_MTN_B05_0_ATT02_01E_ZNM = "B05_0_ATT02_01E.ZNM";
    public const string IDS_BOSS05_EGG_MTN_B05_0_ATT02_02E_ZNM = "B05_0_ATT02_02E.ZNM";
    public const string IDS_BOSS05_EGG_MTN_B05_0_ATT02_03E_ZNM = "B05_0_ATT02_03E.ZNM";
    public const string IDS_BOSS05_EGG_MTN_B05_0_ATT03_01E_ZNM = "B05_0_ATT03_01E.ZNM";
    public const int IDB_BOSS05_LAND01_MTN_GMK_FINAL_LAND_01_ZNV = 0;
    public const int IDU0_BOSS05_LAND01_MTN_GMK_FINAL_LAND_01_ZNV = 0;
    public const int IDU1_BOSS05_LAND01_MTN_GMK_FINAL_LAND_01_ZNV = 0;
    public const string IDS_BOSS05_LAND01_MTN_GMK_FINAL_LAND_01_ZNV = "GMK_FINAL_LAND_01.ZNV";
    public const int IDB_BOSS05_LAND02_MTN_GMK_FINAL_LAND_02_ZNV = 0;
    public const int IDU0_BOSS05_LAND02_MTN_GMK_FINAL_LAND_02_ZNV = 0;
    public const int IDU1_BOSS05_LAND02_MTN_GMK_FINAL_LAND_02_ZNV = 0;
    public const string IDS_BOSS05_LAND02_MTN_GMK_FINAL_LAND_02_ZNV = "GMK_FINAL_LAND_02.ZNV";
    public const int IDB_BOSS05_LAND03_MTN_GMK_FINAL_LAND_03_ZNV = 0;
    public const int IDU0_BOSS05_LAND03_MTN_GMK_FINAL_LAND_03_ZNV = 0;
    public const int IDU1_BOSS05_LAND03_MTN_GMK_FINAL_LAND_03_ZNV = 0;
    public const string IDS_BOSS05_LAND03_MTN_GMK_FINAL_LAND_03_ZNV = "GMK_FINAL_LAND_03.ZNV";
    public const int IDB_BOSS05_MDL_B05_BALKAN_ZNO = 0;
    public const int IDB_BOSS05_MDL_B05_BODY_ZNO = 1;
    public const int IDB_BOSS05_MDL_EGGMAN_ZNO = 2;
    public const int IDB_BOSS05_MDL_B05_ROCKET_L_ZNO = 3;
    public const int IDB_BOSS05_MDL_GMK_DEGG_CTPLT_ZNO = 4;
    public const int IDB_BOSS05_MDL_GMK_FINAL_LAND_01_ZNO = 5;
    public const int IDB_BOSS05_MDL_GMK_FINAL_LAND_02_ZNO = 6;
    public const int IDB_BOSS05_MDL_GMK_FINAL_LAND_03_ZNO = 7;
    public const int IDU0_BOSS05_MDL_B05_BALKAN_ZNO = 0;
    public const int IDU0_BOSS05_MDL_B05_BODY_ZNO = 0;
    public const int IDU0_BOSS05_MDL_EGGMAN_ZNO = 0;
    public const int IDU0_BOSS05_MDL_B05_ROCKET_L_ZNO = 0;
    public const int IDU0_BOSS05_MDL_GMK_DEGG_CTPLT_ZNO = 0;
    public const int IDU0_BOSS05_MDL_GMK_FINAL_LAND_01_ZNO = 0;
    public const int IDU0_BOSS05_MDL_GMK_FINAL_LAND_02_ZNO = 0;
    public const int IDU0_BOSS05_MDL_GMK_FINAL_LAND_03_ZNO = 0;
    public const int IDU1_BOSS05_MDL_B05_BALKAN_ZNO = 0;
    public const int IDU1_BOSS05_MDL_B05_BODY_ZNO = 0;
    public const int IDU1_BOSS05_MDL_EGGMAN_ZNO = 0;
    public const int IDU1_BOSS05_MDL_B05_ROCKET_L_ZNO = 0;
    public const int IDU1_BOSS05_MDL_GMK_DEGG_CTPLT_ZNO = 0;
    public const int IDU1_BOSS05_MDL_GMK_FINAL_LAND_01_ZNO = 0;
    public const int IDU1_BOSS05_MDL_GMK_FINAL_LAND_02_ZNO = 0;
    public const int IDU1_BOSS05_MDL_GMK_FINAL_LAND_03_ZNO = 0;
    public const string IDS_BOSS05_MDL_B05_BALKAN_ZNO = "B05_BALKAN.ZNO";
    public const string IDS_BOSS05_MDL_B05_BODY_ZNO = "B05_BODY.ZNO";
    public const string IDS_BOSS05_MDL_EGGMAN_ZNO = "EGGMAN.ZNO";
    public const string IDS_BOSS05_MDL_B05_ROCKET_L_ZNO = "B05_ROCKET_L.ZNO";
    public const string IDS_BOSS05_MDL_GMK_DEGG_CTPLT_ZNO = "GMK_DEGG_CTPLT.ZNO";
    public const string IDS_BOSS05_MDL_GMK_FINAL_LAND_01_ZNO = "GMK_FINAL_LAND_01.ZNO";
    public const string IDS_BOSS05_MDL_GMK_FINAL_LAND_02_ZNO = "GMK_FINAL_LAND_02.ZNO";
    public const string IDS_BOSS05_MDL_GMK_FINAL_LAND_03_ZNO = "GMK_FINAL_LAND_03.ZNO";
    public const int IDB_BOSS05_ROCKET_MTN_B05_ROCKET_L_ZNM = 0;
    public const int IDU0_BOSS05_ROCKET_MTN_B05_ROCKET_L_ZNM = 0;
    public const int IDU1_BOSS05_ROCKET_MTN_B05_ROCKET_L_ZNM = 0;
    public const string IDS_BOSS05_ROCKET_MTN_B05_ROCKET_L_ZNM = "B05_ROCKET_L.ZNM";
    public const int IDB_DECO_ZONE1_DECO_ZONE1_MDL_AMB = 0;
    public const int IDB_DECO_ZONE1_DECO_ZONE1_TEX_AMB = 1;
    public const int IDB_DECO_ZONE1_DECO_ZONE1_MTN_AMB = 2;
    public const int IDB_DECO_ZONE1_DECO_ZONE1_MAT_AMB = 3;
    public const int IDB_DECO_ZONE1_DECO_ZONE1_MDL_FALL_AMB = 4;
    public const int IDB_DECO_ZONE1_DECO_ZONE1_TEX_FALL_AMB = 5;
    public const int IDU0_DECO_ZONE1_DECO_ZONE1_MDL_AMB = 0;
    public const int IDU0_DECO_ZONE1_DECO_ZONE1_TEX_AMB = 0;
    public const int IDU0_DECO_ZONE1_DECO_ZONE1_MTN_AMB = 0;
    public const int IDU0_DECO_ZONE1_DECO_ZONE1_MAT_AMB = 0;
    public const int IDU0_DECO_ZONE1_DECO_ZONE1_MDL_FALL_AMB = 0;
    public const int IDU0_DECO_ZONE1_DECO_ZONE1_TEX_FALL_AMB = 0;
    public const int IDU1_DECO_ZONE1_DECO_ZONE1_MDL_AMB = 0;
    public const int IDU1_DECO_ZONE1_DECO_ZONE1_TEX_AMB = 0;
    public const int IDU1_DECO_ZONE1_DECO_ZONE1_MTN_AMB = 0;
    public const int IDU1_DECO_ZONE1_DECO_ZONE1_MAT_AMB = 0;
    public const int IDU1_DECO_ZONE1_DECO_ZONE1_MDL_FALL_AMB = 0;
    public const int IDU1_DECO_ZONE1_DECO_ZONE1_TEX_FALL_AMB = 0;
    public const string IDS_DECO_ZONE1_DECO_ZONE1_MDL_AMB = "DECO_ZONE1_MDL.AMB";
    public const string IDS_DECO_ZONE1_DECO_ZONE1_TEX_AMB = "DECO_ZONE1_TEX.AMB";
    public const string IDS_DECO_ZONE1_DECO_ZONE1_MTN_AMB = "DECO_ZONE1_MTN.AMB";
    public const string IDS_DECO_ZONE1_DECO_ZONE1_MAT_AMB = "DECO_ZONE1_MAT.AMB";
    public const string IDS_DECO_ZONE1_DECO_ZONE1_MDL_FALL_AMB = "DECO_ZONE1_MDL_FALL.AMB";
    public const string IDS_DECO_ZONE1_DECO_ZONE1_TEX_FALL_AMB = "DECO_ZONE1_TEX_FALL.AMB";
    public const int IDB_DECO_ZONE1_MAT_Z1_FALL_TEST_ZNV = 0;
    public const int IDB_DECO_ZONE1_MAT_Z1_FALL_LEFT_ZNV = 1;
    public const int IDB_DECO_ZONE1_MAT_Z1_FALL_RIGHT_ZNV = 2;
    public const int IDB_DECO_ZONE1_MAT_Z1_FALL_ONE_ZNV = 3;
    public const int IDB_DECO_ZONE1_MAT_Z1_D_FALL_TEST_A_ZNV = 4;
    public const int IDB_DECO_ZONE1_MAT_Z1_D_FALL_LEFT_A_ZNV = 5;
    public const int IDB_DECO_ZONE1_MAT_Z1_D_FALL_RIGHT_A_ZNV = 6;
    public const int IDB_DECO_ZONE1_MAT_Z1_D_FALL_ONE_A_ZNV = 7;
    public const int IDU0_DECO_ZONE1_MAT_Z1_FALL_TEST_ZNV = 0;
    public const int IDU0_DECO_ZONE1_MAT_Z1_FALL_LEFT_ZNV = 0;
    public const int IDU0_DECO_ZONE1_MAT_Z1_FALL_RIGHT_ZNV = 0;
    public const int IDU0_DECO_ZONE1_MAT_Z1_FALL_ONE_ZNV = 0;
    public const int IDU0_DECO_ZONE1_MAT_Z1_D_FALL_TEST_A_ZNV = 0;
    public const int IDU0_DECO_ZONE1_MAT_Z1_D_FALL_LEFT_A_ZNV = 0;
    public const int IDU0_DECO_ZONE1_MAT_Z1_D_FALL_RIGHT_A_ZNV = 0;
    public const int IDU0_DECO_ZONE1_MAT_Z1_D_FALL_ONE_A_ZNV = 0;
    public const int IDU1_DECO_ZONE1_MAT_Z1_FALL_TEST_ZNV = 0;
    public const int IDU1_DECO_ZONE1_MAT_Z1_FALL_LEFT_ZNV = 0;
    public const int IDU1_DECO_ZONE1_MAT_Z1_FALL_RIGHT_ZNV = 0;
    public const int IDU1_DECO_ZONE1_MAT_Z1_FALL_ONE_ZNV = 0;
    public const int IDU1_DECO_ZONE1_MAT_Z1_D_FALL_TEST_A_ZNV = 0;
    public const int IDU1_DECO_ZONE1_MAT_Z1_D_FALL_LEFT_A_ZNV = 0;
    public const int IDU1_DECO_ZONE1_MAT_Z1_D_FALL_RIGHT_A_ZNV = 0;
    public const int IDU1_DECO_ZONE1_MAT_Z1_D_FALL_ONE_A_ZNV = 0;
    public const string IDS_DECO_ZONE1_MAT_Z1_FALL_TEST_ZNV = "Z1_FALL_TEST.ZNV";
    public const string IDS_DECO_ZONE1_MAT_Z1_FALL_LEFT_ZNV = "Z1_FALL_LEFT.ZNV";
    public const string IDS_DECO_ZONE1_MAT_Z1_FALL_RIGHT_ZNV = "Z1_FALL_RIGHT.ZNV";
    public const string IDS_DECO_ZONE1_MAT_Z1_FALL_ONE_ZNV = "Z1_FALL_ONE.ZNV";
    public const string IDS_DECO_ZONE1_MAT_Z1_D_FALL_TEST_A_ZNV = "Z1_D_FALL_TEST_A.ZNV";
    public const string IDS_DECO_ZONE1_MAT_Z1_D_FALL_LEFT_A_ZNV = "Z1_D_FALL_LEFT_A.ZNV";
    public const string IDS_DECO_ZONE1_MAT_Z1_D_FALL_RIGHT_A_ZNV = "Z1_D_FALL_RIGHT_A.ZNV";
    public const string IDS_DECO_ZONE1_MAT_Z1_D_FALL_ONE_A_ZNV = "Z1_D_FALL_ONE_A.ZNV";
    public const int IDB_DECO_ZONE1_MDL_DECO_Z1_HIMAWARI_ZNO = 0;
    public const int IDB_DECO_ZONE1_MDL_DECO_Z1_WALLA_ZNO = 1;
    public const int IDB_DECO_ZONE1_MDL_DECO_Z1_WALLB_ZNO = 2;
    public const int IDB_DECO_ZONE1_MDL_DECO_Z1_ASIHANAA_ZNO = 3;
    public const int IDB_DECO_ZONE1_MDL_DECO_Z1_ASIHANAB_ZNO = 4;
    public const int IDB_DECO_ZONE1_MDL_DECO_Z1_ASIHANAC_ZNO = 5;
    public const int IDB_DECO_ZONE1_MDL_DECO_Z1_HANAA_ZNO = 6;
    public const int IDB_DECO_ZONE1_MDL_DECO_Z1_HANAB_ZNO = 7;
    public const int IDB_DECO_ZONE1_MDL_DECO_Z1_WOODA_ZNO = 8;
    public const int IDB_DECO_ZONE1_MDL_DECO_Z1_WALLAA_ZNO = 9;
    public const int IDB_DECO_ZONE1_MDL_DECO_Z1_WALLAB_ZNO = 10;
    public const int IDB_DECO_ZONE1_MDL_DECO_Z1_WALLAC_ZNO = 11;
    public const int IDB_DECO_ZONE1_MDL_DECO_Z1_WALLAD_ZNO = 12;
    public const int IDB_DECO_ZONE1_MDL_DECO_Z1_WALLBA_ZNO = 13;
    public const int IDU0_DECO_ZONE1_MDL_DECO_Z1_HIMAWARI_ZNO = 0;
    public const int IDU0_DECO_ZONE1_MDL_DECO_Z1_WALLA_ZNO = 0;
    public const int IDU0_DECO_ZONE1_MDL_DECO_Z1_WALLB_ZNO = 0;
    public const int IDU0_DECO_ZONE1_MDL_DECO_Z1_ASIHANAA_ZNO = 0;
    public const int IDU0_DECO_ZONE1_MDL_DECO_Z1_ASIHANAB_ZNO = 0;
    public const int IDU0_DECO_ZONE1_MDL_DECO_Z1_ASIHANAC_ZNO = 0;
    public const int IDU0_DECO_ZONE1_MDL_DECO_Z1_HANAA_ZNO = 0;
    public const int IDU0_DECO_ZONE1_MDL_DECO_Z1_HANAB_ZNO = 0;
    public const int IDU0_DECO_ZONE1_MDL_DECO_Z1_WOODA_ZNO = 0;
    public const int IDU0_DECO_ZONE1_MDL_DECO_Z1_WALLAA_ZNO = 0;
    public const int IDU0_DECO_ZONE1_MDL_DECO_Z1_WALLAB_ZNO = 0;
    public const int IDU0_DECO_ZONE1_MDL_DECO_Z1_WALLAC_ZNO = 0;
    public const int IDU0_DECO_ZONE1_MDL_DECO_Z1_WALLAD_ZNO = 0;
    public const int IDU0_DECO_ZONE1_MDL_DECO_Z1_WALLBA_ZNO = 0;
    public const int IDU1_DECO_ZONE1_MDL_DECO_Z1_HIMAWARI_ZNO = 0;
    public const int IDU1_DECO_ZONE1_MDL_DECO_Z1_WALLA_ZNO = 0;
    public const int IDU1_DECO_ZONE1_MDL_DECO_Z1_WALLB_ZNO = 0;
    public const int IDU1_DECO_ZONE1_MDL_DECO_Z1_ASIHANAA_ZNO = 0;
    public const int IDU1_DECO_ZONE1_MDL_DECO_Z1_ASIHANAB_ZNO = 0;
    public const int IDU1_DECO_ZONE1_MDL_DECO_Z1_ASIHANAC_ZNO = 0;
    public const int IDU1_DECO_ZONE1_MDL_DECO_Z1_HANAA_ZNO = 0;
    public const int IDU1_DECO_ZONE1_MDL_DECO_Z1_HANAB_ZNO = 0;
    public const int IDU1_DECO_ZONE1_MDL_DECO_Z1_WOODA_ZNO = 0;
    public const int IDU1_DECO_ZONE1_MDL_DECO_Z1_WALLAA_ZNO = 0;
    public const int IDU1_DECO_ZONE1_MDL_DECO_Z1_WALLAB_ZNO = 0;
    public const int IDU1_DECO_ZONE1_MDL_DECO_Z1_WALLAC_ZNO = 0;
    public const int IDU1_DECO_ZONE1_MDL_DECO_Z1_WALLAD_ZNO = 0;
    public const int IDU1_DECO_ZONE1_MDL_DECO_Z1_WALLBA_ZNO = 0;
    public const string IDS_DECO_ZONE1_MDL_DECO_Z1_HIMAWARI_ZNO = "DECO_Z1_HIMAWARI.ZNO";
    public const string IDS_DECO_ZONE1_MDL_DECO_Z1_WALLA_ZNO = "DECO_Z1_WALLA.ZNO";
    public const string IDS_DECO_ZONE1_MDL_DECO_Z1_WALLB_ZNO = "DECO_Z1_WALLB.ZNO";
    public const string IDS_DECO_ZONE1_MDL_DECO_Z1_ASIHANAA_ZNO = "DECO_Z1_ASIHANAA.ZNO";
    public const string IDS_DECO_ZONE1_MDL_DECO_Z1_ASIHANAB_ZNO = "DECO_Z1_ASIHANAB.ZNO";
    public const string IDS_DECO_ZONE1_MDL_DECO_Z1_ASIHANAC_ZNO = "DECO_Z1_ASIHANAC.ZNO";
    public const string IDS_DECO_ZONE1_MDL_DECO_Z1_HANAA_ZNO = "DECO_Z1_HANAA.ZNO";
    public const string IDS_DECO_ZONE1_MDL_DECO_Z1_HANAB_ZNO = "DECO_Z1_HANAB.ZNO";
    public const string IDS_DECO_ZONE1_MDL_DECO_Z1_WOODA_ZNO = "DECO_Z1_WOODA.ZNO";
    public const string IDS_DECO_ZONE1_MDL_DECO_Z1_WALLAA_ZNO = "DECO_Z1_WALLAA.ZNO";
    public const string IDS_DECO_ZONE1_MDL_DECO_Z1_WALLAB_ZNO = "DECO_Z1_WALLAB.ZNO";
    public const string IDS_DECO_ZONE1_MDL_DECO_Z1_WALLAC_ZNO = "DECO_Z1_WALLAC.ZNO";
    public const string IDS_DECO_ZONE1_MDL_DECO_Z1_WALLAD_ZNO = "DECO_Z1_WALLAD.ZNO";
    public const string IDS_DECO_ZONE1_MDL_DECO_Z1_WALLBA_ZNO = "DECO_Z1_WALLBA.ZNO";
    public const int IDB_DECO_ZONE1_MDL_FALL_Z1_FALL_TEST_ZNO = 0;
    public const int IDB_DECO_ZONE1_MDL_FALL_Z1_FALL_LEFT_ZNO = 1;
    public const int IDB_DECO_ZONE1_MDL_FALL_Z1_FALL_RIGHT_ZNO = 2;
    public const int IDB_DECO_ZONE1_MDL_FALL_Z1_FALL_ONE_ZNO = 3;
    public const int IDB_DECO_ZONE1_MDL_FALL_Z1_D_FALL_TEST_A_ZNO = 4;
    public const int IDB_DECO_ZONE1_MDL_FALL_Z1_D_FALL_LEFT_A_ZNO = 5;
    public const int IDB_DECO_ZONE1_MDL_FALL_Z1_D_FALL_RIGHT_A_ZNO = 6;
    public const int IDB_DECO_ZONE1_MDL_FALL_Z1_D_FALL_ONE_A_ZNO = 7;
    public const int IDU0_DECO_ZONE1_MDL_FALL_Z1_FALL_TEST_ZNO = 0;
    public const int IDU0_DECO_ZONE1_MDL_FALL_Z1_FALL_LEFT_ZNO = 0;
    public const int IDU0_DECO_ZONE1_MDL_FALL_Z1_FALL_RIGHT_ZNO = 0;
    public const int IDU0_DECO_ZONE1_MDL_FALL_Z1_FALL_ONE_ZNO = 0;
    public const int IDU0_DECO_ZONE1_MDL_FALL_Z1_D_FALL_TEST_A_ZNO = 0;
    public const int IDU0_DECO_ZONE1_MDL_FALL_Z1_D_FALL_LEFT_A_ZNO = 0;
    public const int IDU0_DECO_ZONE1_MDL_FALL_Z1_D_FALL_RIGHT_A_ZNO = 0;
    public const int IDU0_DECO_ZONE1_MDL_FALL_Z1_D_FALL_ONE_A_ZNO = 0;
    public const int IDU1_DECO_ZONE1_MDL_FALL_Z1_FALL_TEST_ZNO = 0;
    public const int IDU1_DECO_ZONE1_MDL_FALL_Z1_FALL_LEFT_ZNO = 0;
    public const int IDU1_DECO_ZONE1_MDL_FALL_Z1_FALL_RIGHT_ZNO = 0;
    public const int IDU1_DECO_ZONE1_MDL_FALL_Z1_FALL_ONE_ZNO = 0;
    public const int IDU1_DECO_ZONE1_MDL_FALL_Z1_D_FALL_TEST_A_ZNO = 0;
    public const int IDU1_DECO_ZONE1_MDL_FALL_Z1_D_FALL_LEFT_A_ZNO = 0;
    public const int IDU1_DECO_ZONE1_MDL_FALL_Z1_D_FALL_RIGHT_A_ZNO = 0;
    public const int IDU1_DECO_ZONE1_MDL_FALL_Z1_D_FALL_ONE_A_ZNO = 0;
    public const string IDS_DECO_ZONE1_MDL_FALL_Z1_FALL_TEST_ZNO = "Z1_FALL_TEST.ZNO";
    public const string IDS_DECO_ZONE1_MDL_FALL_Z1_FALL_LEFT_ZNO = "Z1_FALL_LEFT.ZNO";
    public const string IDS_DECO_ZONE1_MDL_FALL_Z1_FALL_RIGHT_ZNO = "Z1_FALL_RIGHT.ZNO";
    public const string IDS_DECO_ZONE1_MDL_FALL_Z1_FALL_ONE_ZNO = "Z1_FALL_ONE.ZNO";
    public const string IDS_DECO_ZONE1_MDL_FALL_Z1_D_FALL_TEST_A_ZNO = "Z1_D_FALL_TEST_A.ZNO";
    public const string IDS_DECO_ZONE1_MDL_FALL_Z1_D_FALL_LEFT_A_ZNO = "Z1_D_FALL_LEFT_A.ZNO";
    public const string IDS_DECO_ZONE1_MDL_FALL_Z1_D_FALL_RIGHT_A_ZNO = "Z1_D_FALL_RIGHT_A.ZNO";
    public const string IDS_DECO_ZONE1_MDL_FALL_Z1_D_FALL_ONE_A_ZNO = "Z1_D_FALL_ONE_A.ZNO";
    public const int IDB_DECO_ZONE1_MTN_DECO_Z1_HIMAWARI_ZNM = 0;
    public const int IDB_DECO_ZONE1_MTN_DECO_Z1_WOODA_ZNM = 1;
    public const int IDU0_DECO_ZONE1_MTN_DECO_Z1_HIMAWARI_ZNM = 0;
    public const int IDU0_DECO_ZONE1_MTN_DECO_Z1_WOODA_ZNM = 0;
    public const int IDU1_DECO_ZONE1_MTN_DECO_Z1_HIMAWARI_ZNM = 0;
    public const int IDU1_DECO_ZONE1_MTN_DECO_Z1_WOODA_ZNM = 0;
    public const string IDS_DECO_ZONE1_MTN_DECO_Z1_HIMAWARI_ZNM = "DECO_Z1_HIMAWARI.ZNM";
    public const string IDS_DECO_ZONE1_MTN_DECO_Z1_WOODA_ZNM = "DECO_Z1_WOODA.ZNM";
    public const int IDB_DECO_ZONE2_DECO_ZONE2_MDL_AMB = 0;
    public const int IDB_DECO_ZONE2_DECO_ZONE2_TEX_AMB = 1;
    public const int IDB_DECO_ZONE2_DECO_ZONE2_MTN_AMB = 2;
    public const int IDB_DECO_ZONE2_DECO_ZONE2_MAT_AMB = 3;
    public const int IDU0_DECO_ZONE2_DECO_ZONE2_MDL_AMB = 0;
    public const int IDU0_DECO_ZONE2_DECO_ZONE2_TEX_AMB = 0;
    public const int IDU0_DECO_ZONE2_DECO_ZONE2_MTN_AMB = 0;
    public const int IDU0_DECO_ZONE2_DECO_ZONE2_MAT_AMB = 0;
    public const int IDU1_DECO_ZONE2_DECO_ZONE2_MDL_AMB = 0;
    public const int IDU1_DECO_ZONE2_DECO_ZONE2_TEX_AMB = 0;
    public const int IDU1_DECO_ZONE2_DECO_ZONE2_MTN_AMB = 0;
    public const int IDU1_DECO_ZONE2_DECO_ZONE2_MAT_AMB = 0;
    public const string IDS_DECO_ZONE2_DECO_ZONE2_MDL_AMB = "DECO_ZONE2_MDL.AMB";
    public const string IDS_DECO_ZONE2_DECO_ZONE2_TEX_AMB = "DECO_ZONE2_TEX.AMB";
    public const string IDS_DECO_ZONE2_DECO_ZONE2_MTN_AMB = "DECO_ZONE2_MTN.AMB";
    public const string IDS_DECO_ZONE2_DECO_ZONE2_MAT_AMB = "DECO_ZONE2_MAT.AMB";
    public const int IDB_DECO_ZONE2_MDL_Z2_DECO_W_PLANTA_ZNO = 0;
    public const int IDB_DECO_ZONE2_MDL_Z2_DECO_W_PLANTB_ZNO = 1;
    public const int IDU0_DECO_ZONE2_MDL_Z2_DECO_W_PLANTA_ZNO = 0;
    public const int IDU0_DECO_ZONE2_MDL_Z2_DECO_W_PLANTB_ZNO = 0;
    public const int IDU1_DECO_ZONE2_MDL_Z2_DECO_W_PLANTA_ZNO = 0;
    public const int IDU1_DECO_ZONE2_MDL_Z2_DECO_W_PLANTB_ZNO = 0;
    public const string IDS_DECO_ZONE2_MDL_Z2_DECO_W_PLANTA_ZNO = "Z2_DECO_W_PLANTA.ZNO";
    public const string IDS_DECO_ZONE2_MDL_Z2_DECO_W_PLANTB_ZNO = "Z2_DECO_W_PLANTB.ZNO";
    public const int IDB_DECO_ZONE3_DECO_ZONE3_MDL_AMB = 0;
    public const int IDB_DECO_ZONE3_DECO_ZONE3_TEX_AMB = 1;
    public const int IDB_DECO_ZONE3_DECO_ZONE3_MTN_AMB = 2;
    public const int IDB_DECO_ZONE3_DECO_ZONE3_MAT_AMB = 3;
    public const int IDB_DECO_ZONE3_DECO_ZONE3_RENDER_MDL_AMB = 4;
    public const int IDB_DECO_ZONE3_DECO_ZONE3_RENDER_TEX_AMB = 5;
    public const int IDU0_DECO_ZONE3_DECO_ZONE3_MDL_AMB = 0;
    public const int IDU0_DECO_ZONE3_DECO_ZONE3_TEX_AMB = 0;
    public const int IDU0_DECO_ZONE3_DECO_ZONE3_MTN_AMB = 0;
    public const int IDU0_DECO_ZONE3_DECO_ZONE3_MAT_AMB = 0;
    public const int IDU0_DECO_ZONE3_DECO_ZONE3_RENDER_MDL_AMB = 0;
    public const int IDU0_DECO_ZONE3_DECO_ZONE3_RENDER_TEX_AMB = 0;
    public const int IDU1_DECO_ZONE3_DECO_ZONE3_MDL_AMB = 0;
    public const int IDU1_DECO_ZONE3_DECO_ZONE3_TEX_AMB = 0;
    public const int IDU1_DECO_ZONE3_DECO_ZONE3_MTN_AMB = 0;
    public const int IDU1_DECO_ZONE3_DECO_ZONE3_MAT_AMB = 0;
    public const int IDU1_DECO_ZONE3_DECO_ZONE3_RENDER_MDL_AMB = 0;
    public const int IDU1_DECO_ZONE3_DECO_ZONE3_RENDER_TEX_AMB = 0;
    public const string IDS_DECO_ZONE3_DECO_ZONE3_MDL_AMB = "DECO_ZONE3_MDL.AMB";
    public const string IDS_DECO_ZONE3_DECO_ZONE3_TEX_AMB = "DECO_ZONE3_TEX.AMB";
    public const string IDS_DECO_ZONE3_DECO_ZONE3_MTN_AMB = "DECO_ZONE3_MTN.AMB";
    public const string IDS_DECO_ZONE3_DECO_ZONE3_MAT_AMB = "DECO_ZONE3_MAT.AMB";
    public const string IDS_DECO_ZONE3_DECO_ZONE3_RENDER_MDL_AMB = "DECO_ZONE3_RENDER_MDL.AMB";
    public const string IDS_DECO_ZONE3_DECO_ZONE3_RENDER_TEX_AMB = "DECO_ZONE3_RENDER_TEX.AMB";
    public const int IDB_DECO_ZONE3_MAT_Z3_D_FOUN_A_ZNV = 0;
    public const int IDB_DECO_ZONE3_MAT_Z3_D_FOUN_B_ZNV = 1;
    public const int IDU0_DECO_ZONE3_MAT_Z3_D_FOUN_A_ZNV = 0;
    public const int IDU0_DECO_ZONE3_MAT_Z3_D_FOUN_B_ZNV = 0;
    public const int IDU1_DECO_ZONE3_MAT_Z3_D_FOUN_A_ZNV = 0;
    public const int IDU1_DECO_ZONE3_MAT_Z3_D_FOUN_B_ZNV = 0;
    public const string IDS_DECO_ZONE3_MAT_Z3_D_FOUN_A_ZNV = "Z3_D_FOUN_A.ZNV";
    public const string IDS_DECO_ZONE3_MAT_Z3_D_FOUN_B_ZNV = "Z3_D_FOUN_B.ZNV";
    public const int IDB_DECO_ZONE3_MDL_Z3_D_PIL_A_ZNO = 0;
    public const int IDB_DECO_ZONE3_MDL_Z3_D_PIL_B_ZNO = 1;
    public const int IDB_DECO_ZONE3_MDL_Z3_D_FISH_ZNO = 2;
    public const int IDB_DECO_ZONE3_MDL_Z3_D_BRI_A_ZNO = 3;
    public const int IDB_DECO_ZONE3_MDL_Z3_D_BRI_B_ZNO = 4;
    public const int IDB_DECO_ZONE3_MDL_Z3_D_HAI_FR_ZNO = 5;
    public const int IDB_DECO_ZONE3_MDL_Z3_D_HAI_FR_EXIT_ZNO = 6;
    public const int IDB_DECO_ZONE3_MDL_D_EAR_RUB_A_A_ZNO = 7;
    public const int IDB_DECO_ZONE3_MDL_D_EAR_RUB_A_B_ZNO = 8;
    public const int IDB_DECO_ZONE3_MDL_D_EAR_RUB_B_A_ZNO = 9;
    public const int IDB_DECO_ZONE3_MDL_D_EAR_RUB_B_B_ZNO = 10;
    public const int IDB_DECO_ZONE3_MDL_D_EAR_RUB_B_C_ZNO = 11;
    public const int IDB_DECO_ZONE3_MDL_D_WAT_RUB_A_ZNO = 12;
    public const int IDB_DECO_ZONE3_MDL_D_WAT_RUB_B_ZNO = 13;
    public const int IDB_DECO_ZONE3_MDL_Z3_D_PLANT_A_ZNO = 14;
    public const int IDB_DECO_ZONE3_MDL_Z3_D_PLANT_B_ZNO = 15;
    public const int IDB_DECO_ZONE3_MDL_Z3_D_PLANT_C_ZNO = 16;
    public const int IDB_DECO_ZONE3_MDL_Z3_D_PLANT_D_ZNO = 17;
    public const int IDB_DECO_ZONE3_MDL_Z3_D_RAIL_EDGE_A_ZNO = 18;
    public const int IDB_DECO_ZONE3_MDL_Z3_D_RAIL_EDGE_B_ZNO = 19;
    public const int IDB_DECO_ZONE3_MDL_Z3_D_FISH_B_ZNO = 20;
    public const int IDB_DECO_ZONE3_MDL_Z3_D_RAIL_J_A_ZNO = 21;
    public const int IDB_DECO_ZONE3_MDL_Z3_D_RAIL_J_B_ZNO = 22;
    public const int IDB_DECO_ZONE3_MDL_Z3_D_RAIL_J_C_ZNO = 23;
    public const int IDU0_DECO_ZONE3_MDL_Z3_D_PIL_A_ZNO = 0;
    public const int IDU0_DECO_ZONE3_MDL_Z3_D_PIL_B_ZNO = 0;
    public const int IDU0_DECO_ZONE3_MDL_Z3_D_FISH_ZNO = 0;
    public const int IDU0_DECO_ZONE3_MDL_Z3_D_BRI_A_ZNO = 0;
    public const int IDU0_DECO_ZONE3_MDL_Z3_D_BRI_B_ZNO = 0;
    public const int IDU0_DECO_ZONE3_MDL_Z3_D_HAI_FR_ZNO = 0;
    public const int IDU0_DECO_ZONE3_MDL_Z3_D_HAI_FR_EXIT_ZNO = 0;
    public const int IDU0_DECO_ZONE3_MDL_D_EAR_RUB_A_A_ZNO = 0;
    public const int IDU0_DECO_ZONE3_MDL_D_EAR_RUB_A_B_ZNO = 0;
    public const int IDU0_DECO_ZONE3_MDL_D_EAR_RUB_B_A_ZNO = 0;
    public const int IDU0_DECO_ZONE3_MDL_D_EAR_RUB_B_B_ZNO = 0;
    public const int IDU0_DECO_ZONE3_MDL_D_EAR_RUB_B_C_ZNO = 0;
    public const int IDU0_DECO_ZONE3_MDL_D_WAT_RUB_A_ZNO = 0;
    public const int IDU0_DECO_ZONE3_MDL_D_WAT_RUB_B_ZNO = 0;
    public const int IDU0_DECO_ZONE3_MDL_Z3_D_PLANT_A_ZNO = 0;
    public const int IDU0_DECO_ZONE3_MDL_Z3_D_PLANT_B_ZNO = 0;
    public const int IDU0_DECO_ZONE3_MDL_Z3_D_PLANT_C_ZNO = 0;
    public const int IDU0_DECO_ZONE3_MDL_Z3_D_PLANT_D_ZNO = 0;
    public const int IDU0_DECO_ZONE3_MDL_Z3_D_RAIL_EDGE_A_ZNO = 0;
    public const int IDU0_DECO_ZONE3_MDL_Z3_D_RAIL_EDGE_B_ZNO = 0;
    public const int IDU0_DECO_ZONE3_MDL_Z3_D_FISH_B_ZNO = 0;
    public const int IDU0_DECO_ZONE3_MDL_Z3_D_RAIL_J_A_ZNO = 0;
    public const int IDU0_DECO_ZONE3_MDL_Z3_D_RAIL_J_B_ZNO = 0;
    public const int IDU0_DECO_ZONE3_MDL_Z3_D_RAIL_J_C_ZNO = 0;
    public const int IDU1_DECO_ZONE3_MDL_Z3_D_PIL_A_ZNO = 0;
    public const int IDU1_DECO_ZONE3_MDL_Z3_D_PIL_B_ZNO = 0;
    public const int IDU1_DECO_ZONE3_MDL_Z3_D_FISH_ZNO = 0;
    public const int IDU1_DECO_ZONE3_MDL_Z3_D_BRI_A_ZNO = 0;
    public const int IDU1_DECO_ZONE3_MDL_Z3_D_BRI_B_ZNO = 0;
    public const int IDU1_DECO_ZONE3_MDL_Z3_D_HAI_FR_ZNO = 0;
    public const int IDU1_DECO_ZONE3_MDL_Z3_D_HAI_FR_EXIT_ZNO = 0;
    public const int IDU1_DECO_ZONE3_MDL_D_EAR_RUB_A_A_ZNO = 0;
    public const int IDU1_DECO_ZONE3_MDL_D_EAR_RUB_A_B_ZNO = 0;
    public const int IDU1_DECO_ZONE3_MDL_D_EAR_RUB_B_A_ZNO = 0;
    public const int IDU1_DECO_ZONE3_MDL_D_EAR_RUB_B_B_ZNO = 0;
    public const int IDU1_DECO_ZONE3_MDL_D_EAR_RUB_B_C_ZNO = 0;
    public const int IDU1_DECO_ZONE3_MDL_D_WAT_RUB_A_ZNO = 0;
    public const int IDU1_DECO_ZONE3_MDL_D_WAT_RUB_B_ZNO = 0;
    public const int IDU1_DECO_ZONE3_MDL_Z3_D_PLANT_A_ZNO = 0;
    public const int IDU1_DECO_ZONE3_MDL_Z3_D_PLANT_B_ZNO = 0;
    public const int IDU1_DECO_ZONE3_MDL_Z3_D_PLANT_C_ZNO = 0;
    public const int IDU1_DECO_ZONE3_MDL_Z3_D_PLANT_D_ZNO = 0;
    public const int IDU1_DECO_ZONE3_MDL_Z3_D_RAIL_EDGE_A_ZNO = 0;
    public const int IDU1_DECO_ZONE3_MDL_Z3_D_RAIL_EDGE_B_ZNO = 0;
    public const int IDU1_DECO_ZONE3_MDL_Z3_D_FISH_B_ZNO = 0;
    public const int IDU1_DECO_ZONE3_MDL_Z3_D_RAIL_J_A_ZNO = 0;
    public const int IDU1_DECO_ZONE3_MDL_Z3_D_RAIL_J_B_ZNO = 0;
    public const int IDU1_DECO_ZONE3_MDL_Z3_D_RAIL_J_C_ZNO = 0;
    public const string IDS_DECO_ZONE3_MDL_Z3_D_PIL_A_ZNO = "Z3_D_PIL_A.ZNO";
    public const string IDS_DECO_ZONE3_MDL_Z3_D_PIL_B_ZNO = "Z3_D_PIL_B.ZNO";
    public const string IDS_DECO_ZONE3_MDL_Z3_D_FISH_ZNO = "Z3_D_FISH.ZNO";
    public const string IDS_DECO_ZONE3_MDL_Z3_D_BRI_A_ZNO = "Z3_D_BRI_A.ZNO";
    public const string IDS_DECO_ZONE3_MDL_Z3_D_BRI_B_ZNO = "Z3_D_BRI_B.ZNO";
    public const string IDS_DECO_ZONE3_MDL_Z3_D_HAI_FR_ZNO = "Z3_D_HAI_FR.ZNO";
    public const string IDS_DECO_ZONE3_MDL_Z3_D_HAI_FR_EXIT_ZNO = "Z3_D_HAI_FR_EXIT.ZNO";
    public const string IDS_DECO_ZONE3_MDL_D_EAR_RUB_A_A_ZNO = "D_EAR_RUB_A_A.ZNO";
    public const string IDS_DECO_ZONE3_MDL_D_EAR_RUB_A_B_ZNO = "D_EAR_RUB_A_B.ZNO";
    public const string IDS_DECO_ZONE3_MDL_D_EAR_RUB_B_A_ZNO = "D_EAR_RUB_B_A.ZNO";
    public const string IDS_DECO_ZONE3_MDL_D_EAR_RUB_B_B_ZNO = "D_EAR_RUB_B_B.ZNO";
    public const string IDS_DECO_ZONE3_MDL_D_EAR_RUB_B_C_ZNO = "D_EAR_RUB_B_C.ZNO";
    public const string IDS_DECO_ZONE3_MDL_D_WAT_RUB_A_ZNO = "D_WAT_RUB_A.ZNO";
    public const string IDS_DECO_ZONE3_MDL_D_WAT_RUB_B_ZNO = "D_WAT_RUB_B.ZNO";
    public const string IDS_DECO_ZONE3_MDL_Z3_D_PLANT_A_ZNO = "Z3_D_PLANT_A.ZNO";
    public const string IDS_DECO_ZONE3_MDL_Z3_D_PLANT_B_ZNO = "Z3_D_PLANT_B.ZNO";
    public const string IDS_DECO_ZONE3_MDL_Z3_D_PLANT_C_ZNO = "Z3_D_PLANT_C.ZNO";
    public const string IDS_DECO_ZONE3_MDL_Z3_D_PLANT_D_ZNO = "Z3_D_PLANT_D.ZNO";
    public const string IDS_DECO_ZONE3_MDL_Z3_D_RAIL_EDGE_A_ZNO = "Z3_D_RAIL_EDGE_A.ZNO";
    public const string IDS_DECO_ZONE3_MDL_Z3_D_RAIL_EDGE_B_ZNO = "Z3_D_RAIL_EDGE_B.ZNO";
    public const string IDS_DECO_ZONE3_MDL_Z3_D_FISH_B_ZNO = "Z3_D_FISH_B.ZNO";
    public const string IDS_DECO_ZONE3_MDL_Z3_D_RAIL_J_A_ZNO = "Z3_D_RAIL_J_A.ZNO";
    public const string IDS_DECO_ZONE3_MDL_Z3_D_RAIL_J_B_ZNO = "Z3_D_RAIL_J_B.ZNO";
    public const string IDS_DECO_ZONE3_MDL_Z3_D_RAIL_J_C_ZNO = "Z3_D_RAIL_J_C.ZNO";
    public const int IDB_DECO_ZONE3_RENDER_MDL_Z3_D_FOUN_A_ZNO = 0;
    public const int IDB_DECO_ZONE3_RENDER_MDL_Z3_D_FOUN_B_ZNO = 1;
    public const int IDU0_DECO_ZONE3_RENDER_MDL_Z3_D_FOUN_A_ZNO = 0;
    public const int IDU0_DECO_ZONE3_RENDER_MDL_Z3_D_FOUN_B_ZNO = 0;
    public const int IDU1_DECO_ZONE3_RENDER_MDL_Z3_D_FOUN_A_ZNO = 0;
    public const int IDU1_DECO_ZONE3_RENDER_MDL_Z3_D_FOUN_B_ZNO = 0;
    public const string IDS_DECO_ZONE3_RENDER_MDL_Z3_D_FOUN_A_ZNO = "Z3_D_FOUN_A.ZNO";
    public const string IDS_DECO_ZONE3_RENDER_MDL_Z3_D_FOUN_B_ZNO = "Z3_D_FOUN_B.ZNO";
    public const int IDB_DECO_ZONE4_DECO_ZONE4_MDL_AMB = 0;
    public const int IDB_DECO_ZONE4_DECO_ZONE4_TEX_AMB = 1;
    public const int IDU0_DECO_ZONE4_DECO_ZONE4_MDL_AMB = 0;
    public const int IDU0_DECO_ZONE4_DECO_ZONE4_TEX_AMB = 0;
    public const int IDU1_DECO_ZONE4_DECO_ZONE4_MDL_AMB = 0;
    public const int IDU1_DECO_ZONE4_DECO_ZONE4_TEX_AMB = 0;
    public const string IDS_DECO_ZONE4_DECO_ZONE4_MDL_AMB = "DECO_ZONE4_MDL.AMB";
    public const string IDS_DECO_ZONE4_DECO_ZONE4_TEX_AMB = "DECO_ZONE4_TEX.AMB";
    public const int IDB_DECO_ZONE4_MDL_Z4_D_WHE_HOLD_A_ZNO = 0;
    public const int IDB_DECO_ZONE4_MDL_Z4_D_WHE_HOLD_B_ZNO = 1;
    public const int IDB_DECO_ZONE4_MDL_Z4_D_WHE_HOLD_C_ZNO = 2;
    public const int IDB_DECO_ZONE4_MDL_Z4_D_WHE_HOLD_D_ZNO = 3;
    public const int IDB_DECO_ZONE4_MDL_Z4_D_WHEEL_PIL_A_ZNO = 4;
    public const int IDB_DECO_ZONE4_MDL_Z4_D_WHEEL_PIL_B_ZNO = 5;
    public const int IDB_DECO_ZONE4_MDL_Z4_D_WHEEL_PIL_C_ZNO = 6;
    public const int IDB_DECO_ZONE4_MDL_Z4_D_WHEEL_PIL_D_ZNO = 7;
    public const int IDB_DECO_ZONE4_MDL_Z4_D_WHEEL_PIL_E_ZNO = 8;
    public const int IDB_DECO_ZONE4_MDL_Z4_D_WHEEL_PIL_F_ZNO = 9;
    public const int IDB_DECO_ZONE4_MDL_Z4_D_BRACE_A_ZNO = 10;
    public const int IDB_DECO_ZONE4_MDL_Z4_D_BRACE_B_ZNO = 11;
    public const int IDB_DECO_ZONE4_MDL_Z4_D_BRACE_C_ZNO = 12;
    public const int IDB_DECO_ZONE4_MDL_Z4_D_BRACE_D_ZNO = 13;
    public const int IDB_DECO_ZONE4_MDL_Z4_D_BRACE_E_ZNO = 14;
    public const int IDB_DECO_ZONE4_MDL_Z4_D_BRACE_F_ZNO = 15;
    public const int IDB_DECO_ZONE4_MDL_Z4_D_BRACE_G_ZNO = 16;
    public const int IDB_DECO_ZONE4_MDL_Z4_D_PIL_COR_ZNO = 17;
    public const int IDB_DECO_ZONE4_MDL_Z4_D_WARNING_ZNO = 18;
    public const int IDB_DECO_ZONE4_MDL_Z4_D_BRACE_S_A_ZNO = 19;
    public const int IDB_DECO_ZONE4_MDL_Z4_D_BRACE_S_B_ZNO = 20;
    public const int IDB_DECO_ZONE4_MDL_Z4_D_BRACE_S_C_ZNO = 21;
    public const int IDB_DECO_ZONE4_MDL_Z4_D_BRACE_S_D_ZNO = 22;
    public const int IDB_DECO_ZONE4_MDL_Z4_D_BRACE_S_E_ZNO = 23;
    public const int IDB_DECO_ZONE4_MDL_Z4_D_BRACE_S_F_ZNO = 24;
    public const int IDB_DECO_ZONE4_MDL_Z4_D_BRACE_S_G_ZNO = 25;
    public const int IDB_DECO_ZONE4_MDL_Z4_P_STESM_CO01_ZNO = 26;
    public const int IDB_DECO_ZONE4_MDL_Z4_P_STESM_CO02_ZNO = 27;
    public const int IDB_DECO_ZONE4_MDL_Z4_P_STESM_CO03_ZNO = 28;
    public const int IDB_DECO_ZONE4_MDL_Z4_P_STESM_CO04_ZNO = 29;
    public const int IDB_DECO_ZONE4_MDL_Z4_P_STESM_CO_L_01_ZNO = 30;
    public const int IDB_DECO_ZONE4_MDL_Z4_P_STESM_CO_L_02_ZNO = 31;
    public const int IDB_DECO_ZONE4_MDL_Z4_P_STESM_CO_R_01_ZNO = 32;
    public const int IDB_DECO_ZONE4_MDL_Z4_P_STESM_CO_R_02_ZNO = 33;
    public const int IDB_DECO_ZONE4_MDL_Z4_P_STESM_CO_T_01_ZNO = 34;
    public const int IDB_DECO_ZONE4_MDL_Z4_P_STESM_CO_T_02_ZNO = 35;
    public const int IDB_DECO_ZONE4_MDL_Z4_P_STESM_CO_U_01_ZNO = 36;
    public const int IDB_DECO_ZONE4_MDL_Z4_P_STESM_CO_U_02_ZNO = 37;
    public const int IDB_DECO_ZONE4_MDL_Z4_P_STESM_TUBE01_ZNO = 38;
    public const int IDB_DECO_ZONE4_MDL_Z4_P_STESM_TUBE02_ZNO = 39;
    public const int IDB_DECO_ZONE4_MDL_Z4_P_STESM_TUBE03_ZNO = 40;
    public const int IDB_DECO_ZONE4_MDL_Z4_P_STESM_TUBE04_ZNO = 41;
    public const int IDB_DECO_ZONE4_MDL_Z4_D_UKI_RAIL_ZNO = 42;
    public const int IDU0_DECO_ZONE4_MDL_Z4_D_WHE_HOLD_A_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_D_WHE_HOLD_B_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_D_WHE_HOLD_C_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_D_WHE_HOLD_D_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_D_WHEEL_PIL_A_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_D_WHEEL_PIL_B_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_D_WHEEL_PIL_C_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_D_WHEEL_PIL_D_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_D_WHEEL_PIL_E_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_D_WHEEL_PIL_F_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_D_BRACE_A_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_D_BRACE_B_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_D_BRACE_C_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_D_BRACE_D_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_D_BRACE_E_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_D_BRACE_F_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_D_BRACE_G_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_D_PIL_COR_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_D_WARNING_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_D_BRACE_S_A_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_D_BRACE_S_B_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_D_BRACE_S_C_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_D_BRACE_S_D_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_D_BRACE_S_E_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_D_BRACE_S_F_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_D_BRACE_S_G_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_P_STESM_CO01_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_P_STESM_CO02_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_P_STESM_CO03_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_P_STESM_CO04_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_P_STESM_CO_L_01_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_P_STESM_CO_L_02_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_P_STESM_CO_R_01_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_P_STESM_CO_R_02_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_P_STESM_CO_T_01_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_P_STESM_CO_T_02_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_P_STESM_CO_U_01_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_P_STESM_CO_U_02_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_P_STESM_TUBE01_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_P_STESM_TUBE02_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_P_STESM_TUBE03_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_P_STESM_TUBE04_ZNO = 0;
    public const int IDU0_DECO_ZONE4_MDL_Z4_D_UKI_RAIL_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_D_WHE_HOLD_A_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_D_WHE_HOLD_B_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_D_WHE_HOLD_C_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_D_WHE_HOLD_D_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_D_WHEEL_PIL_A_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_D_WHEEL_PIL_B_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_D_WHEEL_PIL_C_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_D_WHEEL_PIL_D_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_D_WHEEL_PIL_E_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_D_WHEEL_PIL_F_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_D_BRACE_A_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_D_BRACE_B_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_D_BRACE_C_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_D_BRACE_D_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_D_BRACE_E_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_D_BRACE_F_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_D_BRACE_G_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_D_PIL_COR_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_D_WARNING_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_D_BRACE_S_A_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_D_BRACE_S_B_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_D_BRACE_S_C_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_D_BRACE_S_D_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_D_BRACE_S_E_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_D_BRACE_S_F_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_D_BRACE_S_G_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_P_STESM_CO01_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_P_STESM_CO02_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_P_STESM_CO03_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_P_STESM_CO04_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_P_STESM_CO_L_01_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_P_STESM_CO_L_02_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_P_STESM_CO_R_01_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_P_STESM_CO_R_02_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_P_STESM_CO_T_01_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_P_STESM_CO_T_02_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_P_STESM_CO_U_01_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_P_STESM_CO_U_02_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_P_STESM_TUBE01_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_P_STESM_TUBE02_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_P_STESM_TUBE03_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_P_STESM_TUBE04_ZNO = 0;
    public const int IDU1_DECO_ZONE4_MDL_Z4_D_UKI_RAIL_ZNO = 0;
    public const string IDS_DECO_ZONE4_MDL_Z4_D_WHE_HOLD_A_ZNO = "Z4_D_WHE_HOLD_A.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_D_WHE_HOLD_B_ZNO = "Z4_D_WHE_HOLD_B.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_D_WHE_HOLD_C_ZNO = "Z4_D_WHE_HOLD_C.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_D_WHE_HOLD_D_ZNO = "Z4_D_WHE_HOLD_D.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_D_WHEEL_PIL_A_ZNO = "Z4_D_WHEEL_PIL_A.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_D_WHEEL_PIL_B_ZNO = "Z4_D_WHEEL_PIL_B.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_D_WHEEL_PIL_C_ZNO = "Z4_D_WHEEL_PIL_C.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_D_WHEEL_PIL_D_ZNO = "Z4_D_WHEEL_PIL_D.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_D_WHEEL_PIL_E_ZNO = "Z4_D_WHEEL_PIL_E.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_D_WHEEL_PIL_F_ZNO = "Z4_D_WHEEL_PIL_F.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_D_BRACE_A_ZNO = "Z4_D_BRACE_A.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_D_BRACE_B_ZNO = "Z4_D_BRACE_B.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_D_BRACE_C_ZNO = "Z4_D_BRACE_C.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_D_BRACE_D_ZNO = "Z4_D_BRACE_D.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_D_BRACE_E_ZNO = "Z4_D_BRACE_E.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_D_BRACE_F_ZNO = "Z4_D_BRACE_F.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_D_BRACE_G_ZNO = "Z4_D_BRACE_G.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_D_PIL_COR_ZNO = "Z4_D_PIL_COR.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_D_WARNING_ZNO = "Z4_D_WARNING.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_D_BRACE_S_A_ZNO = "Z4_D_BRACE_S_A.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_D_BRACE_S_B_ZNO = "Z4_D_BRACE_S_B.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_D_BRACE_S_C_ZNO = "Z4_D_BRACE_S_C.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_D_BRACE_S_D_ZNO = "Z4_D_BRACE_S_D.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_D_BRACE_S_E_ZNO = "Z4_D_BRACE_S_E.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_D_BRACE_S_F_ZNO = "Z4_D_BRACE_S_F.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_D_BRACE_S_G_ZNO = "Z4_D_BRACE_S_G.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_P_STESM_CO01_ZNO = "Z4_P_STESM_CO01.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_P_STESM_CO02_ZNO = "Z4_P_STESM_CO02.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_P_STESM_CO03_ZNO = "Z4_P_STESM_CO03.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_P_STESM_CO04_ZNO = "Z4_P_STESM_CO04.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_P_STESM_CO_L_01_ZNO = "Z4_P_STESM_CO_L_01.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_P_STESM_CO_L_02_ZNO = "Z4_P_STESM_CO_L_02.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_P_STESM_CO_R_01_ZNO = "Z4_P_STESM_CO_R_01.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_P_STESM_CO_R_02_ZNO = "Z4_P_STESM_CO_R_02.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_P_STESM_CO_T_01_ZNO = "Z4_P_STESM_CO_T_01.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_P_STESM_CO_T_02_ZNO = "Z4_P_STESM_CO_T_02.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_P_STESM_CO_U_01_ZNO = "Z4_P_STESM_CO_U_01.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_P_STESM_CO_U_02_ZNO = "Z4_P_STESM_CO_U_02.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_P_STESM_TUBE01_ZNO = "Z4_P_STESM_TUBE01.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_P_STESM_TUBE02_ZNO = "Z4_P_STESM_TUBE02.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_P_STESM_TUBE03_ZNO = "Z4_P_STESM_TUBE03.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_P_STESM_TUBE04_ZNO = "Z4_P_STESM_TUBE04.ZNO";
    public const string IDS_DECO_ZONE4_MDL_Z4_D_UKI_RAIL_ZNO = "Z4_D_UKI_RAIL.ZNO";
    public const int IDB_DECO_ZONEF_DECO_ZONEF_MDL_AMB = 0;
    public const int IDB_DECO_ZONEF_DECO_ZONEF_TEX_AMB = 1;
    public const int IDB_DECO_ZONEF_DECO_ZONEF_MTN_AMB = 2;
    public const int IDB_DECO_ZONEF_DECO_ZONEF_MAT_AMB = 3;
    public const int IDU0_DECO_ZONEF_DECO_ZONEF_MDL_AMB = 0;
    public const int IDU0_DECO_ZONEF_DECO_ZONEF_TEX_AMB = 0;
    public const int IDU0_DECO_ZONEF_DECO_ZONEF_MTN_AMB = 0;
    public const int IDU0_DECO_ZONEF_DECO_ZONEF_MAT_AMB = 0;
    public const int IDU1_DECO_ZONEF_DECO_ZONEF_MDL_AMB = 0;
    public const int IDU1_DECO_ZONEF_DECO_ZONEF_TEX_AMB = 0;
    public const int IDU1_DECO_ZONEF_DECO_ZONEF_MTN_AMB = 0;
    public const int IDU1_DECO_ZONEF_DECO_ZONEF_MAT_AMB = 0;
    public const string IDS_DECO_ZONEF_DECO_ZONEF_MDL_AMB = "DECO_ZONEF_MDL.AMB";
    public const string IDS_DECO_ZONEF_DECO_ZONEF_TEX_AMB = "DECO_ZONEF_TEX.AMB";
    public const string IDS_DECO_ZONEF_DECO_ZONEF_MTN_AMB = "DECO_ZONEF_MTN.AMB";
    public const string IDS_DECO_ZONEF_DECO_ZONEF_MAT_AMB = "DECO_ZONEF_MAT.AMB";
    public const int IDB_DECO_ZONEF_MAT_GMK_ZONEF_ST_B_ZNV = 0;
    public const int IDU0_DECO_ZONEF_MAT_GMK_ZONEF_ST_B_ZNV = 0;
    public const int IDU1_DECO_ZONEF_MAT_GMK_ZONEF_ST_B_ZNV = 0;
    public const string IDS_DECO_ZONEF_MAT_GMK_ZONEF_ST_B_ZNV = "GMK_ZONEF_ST_B.ZNV";
    public const int IDB_DECO_ZONEF_MDL_GMK_ZONEF_ST_3A_ZNO = 0;
    public const int IDB_DECO_ZONEF_MDL_GMK_ZONEF_ST_5A_ZNO = 1;
    public const int IDB_DECO_ZONEF_MDL_GMK_ZONEF_ST_B_ZNO = 2;
    public const int IDU0_DECO_ZONEF_MDL_GMK_ZONEF_ST_3A_ZNO = 0;
    public const int IDU0_DECO_ZONEF_MDL_GMK_ZONEF_ST_5A_ZNO = 0;
    public const int IDU0_DECO_ZONEF_MDL_GMK_ZONEF_ST_B_ZNO = 0;
    public const int IDU1_DECO_ZONEF_MDL_GMK_ZONEF_ST_3A_ZNO = 0;
    public const int IDU1_DECO_ZONEF_MDL_GMK_ZONEF_ST_5A_ZNO = 0;
    public const int IDU1_DECO_ZONEF_MDL_GMK_ZONEF_ST_B_ZNO = 0;
    public const string IDS_DECO_ZONEF_MDL_GMK_ZONEF_ST_3A_ZNO = "GMK_ZONEF_ST_3A.ZNO";
    public const string IDS_DECO_ZONEF_MDL_GMK_ZONEF_ST_5A_ZNO = "GMK_ZONEF_ST_5A.ZNO";
    public const string IDS_DECO_ZONEF_MDL_GMK_ZONEF_ST_B_ZNO = "GMK_ZONEF_ST_B.ZNO";
    public const int IDB_DECO_ZONEF_MTN_GMK_ZONEF_ST_3A_ZNM = 0;
    public const int IDB_DECO_ZONEF_MTN_GMK_ZONEF_ST_5A_ZNM = 1;
    public const int IDB_DECO_ZONEF_MTN_GMK_ZONEF_ST_B_ZNM = 2;
    public const int IDU0_DECO_ZONEF_MTN_GMK_ZONEF_ST_3A_ZNM = 0;
    public const int IDU0_DECO_ZONEF_MTN_GMK_ZONEF_ST_5A_ZNM = 0;
    public const int IDU0_DECO_ZONEF_MTN_GMK_ZONEF_ST_B_ZNM = 0;
    public const int IDU1_DECO_ZONEF_MTN_GMK_ZONEF_ST_3A_ZNM = 0;
    public const int IDU1_DECO_ZONEF_MTN_GMK_ZONEF_ST_5A_ZNM = 0;
    public const int IDU1_DECO_ZONEF_MTN_GMK_ZONEF_ST_B_ZNM = 0;
    public const string IDS_DECO_ZONEF_MTN_GMK_ZONEF_ST_3A_ZNM = "GMK_ZONEF_ST_3A.ZNM";
    public const string IDS_DECO_ZONEF_MTN_GMK_ZONEF_ST_5A_ZNM = "GMK_ZONEF_ST_5A.ZNM";
    public const string IDS_DECO_ZONEF_MTN_GMK_ZONEF_ST_B_ZNM = "GMK_ZONEF_ST_B.ZNM";
    public const int IDB_ENE_BUKU_MDL_ENE_BUKU_ZNO = 0;
    public const int IDU0_ENE_BUKU_MDL_ENE_BUKU_ZNO = 0;
    public const int IDU1_ENE_BUKU_MDL_ENE_BUKU_ZNO = 0;
    public const string IDS_ENE_BUKU_MDL_ENE_BUKU_ZNO = "ENE_BUKU.ZNO";
    public const int IDB_ENE_BUKU_MTN_ENE_BUKU_MOVE_ZNM = 0;
    public const int IDB_ENE_BUKU_MTN_ENE_BUKU_MOVE_L_ZNM = 1;
    public const int IDB_ENE_BUKU_MTN_ENE_BUKU_FRIP_ZNM = 2;
    public const int IDB_ENE_BUKU_MTN_ENE_BUKU_FRIP_L_ZNM = 3;
    public const int IDU0_ENE_BUKU_MTN_ENE_BUKU_MOVE_ZNM = 0;
    public const int IDU0_ENE_BUKU_MTN_ENE_BUKU_MOVE_L_ZNM = 0;
    public const int IDU0_ENE_BUKU_MTN_ENE_BUKU_FRIP_ZNM = 0;
    public const int IDU0_ENE_BUKU_MTN_ENE_BUKU_FRIP_L_ZNM = 0;
    public const int IDU1_ENE_BUKU_MTN_ENE_BUKU_MOVE_ZNM = 0;
    public const int IDU1_ENE_BUKU_MTN_ENE_BUKU_MOVE_L_ZNM = 0;
    public const int IDU1_ENE_BUKU_MTN_ENE_BUKU_FRIP_ZNM = 0;
    public const int IDU1_ENE_BUKU_MTN_ENE_BUKU_FRIP_L_ZNM = 0;
    public const string IDS_ENE_BUKU_MTN_ENE_BUKU_MOVE_ZNM = "ENE_BUKU_MOVE.ZNM";
    public const string IDS_ENE_BUKU_MTN_ENE_BUKU_MOVE_L_ZNM = "ENE_BUKU_MOVE_L.ZNM";
    public const string IDS_ENE_BUKU_MTN_ENE_BUKU_FRIP_ZNM = "ENE_BUKU_FRIP.ZNM";
    public const string IDS_ENE_BUKU_MTN_ENE_BUKU_FRIP_L_ZNM = "ENE_BUKU_FRIP_L.ZNM";
    public const int IDB_ENE_GABU_MDL_ENE_GABU_ZNO = 0;
    public const int IDU0_ENE_GABU_MDL_ENE_GABU_ZNO = 0;
    public const int IDU1_ENE_GABU_MDL_ENE_GABU_ZNO = 0;
    public const string IDS_ENE_GABU_MDL_ENE_GABU_ZNO = "ENE_GABU.ZNO";
    public const int IDB_ENE_GABU_MTN_ENE_GABU_DOWN_ZNM = 0;
    public const int IDB_ENE_GABU_MTN_ENE_GABU_UP_ZNM = 1;
    public const int IDB_ENE_GABU_MTN_ENE_GABU_ATK_ZNM = 2;
    public const int IDU0_ENE_GABU_MTN_ENE_GABU_DOWN_ZNM = 0;
    public const int IDU0_ENE_GABU_MTN_ENE_GABU_UP_ZNM = 0;
    public const int IDU0_ENE_GABU_MTN_ENE_GABU_ATK_ZNM = 0;
    public const int IDU1_ENE_GABU_MTN_ENE_GABU_DOWN_ZNM = 0;
    public const int IDU1_ENE_GABU_MTN_ENE_GABU_UP_ZNM = 0;
    public const int IDU1_ENE_GABU_MTN_ENE_GABU_ATK_ZNM = 0;
    public const string IDS_ENE_GABU_MTN_ENE_GABU_DOWN_ZNM = "ENE_GABU_DOWN.ZNM";
    public const string IDS_ENE_GABU_MTN_ENE_GABU_UP_ZNM = "ENE_GABU_UP.ZNM";
    public const string IDS_ENE_GABU_MTN_ENE_GABU_ATK_ZNM = "ENE_GABU_ATK.ZNM";
    public const int IDB_ENE_GARDON_MDL_ENE_GARDON_ZNO = 0;
    public const int IDU0_ENE_GARDON_MDL_ENE_GARDON_ZNO = 0;
    public const int IDU1_ENE_GARDON_MDL_ENE_GARDON_ZNO = 0;
    public const string IDS_ENE_GARDON_MDL_ENE_GARDON_ZNO = "ENE_GARDON.ZNO";
    public const int IDB_ENE_GARDON_MTN_ENE_GARDON_MOVE_ZNM = 0;
    public const int IDB_ENE_GARDON_MTN_ENE_GARDON_MOVE_L_ZNM = 1;
    public const int IDB_ENE_GARDON_MTN_ENE_GARDON_FRIP_ZNM = 2;
    public const int IDB_ENE_GARDON_MTN_ENE_GARDON_FRIP_L_ZNM = 3;
    public const int IDB_ENE_GARDON_MTN_ENE_GARDON_GF_01_ZNM = 4;
    public const int IDB_ENE_GARDON_MTN_ENE_GARDON_GF_L_01_ZNM = 5;
    public const int IDB_ENE_GARDON_MTN_ENE_GARDON_GF_02_ZNM = 6;
    public const int IDB_ENE_GARDON_MTN_ENE_GARDON_GF_L_02_ZNM = 7;
    public const int IDB_ENE_GARDON_MTN_ENE_GARDON_GU_01_ZNM = 8;
    public const int IDB_ENE_GARDON_MTN_ENE_GARDON_GU_L_01_ZNM = 9;
    public const int IDB_ENE_GARDON_MTN_ENE_GARDON_GU_02_ZNM = 10;
    public const int IDB_ENE_GARDON_MTN_ENE_GARDON_GU_L_02_ZNM = 11;
    public const int IDU0_ENE_GARDON_MTN_ENE_GARDON_MOVE_ZNM = 0;
    public const int IDU0_ENE_GARDON_MTN_ENE_GARDON_MOVE_L_ZNM = 0;
    public const int IDU0_ENE_GARDON_MTN_ENE_GARDON_FRIP_ZNM = 0;
    public const int IDU0_ENE_GARDON_MTN_ENE_GARDON_FRIP_L_ZNM = 0;
    public const int IDU0_ENE_GARDON_MTN_ENE_GARDON_GF_01_ZNM = 0;
    public const int IDU0_ENE_GARDON_MTN_ENE_GARDON_GF_L_01_ZNM = 0;
    public const int IDU0_ENE_GARDON_MTN_ENE_GARDON_GF_02_ZNM = 0;
    public const int IDU0_ENE_GARDON_MTN_ENE_GARDON_GF_L_02_ZNM = 0;
    public const int IDU0_ENE_GARDON_MTN_ENE_GARDON_GU_01_ZNM = 0;
    public const int IDU0_ENE_GARDON_MTN_ENE_GARDON_GU_L_01_ZNM = 0;
    public const int IDU0_ENE_GARDON_MTN_ENE_GARDON_GU_02_ZNM = 0;
    public const int IDU0_ENE_GARDON_MTN_ENE_GARDON_GU_L_02_ZNM = 0;
    public const int IDU1_ENE_GARDON_MTN_ENE_GARDON_MOVE_ZNM = 0;
    public const int IDU1_ENE_GARDON_MTN_ENE_GARDON_MOVE_L_ZNM = 0;
    public const int IDU1_ENE_GARDON_MTN_ENE_GARDON_FRIP_ZNM = 0;
    public const int IDU1_ENE_GARDON_MTN_ENE_GARDON_FRIP_L_ZNM = 0;
    public const int IDU1_ENE_GARDON_MTN_ENE_GARDON_GF_01_ZNM = 0;
    public const int IDU1_ENE_GARDON_MTN_ENE_GARDON_GF_L_01_ZNM = 0;
    public const int IDU1_ENE_GARDON_MTN_ENE_GARDON_GF_02_ZNM = 0;
    public const int IDU1_ENE_GARDON_MTN_ENE_GARDON_GF_L_02_ZNM = 0;
    public const int IDU1_ENE_GARDON_MTN_ENE_GARDON_GU_01_ZNM = 0;
    public const int IDU1_ENE_GARDON_MTN_ENE_GARDON_GU_L_01_ZNM = 0;
    public const int IDU1_ENE_GARDON_MTN_ENE_GARDON_GU_02_ZNM = 0;
    public const int IDU1_ENE_GARDON_MTN_ENE_GARDON_GU_L_02_ZNM = 0;
    public const string IDS_ENE_GARDON_MTN_ENE_GARDON_MOVE_ZNM = "ENE_GARDON_MOVE.ZNM";
    public const string IDS_ENE_GARDON_MTN_ENE_GARDON_MOVE_L_ZNM = "ENE_GARDON_MOVE_L.ZNM";
    public const string IDS_ENE_GARDON_MTN_ENE_GARDON_FRIP_ZNM = "ENE_GARDON_FRIP.ZNM";
    public const string IDS_ENE_GARDON_MTN_ENE_GARDON_FRIP_L_ZNM = "ENE_GARDON_FRIP_L.ZNM";
    public const string IDS_ENE_GARDON_MTN_ENE_GARDON_GF_01_ZNM = "ENE_GARDON_GF_01.ZNM";
    public const string IDS_ENE_GARDON_MTN_ENE_GARDON_GF_L_01_ZNM = "ENE_GARDON_GF_L_01.ZNM";
    public const string IDS_ENE_GARDON_MTN_ENE_GARDON_GF_02_ZNM = "ENE_GARDON_GF_02.ZNM";
    public const string IDS_ENE_GARDON_MTN_ENE_GARDON_GF_L_02_ZNM = "ENE_GARDON_GF_L_02.ZNM";
    public const string IDS_ENE_GARDON_MTN_ENE_GARDON_GU_01_ZNM = "ENE_GARDON_GU_01.ZNM";
    public const string IDS_ENE_GARDON_MTN_ENE_GARDON_GU_L_01_ZNM = "ENE_GARDON_GU_L_01.ZNM";
    public const string IDS_ENE_GARDON_MTN_ENE_GARDON_GU_02_ZNM = "ENE_GARDON_GU_02.ZNM";
    public const string IDS_ENE_GARDON_MTN_ENE_GARDON_GU_L_02_ZNM = "ENE_GARDON_GU_L_02.ZNM";
    public const int IDB_ENE_HARI_MDL_ENE_HARI_ZNO = 0;
    public const int IDU0_ENE_HARI_MDL_ENE_HARI_ZNO = 0;
    public const int IDU1_ENE_HARI_MDL_ENE_HARI_ZNO = 0;
    public const string IDS_ENE_HARI_MDL_ENE_HARI_ZNO = "ENE_HARI.ZNO";
    public const int IDB_ENE_HARI_MTN_ENE_HARI_MOVE_ZNM = 0;
    public const int IDB_ENE_HARI_MTN_ENE_HARI_N_MOVE_ZNM = 1;
    public const int IDB_ENE_HARI_MTN_ENE_HARI_ATK_01_ZNM = 2;
    public const int IDB_ENE_HARI_MTN_ENE_HARI_ATK_02_ZNM = 3;
    public const int IDU0_ENE_HARI_MTN_ENE_HARI_MOVE_ZNM = 0;
    public const int IDU0_ENE_HARI_MTN_ENE_HARI_N_MOVE_ZNM = 0;
    public const int IDU0_ENE_HARI_MTN_ENE_HARI_ATK_01_ZNM = 0;
    public const int IDU0_ENE_HARI_MTN_ENE_HARI_ATK_02_ZNM = 0;
    public const int IDU1_ENE_HARI_MTN_ENE_HARI_MOVE_ZNM = 0;
    public const int IDU1_ENE_HARI_MTN_ENE_HARI_N_MOVE_ZNM = 0;
    public const int IDU1_ENE_HARI_MTN_ENE_HARI_ATK_01_ZNM = 0;
    public const int IDU1_ENE_HARI_MTN_ENE_HARI_ATK_02_ZNM = 0;
    public const string IDS_ENE_HARI_MTN_ENE_HARI_MOVE_ZNM = "ENE_HARI_MOVE.ZNM";
    public const string IDS_ENE_HARI_MTN_ENE_HARI_N_MOVE_ZNM = "ENE_HARI_N_MOVE.ZNM";
    public const string IDS_ENE_HARI_MTN_ENE_HARI_ATK_01_ZNM = "ENE_HARI_ATK_01.ZNM";
    public const string IDS_ENE_HARI_MTN_ENE_HARI_ATK_02_ZNM = "ENE_HARI_ATK_02.ZNM";
    public const int IDB_ENE_HARO_MDL_ENE_HARO_ZNO = 0;
    public const int IDU0_ENE_HARO_MDL_ENE_HARO_ZNO = 0;
    public const int IDU1_ENE_HARO_MDL_ENE_HARO_ZNO = 0;
    public const string IDS_ENE_HARO_MDL_ENE_HARO_ZNO = "ENE_HARO.ZNO";
    public const int IDB_ENE_HARO_MTN_ENE_HARO_ST_ZNM = 0;
    public const int IDB_ENE_HARO_MTN_ENE_HARO_MOVE_ZNM = 1;
    public const int IDU0_ENE_HARO_MTN_ENE_HARO_ST_ZNM = 0;
    public const int IDU0_ENE_HARO_MTN_ENE_HARO_MOVE_ZNM = 0;
    public const int IDU1_ENE_HARO_MTN_ENE_HARO_ST_ZNM = 0;
    public const int IDU1_ENE_HARO_MTN_ENE_HARO_MOVE_ZNM = 0;
    public const string IDS_ENE_HARO_MTN_ENE_HARO_ST_ZNM = "ENE_HARO_ST.ZNM";
    public const string IDS_ENE_HARO_MTN_ENE_HARO_MOVE_ZNM = "ENE_HARO_MOVE.ZNM";
    public const int IDB_ENE_KAMA_MDL_ENE_KAMA_ZNO = 0;
    public const int IDB_ENE_KAMA_MDL_ENE_KAMA_LSW_ZNO = 1;
    public const int IDB_ENE_KAMA_MDL_ENE_KAMA_RSW_ZNO = 2;
    public const int IDU0_ENE_KAMA_MDL_ENE_KAMA_ZNO = 0;
    public const int IDU0_ENE_KAMA_MDL_ENE_KAMA_LSW_ZNO = 0;
    public const int IDU0_ENE_KAMA_MDL_ENE_KAMA_RSW_ZNO = 0;
    public const int IDU1_ENE_KAMA_MDL_ENE_KAMA_ZNO = 0;
    public const int IDU1_ENE_KAMA_MDL_ENE_KAMA_LSW_ZNO = 0;
    public const int IDU1_ENE_KAMA_MDL_ENE_KAMA_RSW_ZNO = 0;
    public const string IDS_ENE_KAMA_MDL_ENE_KAMA_ZNO = "ENE_KAMA.ZNO";
    public const string IDS_ENE_KAMA_MDL_ENE_KAMA_LSW_ZNO = "ENE_KAMA_LSW.ZNO";
    public const string IDS_ENE_KAMA_MDL_ENE_KAMA_RSW_ZNO = "ENE_KAMA_RSW.ZNO";
    public const int IDB_ENE_KAMA_MTN_ENE_KAMA_ATK_ZNM = 0;
    public const int IDB_ENE_KAMA_MTN_ENE_KAMA_ATK_L_ZNM = 1;
    public const int IDB_ENE_KAMA_MTN_ENE_KAMA_ATK_ST_ZNM = 2;
    public const int IDB_ENE_KAMA_MTN_ENE_KAMA_ATK_ST_L_ZNM = 3;
    public const int IDB_ENE_KAMA_MTN_ENE_KAMA_FRIP_ZNM = 4;
    public const int IDB_ENE_KAMA_MTN_ENE_KAMA_FRIP_L_ZNM = 5;
    public const int IDB_ENE_KAMA_MTN_ENE_KAMA_MOVE_ZNM = 6;
    public const int IDB_ENE_KAMA_MTN_ENE_KAMA_MOVE_L_ZNM = 7;
    public const int IDB_ENE_KAMA_MTN_ENE_KAMA_FW_ZNM = 8;
    public const int IDB_ENE_KAMA_MTN_ENE_KAMA_FW_L_ZNM = 9;
    public const int IDB_ENE_KAMA_MTN_ENE_KAMA_END_ZNM = 10;
    public const int IDB_ENE_KAMA_MTN_ENE_KAMA_END_L_ZNM = 11;
    public const int IDU0_ENE_KAMA_MTN_ENE_KAMA_ATK_ZNM = 0;
    public const int IDU0_ENE_KAMA_MTN_ENE_KAMA_ATK_L_ZNM = 0;
    public const int IDU0_ENE_KAMA_MTN_ENE_KAMA_ATK_ST_ZNM = 0;
    public const int IDU0_ENE_KAMA_MTN_ENE_KAMA_ATK_ST_L_ZNM = 0;
    public const int IDU0_ENE_KAMA_MTN_ENE_KAMA_FRIP_ZNM = 0;
    public const int IDU0_ENE_KAMA_MTN_ENE_KAMA_FRIP_L_ZNM = 0;
    public const int IDU0_ENE_KAMA_MTN_ENE_KAMA_MOVE_ZNM = 0;
    public const int IDU0_ENE_KAMA_MTN_ENE_KAMA_MOVE_L_ZNM = 0;
    public const int IDU0_ENE_KAMA_MTN_ENE_KAMA_FW_ZNM = 0;
    public const int IDU0_ENE_KAMA_MTN_ENE_KAMA_FW_L_ZNM = 0;
    public const int IDU0_ENE_KAMA_MTN_ENE_KAMA_END_ZNM = 0;
    public const int IDU0_ENE_KAMA_MTN_ENE_KAMA_END_L_ZNM = 0;
    public const int IDU1_ENE_KAMA_MTN_ENE_KAMA_ATK_ZNM = 0;
    public const int IDU1_ENE_KAMA_MTN_ENE_KAMA_ATK_L_ZNM = 0;
    public const int IDU1_ENE_KAMA_MTN_ENE_KAMA_ATK_ST_ZNM = 0;
    public const int IDU1_ENE_KAMA_MTN_ENE_KAMA_ATK_ST_L_ZNM = 0;
    public const int IDU1_ENE_KAMA_MTN_ENE_KAMA_FRIP_ZNM = 0;
    public const int IDU1_ENE_KAMA_MTN_ENE_KAMA_FRIP_L_ZNM = 0;
    public const int IDU1_ENE_KAMA_MTN_ENE_KAMA_MOVE_ZNM = 0;
    public const int IDU1_ENE_KAMA_MTN_ENE_KAMA_MOVE_L_ZNM = 0;
    public const int IDU1_ENE_KAMA_MTN_ENE_KAMA_FW_ZNM = 0;
    public const int IDU1_ENE_KAMA_MTN_ENE_KAMA_FW_L_ZNM = 0;
    public const int IDU1_ENE_KAMA_MTN_ENE_KAMA_END_ZNM = 0;
    public const int IDU1_ENE_KAMA_MTN_ENE_KAMA_END_L_ZNM = 0;
    public const string IDS_ENE_KAMA_MTN_ENE_KAMA_ATK_ZNM = "ENE_KAMA_ATK.ZNM";
    public const string IDS_ENE_KAMA_MTN_ENE_KAMA_ATK_L_ZNM = "ENE_KAMA_ATK_L.ZNM";
    public const string IDS_ENE_KAMA_MTN_ENE_KAMA_ATK_ST_ZNM = "ENE_KAMA_ATK_ST.ZNM";
    public const string IDS_ENE_KAMA_MTN_ENE_KAMA_ATK_ST_L_ZNM = "ENE_KAMA_ATK_ST_L.ZNM";
    public const string IDS_ENE_KAMA_MTN_ENE_KAMA_FRIP_ZNM = "ENE_KAMA_FRIP.ZNM";
    public const string IDS_ENE_KAMA_MTN_ENE_KAMA_FRIP_L_ZNM = "ENE_KAMA_FRIP_L.ZNM";
    public const string IDS_ENE_KAMA_MTN_ENE_KAMA_MOVE_ZNM = "ENE_KAMA_MOVE.ZNM";
    public const string IDS_ENE_KAMA_MTN_ENE_KAMA_MOVE_L_ZNM = "ENE_KAMA_MOVE_L.ZNM";
    public const string IDS_ENE_KAMA_MTN_ENE_KAMA_FW_ZNM = "ENE_KAMA_FW.ZNM";
    public const string IDS_ENE_KAMA_MTN_ENE_KAMA_FW_L_ZNM = "ENE_KAMA_FW_L.ZNM";
    public const string IDS_ENE_KAMA_MTN_ENE_KAMA_END_ZNM = "ENE_KAMA_END.ZNM";
    public const string IDS_ENE_KAMA_MTN_ENE_KAMA_END_L_ZNM = "ENE_KAMA_END_L.ZNM";
    public const int IDB_ENE_KANI_MDL_ENE_KANI_ZNO = 0;
    public const int IDU0_ENE_KANI_MDL_ENE_KANI_ZNO = 0;
    public const int IDU1_ENE_KANI_MDL_ENE_KANI_ZNO = 0;
    public const string IDS_ENE_KANI_MDL_ENE_KANI_ZNO = "ENE_KANI.ZNO";
    public const int IDB_ENE_KANI_MTN_ENE_KANI_ATK_01_ZNM = 0;
    public const int IDB_ENE_KANI_MTN_ENE_KANI_ATK_02_ZNM = 1;
    public const int IDB_ENE_KANI_MTN_ENE_KANI_MOVE_ZNM = 2;
    public const int IDU0_ENE_KANI_MTN_ENE_KANI_ATK_01_ZNM = 0;
    public const int IDU0_ENE_KANI_MTN_ENE_KANI_ATK_02_ZNM = 0;
    public const int IDU0_ENE_KANI_MTN_ENE_KANI_MOVE_ZNM = 0;
    public const int IDU1_ENE_KANI_MTN_ENE_KANI_ATK_01_ZNM = 0;
    public const int IDU1_ENE_KANI_MTN_ENE_KANI_ATK_02_ZNM = 0;
    public const int IDU1_ENE_KANI_MTN_ENE_KANI_MOVE_ZNM = 0;
    public const string IDS_ENE_KANI_MTN_ENE_KANI_ATK_01_ZNM = "ENE_KANI_ATK_01.ZNM";
    public const string IDS_ENE_KANI_MTN_ENE_KANI_ATK_02_ZNM = "ENE_KANI_ATK_02.ZNM";
    public const string IDS_ENE_KANI_MTN_ENE_KANI_MOVE_ZNM = "ENE_KANI_MOVE.ZNM";
    public const int IDB_ENE_MEREON_MDL_ENE_MEREON_ZNO = 0;
    public const int IDU0_ENE_MEREON_MDL_ENE_MEREON_ZNO = 0;
    public const int IDU1_ENE_MEREON_MDL_ENE_MEREON_ZNO = 0;
    public const string IDS_ENE_MEREON_MDL_ENE_MEREON_ZNO = "ENE_MEREON.ZNO";
    public const int IDB_ENE_MEREON_MTN_ENE_MEREON_B_FW_ZNM = 0;
    public const int IDB_ENE_MEREON_MTN_ENE_MEREON_B_FW_L_ZNM = 1;
    public const int IDB_ENE_MEREON_MTN_ENE_MEREON_ATK_ZNM = 2;
    public const int IDB_ENE_MEREON_MTN_ENE_MEREON_B_ATK_ZNM = 3;
    public const int IDB_ENE_MEREON_MTN_ENE_MEREON_B_ATK_L_ZNM = 4;
    public const int IDB_ENE_MEREON_MTN_ENE_MEREON_ROCKET_ZNM = 5;
    public const int IDU0_ENE_MEREON_MTN_ENE_MEREON_B_FW_ZNM = 0;
    public const int IDU0_ENE_MEREON_MTN_ENE_MEREON_B_FW_L_ZNM = 0;
    public const int IDU0_ENE_MEREON_MTN_ENE_MEREON_ATK_ZNM = 0;
    public const int IDU0_ENE_MEREON_MTN_ENE_MEREON_B_ATK_ZNM = 0;
    public const int IDU0_ENE_MEREON_MTN_ENE_MEREON_B_ATK_L_ZNM = 0;
    public const int IDU0_ENE_MEREON_MTN_ENE_MEREON_ROCKET_ZNM = 0;
    public const int IDU1_ENE_MEREON_MTN_ENE_MEREON_B_FW_ZNM = 0;
    public const int IDU1_ENE_MEREON_MTN_ENE_MEREON_B_FW_L_ZNM = 0;
    public const int IDU1_ENE_MEREON_MTN_ENE_MEREON_ATK_ZNM = 0;
    public const int IDU1_ENE_MEREON_MTN_ENE_MEREON_B_ATK_ZNM = 0;
    public const int IDU1_ENE_MEREON_MTN_ENE_MEREON_B_ATK_L_ZNM = 0;
    public const int IDU1_ENE_MEREON_MTN_ENE_MEREON_ROCKET_ZNM = 0;
    public const string IDS_ENE_MEREON_MTN_ENE_MEREON_B_FW_ZNM = "ENE_MEREON_B_FW.ZNM";
    public const string IDS_ENE_MEREON_MTN_ENE_MEREON_B_FW_L_ZNM = "ENE_MEREON_B_FW_L.ZNM";
    public const string IDS_ENE_MEREON_MTN_ENE_MEREON_ATK_ZNM = "ENE_MEREON_ATK.ZNM";
    public const string IDS_ENE_MEREON_MTN_ENE_MEREON_B_ATK_ZNM = "ENE_MEREON_B_ATK.ZNM";
    public const string IDS_ENE_MEREON_MTN_ENE_MEREON_B_ATK_L_ZNM = "ENE_MEREON_B_ATK_L.ZNM";
    public const string IDS_ENE_MEREON_MTN_ENE_MEREON_ROCKET_ZNM = "ENE_MEREON_ROCKET.ZNM";
    public const int IDB_ENE_MEREON_R_MDL_ENE_MEREON_R_ZNO = 0;
    public const int IDU0_ENE_MEREON_R_MDL_ENE_MEREON_R_ZNO = 0;
    public const int IDU1_ENE_MEREON_R_MDL_ENE_MEREON_R_ZNO = 0;
    public const string IDS_ENE_MEREON_R_MDL_ENE_MEREON_R_ZNO = "ENE_MEREON_R.ZNO";
    public const int IDB_ENE_MOGU_MDL_ENE_MOGU_ZNO = 0;
    public const int IDU0_ENE_MOGU_MDL_ENE_MOGU_ZNO = 0;
    public const int IDU1_ENE_MOGU_MDL_ENE_MOGU_ZNO = 0;
    public const string IDS_ENE_MOGU_MDL_ENE_MOGU_ZNO = "ENE_MOGU.ZNO";
    public const int IDB_ENE_MOGU_MTN_ENE_MOGU_DOWN_ZNM = 0;
    public const int IDB_ENE_MOGU_MTN_ENE_MOGU_DOWN_L_ZNM = 1;
    public const int IDB_ENE_MOGU_MTN_ENE_MOGU_FRIP_ZNM = 2;
    public const int IDB_ENE_MOGU_MTN_ENE_MOGU_FRIP_L_ZNM = 3;
    public const int IDB_ENE_MOGU_MTN_ENE_MOGU_JUMP_01_ZNM = 4;
    public const int IDB_ENE_MOGU_MTN_ENE_MOGU_JUMP_02_ZNM = 5;
    public const int IDB_ENE_MOGU_MTN_ENE_MOGU_MOVE_ZNM = 6;
    public const int IDB_ENE_MOGU_MTN_ENE_MOGU_MOVE_L_ZNM = 7;
    public const int IDU0_ENE_MOGU_MTN_ENE_MOGU_DOWN_ZNM = 0;
    public const int IDU0_ENE_MOGU_MTN_ENE_MOGU_DOWN_L_ZNM = 0;
    public const int IDU0_ENE_MOGU_MTN_ENE_MOGU_FRIP_ZNM = 0;
    public const int IDU0_ENE_MOGU_MTN_ENE_MOGU_FRIP_L_ZNM = 0;
    public const int IDU0_ENE_MOGU_MTN_ENE_MOGU_JUMP_01_ZNM = 0;
    public const int IDU0_ENE_MOGU_MTN_ENE_MOGU_JUMP_02_ZNM = 0;
    public const int IDU0_ENE_MOGU_MTN_ENE_MOGU_MOVE_ZNM = 0;
    public const int IDU0_ENE_MOGU_MTN_ENE_MOGU_MOVE_L_ZNM = 0;
    public const int IDU1_ENE_MOGU_MTN_ENE_MOGU_DOWN_ZNM = 0;
    public const int IDU1_ENE_MOGU_MTN_ENE_MOGU_DOWN_L_ZNM = 0;
    public const int IDU1_ENE_MOGU_MTN_ENE_MOGU_FRIP_ZNM = 0;
    public const int IDU1_ENE_MOGU_MTN_ENE_MOGU_FRIP_L_ZNM = 0;
    public const int IDU1_ENE_MOGU_MTN_ENE_MOGU_JUMP_01_ZNM = 0;
    public const int IDU1_ENE_MOGU_MTN_ENE_MOGU_JUMP_02_ZNM = 0;
    public const int IDU1_ENE_MOGU_MTN_ENE_MOGU_MOVE_ZNM = 0;
    public const int IDU1_ENE_MOGU_MTN_ENE_MOGU_MOVE_L_ZNM = 0;
    public const string IDS_ENE_MOGU_MTN_ENE_MOGU_DOWN_ZNM = "ENE_MOGU_DOWN.ZNM";
    public const string IDS_ENE_MOGU_MTN_ENE_MOGU_DOWN_L_ZNM = "ENE_MOGU_DOWN_L.ZNM";
    public const string IDS_ENE_MOGU_MTN_ENE_MOGU_FRIP_ZNM = "ENE_MOGU_FRIP.ZNM";
    public const string IDS_ENE_MOGU_MTN_ENE_MOGU_FRIP_L_ZNM = "ENE_MOGU_FRIP_L.ZNM";
    public const string IDS_ENE_MOGU_MTN_ENE_MOGU_JUMP_01_ZNM = "ENE_MOGU_JUMP_01.ZNM";
    public const string IDS_ENE_MOGU_MTN_ENE_MOGU_JUMP_02_ZNM = "ENE_MOGU_JUMP_02.ZNM";
    public const string IDS_ENE_MOGU_MTN_ENE_MOGU_MOVE_ZNM = "ENE_MOGU_MOVE.ZNM";
    public const string IDS_ENE_MOGU_MTN_ENE_MOGU_MOVE_L_ZNM = "ENE_MOGU_MOVE_L.ZNM";
    public const int IDB_ENE_MOTORA_MDL_ENE_MOTORA_ZNO = 0;
    public const int IDU0_ENE_MOTORA_MDL_ENE_MOTORA_ZNO = 0;
    public const int IDU1_ENE_MOTORA_MDL_ENE_MOTORA_ZNO = 0;
    public const string IDS_ENE_MOTORA_MDL_ENE_MOTORA_ZNO = "ENE_MOTORA.ZNO";
    public const int IDB_ENE_MOTORA_MTN_ENE_MOTORA_FW_ZNM = 0;
    public const int IDB_ENE_MOTORA_MTN_ENE_MOTORA_MOVE_ZNM = 1;
    public const int IDB_ENE_MOTORA_MTN_ENE_MOTORA_MOVE_L_ZNM = 2;
    public const int IDB_ENE_MOTORA_MTN_ENE_MOTORA_FRIP_ZNM = 3;
    public const int IDB_ENE_MOTORA_MTN_ENE_MOTORA_FRIP_L_ZNM = 4;
    public const int IDU0_ENE_MOTORA_MTN_ENE_MOTORA_FW_ZNM = 0;
    public const int IDU0_ENE_MOTORA_MTN_ENE_MOTORA_MOVE_ZNM = 0;
    public const int IDU0_ENE_MOTORA_MTN_ENE_MOTORA_MOVE_L_ZNM = 0;
    public const int IDU0_ENE_MOTORA_MTN_ENE_MOTORA_FRIP_ZNM = 0;
    public const int IDU0_ENE_MOTORA_MTN_ENE_MOTORA_FRIP_L_ZNM = 0;
    public const int IDU1_ENE_MOTORA_MTN_ENE_MOTORA_FW_ZNM = 0;
    public const int IDU1_ENE_MOTORA_MTN_ENE_MOTORA_MOVE_ZNM = 0;
    public const int IDU1_ENE_MOTORA_MTN_ENE_MOTORA_MOVE_L_ZNM = 0;
    public const int IDU1_ENE_MOTORA_MTN_ENE_MOTORA_FRIP_ZNM = 0;
    public const int IDU1_ENE_MOTORA_MTN_ENE_MOTORA_FRIP_L_ZNM = 0;
    public const string IDS_ENE_MOTORA_MTN_ENE_MOTORA_FW_ZNM = "ENE_MOTORA_FW.ZNM";
    public const string IDS_ENE_MOTORA_MTN_ENE_MOTORA_MOVE_ZNM = "ENE_MOTORA_MOVE.ZNM";
    public const string IDS_ENE_MOTORA_MTN_ENE_MOTORA_MOVE_L_ZNM = "ENE_MOTORA_MOVE_L.ZNM";
    public const string IDS_ENE_MOTORA_MTN_ENE_MOTORA_FRIP_ZNM = "ENE_MOTORA_FRIP.ZNM";
    public const string IDS_ENE_MOTORA_MTN_ENE_MOTORA_FRIP_L_ZNM = "ENE_MOTORA_FRIP_L.ZNM";
    public const int IDB_ENE_STING_MDL_ENE_STING_ZNO = 0;
    public const int IDU0_ENE_STING_MDL_ENE_STING_ZNO = 0;
    public const int IDU1_ENE_STING_MDL_ENE_STING_ZNO = 0;
    public const string IDS_ENE_STING_MDL_ENE_STING_ZNO = "ENE_STING.ZNO";
    public const int IDB_ENE_STING_MTN_ENE_STING_MOVE_ZNM = 0;
    public const int IDB_ENE_STING_MTN_ENE_STING_MOVE_L_ZNM = 1;
    public const int IDB_ENE_STING_MTN_ENE_STING_FRIP_ZNM = 2;
    public const int IDB_ENE_STING_MTN_ENE_STING_FRIP_L_ZNM = 3;
    public const int IDB_ENE_STING_MTN_ENE_STING_ATK_01_ZNM = 4;
    public const int IDB_ENE_STING_MTN_ENE_STING_ATK_02_ZNM = 5;
    public const int IDB_ENE_STING_MTN_ENE_STING_ATK_03_ZNM = 6;
    public const int IDB_ENE_STING_MTN_ENE_STING_ATK_L_01_ZNM = 7;
    public const int IDB_ENE_STING_MTN_ENE_STING_ATK_L_02_ZNM = 8;
    public const int IDB_ENE_STING_MTN_ENE_STING_ATK_L_03_ZNM = 9;
    public const int IDU0_ENE_STING_MTN_ENE_STING_MOVE_ZNM = 0;
    public const int IDU0_ENE_STING_MTN_ENE_STING_MOVE_L_ZNM = 0;
    public const int IDU0_ENE_STING_MTN_ENE_STING_FRIP_ZNM = 0;
    public const int IDU0_ENE_STING_MTN_ENE_STING_FRIP_L_ZNM = 0;
    public const int IDU0_ENE_STING_MTN_ENE_STING_ATK_01_ZNM = 0;
    public const int IDU0_ENE_STING_MTN_ENE_STING_ATK_02_ZNM = 0;
    public const int IDU0_ENE_STING_MTN_ENE_STING_ATK_03_ZNM = 0;
    public const int IDU0_ENE_STING_MTN_ENE_STING_ATK_L_01_ZNM = 0;
    public const int IDU0_ENE_STING_MTN_ENE_STING_ATK_L_02_ZNM = 0;
    public const int IDU0_ENE_STING_MTN_ENE_STING_ATK_L_03_ZNM = 0;
    public const int IDU1_ENE_STING_MTN_ENE_STING_MOVE_ZNM = 0;
    public const int IDU1_ENE_STING_MTN_ENE_STING_MOVE_L_ZNM = 0;
    public const int IDU1_ENE_STING_MTN_ENE_STING_FRIP_ZNM = 0;
    public const int IDU1_ENE_STING_MTN_ENE_STING_FRIP_L_ZNM = 0;
    public const int IDU1_ENE_STING_MTN_ENE_STING_ATK_01_ZNM = 0;
    public const int IDU1_ENE_STING_MTN_ENE_STING_ATK_02_ZNM = 0;
    public const int IDU1_ENE_STING_MTN_ENE_STING_ATK_03_ZNM = 0;
    public const int IDU1_ENE_STING_MTN_ENE_STING_ATK_L_01_ZNM = 0;
    public const int IDU1_ENE_STING_MTN_ENE_STING_ATK_L_02_ZNM = 0;
    public const int IDU1_ENE_STING_MTN_ENE_STING_ATK_L_03_ZNM = 0;
    public const string IDS_ENE_STING_MTN_ENE_STING_MOVE_ZNM = "ENE_STING_MOVE.ZNM";
    public const string IDS_ENE_STING_MTN_ENE_STING_MOVE_L_ZNM = "ENE_STING_MOVE_L.ZNM";
    public const string IDS_ENE_STING_MTN_ENE_STING_FRIP_ZNM = "ENE_STING_FRIP.ZNM";
    public const string IDS_ENE_STING_MTN_ENE_STING_FRIP_L_ZNM = "ENE_STING_FRIP_L.ZNM";
    public const string IDS_ENE_STING_MTN_ENE_STING_ATK_01_ZNM = "ENE_STING_ATK_01.ZNM";
    public const string IDS_ENE_STING_MTN_ENE_STING_ATK_02_ZNM = "ENE_STING_ATK_02.ZNM";
    public const string IDS_ENE_STING_MTN_ENE_STING_ATK_03_ZNM = "ENE_STING_ATK_03.ZNM";
    public const string IDS_ENE_STING_MTN_ENE_STING_ATK_L_01_ZNM = "ENE_STING_ATK_L_01.ZNM";
    public const string IDS_ENE_STING_MTN_ENE_STING_ATK_L_02_ZNM = "ENE_STING_ATK_L_02.ZNM";
    public const string IDS_ENE_STING_MTN_ENE_STING_ATK_L_03_ZNM = "ENE_STING_ATK_L_03.ZNM";
    public const int IDB_ENE_T_STAR_MAT_ENE_T_STAR_M_EYE_ZNV = 0;
    public const int IDU0_ENE_T_STAR_MAT_ENE_T_STAR_M_EYE_ZNV = 0;
    public const int IDU1_ENE_T_STAR_MAT_ENE_T_STAR_M_EYE_ZNV = 0;
    public const string IDS_ENE_T_STAR_MAT_ENE_T_STAR_M_EYE_ZNV = "ENE_T_STAR_M_EYE.ZNV";
    public const int IDB_ENE_T_STAR_MDL_ENE_T_STAR_M_ZNO = 0;
    public const int IDB_ENE_T_STAR_MDL_ENE_T_STAR_N_ZNO = 1;
    public const int IDU0_ENE_T_STAR_MDL_ENE_T_STAR_M_ZNO = 0;
    public const int IDU0_ENE_T_STAR_MDL_ENE_T_STAR_N_ZNO = 0;
    public const int IDU1_ENE_T_STAR_MDL_ENE_T_STAR_M_ZNO = 0;
    public const int IDU1_ENE_T_STAR_MDL_ENE_T_STAR_N_ZNO = 0;
    public const string IDS_ENE_T_STAR_MDL_ENE_T_STAR_M_ZNO = "ENE_T_STAR_M.ZNO";
    public const string IDS_ENE_T_STAR_MDL_ENE_T_STAR_N_ZNO = "ENE_T_STAR_N.ZNO";
    public const int IDB_ENE_UNIDES_MDL_ENE_UNIDES_ZNO = 0;
    public const int IDB_ENE_UNIDES_MDL_ENE_UNIDES_N_ZNO = 1;
    public const int IDU0_ENE_UNIDES_MDL_ENE_UNIDES_ZNO = 0;
    public const int IDU0_ENE_UNIDES_MDL_ENE_UNIDES_N_ZNO = 0;
    public const int IDU1_ENE_UNIDES_MDL_ENE_UNIDES_ZNO = 0;
    public const int IDU1_ENE_UNIDES_MDL_ENE_UNIDES_N_ZNO = 0;
    public const string IDS_ENE_UNIDES_MDL_ENE_UNIDES_ZNO = "ENE_UNIDES.ZNO";
    public const string IDS_ENE_UNIDES_MDL_ENE_UNIDES_N_ZNO = "ENE_UNIDES_N.ZNO";
    public const int IDB_ENE_UNIUNI_MDL_ENE_UNIUNI_ZNO = 0;
    public const int IDB_ENE_UNIUNI_MDL_ENE_UNIUNI_N_ZNO = 1;
    public const int IDU0_ENE_UNIUNI_MDL_ENE_UNIUNI_ZNO = 0;
    public const int IDU0_ENE_UNIUNI_MDL_ENE_UNIUNI_N_ZNO = 0;
    public const int IDU1_ENE_UNIUNI_MDL_ENE_UNIUNI_ZNO = 0;
    public const int IDU1_ENE_UNIUNI_MDL_ENE_UNIUNI_N_ZNO = 0;
    public const string IDS_ENE_UNIUNI_MDL_ENE_UNIUNI_ZNO = "ENE_UNIUNI.ZNO";
    public const string IDS_ENE_UNIUNI_MDL_ENE_UNIUNI_N_ZNO = "ENE_UNIUNI_N.ZNO";
    public const int IDB_GMK_ANIMAL_MDL_GMK_ANML_PIG_ST_INO = 0;
    public const int IDB_GMK_ANIMAL_MDL_GMK_ANML_PIG_UP_INO = 1;
    public const int IDB_GMK_ANIMAL_MDL_GMK_ANML_PIG_DOWN_INO = 2;
    public const int IDB_GMK_ANIMAL_MDL_GMK_ANML_PIG_DOWN_L_INO = 3;
    public const int IDB_GMK_ANIMAL_MDL_GMK_ANML_BIRD_ST_INO = 4;
    public const int IDB_GMK_ANIMAL_MDL_GMK_ANML_BIRD_UP_INO = 5;
    public const int IDB_GMK_ANIMAL_MDL_GMK_ANML_BIRD_DOWN_INO = 6;
    public const int IDB_GMK_ANIMAL_MDL_GMK_ANML_BIRD_DOWN_L_INO = 7;
    public const int IDB_GMK_ANIMAL_MDL_GMK_ANML_COCK_ST_INO = 8;
    public const int IDB_GMK_ANIMAL_MDL_GMK_ANML_COCK_UP_INO = 9;
    public const int IDB_GMK_ANIMAL_MDL_GMK_ANML_COCK_DOWN_INO = 10;
    public const int IDB_GMK_ANIMAL_MDL_GMK_ANML_COCK_DOWN_L_INO = 11;
    public const int IDB_GMK_ANIMAL_MDL_GMK_ANML_RAB_ST_INO = 12;
    public const int IDB_GMK_ANIMAL_MDL_GMK_ANML_RAB_UP_INO = 13;
    public const int IDB_GMK_ANIMAL_MDL_GMK_ANML_RAB_DOWN_INO = 14;
    public const int IDB_GMK_ANIMAL_MDL_GMK_ANML_RAB_DOWN_L_INO = 15;
    public const int IDB_GMK_ANIMAL_MDL_GMK_ANML_PEN_ST_INO = 16;
    public const int IDB_GMK_ANIMAL_MDL_GMK_ANML_PEN_UP_INO = 17;
    public const int IDB_GMK_ANIMAL_MDL_GMK_ANML_PEN_DOWN_INO = 18;
    public const int IDB_GMK_ANIMAL_MDL_GMK_ANML_PEN_DOWN_L_INO = 19;
    public const int IDU0_GMK_ANIMAL_MDL_GMK_ANML_PIG_ST_INO = 0;
    public const int IDU0_GMK_ANIMAL_MDL_GMK_ANML_PIG_UP_INO = 0;
    public const int IDU0_GMK_ANIMAL_MDL_GMK_ANML_PIG_DOWN_INO = 0;
    public const int IDU0_GMK_ANIMAL_MDL_GMK_ANML_PIG_DOWN_L_INO = 0;
    public const int IDU0_GMK_ANIMAL_MDL_GMK_ANML_BIRD_ST_INO = 0;
    public const int IDU0_GMK_ANIMAL_MDL_GMK_ANML_BIRD_UP_INO = 0;
    public const int IDU0_GMK_ANIMAL_MDL_GMK_ANML_BIRD_DOWN_INO = 0;
    public const int IDU0_GMK_ANIMAL_MDL_GMK_ANML_BIRD_DOWN_L_INO = 0;
    public const int IDU0_GMK_ANIMAL_MDL_GMK_ANML_COCK_ST_INO = 0;
    public const int IDU0_GMK_ANIMAL_MDL_GMK_ANML_COCK_UP_INO = 0;
    public const int IDU0_GMK_ANIMAL_MDL_GMK_ANML_COCK_DOWN_INO = 0;
    public const int IDU0_GMK_ANIMAL_MDL_GMK_ANML_COCK_DOWN_L_INO = 0;
    public const int IDU0_GMK_ANIMAL_MDL_GMK_ANML_RAB_ST_INO = 0;
    public const int IDU0_GMK_ANIMAL_MDL_GMK_ANML_RAB_UP_INO = 0;
    public const int IDU0_GMK_ANIMAL_MDL_GMK_ANML_RAB_DOWN_INO = 0;
    public const int IDU0_GMK_ANIMAL_MDL_GMK_ANML_RAB_DOWN_L_INO = 0;
    public const int IDU0_GMK_ANIMAL_MDL_GMK_ANML_PEN_ST_INO = 0;
    public const int IDU0_GMK_ANIMAL_MDL_GMK_ANML_PEN_UP_INO = 0;
    public const int IDU0_GMK_ANIMAL_MDL_GMK_ANML_PEN_DOWN_INO = 0;
    public const int IDU0_GMK_ANIMAL_MDL_GMK_ANML_PEN_DOWN_L_INO = 0;
    public const int IDU1_GMK_ANIMAL_MDL_GMK_ANML_PIG_ST_INO = 0;
    public const int IDU1_GMK_ANIMAL_MDL_GMK_ANML_PIG_UP_INO = 0;
    public const int IDU1_GMK_ANIMAL_MDL_GMK_ANML_PIG_DOWN_INO = 0;
    public const int IDU1_GMK_ANIMAL_MDL_GMK_ANML_PIG_DOWN_L_INO = 0;
    public const int IDU1_GMK_ANIMAL_MDL_GMK_ANML_BIRD_ST_INO = 0;
    public const int IDU1_GMK_ANIMAL_MDL_GMK_ANML_BIRD_UP_INO = 0;
    public const int IDU1_GMK_ANIMAL_MDL_GMK_ANML_BIRD_DOWN_INO = 0;
    public const int IDU1_GMK_ANIMAL_MDL_GMK_ANML_BIRD_DOWN_L_INO = 0;
    public const int IDU1_GMK_ANIMAL_MDL_GMK_ANML_COCK_ST_INO = 0;
    public const int IDU1_GMK_ANIMAL_MDL_GMK_ANML_COCK_UP_INO = 0;
    public const int IDU1_GMK_ANIMAL_MDL_GMK_ANML_COCK_DOWN_INO = 0;
    public const int IDU1_GMK_ANIMAL_MDL_GMK_ANML_COCK_DOWN_L_INO = 0;
    public const int IDU1_GMK_ANIMAL_MDL_GMK_ANML_RAB_ST_INO = 0;
    public const int IDU1_GMK_ANIMAL_MDL_GMK_ANML_RAB_UP_INO = 0;
    public const int IDU1_GMK_ANIMAL_MDL_GMK_ANML_RAB_DOWN_INO = 0;
    public const int IDU1_GMK_ANIMAL_MDL_GMK_ANML_RAB_DOWN_L_INO = 0;
    public const int IDU1_GMK_ANIMAL_MDL_GMK_ANML_PEN_ST_INO = 0;
    public const int IDU1_GMK_ANIMAL_MDL_GMK_ANML_PEN_UP_INO = 0;
    public const int IDU1_GMK_ANIMAL_MDL_GMK_ANML_PEN_DOWN_INO = 0;
    public const int IDU1_GMK_ANIMAL_MDL_GMK_ANML_PEN_DOWN_L_INO = 0;
    public const string IDS_GMK_ANIMAL_MDL_GMK_ANML_PIG_ST_INO = "GMK_ANML_PIG_ST.INO";
    public const string IDS_GMK_ANIMAL_MDL_GMK_ANML_PIG_UP_INO = "GMK_ANML_PIG_UP.INO";
    public const string IDS_GMK_ANIMAL_MDL_GMK_ANML_PIG_DOWN_INO = "GMK_ANML_PIG_DOWN.INO";
    public const string IDS_GMK_ANIMAL_MDL_GMK_ANML_PIG_DOWN_L_INO = "GMK_ANML_PIG_DOWN_L.INO";
    public const string IDS_GMK_ANIMAL_MDL_GMK_ANML_BIRD_ST_INO = "GMK_ANML_BIRD_ST.INO";
    public const string IDS_GMK_ANIMAL_MDL_GMK_ANML_BIRD_UP_INO = "GMK_ANML_BIRD_UP.INO";
    public const string IDS_GMK_ANIMAL_MDL_GMK_ANML_BIRD_DOWN_INO = "GMK_ANML_BIRD_DOWN.INO";
    public const string IDS_GMK_ANIMAL_MDL_GMK_ANML_BIRD_DOWN_L_INO = "GMK_ANML_BIRD_DOWN_L.INO";
    public const string IDS_GMK_ANIMAL_MDL_GMK_ANML_COCK_ST_INO = "GMK_ANML_COCK_ST.INO";
    public const string IDS_GMK_ANIMAL_MDL_GMK_ANML_COCK_UP_INO = "GMK_ANML_COCK_UP.INO";
    public const string IDS_GMK_ANIMAL_MDL_GMK_ANML_COCK_DOWN_INO = "GMK_ANML_COCK_DOWN.INO";
    public const string IDS_GMK_ANIMAL_MDL_GMK_ANML_COCK_DOWN_L_INO = "GMK_ANML_COCK_DOWN_L.INO";
    public const string IDS_GMK_ANIMAL_MDL_GMK_ANML_RAB_ST_INO = "GMK_ANML_RAB_ST.INO";
    public const string IDS_GMK_ANIMAL_MDL_GMK_ANML_RAB_UP_INO = "GMK_ANML_RAB_UP.INO";
    public const string IDS_GMK_ANIMAL_MDL_GMK_ANML_RAB_DOWN_INO = "GMK_ANML_RAB_DOWN.INO";
    public const string IDS_GMK_ANIMAL_MDL_GMK_ANML_RAB_DOWN_L_INO = "GMK_ANML_RAB_DOWN_L.INO";
    public const string IDS_GMK_ANIMAL_MDL_GMK_ANML_PEN_ST_INO = "GMK_ANML_PEN_ST.INO";
    public const string IDS_GMK_ANIMAL_MDL_GMK_ANML_PEN_UP_INO = "GMK_ANML_PEN_UP.INO";
    public const string IDS_GMK_ANIMAL_MDL_GMK_ANML_PEN_DOWN_INO = "GMK_ANML_PEN_DOWN.INO";
    public const string IDS_GMK_ANIMAL_MDL_GMK_ANML_PEN_DOWN_L_INO = "GMK_ANML_PEN_DOWN_L.INO";
    public const int IDB_GMK_B3_PILLAR_F_MAT_GMK_B_PILLAR_F_2V_ZNV = 0;
    public const int IDB_GMK_B3_PILLAR_F_MAT_GMK_B_PILLAR_F_4V_ZNV = 1;
    public const int IDB_GMK_B3_PILLAR_F_MAT_GMK_B_PILLAR_F_2H_ZNV = 2;
    public const int IDB_GMK_B3_PILLAR_F_MAT_GMK_B_PILLAR_F_4H_ZNV = 3;
    public const int IDU0_GMK_B3_PILLAR_F_MAT_GMK_B_PILLAR_F_2V_ZNV = 0;
    public const int IDU0_GMK_B3_PILLAR_F_MAT_GMK_B_PILLAR_F_4V_ZNV = 0;
    public const int IDU0_GMK_B3_PILLAR_F_MAT_GMK_B_PILLAR_F_2H_ZNV = 0;
    public const int IDU0_GMK_B3_PILLAR_F_MAT_GMK_B_PILLAR_F_4H_ZNV = 0;
    public const int IDU1_GMK_B3_PILLAR_F_MAT_GMK_B_PILLAR_F_2V_ZNV = 0;
    public const int IDU1_GMK_B3_PILLAR_F_MAT_GMK_B_PILLAR_F_4V_ZNV = 0;
    public const int IDU1_GMK_B3_PILLAR_F_MAT_GMK_B_PILLAR_F_2H_ZNV = 0;
    public const int IDU1_GMK_B3_PILLAR_F_MAT_GMK_B_PILLAR_F_4H_ZNV = 0;
    public const string IDS_GMK_B3_PILLAR_F_MAT_GMK_B_PILLAR_F_2V_ZNV = "GMK_B_PILLAR_F_2V.ZNV";
    public const string IDS_GMK_B3_PILLAR_F_MAT_GMK_B_PILLAR_F_4V_ZNV = "GMK_B_PILLAR_F_4V.ZNV";
    public const string IDS_GMK_B3_PILLAR_F_MAT_GMK_B_PILLAR_F_2H_ZNV = "GMK_B_PILLAR_F_2H.ZNV";
    public const string IDS_GMK_B3_PILLAR_F_MAT_GMK_B_PILLAR_F_4H_ZNV = "GMK_B_PILLAR_F_4H.ZNV";
    public const int IDB_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_1V_ZNO = 0;
    public const int IDB_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_2V_ZNO = 1;
    public const int IDB_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_3V_ZNO = 2;
    public const int IDB_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_4V_ZNO = 3;
    public const int IDB_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_1H_ZNO = 4;
    public const int IDB_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_2H_ZNO = 5;
    public const int IDB_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_3H_ZNO = 6;
    public const int IDB_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_4H_ZNO = 7;
    public const int IDU0_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_1V_ZNO = 0;
    public const int IDU0_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_2V_ZNO = 0;
    public const int IDU0_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_3V_ZNO = 0;
    public const int IDU0_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_4V_ZNO = 0;
    public const int IDU0_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_1H_ZNO = 0;
    public const int IDU0_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_2H_ZNO = 0;
    public const int IDU0_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_3H_ZNO = 0;
    public const int IDU0_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_4H_ZNO = 0;
    public const int IDU1_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_1V_ZNO = 0;
    public const int IDU1_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_2V_ZNO = 0;
    public const int IDU1_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_3V_ZNO = 0;
    public const int IDU1_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_4V_ZNO = 0;
    public const int IDU1_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_1H_ZNO = 0;
    public const int IDU1_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_2H_ZNO = 0;
    public const int IDU1_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_3H_ZNO = 0;
    public const int IDU1_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_4H_ZNO = 0;
    public const string IDS_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_1V_ZNO = "GMK_B_PILLAR_F_1V.ZNO";
    public const string IDS_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_2V_ZNO = "GMK_B_PILLAR_F_2V.ZNO";
    public const string IDS_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_3V_ZNO = "GMK_B_PILLAR_F_3V.ZNO";
    public const string IDS_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_4V_ZNO = "GMK_B_PILLAR_F_4V.ZNO";
    public const string IDS_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_1H_ZNO = "GMK_B_PILLAR_F_1H.ZNO";
    public const string IDS_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_2H_ZNO = "GMK_B_PILLAR_F_2H.ZNO";
    public const string IDS_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_3H_ZNO = "GMK_B_PILLAR_F_3H.ZNO";
    public const string IDS_GMK_B3_PILLAR_F_MDL_GMK_B_PILLAR_F_4H_ZNO = "GMK_B_PILLAR_F_4H.ZNO";
    public const int IDB_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_1V_TVX = 0;
    public const int IDB_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_2V_TVX = 1;
    public const int IDB_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_3V_TVX = 2;
    public const int IDB_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_4V_TVX = 3;
    public const int IDB_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_1H_TVX = 4;
    public const int IDB_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_2H_TVX = 5;
    public const int IDB_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_3H_TVX = 6;
    public const int IDB_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_4H_TVX = 7;
    public const int IDB_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_2V_P_TVX = 8;
    public const int IDB_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_4V_P_TVX = 9;
    public const int IDB_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_2H_P_TVX = 10;
    public const int IDB_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_4H_P_TVX = 11;
    public const int IDU0_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_1V_TVX = 0;
    public const int IDU0_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_2V_TVX = 0;
    public const int IDU0_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_3V_TVX = 0;
    public const int IDU0_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_4V_TVX = 0;
    public const int IDU0_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_1H_TVX = 0;
    public const int IDU0_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_2H_TVX = 0;
    public const int IDU0_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_3H_TVX = 0;
    public const int IDU0_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_4H_TVX = 0;
    public const int IDU0_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_2V_P_TVX = 0;
    public const int IDU0_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_4V_P_TVX = 0;
    public const int IDU0_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_2H_P_TVX = 0;
    public const int IDU0_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_4H_P_TVX = 0;
    public const int IDU1_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_1V_TVX = 0;
    public const int IDU1_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_2V_TVX = 0;
    public const int IDU1_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_3V_TVX = 0;
    public const int IDU1_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_4V_TVX = 0;
    public const int IDU1_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_1H_TVX = 0;
    public const int IDU1_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_2H_TVX = 0;
    public const int IDU1_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_3H_TVX = 0;
    public const int IDU1_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_4H_TVX = 0;
    public const int IDU1_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_2V_P_TVX = 0;
    public const int IDU1_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_4V_P_TVX = 0;
    public const int IDU1_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_2H_P_TVX = 0;
    public const int IDU1_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_4H_P_TVX = 0;
    public const string IDS_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_1V_TVX = "GMK_B_PILLAR_F_1V.TVX";
    public const string IDS_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_2V_TVX = "GMK_B_PILLAR_F_2V.TVX";
    public const string IDS_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_3V_TVX = "GMK_B_PILLAR_F_3V.TVX";
    public const string IDS_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_4V_TVX = "GMK_B_PILLAR_F_4V.TVX";
    public const string IDS_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_1H_TVX = "GMK_B_PILLAR_F_1H.TVX";
    public const string IDS_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_2H_TVX = "GMK_B_PILLAR_F_2H.TVX";
    public const string IDS_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_3H_TVX = "GMK_B_PILLAR_F_3H.TVX";
    public const string IDS_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_4H_TVX = "GMK_B_PILLAR_F_4H.TVX";
    public const string IDS_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_2V_P_TVX = "GMK_B_PILLAR_F_2V_P.TVX";
    public const string IDS_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_4V_P_TVX = "GMK_B_PILLAR_F_4V_P.TVX";
    public const string IDS_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_2H_P_TVX = "GMK_B_PILLAR_F_2H_P.TVX";
    public const string IDS_GMK_B3_PILLAR_F_TVX_GMK_B_PILLAR_F_4H_P_TVX = "GMK_B_PILLAR_F_4H_P.TVX";
    public const int IDB_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_2A_ZNO = 0;
    public const int IDB_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_2B_ZNO = 1;
    public const int IDB_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_2C_ZNO = 2;
    public const int IDB_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_2D_ZNO = 3;
    public const int IDB_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_A_ZNO = 4;
    public const int IDB_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_B_ZNO = 5;
    public const int IDB_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_C_ZNO = 6;
    public const int IDB_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_D_ZNO = 7;
    public const int IDU0_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_2A_ZNO = 0;
    public const int IDU0_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_2B_ZNO = 0;
    public const int IDU0_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_2C_ZNO = 0;
    public const int IDU0_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_2D_ZNO = 0;
    public const int IDU0_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_A_ZNO = 0;
    public const int IDU0_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_B_ZNO = 0;
    public const int IDU0_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_C_ZNO = 0;
    public const int IDU0_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_D_ZNO = 0;
    public const int IDU1_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_2A_ZNO = 0;
    public const int IDU1_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_2B_ZNO = 0;
    public const int IDU1_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_2C_ZNO = 0;
    public const int IDU1_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_2D_ZNO = 0;
    public const int IDU1_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_A_ZNO = 0;
    public const int IDU1_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_B_ZNO = 0;
    public const int IDU1_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_C_ZNO = 0;
    public const int IDU1_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_D_ZNO = 0;
    public const string IDS_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_2A_ZNO = "GMK_B_PILLAR_2A.ZNO";
    public const string IDS_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_2B_ZNO = "GMK_B_PILLAR_2B.ZNO";
    public const string IDS_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_2C_ZNO = "GMK_B_PILLAR_2C.ZNO";
    public const string IDS_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_2D_ZNO = "GMK_B_PILLAR_2D.ZNO";
    public const string IDS_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_A_ZNO = "GMK_B_PILLAR_A.ZNO";
    public const string IDS_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_B_ZNO = "GMK_B_PILLAR_B.ZNO";
    public const string IDS_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_C_ZNO = "GMK_B_PILLAR_C.ZNO";
    public const string IDS_GMK_B3_PILLAR_MDL_GMK_B_PILLAR_D_ZNO = "GMK_B_PILLAR_D.ZNO";
    public const int IDB_MODEL_GMK_B_PILLAR_2A_TVX = 0;
    public const int IDB_MODEL_GMK_B_PILLAR_2B_TVX = 1;
    public const int IDB_MODEL_GMK_B_PILLAR_2C_TVX = 2;
    public const int IDB_MODEL_GMK_B_PILLAR_2D_TVX = 3;
    public const int IDB_MODEL_GMK_B_PILLAR_A_TVX = 4;
    public const int IDB_MODEL_GMK_B_PILLAR_B_TVX = 5;
    public const int IDB_MODEL_GMK_B_PILLAR_C_TVX = 6;
    public const int IDB_MODEL_GMK_B_PILLAR_D_TVX = 7;
    public const int IDU0_MODEL_GMK_B_PILLAR_2A_TVX = 0;
    public const int IDU0_MODEL_GMK_B_PILLAR_2B_TVX = 0;
    public const int IDU0_MODEL_GMK_B_PILLAR_2C_TVX = 0;
    public const int IDU0_MODEL_GMK_B_PILLAR_2D_TVX = 0;
    public const int IDU0_MODEL_GMK_B_PILLAR_A_TVX = 0;
    public const int IDU0_MODEL_GMK_B_PILLAR_B_TVX = 0;
    public const int IDU0_MODEL_GMK_B_PILLAR_C_TVX = 0;
    public const int IDU0_MODEL_GMK_B_PILLAR_D_TVX = 0;
    public const int IDU1_MODEL_GMK_B_PILLAR_2A_TVX = 0;
    public const int IDU1_MODEL_GMK_B_PILLAR_2B_TVX = 0;
    public const int IDU1_MODEL_GMK_B_PILLAR_2C_TVX = 0;
    public const int IDU1_MODEL_GMK_B_PILLAR_2D_TVX = 0;
    public const int IDU1_MODEL_GMK_B_PILLAR_A_TVX = 0;
    public const int IDU1_MODEL_GMK_B_PILLAR_B_TVX = 0;
    public const int IDU1_MODEL_GMK_B_PILLAR_C_TVX = 0;
    public const int IDU1_MODEL_GMK_B_PILLAR_D_TVX = 0;
    public const string IDS_MODEL_GMK_B_PILLAR_2A_TVX = "GMK_B_PILLAR_2A.TVX";
    public const string IDS_MODEL_GMK_B_PILLAR_2B_TVX = "GMK_B_PILLAR_2B.TVX";
    public const string IDS_MODEL_GMK_B_PILLAR_2C_TVX = "GMK_B_PILLAR_2C.TVX";
    public const string IDS_MODEL_GMK_B_PILLAR_2D_TVX = "GMK_B_PILLAR_2D.TVX";
    public const string IDS_MODEL_GMK_B_PILLAR_A_TVX = "GMK_B_PILLAR_A.TVX";
    public const string IDS_MODEL_GMK_B_PILLAR_B_TVX = "GMK_B_PILLAR_B.TVX";
    public const string IDS_MODEL_GMK_B_PILLAR_C_TVX = "GMK_B_PILLAR_C.TVX";
    public const string IDS_MODEL_GMK_B_PILLAR_D_TVX = "GMK_B_PILLAR_D.TVX";
    public const int IDB_GMK_BELT_CONV_MDL_GMK_BELT_CONV_ZNO = 0;
    public const int IDB_GMK_BELT_CONV_MDL_GMK_BELT_CONV_AXIS_ZNO = 1;
    public const int IDB_GMK_BELT_CONV_MDL_GMK_BELT_CONV_CH_A_ZNO = 2;
    public const int IDB_GMK_BELT_CONV_MDL_GMK_BELT_CONV_CH_B_ZNO = 3;
    public const int IDU0_GMK_BELT_CONV_MDL_GMK_BELT_CONV_ZNO = 0;
    public const int IDU0_GMK_BELT_CONV_MDL_GMK_BELT_CONV_AXIS_ZNO = 0;
    public const int IDU0_GMK_BELT_CONV_MDL_GMK_BELT_CONV_CH_A_ZNO = 0;
    public const int IDU0_GMK_BELT_CONV_MDL_GMK_BELT_CONV_CH_B_ZNO = 0;
    public const int IDU1_GMK_BELT_CONV_MDL_GMK_BELT_CONV_ZNO = 0;
    public const int IDU1_GMK_BELT_CONV_MDL_GMK_BELT_CONV_AXIS_ZNO = 0;
    public const int IDU1_GMK_BELT_CONV_MDL_GMK_BELT_CONV_CH_A_ZNO = 0;
    public const int IDU1_GMK_BELT_CONV_MDL_GMK_BELT_CONV_CH_B_ZNO = 0;
    public const string IDS_GMK_BELT_CONV_MDL_GMK_BELT_CONV_ZNO = "GMK_BELT_CONV.ZNO";
    public const string IDS_GMK_BELT_CONV_MDL_GMK_BELT_CONV_AXIS_ZNO = "GMK_BELT_CONV_AXIS.ZNO";
    public const string IDS_GMK_BELT_CONV_MDL_GMK_BELT_CONV_CH_A_ZNO = "GMK_BELT_CONV_CH_A.ZNO";
    public const string IDS_GMK_BELT_CONV_MDL_GMK_BELT_CONV_CH_B_ZNO = "GMK_BELT_CONV_CH_B.ZNO";
    public const int IDB_MODEL_GMK_BELT_CONV_TVX = 0;
    public const int IDB_MODEL_GMK_BELT_CONV_AXIS_TVX = 1;
    public const int IDB_MODEL_GMK_BELT_CONV_CH_A_TVX = 2;
    public const int IDB_MODEL_GMK_BELT_CONV_CH_B_TVX = 3;
    public const int IDU0_MODEL_GMK_BELT_CONV_TVX = 0;
    public const int IDU0_MODEL_GMK_BELT_CONV_AXIS_TVX = 0;
    public const int IDU0_MODEL_GMK_BELT_CONV_CH_A_TVX = 0;
    public const int IDU0_MODEL_GMK_BELT_CONV_CH_B_TVX = 0;
    public const int IDU1_MODEL_GMK_BELT_CONV_TVX = 0;
    public const int IDU1_MODEL_GMK_BELT_CONV_AXIS_TVX = 0;
    public const int IDU1_MODEL_GMK_BELT_CONV_CH_A_TVX = 0;
    public const int IDU1_MODEL_GMK_BELT_CONV_CH_B_TVX = 0;
    public const string IDS_MODEL_GMK_BELT_CONV_TVX = "GMK_BELT_CONV.TVX";
    public const string IDS_MODEL_GMK_BELT_CONV_AXIS_TVX = "GMK_BELT_CONV_AXIS.TVX";
    public const string IDS_MODEL_GMK_BELT_CONV_CH_A_TVX = "GMK_BELT_CONV_CH_A.TVX";
    public const string IDS_MODEL_GMK_BELT_CONV_CH_B_TVX = "GMK_BELT_CONV_CH_B.TVX";
    public const int IDB_GMK_BOBBIN_MAT_GMK_BOBBIN_HIT_ZNV = 0;
    public const int IDU0_GMK_BOBBIN_MAT_GMK_BOBBIN_HIT_ZNV = 0;
    public const int IDU1_GMK_BOBBIN_MAT_GMK_BOBBIN_HIT_ZNV = 0;
    public const string IDS_GMK_BOBBIN_MAT_GMK_BOBBIN_HIT_ZNV = "GMK_BOBBIN_HIT.ZNV";
    public const int IDB_GMK_BOBBIN_MDL_GMK_BOBBIN_ZNO = 0;
    public const int IDU0_GMK_BOBBIN_MDL_GMK_BOBBIN_ZNO = 0;
    public const int IDU1_GMK_BOBBIN_MDL_GMK_BOBBIN_ZNO = 0;
    public const string IDS_GMK_BOBBIN_MDL_GMK_BOBBIN_ZNO = "GMK_BOBBIN.ZNO";
    public const int IDB_GMK_BOBBIN_MTN_GMK_BOBBIN_ZNM = 0;
    public const int IDB_GMK_BOBBIN_MTN_GMK_BOBBIN_HIT_ZNM = 1;
    public const int IDU0_GMK_BOBBIN_MTN_GMK_BOBBIN_ZNM = 0;
    public const int IDU0_GMK_BOBBIN_MTN_GMK_BOBBIN_HIT_ZNM = 0;
    public const int IDU1_GMK_BOBBIN_MTN_GMK_BOBBIN_ZNM = 0;
    public const int IDU1_GMK_BOBBIN_MTN_GMK_BOBBIN_HIT_ZNM = 0;
    public const string IDS_GMK_BOBBIN_MTN_GMK_BOBBIN_ZNM = "GMK_BOBBIN.ZNM";
    public const string IDS_GMK_BOBBIN_MTN_GMK_BOBBIN_HIT_ZNM = "GMK_BOBBIN_HIT.ZNM";
    public const int IDB_GMK_BRIDGE_MDL_GMK_BRIDGE_ZNO = 0;
    public const int IDB_GMK_BRIDGE_MDL_GMK_BRIDGE_CUT_ZNO = 1;
    public const int IDB_GMK_BRIDGE_MDL_GMK_BRIDGE_DECO_ZNO = 2;
    public const int IDU0_GMK_BRIDGE_MDL_GMK_BRIDGE_ZNO = 0;
    public const int IDU0_GMK_BRIDGE_MDL_GMK_BRIDGE_CUT_ZNO = 0;
    public const int IDU0_GMK_BRIDGE_MDL_GMK_BRIDGE_DECO_ZNO = 0;
    public const int IDU1_GMK_BRIDGE_MDL_GMK_BRIDGE_ZNO = 0;
    public const int IDU1_GMK_BRIDGE_MDL_GMK_BRIDGE_CUT_ZNO = 0;
    public const int IDU1_GMK_BRIDGE_MDL_GMK_BRIDGE_DECO_ZNO = 0;
    public const string IDS_GMK_BRIDGE_MDL_GMK_BRIDGE_ZNO = "GMK_BRIDGE.ZNO";
    public const string IDS_GMK_BRIDGE_MDL_GMK_BRIDGE_CUT_ZNO = "GMK_BRIDGE_CUT.ZNO";
    public const string IDS_GMK_BRIDGE_MDL_GMK_BRIDGE_DECO_ZNO = "GMK_BRIDGE_DECO.ZNO";
    public const int IDB_GMK_BUMPER_MAT_GMK_BUMPER_ZNV = 0;
    public const int IDB_GMK_BUMPER_MAT_GMK_BUMPER_SQ_ZNV = 1;
    public const int IDB_GMK_BUMPER_MAT_GMK_BUMPER_TRI_ZNV = 2;
    public const int IDB_GMK_BUMPER_MAT_GMK_EN_BMPR_ZNV = 3;
    public const int IDB_GMK_BUMPER_MAT_GMK_EN_BMPR_R_ZNV = 4;
    public const int IDB_GMK_BUMPER_MAT_GMK_EN_BMPR_Y_ZNV = 5;
    public const int IDU0_GMK_BUMPER_MAT_GMK_BUMPER_ZNV = 0;
    public const int IDU0_GMK_BUMPER_MAT_GMK_BUMPER_SQ_ZNV = 0;
    public const int IDU0_GMK_BUMPER_MAT_GMK_BUMPER_TRI_ZNV = 0;
    public const int IDU0_GMK_BUMPER_MAT_GMK_EN_BMPR_ZNV = 0;
    public const int IDU0_GMK_BUMPER_MAT_GMK_EN_BMPR_R_ZNV = 0;
    public const int IDU0_GMK_BUMPER_MAT_GMK_EN_BMPR_Y_ZNV = 0;
    public const int IDU1_GMK_BUMPER_MAT_GMK_BUMPER_ZNV = 0;
    public const int IDU1_GMK_BUMPER_MAT_GMK_BUMPER_SQ_ZNV = 0;
    public const int IDU1_GMK_BUMPER_MAT_GMK_BUMPER_TRI_ZNV = 0;
    public const int IDU1_GMK_BUMPER_MAT_GMK_EN_BMPR_ZNV = 0;
    public const int IDU1_GMK_BUMPER_MAT_GMK_EN_BMPR_R_ZNV = 0;
    public const int IDU1_GMK_BUMPER_MAT_GMK_EN_BMPR_Y_ZNV = 0;
    public const string IDS_GMK_BUMPER_MAT_GMK_BUMPER_ZNV = "GMK_BUMPER.ZNV";
    public const string IDS_GMK_BUMPER_MAT_GMK_BUMPER_SQ_ZNV = "GMK_BUMPER_SQ.ZNV";
    public const string IDS_GMK_BUMPER_MAT_GMK_BUMPER_TRI_ZNV = "GMK_BUMPER_TRI.ZNV";
    public const string IDS_GMK_BUMPER_MAT_GMK_EN_BMPR_ZNV = "GMK_EN_BMPR.ZNV";
    public const string IDS_GMK_BUMPER_MAT_GMK_EN_BMPR_R_ZNV = "GMK_EN_BMPR_R.ZNV";
    public const string IDS_GMK_BUMPER_MAT_GMK_EN_BMPR_Y_ZNV = "GMK_EN_BMPR_Y.ZNV";
    public const int IDB_GMK_BUMPER_MDL_GMK_BUMPER_ZNO = 0;
    public const int IDB_GMK_BUMPER_MDL_GMK_BUMPER_SQ_ZNO = 1;
    public const int IDB_GMK_BUMPER_MDL_GMK_BUMPER_TRI_ZNO = 2;
    public const int IDB_GMK_BUMPER_MDL_GMK_EN_BMPR_ZNO = 3;
    public const int IDB_GMK_BUMPER_MDL_GMK_BUMPER_GLARE_ZNO = 4;
    public const int IDB_GMK_BUMPER_MDL_GMK_BUMPER_SQ_GLARE_ZNO = 5;
    public const int IDB_GMK_BUMPER_MDL_GMK_BUMPER_TRI_GLARE_ZNO = 6;
    public const int IDU0_GMK_BUMPER_MDL_GMK_BUMPER_ZNO = 0;
    public const int IDU0_GMK_BUMPER_MDL_GMK_BUMPER_SQ_ZNO = 0;
    public const int IDU0_GMK_BUMPER_MDL_GMK_BUMPER_TRI_ZNO = 0;
    public const int IDU0_GMK_BUMPER_MDL_GMK_EN_BMPR_ZNO = 0;
    public const int IDU0_GMK_BUMPER_MDL_GMK_BUMPER_GLARE_ZNO = 0;
    public const int IDU0_GMK_BUMPER_MDL_GMK_BUMPER_SQ_GLARE_ZNO = 0;
    public const int IDU0_GMK_BUMPER_MDL_GMK_BUMPER_TRI_GLARE_ZNO = 0;
    public const int IDU1_GMK_BUMPER_MDL_GMK_BUMPER_ZNO = 0;
    public const int IDU1_GMK_BUMPER_MDL_GMK_BUMPER_SQ_ZNO = 0;
    public const int IDU1_GMK_BUMPER_MDL_GMK_BUMPER_TRI_ZNO = 0;
    public const int IDU1_GMK_BUMPER_MDL_GMK_EN_BMPR_ZNO = 0;
    public const int IDU1_GMK_BUMPER_MDL_GMK_BUMPER_GLARE_ZNO = 0;
    public const int IDU1_GMK_BUMPER_MDL_GMK_BUMPER_SQ_GLARE_ZNO = 0;
    public const int IDU1_GMK_BUMPER_MDL_GMK_BUMPER_TRI_GLARE_ZNO = 0;
    public const string IDS_GMK_BUMPER_MDL_GMK_BUMPER_ZNO = "GMK_BUMPER.ZNO";
    public const string IDS_GMK_BUMPER_MDL_GMK_BUMPER_SQ_ZNO = "GMK_BUMPER_SQ.ZNO";
    public const string IDS_GMK_BUMPER_MDL_GMK_BUMPER_TRI_ZNO = "GMK_BUMPER_TRI.ZNO";
    public const string IDS_GMK_BUMPER_MDL_GMK_EN_BMPR_ZNO = "GMK_EN_BMPR.ZNO";
    public const string IDS_GMK_BUMPER_MDL_GMK_BUMPER_GLARE_ZNO = "GMK_BUMPER_GLARE.ZNO";
    public const string IDS_GMK_BUMPER_MDL_GMK_BUMPER_SQ_GLARE_ZNO = "GMK_BUMPER_SQ_GLARE.ZNO";
    public const string IDS_GMK_BUMPER_MDL_GMK_BUMPER_TRI_GLARE_ZNO = "GMK_BUMPER_TRI_GLARE.ZNO";
    public const int IDB_GMK_BUMPER_MTN_GMK_EN_BMPR_ZNM = 0;
    public const int IDB_GMK_BUMPER_MTN_GMK_EN_BMPR_HIT_ZNM = 1;
    public const int IDU0_GMK_BUMPER_MTN_GMK_EN_BMPR_ZNM = 0;
    public const int IDU0_GMK_BUMPER_MTN_GMK_EN_BMPR_HIT_ZNM = 0;
    public const int IDU1_GMK_BUMPER_MTN_GMK_EN_BMPR_ZNM = 0;
    public const int IDU1_GMK_BUMPER_MTN_GMK_EN_BMPR_HIT_ZNM = 0;
    public const string IDS_GMK_BUMPER_MTN_GMK_EN_BMPR_ZNM = "GMK_EN_BMPR.ZNM";
    public const string IDS_GMK_BUMPER_MTN_GMK_EN_BMPR_HIT_ZNM = "GMK_EN_BMPR_HIT.ZNM";
    public const int IDB_GMK_B_LAND1_MDL_GMK_BIL_L_ZNO = 0;
    public const int IDB_GMK_B_LAND1_MDL_GMK_BIL_R_ZNO = 1;
    public const int IDB_GMK_B_LAND1_MDL_GMK_BLOCK_L_ZNO = 2;
    public const int IDB_GMK_B_LAND1_MDL_GMK_BLOCK_R_ZNO = 3;
    public const int IDU0_GMK_B_LAND1_MDL_GMK_BIL_L_ZNO = 0;
    public const int IDU0_GMK_B_LAND1_MDL_GMK_BIL_R_ZNO = 0;
    public const int IDU0_GMK_B_LAND1_MDL_GMK_BLOCK_L_ZNO = 0;
    public const int IDU0_GMK_B_LAND1_MDL_GMK_BLOCK_R_ZNO = 0;
    public const int IDU1_GMK_B_LAND1_MDL_GMK_BIL_L_ZNO = 0;
    public const int IDU1_GMK_B_LAND1_MDL_GMK_BIL_R_ZNO = 0;
    public const int IDU1_GMK_B_LAND1_MDL_GMK_BLOCK_L_ZNO = 0;
    public const int IDU1_GMK_B_LAND1_MDL_GMK_BLOCK_R_ZNO = 0;
    public const string IDS_GMK_B_LAND1_MDL_GMK_BIL_L_ZNO = "GMK_BIL_L.ZNO";
    public const string IDS_GMK_B_LAND1_MDL_GMK_BIL_R_ZNO = "GMK_BIL_R.ZNO";
    public const string IDS_GMK_B_LAND1_MDL_GMK_BLOCK_L_ZNO = "GMK_BLOCK_L.ZNO";
    public const string IDS_GMK_B_LAND1_MDL_GMK_BLOCK_R_ZNO = "GMK_BLOCK_R.ZNO";
    public const int IDB_GMK_B_LAND1_MTN_GMK_BLOCK_R_ZNM = 0;
    public const int IDB_GMK_B_LAND1_MTN_GMK_BLOCK_L_ZNM = 1;
    public const int IDU0_GMK_B_LAND1_MTN_GMK_BLOCK_R_ZNM = 0;
    public const int IDU0_GMK_B_LAND1_MTN_GMK_BLOCK_L_ZNM = 0;
    public const int IDU1_GMK_B_LAND1_MTN_GMK_BLOCK_R_ZNM = 0;
    public const int IDU1_GMK_B_LAND1_MTN_GMK_BLOCK_L_ZNM = 0;
    public const string IDS_GMK_B_LAND1_MTN_GMK_BLOCK_R_ZNM = "GMK_BLOCK_R.ZNM";
    public const string IDS_GMK_B_LAND1_MTN_GMK_BLOCK_L_ZNM = "GMK_BLOCK_L.ZNM";
    public const int IDB_GMK_B_OBJ_1_MDL_GMK_B_OBJ_1_ZNO = 0;
    public const int IDB_GMK_B_OBJ_1_MDL_GMK_B_OBJ_1_P1_ZNO = 1;
    public const int IDB_GMK_B_OBJ_1_MDL_GMK_B_OBJ_1_P2_ZNO = 2;
    public const int IDU0_GMK_B_OBJ_1_MDL_GMK_B_OBJ_1_ZNO = 0;
    public const int IDU0_GMK_B_OBJ_1_MDL_GMK_B_OBJ_1_P1_ZNO = 0;
    public const int IDU0_GMK_B_OBJ_1_MDL_GMK_B_OBJ_1_P2_ZNO = 0;
    public const int IDU1_GMK_B_OBJ_1_MDL_GMK_B_OBJ_1_ZNO = 0;
    public const int IDU1_GMK_B_OBJ_1_MDL_GMK_B_OBJ_1_P1_ZNO = 0;
    public const int IDU1_GMK_B_OBJ_1_MDL_GMK_B_OBJ_1_P2_ZNO = 0;
    public const string IDS_GMK_B_OBJ_1_MDL_GMK_B_OBJ_1_ZNO = "GMK_B_OBJ_1.ZNO";
    public const string IDS_GMK_B_OBJ_1_MDL_GMK_B_OBJ_1_P1_ZNO = "GMK_B_OBJ_1_P1.ZNO";
    public const string IDS_GMK_B_OBJ_1_MDL_GMK_B_OBJ_1_P2_ZNO = "GMK_B_OBJ_1_P2.ZNO";
    public const int IDB_GMK_B_OBJ_2_MDL_GMK_B_OBJ_2_ZNO = 0;
    public const int IDB_GMK_B_OBJ_2_MDL_GMK_B_OBJ_2_P1_ZNO = 1;
    public const int IDB_GMK_B_OBJ_2_MDL_GMK_B_OBJ_2_P2_ZNO = 2;
    public const int IDU0_GMK_B_OBJ_2_MDL_GMK_B_OBJ_2_ZNO = 0;
    public const int IDU0_GMK_B_OBJ_2_MDL_GMK_B_OBJ_2_P1_ZNO = 0;
    public const int IDU0_GMK_B_OBJ_2_MDL_GMK_B_OBJ_2_P2_ZNO = 0;
    public const int IDU1_GMK_B_OBJ_2_MDL_GMK_B_OBJ_2_ZNO = 0;
    public const int IDU1_GMK_B_OBJ_2_MDL_GMK_B_OBJ_2_P1_ZNO = 0;
    public const int IDU1_GMK_B_OBJ_2_MDL_GMK_B_OBJ_2_P2_ZNO = 0;
    public const string IDS_GMK_B_OBJ_2_MDL_GMK_B_OBJ_2_ZNO = "GMK_B_OBJ_2.ZNO";
    public const string IDS_GMK_B_OBJ_2_MDL_GMK_B_OBJ_2_P1_ZNO = "GMK_B_OBJ_2_P1.ZNO";
    public const string IDS_GMK_B_OBJ_2_MDL_GMK_B_OBJ_2_P2_ZNO = "GMK_B_OBJ_2_P2.ZNO";
    public const int IDB_GMK_B_OBJ_3_MDL_GMK_B_OBJ_3_ZNO = 0;
    public const int IDB_GMK_B_OBJ_3_MDL_GMK_B_OBJ_3_P1_ZNO = 1;
    public const int IDB_GMK_B_OBJ_3_MDL_GMK_B_OBJ_3_P2_ZNO = 2;
    public const int IDB_GMK_B_OBJ_3_MDL_GMK_B_OBJ_3_P3_ZNO = 3;
    public const int IDU0_GMK_B_OBJ_3_MDL_GMK_B_OBJ_3_ZNO = 0;
    public const int IDU0_GMK_B_OBJ_3_MDL_GMK_B_OBJ_3_P1_ZNO = 0;
    public const int IDU0_GMK_B_OBJ_3_MDL_GMK_B_OBJ_3_P2_ZNO = 0;
    public const int IDU0_GMK_B_OBJ_3_MDL_GMK_B_OBJ_3_P3_ZNO = 0;
    public const int IDU1_GMK_B_OBJ_3_MDL_GMK_B_OBJ_3_ZNO = 0;
    public const int IDU1_GMK_B_OBJ_3_MDL_GMK_B_OBJ_3_P1_ZNO = 0;
    public const int IDU1_GMK_B_OBJ_3_MDL_GMK_B_OBJ_3_P2_ZNO = 0;
    public const int IDU1_GMK_B_OBJ_3_MDL_GMK_B_OBJ_3_P3_ZNO = 0;
    public const string IDS_GMK_B_OBJ_3_MDL_GMK_B_OBJ_3_ZNO = "GMK_B_OBJ_3.ZNO";
    public const string IDS_GMK_B_OBJ_3_MDL_GMK_B_OBJ_3_P1_ZNO = "GMK_B_OBJ_3_P1.ZNO";
    public const string IDS_GMK_B_OBJ_3_MDL_GMK_B_OBJ_3_P2_ZNO = "GMK_B_OBJ_3_P2.ZNO";
    public const string IDS_GMK_B_OBJ_3_MDL_GMK_B_OBJ_3_P3_ZNO = "GMK_B_OBJ_3_P3.ZNO";
    public const int IDB_GMK_B_WALL1_MDL_GMK_B_WALL1_L1_V_ZNO = 0;
    public const int IDB_GMK_B_WALL1_MDL_GMK_B_WALL1_L2_V_ZNO = 1;
    public const int IDB_GMK_B_WALL1_MDL_GMK_B_WALL1_R1_V_ZNO = 2;
    public const int IDB_GMK_B_WALL1_MDL_GMK_B_WALL1_R2_V_ZNO = 3;
    public const int IDB_GMK_B_WALL1_MDL_GMK_B_WALL1_V_ZNO = 4;
    public const int IDB_GMK_B_WALL1_MDL_GMK_B_WALL1_F_V_ZNO = 5;
    public const int IDB_GMK_B_WALL1_MDL_GMK_B_WALL1_H_ZNO = 6;
    public const int IDB_GMK_B_WALL1_MDL_GMK_B_WALL1_V_P01_ZNO = 7;
    public const int IDB_GMK_B_WALL1_MDL_GMK_B_WALL1_V_P02_ZNO = 8;
    public const int IDB_GMK_B_WALL1_MDL_GMK_B_WALL1_V_P03_ZNO = 9;
    public const int IDU0_GMK_B_WALL1_MDL_GMK_B_WALL1_L1_V_ZNO = 0;
    public const int IDU0_GMK_B_WALL1_MDL_GMK_B_WALL1_L2_V_ZNO = 0;
    public const int IDU0_GMK_B_WALL1_MDL_GMK_B_WALL1_R1_V_ZNO = 0;
    public const int IDU0_GMK_B_WALL1_MDL_GMK_B_WALL1_R2_V_ZNO = 0;
    public const int IDU0_GMK_B_WALL1_MDL_GMK_B_WALL1_V_ZNO = 0;
    public const int IDU0_GMK_B_WALL1_MDL_GMK_B_WALL1_F_V_ZNO = 0;
    public const int IDU0_GMK_B_WALL1_MDL_GMK_B_WALL1_H_ZNO = 0;
    public const int IDU0_GMK_B_WALL1_MDL_GMK_B_WALL1_V_P01_ZNO = 0;
    public const int IDU0_GMK_B_WALL1_MDL_GMK_B_WALL1_V_P02_ZNO = 0;
    public const int IDU0_GMK_B_WALL1_MDL_GMK_B_WALL1_V_P03_ZNO = 0;
    public const int IDU1_GMK_B_WALL1_MDL_GMK_B_WALL1_L1_V_ZNO = 0;
    public const int IDU1_GMK_B_WALL1_MDL_GMK_B_WALL1_L2_V_ZNO = 0;
    public const int IDU1_GMK_B_WALL1_MDL_GMK_B_WALL1_R1_V_ZNO = 0;
    public const int IDU1_GMK_B_WALL1_MDL_GMK_B_WALL1_R2_V_ZNO = 0;
    public const int IDU1_GMK_B_WALL1_MDL_GMK_B_WALL1_V_ZNO = 0;
    public const int IDU1_GMK_B_WALL1_MDL_GMK_B_WALL1_F_V_ZNO = 0;
    public const int IDU1_GMK_B_WALL1_MDL_GMK_B_WALL1_H_ZNO = 0;
    public const int IDU1_GMK_B_WALL1_MDL_GMK_B_WALL1_V_P01_ZNO = 0;
    public const int IDU1_GMK_B_WALL1_MDL_GMK_B_WALL1_V_P02_ZNO = 0;
    public const int IDU1_GMK_B_WALL1_MDL_GMK_B_WALL1_V_P03_ZNO = 0;
    public const string IDS_GMK_B_WALL1_MDL_GMK_B_WALL1_L1_V_ZNO = "GMK_B_WALL1_L1_V.ZNO";
    public const string IDS_GMK_B_WALL1_MDL_GMK_B_WALL1_L2_V_ZNO = "GMK_B_WALL1_L2_V.ZNO";
    public const string IDS_GMK_B_WALL1_MDL_GMK_B_WALL1_R1_V_ZNO = "GMK_B_WALL1_R1_V.ZNO";
    public const string IDS_GMK_B_WALL1_MDL_GMK_B_WALL1_R2_V_ZNO = "GMK_B_WALL1_R2_V.ZNO";
    public const string IDS_GMK_B_WALL1_MDL_GMK_B_WALL1_V_ZNO = "GMK_B_WALL1_V.ZNO";
    public const string IDS_GMK_B_WALL1_MDL_GMK_B_WALL1_F_V_ZNO = "GMK_B_WALL1_F_V.ZNO";
    public const string IDS_GMK_B_WALL1_MDL_GMK_B_WALL1_H_ZNO = "GMK_B_WALL1_H.ZNO";
    public const string IDS_GMK_B_WALL1_MDL_GMK_B_WALL1_V_P01_ZNO = "GMK_B_WALL1_V_P01.ZNO";
    public const string IDS_GMK_B_WALL1_MDL_GMK_B_WALL1_V_P02_ZNO = "GMK_B_WALL1_V_P02.ZNO";
    public const string IDS_GMK_B_WALL1_MDL_GMK_B_WALL1_V_P03_ZNO = "GMK_B_WALL1_V_P03.ZNO";
    public const int IDB_GMK_B_WALL2_MDL_GMK_B_WALL2_H_ZNO = 0;
    public const int IDB_GMK_B_WALL2_MDL_GMK_B_WALL2_V_ZNO = 1;
    public const int IDB_GMK_B_WALL2_MDL_GMK_B_WALL2_P00_ZNO = 2;
    public const int IDB_GMK_B_WALL2_MDL_GMK_B_WALL2_P01_ZNO = 3;
    public const int IDB_GMK_B_WALL2_MDL_GMK_B_WALL2_P02_ZNO = 4;
    public const int IDU0_GMK_B_WALL2_MDL_GMK_B_WALL2_H_ZNO = 0;
    public const int IDU0_GMK_B_WALL2_MDL_GMK_B_WALL2_V_ZNO = 0;
    public const int IDU0_GMK_B_WALL2_MDL_GMK_B_WALL2_P00_ZNO = 0;
    public const int IDU0_GMK_B_WALL2_MDL_GMK_B_WALL2_P01_ZNO = 0;
    public const int IDU0_GMK_B_WALL2_MDL_GMK_B_WALL2_P02_ZNO = 0;
    public const int IDU1_GMK_B_WALL2_MDL_GMK_B_WALL2_H_ZNO = 0;
    public const int IDU1_GMK_B_WALL2_MDL_GMK_B_WALL2_V_ZNO = 0;
    public const int IDU1_GMK_B_WALL2_MDL_GMK_B_WALL2_P00_ZNO = 0;
    public const int IDU1_GMK_B_WALL2_MDL_GMK_B_WALL2_P01_ZNO = 0;
    public const int IDU1_GMK_B_WALL2_MDL_GMK_B_WALL2_P02_ZNO = 0;
    public const string IDS_GMK_B_WALL2_MDL_GMK_B_WALL2_H_ZNO = "GMK_B_WALL2_H.ZNO";
    public const string IDS_GMK_B_WALL2_MDL_GMK_B_WALL2_V_ZNO = "GMK_B_WALL2_V.ZNO";
    public const string IDS_GMK_B_WALL2_MDL_GMK_B_WALL2_P00_ZNO = "GMK_B_WALL2_P00.ZNO";
    public const string IDS_GMK_B_WALL2_MDL_GMK_B_WALL2_P01_ZNO = "GMK_B_WALL2_P01.ZNO";
    public const string IDS_GMK_B_WALL2_MDL_GMK_B_WALL2_P02_ZNO = "GMK_B_WALL2_P02.ZNO";
    public const int IDB_GMK_B_WALL3_MDL_GMK_B_WALL_3_ZNO = 0;
    public const int IDB_GMK_B_WALL3_MDL_GMK_B_WALL_3_P1_ZNO = 1;
    public const int IDB_GMK_B_WALL3_MDL_GMK_B_WALL_3_P2_ZNO = 2;
    public const int IDB_GMK_B_WALL3_MDL_GMK_B_WALL_3_P3_ZNO = 3;
    public const int IDU0_GMK_B_WALL3_MDL_GMK_B_WALL_3_ZNO = 0;
    public const int IDU0_GMK_B_WALL3_MDL_GMK_B_WALL_3_P1_ZNO = 0;
    public const int IDU0_GMK_B_WALL3_MDL_GMK_B_WALL_3_P2_ZNO = 0;
    public const int IDU0_GMK_B_WALL3_MDL_GMK_B_WALL_3_P3_ZNO = 0;
    public const int IDU1_GMK_B_WALL3_MDL_GMK_B_WALL_3_ZNO = 0;
    public const int IDU1_GMK_B_WALL3_MDL_GMK_B_WALL_3_P1_ZNO = 0;
    public const int IDU1_GMK_B_WALL3_MDL_GMK_B_WALL_3_P2_ZNO = 0;
    public const int IDU1_GMK_B_WALL3_MDL_GMK_B_WALL_3_P3_ZNO = 0;
    public const string IDS_GMK_B_WALL3_MDL_GMK_B_WALL_3_ZNO = "GMK_B_WALL_3.ZNO";
    public const string IDS_GMK_B_WALL3_MDL_GMK_B_WALL_3_P1_ZNO = "GMK_B_WALL_3_P1.ZNO";
    public const string IDS_GMK_B_WALL3_MDL_GMK_B_WALL_3_P2_ZNO = "GMK_B_WALL_3_P2.ZNO";
    public const string IDS_GMK_B_WALL3_MDL_GMK_B_WALL_3_P3_ZNO = "GMK_B_WALL_3_P3.ZNO";
    public const int IDB_GMK_B_WALL4_MDL_GMK_B_WALL4_H_ZNO = 0;
    public const int IDB_GMK_B_WALL4_MDL_GMK_B_WALL4_V_ZNO = 1;
    public const int IDB_GMK_B_WALL4_MDL_GMK_B_WALL4_P01_ZNO = 2;
    public const int IDB_GMK_B_WALL4_MDL_GMK_B_WALL4_P02_ZNO = 3;
    public const int IDB_GMK_B_WALL4_MDL_GMK_B_WALL4_P03_ZNO = 4;
    public const int IDB_GMK_B_WALL4_MDL_GMK_B_WALL4_P04_ZNO = 5;
    public const int IDU0_GMK_B_WALL4_MDL_GMK_B_WALL4_H_ZNO = 0;
    public const int IDU0_GMK_B_WALL4_MDL_GMK_B_WALL4_V_ZNO = 0;
    public const int IDU0_GMK_B_WALL4_MDL_GMK_B_WALL4_P01_ZNO = 0;
    public const int IDU0_GMK_B_WALL4_MDL_GMK_B_WALL4_P02_ZNO = 0;
    public const int IDU0_GMK_B_WALL4_MDL_GMK_B_WALL4_P03_ZNO = 0;
    public const int IDU0_GMK_B_WALL4_MDL_GMK_B_WALL4_P04_ZNO = 0;
    public const int IDU1_GMK_B_WALL4_MDL_GMK_B_WALL4_H_ZNO = 0;
    public const int IDU1_GMK_B_WALL4_MDL_GMK_B_WALL4_V_ZNO = 0;
    public const int IDU1_GMK_B_WALL4_MDL_GMK_B_WALL4_P01_ZNO = 0;
    public const int IDU1_GMK_B_WALL4_MDL_GMK_B_WALL4_P02_ZNO = 0;
    public const int IDU1_GMK_B_WALL4_MDL_GMK_B_WALL4_P03_ZNO = 0;
    public const int IDU1_GMK_B_WALL4_MDL_GMK_B_WALL4_P04_ZNO = 0;
    public const string IDS_GMK_B_WALL4_MDL_GMK_B_WALL4_H_ZNO = "GMK_B_WALL4_H.ZNO";
    public const string IDS_GMK_B_WALL4_MDL_GMK_B_WALL4_V_ZNO = "GMK_B_WALL4_V.ZNO";
    public const string IDS_GMK_B_WALL4_MDL_GMK_B_WALL4_P01_ZNO = "GMK_B_WALL4_P01.ZNO";
    public const string IDS_GMK_B_WALL4_MDL_GMK_B_WALL4_P02_ZNO = "GMK_B_WALL4_P02.ZNO";
    public const string IDS_GMK_B_WALL4_MDL_GMK_B_WALL4_P03_ZNO = "GMK_B_WALL4_P03.ZNO";
    public const string IDS_GMK_B_WALL4_MDL_GMK_B_WALL4_P04_ZNO = "GMK_B_WALL4_P04.ZNO";
    public const int IDB_GMK_CANNON_MDL_GMK_CANNON_ZNO = 0;
    public const int IDB_GMK_CANNON_MDL_GMK_CANNON_BASE_ZNO = 1;
    public const int IDU0_GMK_CANNON_MDL_GMK_CANNON_ZNO = 0;
    public const int IDU0_GMK_CANNON_MDL_GMK_CANNON_BASE_ZNO = 0;
    public const int IDU1_GMK_CANNON_MDL_GMK_CANNON_ZNO = 0;
    public const int IDU1_GMK_CANNON_MDL_GMK_CANNON_BASE_ZNO = 0;
    public const string IDS_GMK_CANNON_MDL_GMK_CANNON_ZNO = "GMK_CANNON.ZNO";
    public const string IDS_GMK_CANNON_MDL_GMK_CANNON_BASE_ZNO = "GMK_CANNON_BASE.ZNO";
    public const int IDB_GMK_CAPSULE_MDL_GMK_CAPSULE_ZNO = 0;
    public const int IDB_GMK_CAPSULE_MDL_GMK_CAPSULE_KEY_ZNO = 1;
    public const int IDB_GMK_CAPSULE_MDL_GMK_CAPSULE_SWITCH_ZNO = 2;
    public const int IDU0_GMK_CAPSULE_MDL_GMK_CAPSULE_ZNO = 0;
    public const int IDU0_GMK_CAPSULE_MDL_GMK_CAPSULE_KEY_ZNO = 0;
    public const int IDU0_GMK_CAPSULE_MDL_GMK_CAPSULE_SWITCH_ZNO = 0;
    public const int IDU1_GMK_CAPSULE_MDL_GMK_CAPSULE_ZNO = 0;
    public const int IDU1_GMK_CAPSULE_MDL_GMK_CAPSULE_KEY_ZNO = 0;
    public const int IDU1_GMK_CAPSULE_MDL_GMK_CAPSULE_SWITCH_ZNO = 0;
    public const string IDS_GMK_CAPSULE_MDL_GMK_CAPSULE_ZNO = "GMK_CAPSULE.ZNO";
    public const string IDS_GMK_CAPSULE_MDL_GMK_CAPSULE_KEY_ZNO = "GMK_CAPSULE_KEY.ZNO";
    public const string IDS_GMK_CAPSULE_MDL_GMK_CAPSULE_SWITCH_ZNO = "GMK_CAPSULE_SWITCH.ZNO";
    public const int IDB_GMK_CAPSULE_MTN_GMK_CAPSULE_ZNM = 0;
    public const int IDB_GMK_CAPSULE_MTN_GMK_CAPSULE_RUN_ZNM = 1;
    public const int IDU0_GMK_CAPSULE_MTN_GMK_CAPSULE_ZNM = 0;
    public const int IDU0_GMK_CAPSULE_MTN_GMK_CAPSULE_RUN_ZNM = 0;
    public const int IDU1_GMK_CAPSULE_MTN_GMK_CAPSULE_ZNM = 0;
    public const int IDU1_GMK_CAPSULE_MTN_GMK_CAPSULE_RUN_ZNM = 0;
    public const string IDS_GMK_CAPSULE_MTN_GMK_CAPSULE_ZNM = "GMK_CAPSULE.ZNM";
    public const string IDS_GMK_CAPSULE_MTN_GMK_CAPSULE_RUN_ZNM = "GMK_CAPSULE_RUN.ZNM";
    public const int IDB_GMK_DASH_P_MAT_GMK_DASH_P_ZNV = 0;
    public const int IDU0_GMK_DASH_P_MAT_GMK_DASH_P_ZNV = 0;
    public const int IDU1_GMK_DASH_P_MAT_GMK_DASH_P_ZNV = 0;
    public const string IDS_GMK_DASH_P_MAT_GMK_DASH_P_ZNV = "GMK_DASH_P.ZNV";
    public const int IDB_GMK_DASH_P_MDL_GMK_DASH_P_ZNO = 0;
    public const int IDU0_GMK_DASH_P_MDL_GMK_DASH_P_ZNO = 0;
    public const int IDU1_GMK_DASH_P_MDL_GMK_DASH_P_ZNO = 0;
    public const string IDS_GMK_DASH_P_MDL_GMK_DASH_P_ZNO = "GMK_DASH_P.ZNO";
    public const int IDB_GMK_DASH_P_MTN_GMK_DASH_P_ZNM = 0;
    public const int IDU0_GMK_DASH_P_MTN_GMK_DASH_P_ZNM = 0;
    public const int IDU1_GMK_DASH_P_MTN_GMK_DASH_P_ZNM = 0;
    public const string IDS_GMK_DASH_P_MTN_GMK_DASH_P_ZNM = "GMK_DASH_P.ZNM";
    public const int IDB_GMK_DSIGN_MDL_GMK_D_SIGN_ZNO = 0;
    public const int IDU0_GMK_DSIGN_MDL_GMK_D_SIGN_ZNO = 0;
    public const int IDU1_GMK_DSIGN_MDL_GMK_D_SIGN_ZNO = 0;
    public const string IDS_GMK_DSIGN_MDL_GMK_D_SIGN_ZNO = "GMK_D_SIGN.ZNO";
    public const int IDB_GMK_D_TANK_MAT_GMK_D_TANK_SP_ZNV = 0;
    public const int IDU0_GMK_D_TANK_MAT_GMK_D_TANK_SP_ZNV = 0;
    public const int IDU1_GMK_D_TANK_MAT_GMK_D_TANK_SP_ZNV = 0;
    public const string IDS_GMK_D_TANK_MAT_GMK_D_TANK_SP_ZNV = "GMK_D_TANK_SP.ZNV";
    public const int IDB_GMK_D_TANK_MDL_GMK_D_TANK_A_ZNO = 0;
    public const int IDB_GMK_D_TANK_MDL_GMK_D_TANK_B_ZNO = 1;
    public const int IDB_GMK_D_TANK_MDL_GMK_D_TANK_SP_ZNO = 2;
    public const int IDU0_GMK_D_TANK_MDL_GMK_D_TANK_A_ZNO = 0;
    public const int IDU0_GMK_D_TANK_MDL_GMK_D_TANK_B_ZNO = 0;
    public const int IDU0_GMK_D_TANK_MDL_GMK_D_TANK_SP_ZNO = 0;
    public const int IDU1_GMK_D_TANK_MDL_GMK_D_TANK_A_ZNO = 0;
    public const int IDU1_GMK_D_TANK_MDL_GMK_D_TANK_B_ZNO = 0;
    public const int IDU1_GMK_D_TANK_MDL_GMK_D_TANK_SP_ZNO = 0;
    public const string IDS_GMK_D_TANK_MDL_GMK_D_TANK_A_ZNO = "GMK_D_TANK_A.ZNO";
    public const string IDS_GMK_D_TANK_MDL_GMK_D_TANK_B_ZNO = "GMK_D_TANK_B.ZNO";
    public const string IDS_GMK_D_TANK_MDL_GMK_D_TANK_SP_ZNO = "GMK_D_TANK_SP.ZNO";
    public const int IDB_GMK_FLIPPER_MAT_GMK_FLIPPER_ZNV = 0;
    public const int IDB_GMK_FLIPPER_MAT_GMK_FLIPPER_TT_ZNV = 1;
    public const int IDU0_GMK_FLIPPER_MAT_GMK_FLIPPER_ZNV = 0;
    public const int IDU0_GMK_FLIPPER_MAT_GMK_FLIPPER_TT_ZNV = 0;
    public const int IDU1_GMK_FLIPPER_MAT_GMK_FLIPPER_ZNV = 0;
    public const int IDU1_GMK_FLIPPER_MAT_GMK_FLIPPER_TT_ZNV = 0;
    public const string IDS_GMK_FLIPPER_MAT_GMK_FLIPPER_ZNV = "GMK_FLIPPER.ZNV";
    public const string IDS_GMK_FLIPPER_MAT_GMK_FLIPPER_TT_ZNV = "GMK_FLIPPER_TT.ZNV";
    public const int IDB_GMK_FLIPPER_MDL_GMK_FLIPPER_ZNO = 0;
    public const int IDB_GMK_FLIPPER_MDL_GMK_FLIPPER_TT_ZNO = 1;
    public const int IDB_GMK_FLIPPER_MDL_GMK_FLIPPER_GRE_ZNO = 2;
    public const int IDB_GMK_FLIPPER_MDL_GMK_FLIPPER_GRE_ORE_ZNO = 3;
    public const int IDU0_GMK_FLIPPER_MDL_GMK_FLIPPER_ZNO = 0;
    public const int IDU0_GMK_FLIPPER_MDL_GMK_FLIPPER_TT_ZNO = 0;
    public const int IDU0_GMK_FLIPPER_MDL_GMK_FLIPPER_GRE_ZNO = 0;
    public const int IDU0_GMK_FLIPPER_MDL_GMK_FLIPPER_GRE_ORE_ZNO = 0;
    public const int IDU1_GMK_FLIPPER_MDL_GMK_FLIPPER_ZNO = 0;
    public const int IDU1_GMK_FLIPPER_MDL_GMK_FLIPPER_TT_ZNO = 0;
    public const int IDU1_GMK_FLIPPER_MDL_GMK_FLIPPER_GRE_ZNO = 0;
    public const int IDU1_GMK_FLIPPER_MDL_GMK_FLIPPER_GRE_ORE_ZNO = 0;
    public const string IDS_GMK_FLIPPER_MDL_GMK_FLIPPER_ZNO = "GMK_FLIPPER.ZNO";
    public const string IDS_GMK_FLIPPER_MDL_GMK_FLIPPER_TT_ZNO = "GMK_FLIPPER_TT.ZNO";
    public const string IDS_GMK_FLIPPER_MDL_GMK_FLIPPER_GRE_ZNO = "GMK_FLIPPER_GRE.ZNO";
    public const string IDS_GMK_FLIPPER_MDL_GMK_FLIPPER_GRE_ORE_ZNO = "GMK_FLIPPER_GRE_ORE.ZNO";
    public const int IDB_GMK_GEAR2_MDL_GMK_GEAR2_ZNO = 0;
    public const int IDU0_GMK_GEAR2_MDL_GMK_GEAR2_ZNO = 0;
    public const int IDU1_GMK_GEAR2_MDL_GMK_GEAR2_ZNO = 0;
    public const string IDS_GMK_GEAR2_MDL_GMK_GEAR2_ZNO = "GMK_GEAR2.ZNO";
    public const int IDB_GMK_GEAR2_OPT_MDL_GMK_GEAR2_NEJI_ZNO = 0;
    public const int IDB_GMK_GEAR2_OPT_MDL_GMK_GEAR2_ASHIBA_ZNO = 1;
    public const int IDU0_GMK_GEAR2_OPT_MDL_GMK_GEAR2_NEJI_ZNO = 0;
    public const int IDU0_GMK_GEAR2_OPT_MDL_GMK_GEAR2_ASHIBA_ZNO = 0;
    public const int IDU1_GMK_GEAR2_OPT_MDL_GMK_GEAR2_NEJI_ZNO = 0;
    public const int IDU1_GMK_GEAR2_OPT_MDL_GMK_GEAR2_ASHIBA_ZNO = 0;
    public const string IDS_GMK_GEAR2_OPT_MDL_GMK_GEAR2_NEJI_ZNO = "GMK_GEAR2_NEJI.ZNO";
    public const string IDS_GMK_GEAR2_OPT_MDL_GMK_GEAR2_ASHIBA_ZNO = "GMK_GEAR2_ASHIBA.ZNO";
    public const int IDB_GMK_GEAR_MDL_GMK_GEAR_ZNO = 0;
    public const int IDU0_GMK_GEAR_MDL_GMK_GEAR_ZNO = 0;
    public const int IDU1_GMK_GEAR_MDL_GMK_GEAR_ZNO = 0;
    public const string IDS_GMK_GEAR_MDL_GMK_GEAR_ZNO = "GMK_GEAR.ZNO";
    public const int IDB_GMK_GOAL_PNL_MDL_GMK_GOAL_PNL_ZNO = 0;
    public const int IDU0_GMK_GOAL_PNL_MDL_GMK_GOAL_PNL_ZNO = 0;
    public const int IDU1_GMK_GOAL_PNL_MDL_GMK_GOAL_PNL_ZNO = 0;
    public const string IDS_GMK_GOAL_PNL_MDL_GMK_GOAL_PNL_ZNO = "GMK_GOAL_PNL.ZNO";
    public const int IDB_GMK_ITEM_MDL_GMK_ITEM_ZNO = 0;
    public const int IDB_GMK_ITEM_MDL_GMK_ITEM_BREAK_ZNO = 1;
    public const int IDB_GMK_ITEM_MDL_GMK_ITEM_I_ZNO = 2;
    public const int IDU0_GMK_ITEM_MDL_GMK_ITEM_ZNO = 0;
    public const int IDU0_GMK_ITEM_MDL_GMK_ITEM_BREAK_ZNO = 0;
    public const int IDU0_GMK_ITEM_MDL_GMK_ITEM_I_ZNO = 0;
    public const int IDU1_GMK_ITEM_MDL_GMK_ITEM_ZNO = 0;
    public const int IDU1_GMK_ITEM_MDL_GMK_ITEM_BREAK_ZNO = 0;
    public const int IDU1_GMK_ITEM_MDL_GMK_ITEM_I_ZNO = 0;
    public const string IDS_GMK_ITEM_MDL_GMK_ITEM_ZNO = "GMK_ITEM.ZNO";
    public const string IDS_GMK_ITEM_MDL_GMK_ITEM_BREAK_ZNO = "GMK_ITEM_BREAK.ZNO";
    public const string IDS_GMK_ITEM_MDL_GMK_ITEM_I_ZNO = "GMK_ITEM_I.ZNO";
    public const int IDB_GMK_LAND_1_MDL_GMK_LAND_1_ZNO = 0;
    public const int IDB_GMK_LAND_1_MDL_GMK_LAND_B_1_ZNO = 1;
    public const int IDU0_GMK_LAND_1_MDL_GMK_LAND_1_ZNO = 0;
    public const int IDU0_GMK_LAND_1_MDL_GMK_LAND_B_1_ZNO = 0;
    public const int IDU1_GMK_LAND_1_MDL_GMK_LAND_1_ZNO = 0;
    public const int IDU1_GMK_LAND_1_MDL_GMK_LAND_B_1_ZNO = 0;
    public const string IDS_GMK_LAND_1_MDL_GMK_LAND_1_ZNO = "GMK_LAND_1.ZNO";
    public const string IDS_GMK_LAND_1_MDL_GMK_LAND_B_1_ZNO = "GMK_LAND_B_1.ZNO";
    public const int IDB_GMK_LAND_2_MAT_GMK_LAND_2_ZNV = 0;
    public const int IDB_GMK_LAND_2_MAT_GMK_LAND_B_2_ZNV = 1;
    public const int IDB_GMK_LAND_2_MAT_GMK_LAND_R_2_ZNV = 2;
    public const int IDU0_GMK_LAND_2_MAT_GMK_LAND_2_ZNV = 0;
    public const int IDU0_GMK_LAND_2_MAT_GMK_LAND_B_2_ZNV = 0;
    public const int IDU0_GMK_LAND_2_MAT_GMK_LAND_R_2_ZNV = 0;
    public const int IDU1_GMK_LAND_2_MAT_GMK_LAND_2_ZNV = 0;
    public const int IDU1_GMK_LAND_2_MAT_GMK_LAND_B_2_ZNV = 0;
    public const int IDU1_GMK_LAND_2_MAT_GMK_LAND_R_2_ZNV = 0;
    public const string IDS_GMK_LAND_2_MAT_GMK_LAND_2_ZNV = "GMK_LAND_2.ZNV";
    public const string IDS_GMK_LAND_2_MAT_GMK_LAND_B_2_ZNV = "GMK_LAND_B_2.ZNV";
    public const string IDS_GMK_LAND_2_MAT_GMK_LAND_R_2_ZNV = "GMK_LAND_R_2.ZNV";
    public const int IDB_GMK_LAND_2_MDL_GMK_LAND_2_ZNO = 0;
    public const int IDB_GMK_LAND_2_MDL_GMK_LAND_B_2_ZNO = 1;
    public const int IDB_GMK_LAND_2_MDL_GMK_LAND_R_2_ZNO = 2;
    public const int IDU0_GMK_LAND_2_MDL_GMK_LAND_2_ZNO = 0;
    public const int IDU0_GMK_LAND_2_MDL_GMK_LAND_B_2_ZNO = 0;
    public const int IDU0_GMK_LAND_2_MDL_GMK_LAND_R_2_ZNO = 0;
    public const int IDU1_GMK_LAND_2_MDL_GMK_LAND_2_ZNO = 0;
    public const int IDU1_GMK_LAND_2_MDL_GMK_LAND_B_2_ZNO = 0;
    public const int IDU1_GMK_LAND_2_MDL_GMK_LAND_R_2_ZNO = 0;
    public const string IDS_GMK_LAND_2_MDL_GMK_LAND_2_ZNO = "GMK_LAND_2.ZNO";
    public const string IDS_GMK_LAND_2_MDL_GMK_LAND_B_2_ZNO = "GMK_LAND_B_2.ZNO";
    public const string IDS_GMK_LAND_2_MDL_GMK_LAND_R_2_ZNO = "GMK_LAND_R_2.ZNO";
    public const int IDB_GMK_LAND_2_MTN_GMK_LAND_2_ZNM = 0;
    public const int IDB_GMK_LAND_2_MTN_GMK_LAND_B_2_ZNM = 1;
    public const int IDB_GMK_LAND_2_MTN_GMK_LAND_R_2_ZNM = 2;
    public const int IDU0_GMK_LAND_2_MTN_GMK_LAND_2_ZNM = 0;
    public const int IDU0_GMK_LAND_2_MTN_GMK_LAND_B_2_ZNM = 0;
    public const int IDU0_GMK_LAND_2_MTN_GMK_LAND_R_2_ZNM = 0;
    public const int IDU1_GMK_LAND_2_MTN_GMK_LAND_2_ZNM = 0;
    public const int IDU1_GMK_LAND_2_MTN_GMK_LAND_B_2_ZNM = 0;
    public const int IDU1_GMK_LAND_2_MTN_GMK_LAND_R_2_ZNM = 0;
    public const string IDS_GMK_LAND_2_MTN_GMK_LAND_2_ZNM = "GMK_LAND_2.ZNM";
    public const string IDS_GMK_LAND_2_MTN_GMK_LAND_B_2_ZNM = "GMK_LAND_B_2.ZNM";
    public const string IDS_GMK_LAND_2_MTN_GMK_LAND_R_2_ZNM = "GMK_LAND_R_2.ZNM";
    public const int IDB_GMK_LAND_3_MAT_LAND_3_ROPE_ZNV = 0;
    public const int IDU0_GMK_LAND_3_MAT_LAND_3_ROPE_ZNV = 0;
    public const int IDU1_GMK_LAND_3_MAT_LAND_3_ROPE_ZNV = 0;
    public const string IDS_GMK_LAND_3_MAT_LAND_3_ROPE_ZNV = "LAND_3_ROPE.ZNV";
    public const int IDB_GMK_LAND_3_MDL_GMK_LAND_3_ZNO = 0;
    public const int IDB_GMK_LAND_3_MDL_GMK_LAND_R_3_ZNO = 1;
    public const int IDB_GMK_LAND_3_MDL_LAND_3_GEAR_ZNO = 2;
    public const int IDB_GMK_LAND_3_MDL_LAND_3_ROPE_ZNO = 3;
    public const int IDU0_GMK_LAND_3_MDL_GMK_LAND_3_ZNO = 0;
    public const int IDU0_GMK_LAND_3_MDL_GMK_LAND_R_3_ZNO = 0;
    public const int IDU0_GMK_LAND_3_MDL_LAND_3_GEAR_ZNO = 0;
    public const int IDU0_GMK_LAND_3_MDL_LAND_3_ROPE_ZNO = 0;
    public const int IDU1_GMK_LAND_3_MDL_GMK_LAND_3_ZNO = 0;
    public const int IDU1_GMK_LAND_3_MDL_GMK_LAND_R_3_ZNO = 0;
    public const int IDU1_GMK_LAND_3_MDL_LAND_3_GEAR_ZNO = 0;
    public const int IDU1_GMK_LAND_3_MDL_LAND_3_ROPE_ZNO = 0;
    public const string IDS_GMK_LAND_3_MDL_GMK_LAND_3_ZNO = "GMK_LAND_3.ZNO";
    public const string IDS_GMK_LAND_3_MDL_GMK_LAND_R_3_ZNO = "GMK_LAND_R_3.ZNO";
    public const string IDS_GMK_LAND_3_MDL_LAND_3_GEAR_ZNO = "LAND_3_GEAR.ZNO";
    public const string IDS_GMK_LAND_3_MDL_LAND_3_ROPE_ZNO = "LAND_3_ROPE.ZNO";
    public const int IDB_GMK_LAND_4_MDL_GMK_LAND_4_ZNO = 0;
    public const int IDB_GMK_LAND_4_MDL_GMK_LAND_B_4_ZNO = 1;
    public const int IDU0_GMK_LAND_4_MDL_GMK_LAND_4_ZNO = 0;
    public const int IDU0_GMK_LAND_4_MDL_GMK_LAND_B_4_ZNO = 0;
    public const int IDU1_GMK_LAND_4_MDL_GMK_LAND_4_ZNO = 0;
    public const int IDU1_GMK_LAND_4_MDL_GMK_LAND_B_4_ZNO = 0;
    public const string IDS_GMK_LAND_4_MDL_GMK_LAND_4_ZNO = "GMK_LAND_4.ZNO";
    public const string IDS_GMK_LAND_4_MDL_GMK_LAND_B_4_ZNO = "GMK_LAND_B_4.ZNO";
    public const int IDB_GMK_LAND_F_MAT_GMK_LAND_F_ZNV = 0;
    public const int IDU0_GMK_LAND_F_MAT_GMK_LAND_F_ZNV = 0;
    public const int IDU1_GMK_LAND_F_MAT_GMK_LAND_F_ZNV = 0;
    public const string IDS_GMK_LAND_F_MAT_GMK_LAND_F_ZNV = "GMK_LAND_F.ZNV";
    public const int IDB_GMK_LAND_F_MDL_GMK_LAND_F_ZNO = 0;
    public const int IDU0_GMK_LAND_F_MDL_GMK_LAND_F_ZNO = 0;
    public const int IDU1_GMK_LAND_F_MDL_GMK_LAND_F_ZNO = 0;
    public const string IDS_GMK_LAND_F_MDL_GMK_LAND_F_ZNO = "GMK_LAND_F.ZNO";
    public const int IDB_GMK_NEEDLE_MDL_GMK_NEEDLE_F_ZNO = 0;
    public const int IDB_GMK_NEEDLE_MDL_GMK_NEEDLE_B_ZNO = 1;
    public const int IDB_GMK_NEEDLE_MDL_GMK_NEEDLE_STAND_ZNO = 2;
    public const int IDU0_GMK_NEEDLE_MDL_GMK_NEEDLE_F_ZNO = 0;
    public const int IDU0_GMK_NEEDLE_MDL_GMK_NEEDLE_B_ZNO = 0;
    public const int IDU0_GMK_NEEDLE_MDL_GMK_NEEDLE_STAND_ZNO = 0;
    public const int IDU1_GMK_NEEDLE_MDL_GMK_NEEDLE_F_ZNO = 0;
    public const int IDU1_GMK_NEEDLE_MDL_GMK_NEEDLE_B_ZNO = 0;
    public const int IDU1_GMK_NEEDLE_MDL_GMK_NEEDLE_STAND_ZNO = 0;
    public const string IDS_GMK_NEEDLE_MDL_GMK_NEEDLE_F_ZNO = "GMK_NEEDLE_F.ZNO";
    public const string IDS_GMK_NEEDLE_MDL_GMK_NEEDLE_B_ZNO = "GMK_NEEDLE_B.ZNO";
    public const string IDS_GMK_NEEDLE_MDL_GMK_NEEDLE_STAND_ZNO = "GMK_NEEDLE_STAND.ZNO";
    public const int IDB_MODEL_GMK_NEEDLE_F_TVX = 0;
    public const int IDB_MODEL_GMK_NEEDLE_STAND_TVX = 1;
    public const int IDU0_MODEL_GMK_NEEDLE_F_TVX = 0;
    public const int IDU0_MODEL_GMK_NEEDLE_STAND_TVX = 0;
    public const int IDU1_MODEL_GMK_NEEDLE_F_TVX = 0;
    public const int IDU1_MODEL_GMK_NEEDLE_STAND_TVX = 0;
    public const string IDS_MODEL_GMK_NEEDLE_F_TVX = "GMK_NEEDLE_F.TVX";
    public const string IDS_MODEL_GMK_NEEDLE_STAND_TVX = "GMK_NEEDLE_STAND.TVX";
    public const int IDB_GMK_PISTON_MDL_GMK_PISTON_TOP_ZNO = 0;
    public const int IDB_GMK_PISTON_MDL_GMK_PISTON_POLE_ZNO = 1;
    public const int IDU0_GMK_PISTON_MDL_GMK_PISTON_TOP_ZNO = 0;
    public const int IDU0_GMK_PISTON_MDL_GMK_PISTON_POLE_ZNO = 0;
    public const int IDU1_GMK_PISTON_MDL_GMK_PISTON_TOP_ZNO = 0;
    public const int IDU1_GMK_PISTON_MDL_GMK_PISTON_POLE_ZNO = 0;
    public const string IDS_GMK_PISTON_MDL_GMK_PISTON_TOP_ZNO = "GMK_PISTON_TOP.ZNO";
    public const string IDS_GMK_PISTON_MDL_GMK_PISTON_POLE_ZNO = "GMK_PISTON_POLE.ZNO";
    public const int IDB_GMK_PRESSWALL4_MAT_GMK_P_WALL_G_4_INV = 0;
    public const int IDB_GMK_PRESSWALL4_MAT_GMK_P_WALL_4_INV = 1;
    public const int IDU0_GMK_PRESSWALL4_MAT_GMK_P_WALL_G_4_INV = 0;
    public const int IDU0_GMK_PRESSWALL4_MAT_GMK_P_WALL_4_INV = 0;
    public const int IDU1_GMK_PRESSWALL4_MAT_GMK_P_WALL_G_4_INV = 0;
    public const int IDU1_GMK_PRESSWALL4_MAT_GMK_P_WALL_4_INV = 0;
    public const string IDS_GMK_PRESSWALL4_MAT_GMK_P_WALL_G_4_INV = "GMK_P_WALL_G_4.INV";
    public const string IDS_GMK_PRESSWALL4_MAT_GMK_P_WALL_4_INV = "GMK_P_WALL_4.INV";
    public const int IDB_GMK_PRESSWALL4_MDL_GMK_P_WALL_4_INO = 0;
    public const int IDB_GMK_PRESSWALL4_MDL_GMK_P_WALL_A_4_INO = 1;
    public const int IDB_GMK_PRESSWALL4_MDL_GMK_P_WALL_B_4_INO = 2;
    public const int IDB_GMK_PRESSWALL4_MDL_GMK_P_WALL_G_4_INO = 3;
    public const int IDU0_GMK_PRESSWALL4_MDL_GMK_P_WALL_4_INO = 0;
    public const int IDU0_GMK_PRESSWALL4_MDL_GMK_P_WALL_A_4_INO = 0;
    public const int IDU0_GMK_PRESSWALL4_MDL_GMK_P_WALL_B_4_INO = 0;
    public const int IDU0_GMK_PRESSWALL4_MDL_GMK_P_WALL_G_4_INO = 0;
    public const int IDU1_GMK_PRESSWALL4_MDL_GMK_P_WALL_4_INO = 0;
    public const int IDU1_GMK_PRESSWALL4_MDL_GMK_P_WALL_A_4_INO = 0;
    public const int IDU1_GMK_PRESSWALL4_MDL_GMK_P_WALL_B_4_INO = 0;
    public const int IDU1_GMK_PRESSWALL4_MDL_GMK_P_WALL_G_4_INO = 0;
    public const string IDS_GMK_PRESSWALL4_MDL_GMK_P_WALL_4_INO = "GMK_P_WALL_4.INO";
    public const string IDS_GMK_PRESSWALL4_MDL_GMK_P_WALL_A_4_INO = "GMK_P_WALL_A_4.INO";
    public const string IDS_GMK_PRESSWALL4_MDL_GMK_P_WALL_B_4_INO = "GMK_P_WALL_B_4.INO";
    public const string IDS_GMK_PRESSWALL4_MDL_GMK_P_WALL_G_4_INO = "GMK_P_WALL_G_4.INO";
    public const int IDB_GMK_PRESSWALL_MDL_GMK_P_WALL_3_INO = 0;
    public const int IDB_GMK_PRESSWALL_MDL_GMK_P_RAIL_BTM_3_INO = 1;
    public const int IDB_GMK_PRESSWALL_MDL_GMK_P_RAIL_TOP_3_INO = 2;
    public const int IDU0_GMK_PRESSWALL_MDL_GMK_P_WALL_3_INO = 0;
    public const int IDU0_GMK_PRESSWALL_MDL_GMK_P_RAIL_BTM_3_INO = 0;
    public const int IDU0_GMK_PRESSWALL_MDL_GMK_P_RAIL_TOP_3_INO = 0;
    public const int IDU1_GMK_PRESSWALL_MDL_GMK_P_WALL_3_INO = 0;
    public const int IDU1_GMK_PRESSWALL_MDL_GMK_P_RAIL_BTM_3_INO = 0;
    public const int IDU1_GMK_PRESSWALL_MDL_GMK_P_RAIL_TOP_3_INO = 0;
    public const string IDS_GMK_PRESSWALL_MDL_GMK_P_WALL_3_INO = "GMK_P_WALL_3.INO";
    public const string IDS_GMK_PRESSWALL_MDL_GMK_P_RAIL_BTM_3_INO = "GMK_P_RAIL_BTM_3.INO";
    public const string IDS_GMK_PRESSWALL_MDL_GMK_P_RAIL_TOP_3_INO = "GMK_P_RAIL_TOP_3.INO";
    public const int IDB_GMK_PULLEY_MDL_GMK_PULLEY_ZNO = 0;
    public const int IDB_GMK_PULLEY_MDL_GMK_PULLEY_ROT_ZNO = 1;
    public const int IDB_GMK_PULLEY_MDL_GMK_PULLEY_L_ZNO = 2;
    public const int IDB_GMK_PULLEY_MDL_GMK_PULLEY_R_ZNO = 3;
    public const int IDB_GMK_PULLEY_MDL_GMK_PULLEY_ROPE_ZNO = 4;
    public const int IDB_GMK_PULLEY_MDL_GMK_PULLEY_ROPE_SL_ZNO = 5;
    public const int IDU0_GMK_PULLEY_MDL_GMK_PULLEY_ZNO = 0;
    public const int IDU0_GMK_PULLEY_MDL_GMK_PULLEY_ROT_ZNO = 0;
    public const int IDU0_GMK_PULLEY_MDL_GMK_PULLEY_L_ZNO = 0;
    public const int IDU0_GMK_PULLEY_MDL_GMK_PULLEY_R_ZNO = 0;
    public const int IDU0_GMK_PULLEY_MDL_GMK_PULLEY_ROPE_ZNO = 0;
    public const int IDU0_GMK_PULLEY_MDL_GMK_PULLEY_ROPE_SL_ZNO = 0;
    public const int IDU1_GMK_PULLEY_MDL_GMK_PULLEY_ZNO = 0;
    public const int IDU1_GMK_PULLEY_MDL_GMK_PULLEY_ROT_ZNO = 0;
    public const int IDU1_GMK_PULLEY_MDL_GMK_PULLEY_L_ZNO = 0;
    public const int IDU1_GMK_PULLEY_MDL_GMK_PULLEY_R_ZNO = 0;
    public const int IDU1_GMK_PULLEY_MDL_GMK_PULLEY_ROPE_ZNO = 0;
    public const int IDU1_GMK_PULLEY_MDL_GMK_PULLEY_ROPE_SL_ZNO = 0;
    public const string IDS_GMK_PULLEY_MDL_GMK_PULLEY_ZNO = "GMK_PULLEY.ZNO";
    public const string IDS_GMK_PULLEY_MDL_GMK_PULLEY_ROT_ZNO = "GMK_PULLEY_ROT.ZNO";
    public const string IDS_GMK_PULLEY_MDL_GMK_PULLEY_L_ZNO = "GMK_PULLEY_L.ZNO";
    public const string IDS_GMK_PULLEY_MDL_GMK_PULLEY_R_ZNO = "GMK_PULLEY_R.ZNO";
    public const string IDS_GMK_PULLEY_MDL_GMK_PULLEY_ROPE_ZNO = "GMK_PULLEY_ROPE.ZNO";
    public const string IDS_GMK_PULLEY_MDL_GMK_PULLEY_ROPE_SL_ZNO = "GMK_PULLEY_ROPE_SL.ZNO";
    public const int IDB_GMK_PULLEY_MTN_GMK_PULLEY_N_ZNM = 0;
    public const int IDB_GMK_PULLEY_MTN_GMK_PULLEY_F_ZNM = 1;
    public const int IDB_GMK_PULLEY_MTN_GMK_PULLEY_B_ZNM = 2;
    public const int IDB_GMK_PULLEY_MTN_GMK_PULLEY_ST_ZNM = 3;
    public const int IDB_GMK_PULLEY_MTN_GMK_PULLEY_ACT_ZNM = 4;
    public const int IDB_GMK_PULLEY_MTN_GMK_PULLEY_END_ZNM = 5;
    public const int IDU0_GMK_PULLEY_MTN_GMK_PULLEY_N_ZNM = 0;
    public const int IDU0_GMK_PULLEY_MTN_GMK_PULLEY_F_ZNM = 0;
    public const int IDU0_GMK_PULLEY_MTN_GMK_PULLEY_B_ZNM = 0;
    public const int IDU0_GMK_PULLEY_MTN_GMK_PULLEY_ST_ZNM = 0;
    public const int IDU0_GMK_PULLEY_MTN_GMK_PULLEY_ACT_ZNM = 0;
    public const int IDU0_GMK_PULLEY_MTN_GMK_PULLEY_END_ZNM = 0;
    public const int IDU1_GMK_PULLEY_MTN_GMK_PULLEY_N_ZNM = 0;
    public const int IDU1_GMK_PULLEY_MTN_GMK_PULLEY_F_ZNM = 0;
    public const int IDU1_GMK_PULLEY_MTN_GMK_PULLEY_B_ZNM = 0;
    public const int IDU1_GMK_PULLEY_MTN_GMK_PULLEY_ST_ZNM = 0;
    public const int IDU1_GMK_PULLEY_MTN_GMK_PULLEY_ACT_ZNM = 0;
    public const int IDU1_GMK_PULLEY_MTN_GMK_PULLEY_END_ZNM = 0;
    public const string IDS_GMK_PULLEY_MTN_GMK_PULLEY_N_ZNM = "GMK_PULLEY_N.ZNM";
    public const string IDS_GMK_PULLEY_MTN_GMK_PULLEY_F_ZNM = "GMK_PULLEY_F.ZNM";
    public const string IDS_GMK_PULLEY_MTN_GMK_PULLEY_B_ZNM = "GMK_PULLEY_B.ZNM";
    public const string IDS_GMK_PULLEY_MTN_GMK_PULLEY_ST_ZNM = "GMK_PULLEY_ST.ZNM";
    public const string IDS_GMK_PULLEY_MTN_GMK_PULLEY_ACT_ZNM = "GMK_PULLEY_ACT.ZNM";
    public const string IDS_GMK_PULLEY_MTN_GMK_PULLEY_END_ZNM = "GMK_PULLEY_END.ZNM";
    public const int IDB_GMK_P_MARKER_MAT_GMK_P_MARKER_TURN_ZNV = 0;
    public const int IDU0_GMK_P_MARKER_MAT_GMK_P_MARKER_TURN_ZNV = 0;
    public const int IDU1_GMK_P_MARKER_MAT_GMK_P_MARKER_TURN_ZNV = 0;
    public const string IDS_GMK_P_MARKER_MAT_GMK_P_MARKER_TURN_ZNV = "GMK_P_MARKER_TURN.ZNV";
    public const int IDB_GMK_P_MARKER_MDL_GMK_P_MARKER_ZNO = 0;
    public const int IDU0_GMK_P_MARKER_MDL_GMK_P_MARKER_ZNO = 0;
    public const int IDU1_GMK_P_MARKER_MDL_GMK_P_MARKER_ZNO = 0;
    public const string IDS_GMK_P_MARKER_MDL_GMK_P_MARKER_ZNO = "GMK_P_MARKER.ZNO";
    public const int IDB_GMK_P_MARKER_MTN_GMK_P_MARKER_ZNM = 0;
    public const int IDB_GMK_P_MARKER_MTN_GMK_P_MARKER_TURN_ZNM = 1;
    public const int IDU0_GMK_P_MARKER_MTN_GMK_P_MARKER_ZNM = 0;
    public const int IDU0_GMK_P_MARKER_MTN_GMK_P_MARKER_TURN_ZNM = 0;
    public const int IDU1_GMK_P_MARKER_MTN_GMK_P_MARKER_ZNM = 0;
    public const int IDU1_GMK_P_MARKER_MTN_GMK_P_MARKER_TURN_ZNM = 0;
    public const string IDS_GMK_P_MARKER_MTN_GMK_P_MARKER_ZNM = "GMK_P_MARKER.ZNM";
    public const string IDS_GMK_P_MARKER_MTN_GMK_P_MARKER_TURN_ZNM = "GMK_P_MARKER_TURN.ZNM";
    public const int IDB_GMK_P_PILLAR_MAT_GMK_P_PILLAR_BODY_ZNV = 0;
    public const int IDB_GMK_P_PILLAR_MAT_GMK_P_PILLAR_BODY_I_ZNV = 1;
    public const int IDU0_GMK_P_PILLAR_MAT_GMK_P_PILLAR_BODY_ZNV = 0;
    public const int IDU0_GMK_P_PILLAR_MAT_GMK_P_PILLAR_BODY_I_ZNV = 0;
    public const int IDU1_GMK_P_PILLAR_MAT_GMK_P_PILLAR_BODY_ZNV = 0;
    public const int IDU1_GMK_P_PILLAR_MAT_GMK_P_PILLAR_BODY_I_ZNV = 0;
    public const string IDS_GMK_P_PILLAR_MAT_GMK_P_PILLAR_BODY_ZNV = "GMK_P_PILLAR_BODY.ZNV";
    public const string IDS_GMK_P_PILLAR_MAT_GMK_P_PILLAR_BODY_I_ZNV = "GMK_P_PILLAR_BODY_I.ZNV";
    public const int IDB_GMK_P_PILLAR_MDL_GMK_P_PILLAR_BODY_ZNO = 0;
    public const int IDB_GMK_P_PILLAR_MDL_GMK_P_PILLAR_BODY_I_ZNO = 1;
    public const int IDB_GMK_P_PILLAR_MDL_GMK_P_PILLAR_TOP_ZNO = 2;
    public const int IDB_GMK_P_PILLAR_MDL_GMK_P_PILLAR_TOP_I_ZNO = 3;
    public const int IDB_GMK_P_PILLAR_MDL_GMK_P_PILLAR_SPRING_ZNO = 4;
    public const int IDU0_GMK_P_PILLAR_MDL_GMK_P_PILLAR_BODY_ZNO = 0;
    public const int IDU0_GMK_P_PILLAR_MDL_GMK_P_PILLAR_BODY_I_ZNO = 0;
    public const int IDU0_GMK_P_PILLAR_MDL_GMK_P_PILLAR_TOP_ZNO = 0;
    public const int IDU0_GMK_P_PILLAR_MDL_GMK_P_PILLAR_TOP_I_ZNO = 0;
    public const int IDU0_GMK_P_PILLAR_MDL_GMK_P_PILLAR_SPRING_ZNO = 0;
    public const int IDU1_GMK_P_PILLAR_MDL_GMK_P_PILLAR_BODY_ZNO = 0;
    public const int IDU1_GMK_P_PILLAR_MDL_GMK_P_PILLAR_BODY_I_ZNO = 0;
    public const int IDU1_GMK_P_PILLAR_MDL_GMK_P_PILLAR_TOP_ZNO = 0;
    public const int IDU1_GMK_P_PILLAR_MDL_GMK_P_PILLAR_TOP_I_ZNO = 0;
    public const int IDU1_GMK_P_PILLAR_MDL_GMK_P_PILLAR_SPRING_ZNO = 0;
    public const string IDS_GMK_P_PILLAR_MDL_GMK_P_PILLAR_BODY_ZNO = "GMK_P_PILLAR_BODY.ZNO";
    public const string IDS_GMK_P_PILLAR_MDL_GMK_P_PILLAR_BODY_I_ZNO = "GMK_P_PILLAR_BODY_I.ZNO";
    public const string IDS_GMK_P_PILLAR_MDL_GMK_P_PILLAR_TOP_ZNO = "GMK_P_PILLAR_TOP.ZNO";
    public const string IDS_GMK_P_PILLAR_MDL_GMK_P_PILLAR_TOP_I_ZNO = "GMK_P_PILLAR_TOP_I.ZNO";
    public const string IDS_GMK_P_PILLAR_MDL_GMK_P_PILLAR_SPRING_ZNO = "GMK_P_PILLAR_SPRING.ZNO";
    public const int IDB_GMK_P_STEAM_MDL_GMK_P_STEAM_ZNO = 0;
    public const int IDB_GMK_P_STEAM_MDL_GMK_P_STEAM_02_ZNO = 1;
    public const int IDB_GMK_P_STEAM_MDL_GMK_P_STEAM_03_ZNO = 2;
    public const int IDB_GMK_P_STEAM_MDL_GMK_P_STEAM_04_ZNO = 3;
    public const int IDB_GMK_P_STEAM_MDL_GMK_P_STEAM_05_ZNO = 4;
    public const int IDB_GMK_P_STEAM_MDL_GMK_P_STEAM_06_ZNO = 5;
    public const int IDB_GMK_P_STEAM_MDL_GMK_P_STEAM_07_ZNO = 6;
    public const int IDB_GMK_P_STEAM_MDL_GMK_P_STEAM_08_ZNO = 7;
    public const int IDB_GMK_P_STEAM_MDL_GMK_P_STEAM_PIPE_01_ZNO = 8;
    public const int IDB_GMK_P_STEAM_MDL_GMK_P_STEAM_PIPE_02_ZNO = 9;
    public const int IDB_GMK_P_STEAM_MDL_GMK_P_STEAM_PIPE_03_ZNO = 10;
    public const int IDB_GMK_P_STEAM_MDL_GMK_P_STEAM_PIPE_04_ZNO = 11;
    public const int IDB_GMK_P_STEAM_MDL_GMK_P_STEAM_RED_ZNO = 12;
    public const int IDU0_GMK_P_STEAM_MDL_GMK_P_STEAM_ZNO = 0;
    public const int IDU0_GMK_P_STEAM_MDL_GMK_P_STEAM_02_ZNO = 0;
    public const int IDU0_GMK_P_STEAM_MDL_GMK_P_STEAM_03_ZNO = 0;
    public const int IDU0_GMK_P_STEAM_MDL_GMK_P_STEAM_04_ZNO = 0;
    public const int IDU0_GMK_P_STEAM_MDL_GMK_P_STEAM_05_ZNO = 0;
    public const int IDU0_GMK_P_STEAM_MDL_GMK_P_STEAM_06_ZNO = 0;
    public const int IDU0_GMK_P_STEAM_MDL_GMK_P_STEAM_07_ZNO = 0;
    public const int IDU0_GMK_P_STEAM_MDL_GMK_P_STEAM_08_ZNO = 0;
    public const int IDU0_GMK_P_STEAM_MDL_GMK_P_STEAM_PIPE_01_ZNO = 0;
    public const int IDU0_GMK_P_STEAM_MDL_GMK_P_STEAM_PIPE_02_ZNO = 0;
    public const int IDU0_GMK_P_STEAM_MDL_GMK_P_STEAM_PIPE_03_ZNO = 0;
    public const int IDU0_GMK_P_STEAM_MDL_GMK_P_STEAM_PIPE_04_ZNO = 0;
    public const int IDU0_GMK_P_STEAM_MDL_GMK_P_STEAM_RED_ZNO = 0;
    public const int IDU1_GMK_P_STEAM_MDL_GMK_P_STEAM_ZNO = 0;
    public const int IDU1_GMK_P_STEAM_MDL_GMK_P_STEAM_02_ZNO = 0;
    public const int IDU1_GMK_P_STEAM_MDL_GMK_P_STEAM_03_ZNO = 0;
    public const int IDU1_GMK_P_STEAM_MDL_GMK_P_STEAM_04_ZNO = 0;
    public const int IDU1_GMK_P_STEAM_MDL_GMK_P_STEAM_05_ZNO = 0;
    public const int IDU1_GMK_P_STEAM_MDL_GMK_P_STEAM_06_ZNO = 0;
    public const int IDU1_GMK_P_STEAM_MDL_GMK_P_STEAM_07_ZNO = 0;
    public const int IDU1_GMK_P_STEAM_MDL_GMK_P_STEAM_08_ZNO = 0;
    public const int IDU1_GMK_P_STEAM_MDL_GMK_P_STEAM_PIPE_01_ZNO = 0;
    public const int IDU1_GMK_P_STEAM_MDL_GMK_P_STEAM_PIPE_02_ZNO = 0;
    public const int IDU1_GMK_P_STEAM_MDL_GMK_P_STEAM_PIPE_03_ZNO = 0;
    public const int IDU1_GMK_P_STEAM_MDL_GMK_P_STEAM_PIPE_04_ZNO = 0;
    public const int IDU1_GMK_P_STEAM_MDL_GMK_P_STEAM_RED_ZNO = 0;
    public const string IDS_GMK_P_STEAM_MDL_GMK_P_STEAM_ZNO = "GMK_P_STEAM.ZNO";
    public const string IDS_GMK_P_STEAM_MDL_GMK_P_STEAM_02_ZNO = "GMK_P_STEAM_02.ZNO";
    public const string IDS_GMK_P_STEAM_MDL_GMK_P_STEAM_03_ZNO = "GMK_P_STEAM_03.ZNO";
    public const string IDS_GMK_P_STEAM_MDL_GMK_P_STEAM_04_ZNO = "GMK_P_STEAM_04.ZNO";
    public const string IDS_GMK_P_STEAM_MDL_GMK_P_STEAM_05_ZNO = "GMK_P_STEAM_05.ZNO";
    public const string IDS_GMK_P_STEAM_MDL_GMK_P_STEAM_06_ZNO = "GMK_P_STEAM_06.ZNO";
    public const string IDS_GMK_P_STEAM_MDL_GMK_P_STEAM_07_ZNO = "GMK_P_STEAM_07.ZNO";
    public const string IDS_GMK_P_STEAM_MDL_GMK_P_STEAM_08_ZNO = "GMK_P_STEAM_08.ZNO";
    public const string IDS_GMK_P_STEAM_MDL_GMK_P_STEAM_PIPE_01_ZNO = "GMK_P_STEAM_PIPE_01.ZNO";
    public const string IDS_GMK_P_STEAM_MDL_GMK_P_STEAM_PIPE_02_ZNO = "GMK_P_STEAM_PIPE_02.ZNO";
    public const string IDS_GMK_P_STEAM_MDL_GMK_P_STEAM_PIPE_03_ZNO = "GMK_P_STEAM_PIPE_03.ZNO";
    public const string IDS_GMK_P_STEAM_MDL_GMK_P_STEAM_PIPE_04_ZNO = "GMK_P_STEAM_PIPE_04.ZNO";
    public const string IDS_GMK_P_STEAM_MDL_GMK_P_STEAM_RED_ZNO = "GMK_P_STEAM_RED.ZNO";
    public const int IDB_GMK_ROCK_MDL_GMK_ROCK_ZNO = 0;
    public const int IDB_GMK_ROCK_MDL_GMK_ROCK_HOOK_ZNO = 1;
    public const int IDU0_GMK_ROCK_MDL_GMK_ROCK_ZNO = 0;
    public const int IDU0_GMK_ROCK_MDL_GMK_ROCK_HOOK_ZNO = 0;
    public const int IDU1_GMK_ROCK_MDL_GMK_ROCK_ZNO = 0;
    public const int IDU1_GMK_ROCK_MDL_GMK_ROCK_HOOK_ZNO = 0;
    public const string IDS_GMK_ROCK_MDL_GMK_ROCK_ZNO = "GMK_ROCK.ZNO";
    public const string IDS_GMK_ROCK_MDL_GMK_ROCK_HOOK_ZNO = "GMK_ROCK_HOOK.ZNO";
    public const int IDB_GMK_ROCK_MTN_GMK_ROCK_HOOK_ZNM = 0;
    public const int IDB_GMK_ROCK_MTN_GMK_ROCK_HOOK_OPEN_ZNM = 1;
    public const int IDU0_GMK_ROCK_MTN_GMK_ROCK_HOOK_ZNM = 0;
    public const int IDU0_GMK_ROCK_MTN_GMK_ROCK_HOOK_OPEN_ZNM = 0;
    public const int IDU1_GMK_ROCK_MTN_GMK_ROCK_HOOK_ZNM = 0;
    public const int IDU1_GMK_ROCK_MTN_GMK_ROCK_HOOK_OPEN_ZNM = 0;
    public const string IDS_GMK_ROCK_MTN_GMK_ROCK_HOOK_ZNM = "GMK_ROCK_HOOK.ZNM";
    public const string IDS_GMK_ROCK_MTN_GMK_ROCK_HOOK_OPEN_ZNM = "GMK_ROCK_HOOK_OPEN.ZNM";
    public const int IDB_GMK_SEESAW_MDL_SEESAW_A_ZNO = 0;
    public const int IDB_GMK_SEESAW_MDL_SEESAW_B_ZNO = 1;
    public const int IDU0_GMK_SEESAW_MDL_SEESAW_A_ZNO = 0;
    public const int IDU0_GMK_SEESAW_MDL_SEESAW_B_ZNO = 0;
    public const int IDU1_GMK_SEESAW_MDL_SEESAW_A_ZNO = 0;
    public const int IDU1_GMK_SEESAW_MDL_SEESAW_B_ZNO = 0;
    public const string IDS_GMK_SEESAW_MDL_SEESAW_A_ZNO = "SEESAW_A.ZNO";
    public const string IDS_GMK_SEESAW_MDL_SEESAW_B_ZNO = "SEESAW_B.ZNO";
    public const int IDB_GMK_SHUTTER_F_MAT_GMK_SHUTTER_F_A_ZNV = 0;
    public const int IDB_GMK_SHUTTER_F_MAT_GMK_SHUTTER_F_G_ZNV = 1;
    public const int IDU0_GMK_SHUTTER_F_MAT_GMK_SHUTTER_F_A_ZNV = 0;
    public const int IDU0_GMK_SHUTTER_F_MAT_GMK_SHUTTER_F_G_ZNV = 0;
    public const int IDU1_GMK_SHUTTER_F_MAT_GMK_SHUTTER_F_A_ZNV = 0;
    public const int IDU1_GMK_SHUTTER_F_MAT_GMK_SHUTTER_F_G_ZNV = 0;
    public const string IDS_GMK_SHUTTER_F_MAT_GMK_SHUTTER_F_A_ZNV = "GMK_SHUTTER_F_A.ZNV";
    public const string IDS_GMK_SHUTTER_F_MAT_GMK_SHUTTER_F_G_ZNV = "GMK_SHUTTER_F_G.ZNV";
    public const int IDB_GMK_SHUTTER_F_MDL_GMK_SHUTTER_F_A_ZNO = 0;
    public const int IDB_GMK_SHUTTER_F_MDL_GMK_SHUTTER_F_B_ZNO = 1;
    public const int IDB_GMK_SHUTTER_F_MDL_GMK_SHUTTER_F_G_ZNO = 2;
    public const int IDU0_GMK_SHUTTER_F_MDL_GMK_SHUTTER_F_A_ZNO = 0;
    public const int IDU0_GMK_SHUTTER_F_MDL_GMK_SHUTTER_F_B_ZNO = 0;
    public const int IDU0_GMK_SHUTTER_F_MDL_GMK_SHUTTER_F_G_ZNO = 0;
    public const int IDU1_GMK_SHUTTER_F_MDL_GMK_SHUTTER_F_A_ZNO = 0;
    public const int IDU1_GMK_SHUTTER_F_MDL_GMK_SHUTTER_F_B_ZNO = 0;
    public const int IDU1_GMK_SHUTTER_F_MDL_GMK_SHUTTER_F_G_ZNO = 0;
    public const string IDS_GMK_SHUTTER_F_MDL_GMK_SHUTTER_F_A_ZNO = "GMK_SHUTTER_F_A.ZNO";
    public const string IDS_GMK_SHUTTER_F_MDL_GMK_SHUTTER_F_B_ZNO = "GMK_SHUTTER_F_B.ZNO";
    public const string IDS_GMK_SHUTTER_F_MDL_GMK_SHUTTER_F_G_ZNO = "GMK_SHUTTER_F_G.ZNO";
    public const int IDB_GMK_SHUTTER_MDL_GMK_SHUTTER_2_ZNO = 0;
    public const int IDU0_GMK_SHUTTER_MDL_GMK_SHUTTER_2_ZNO = 0;
    public const int IDU1_GMK_SHUTTER_MDL_GMK_SHUTTER_2_ZNO = 0;
    public const string IDS_GMK_SHUTTER_MDL_GMK_SHUTTER_2_ZNO = "GMK_SHUTTER_2.ZNO";
    public const int IDB_GMK_SLOT_MAT_GMK_SLOT_ZNV = 0;
    public const int IDU0_GMK_SLOT_MAT_GMK_SLOT_ZNV = 0;
    public const int IDU1_GMK_SLOT_MAT_GMK_SLOT_ZNV = 0;
    public const string IDS_GMK_SLOT_MAT_GMK_SLOT_ZNV = "GMK_SLOT.ZNV";
    public const int IDB_GMK_SLOT_MDL_GMK_SLOT_REEL_S_ZNO = 0;
    public const int IDB_GMK_SLOT_MDL_GMK_SLOT_REEL_L_ZNO = 1;
    public const int IDB_GMK_SLOT_MDL_GMK_SLOT_REEL_R_ZNO = 2;
    public const int IDB_GMK_SLOT_MDL_GMK_SLOT_ZNO = 3;
    public const int IDU0_GMK_SLOT_MDL_GMK_SLOT_REEL_S_ZNO = 0;
    public const int IDU0_GMK_SLOT_MDL_GMK_SLOT_REEL_L_ZNO = 0;
    public const int IDU0_GMK_SLOT_MDL_GMK_SLOT_REEL_R_ZNO = 0;
    public const int IDU0_GMK_SLOT_MDL_GMK_SLOT_ZNO = 0;
    public const int IDU1_GMK_SLOT_MDL_GMK_SLOT_REEL_S_ZNO = 0;
    public const int IDU1_GMK_SLOT_MDL_GMK_SLOT_REEL_L_ZNO = 0;
    public const int IDU1_GMK_SLOT_MDL_GMK_SLOT_REEL_R_ZNO = 0;
    public const int IDU1_GMK_SLOT_MDL_GMK_SLOT_ZNO = 0;
    public const string IDS_GMK_SLOT_MDL_GMK_SLOT_REEL_S_ZNO = "GMK_SLOT_REEL_S.ZNO";
    public const string IDS_GMK_SLOT_MDL_GMK_SLOT_REEL_L_ZNO = "GMK_SLOT_REEL_L.ZNO";
    public const string IDS_GMK_SLOT_MDL_GMK_SLOT_REEL_R_ZNO = "GMK_SLOT_REEL_R.ZNO";
    public const string IDS_GMK_SLOT_MDL_GMK_SLOT_ZNO = "GMK_SLOT.ZNO";
    public const int IDB_GMK_SPEAR_MDL_GMK_SPEAR_ZNO = 0;
    public const int IDB_GMK_SPEAR_MDL_GMK_SPEAR_BAR_ZNO = 1;
    public const int IDB_GMK_SPEAR_MDL_GMK_SPEAR_BASE_ZNO = 2;
    public const int IDU0_GMK_SPEAR_MDL_GMK_SPEAR_ZNO = 0;
    public const int IDU0_GMK_SPEAR_MDL_GMK_SPEAR_BAR_ZNO = 0;
    public const int IDU0_GMK_SPEAR_MDL_GMK_SPEAR_BASE_ZNO = 0;
    public const int IDU1_GMK_SPEAR_MDL_GMK_SPEAR_ZNO = 0;
    public const int IDU1_GMK_SPEAR_MDL_GMK_SPEAR_BAR_ZNO = 0;
    public const int IDU1_GMK_SPEAR_MDL_GMK_SPEAR_BASE_ZNO = 0;
    public const string IDS_GMK_SPEAR_MDL_GMK_SPEAR_ZNO = "GMK_SPEAR.ZNO";
    public const string IDS_GMK_SPEAR_MDL_GMK_SPEAR_BAR_ZNO = "GMK_SPEAR_BAR.ZNO";
    public const string IDS_GMK_SPEAR_MDL_GMK_SPEAR_BASE_ZNO = "GMK_SPEAR_BASE.ZNO";
    public const int IDB_GMK_SPRING_MDL_GMK_SPRING_ZNO = 0;
    public const int IDB_GMK_SPRING_MDL_GMK_SPRING_TILT_ZNO = 1;
    public const int IDB_GMK_SPRING_MDL_GMK_SPRING_TILT_L_ZNO = 2;
    public const int IDU0_GMK_SPRING_MDL_GMK_SPRING_ZNO = 0;
    public const int IDU0_GMK_SPRING_MDL_GMK_SPRING_TILT_ZNO = 0;
    public const int IDU0_GMK_SPRING_MDL_GMK_SPRING_TILT_L_ZNO = 0;
    public const int IDU1_GMK_SPRING_MDL_GMK_SPRING_ZNO = 0;
    public const int IDU1_GMK_SPRING_MDL_GMK_SPRING_TILT_ZNO = 0;
    public const int IDU1_GMK_SPRING_MDL_GMK_SPRING_TILT_L_ZNO = 0;
    public const string IDS_GMK_SPRING_MDL_GMK_SPRING_ZNO = "GMK_SPRING.ZNO";
    public const string IDS_GMK_SPRING_MDL_GMK_SPRING_TILT_ZNO = "GMK_SPRING_TILT.ZNO";
    public const string IDS_GMK_SPRING_MDL_GMK_SPRING_TILT_L_ZNO = "GMK_SPRING_TILT_L.ZNO";
    public const int IDB_GMK_SPRING_MTN_GMK_SPRING_ZNM = 0;
    public const int IDB_GMK_SPRING_MTN_GMK_SPRING_RUN_ZNM = 1;
    public const int IDB_GMK_SPRING_MTN_GMK_SPRING_TILT_ZNM = 2;
    public const int IDB_GMK_SPRING_MTN_GMK_SPRING_TILT_RUN_ZNM = 3;
    public const int IDU0_GMK_SPRING_MTN_GMK_SPRING_ZNM = 0;
    public const int IDU0_GMK_SPRING_MTN_GMK_SPRING_RUN_ZNM = 0;
    public const int IDU0_GMK_SPRING_MTN_GMK_SPRING_TILT_ZNM = 0;
    public const int IDU0_GMK_SPRING_MTN_GMK_SPRING_TILT_RUN_ZNM = 0;
    public const int IDU1_GMK_SPRING_MTN_GMK_SPRING_ZNM = 0;
    public const int IDU1_GMK_SPRING_MTN_GMK_SPRING_RUN_ZNM = 0;
    public const int IDU1_GMK_SPRING_MTN_GMK_SPRING_TILT_ZNM = 0;
    public const int IDU1_GMK_SPRING_MTN_GMK_SPRING_TILT_RUN_ZNM = 0;
    public const string IDS_GMK_SPRING_MTN_GMK_SPRING_ZNM = "GMK_SPRING.ZNM";
    public const string IDS_GMK_SPRING_MTN_GMK_SPRING_RUN_ZNM = "GMK_SPRING_RUN.ZNM";
    public const string IDS_GMK_SPRING_MTN_GMK_SPRING_TILT_ZNM = "GMK_SPRING_TILT.ZNM";
    public const string IDS_GMK_SPRING_MTN_GMK_SPRING_TILT_RUN_ZNM = "GMK_SPRING_TILT_RUN.ZNM";
    public const int IDB_GMK_SP_CTPLT_MAT_GMK_SP_CTPLT_SHRINK_ZNV = 0;
    public const int IDB_GMK_SP_CTPLT_MAT_GMK_SP_CTPLT_GROW_ZNV = 1;
    public const int IDU0_GMK_SP_CTPLT_MAT_GMK_SP_CTPLT_SHRINK_ZNV = 0;
    public const int IDU0_GMK_SP_CTPLT_MAT_GMK_SP_CTPLT_GROW_ZNV = 0;
    public const int IDU1_GMK_SP_CTPLT_MAT_GMK_SP_CTPLT_SHRINK_ZNV = 0;
    public const int IDU1_GMK_SP_CTPLT_MAT_GMK_SP_CTPLT_GROW_ZNV = 0;
    public const string IDS_GMK_SP_CTPLT_MAT_GMK_SP_CTPLT_SHRINK_ZNV = "GMK_SP_CTPLT_SHRINK.ZNV";
    public const string IDS_GMK_SP_CTPLT_MAT_GMK_SP_CTPLT_GROW_ZNV = "GMK_SP_CTPLT_GROW.ZNV";
    public const int IDB_GMK_SP_CTPLT_MDL_GMK_SP_CTPLT_FW_ZNO = 0;
    public const int IDU0_GMK_SP_CTPLT_MDL_GMK_SP_CTPLT_FW_ZNO = 0;
    public const int IDU1_GMK_SP_CTPLT_MDL_GMK_SP_CTPLT_FW_ZNO = 0;
    public const string IDS_GMK_SP_CTPLT_MDL_GMK_SP_CTPLT_FW_ZNO = "GMK_SP_CTPLT_FW.ZNO";
    public const int IDB_GMK_SP_CTPLT_MTN_GMK_SP_CTPLT_FW_ZNM = 0;
    public const int IDB_GMK_SP_CTPLT_MTN_GMK_SP_CTPLT_SHRINK_ZNM = 1;
    public const int IDB_GMK_SP_CTPLT_MTN_GMK_SP_CTPLT_RUN_ZNM = 2;
    public const int IDB_GMK_SP_CTPLT_MTN_GMK_SP_CTPLT_GROW_ZNM = 3;
    public const int IDU0_GMK_SP_CTPLT_MTN_GMK_SP_CTPLT_FW_ZNM = 0;
    public const int IDU0_GMK_SP_CTPLT_MTN_GMK_SP_CTPLT_SHRINK_ZNM = 0;
    public const int IDU0_GMK_SP_CTPLT_MTN_GMK_SP_CTPLT_RUN_ZNM = 0;
    public const int IDU0_GMK_SP_CTPLT_MTN_GMK_SP_CTPLT_GROW_ZNM = 0;
    public const int IDU1_GMK_SP_CTPLT_MTN_GMK_SP_CTPLT_FW_ZNM = 0;
    public const int IDU1_GMK_SP_CTPLT_MTN_GMK_SP_CTPLT_SHRINK_ZNM = 0;
    public const int IDU1_GMK_SP_CTPLT_MTN_GMK_SP_CTPLT_RUN_ZNM = 0;
    public const int IDU1_GMK_SP_CTPLT_MTN_GMK_SP_CTPLT_GROW_ZNM = 0;
    public const string IDS_GMK_SP_CTPLT_MTN_GMK_SP_CTPLT_FW_ZNM = "GMK_SP_CTPLT_FW.ZNM";
    public const string IDS_GMK_SP_CTPLT_MTN_GMK_SP_CTPLT_SHRINK_ZNM = "GMK_SP_CTPLT_SHRINK.ZNM";
    public const string IDS_GMK_SP_CTPLT_MTN_GMK_SP_CTPLT_RUN_ZNM = "GMK_SP_CTPLT_RUN.ZNM";
    public const string IDS_GMK_SP_CTPLT_MTN_GMK_SP_CTPLT_GROW_ZNM = "GMK_SP_CTPLT_GROW.ZNM";
    public const int IDB_GMK_SS_1UP_MDL_SS_1UP_ZNO = 0;
    public const int IDU0_GMK_SS_1UP_MDL_SS_1UP_ZNO = 0;
    public const int IDU1_GMK_SS_1UP_MDL_SS_1UP_ZNO = 0;
    public const string IDS_GMK_SS_1UP_MDL_SS_1UP_ZNO = "SS_1UP.ZNO";
    public const int IDB_GMK_SS_ARROW_MAT_SS_ARROW_ZNV = 0;
    public const int IDU0_GMK_SS_ARROW_MAT_SS_ARROW_ZNV = 0;
    public const int IDU1_GMK_SS_ARROW_MAT_SS_ARROW_ZNV = 0;
    public const string IDS_GMK_SS_ARROW_MAT_SS_ARROW_ZNV = "SS_ARROW.ZNV";
    public const int IDB_GMK_SS_ARROW_MDL_SS_ARROW_ZNO = 0;
    public const int IDU0_GMK_SS_ARROW_MDL_SS_ARROW_ZNO = 0;
    public const int IDU1_GMK_SS_ARROW_MDL_SS_ARROW_ZNO = 0;
    public const string IDS_GMK_SS_ARROW_MDL_SS_ARROW_ZNO = "SS_ARROW.ZNO";
    public const int IDB_GMK_SS_CIRCLE_MDL_SS_CIRCLE_ZNO = 0;
    public const int IDU0_GMK_SS_CIRCLE_MDL_SS_CIRCLE_ZNO = 0;
    public const int IDU1_GMK_SS_CIRCLE_MDL_SS_CIRCLE_ZNO = 0;
    public const string IDS_GMK_SS_CIRCLE_MDL_SS_CIRCLE_ZNO = "SS_CIRCLE.ZNO";
    public const int IDB_GMK_SS_CIRCLE_TVX_SS_CIRCLE_TVX = 0;
    public const int IDU0_GMK_SS_CIRCLE_TVX_SS_CIRCLE_TVX = 0;
    public const int IDU1_GMK_SS_CIRCLE_TVX_SS_CIRCLE_TVX = 0;
    public const string IDS_GMK_SS_CIRCLE_TVX_SS_CIRCLE_TVX = "SS_CIRCLE.TVX";
    public const int IDB_GMK_SS_EMERALD_MDL_SS_CAOS_RED_ZNO = 0;
    public const int IDB_GMK_SS_EMERALD_MDL_SS_CAOS_BLUE_ZNO = 1;
    public const int IDB_GMK_SS_EMERALD_MDL_SS_CAOS_YELLOW_ZNO = 2;
    public const int IDB_GMK_SS_EMERALD_MDL_SS_CAOS_GREEN_ZNO = 3;
    public const int IDB_GMK_SS_EMERALD_MDL_SS_CAOS_WHITE_ZNO = 4;
    public const int IDB_GMK_SS_EMERALD_MDL_SS_CAOS_CYAN_ZNO = 5;
    public const int IDB_GMK_SS_EMERALD_MDL_SS_CAOS_PINK_ZNO = 6;
    public const int IDU0_GMK_SS_EMERALD_MDL_SS_CAOS_RED_ZNO = 0;
    public const int IDU0_GMK_SS_EMERALD_MDL_SS_CAOS_BLUE_ZNO = 0;
    public const int IDU0_GMK_SS_EMERALD_MDL_SS_CAOS_YELLOW_ZNO = 0;
    public const int IDU0_GMK_SS_EMERALD_MDL_SS_CAOS_GREEN_ZNO = 0;
    public const int IDU0_GMK_SS_EMERALD_MDL_SS_CAOS_WHITE_ZNO = 0;
    public const int IDU0_GMK_SS_EMERALD_MDL_SS_CAOS_CYAN_ZNO = 0;
    public const int IDU0_GMK_SS_EMERALD_MDL_SS_CAOS_PINK_ZNO = 0;
    public const int IDU1_GMK_SS_EMERALD_MDL_SS_CAOS_RED_ZNO = 0;
    public const int IDU1_GMK_SS_EMERALD_MDL_SS_CAOS_BLUE_ZNO = 0;
    public const int IDU1_GMK_SS_EMERALD_MDL_SS_CAOS_YELLOW_ZNO = 0;
    public const int IDU1_GMK_SS_EMERALD_MDL_SS_CAOS_GREEN_ZNO = 0;
    public const int IDU1_GMK_SS_EMERALD_MDL_SS_CAOS_WHITE_ZNO = 0;
    public const int IDU1_GMK_SS_EMERALD_MDL_SS_CAOS_CYAN_ZNO = 0;
    public const int IDU1_GMK_SS_EMERALD_MDL_SS_CAOS_PINK_ZNO = 0;
    public const string IDS_GMK_SS_EMERALD_MDL_SS_CAOS_RED_ZNO = "SS_CAOS_RED.ZNO";
    public const string IDS_GMK_SS_EMERALD_MDL_SS_CAOS_BLUE_ZNO = "SS_CAOS_BLUE.ZNO";
    public const string IDS_GMK_SS_EMERALD_MDL_SS_CAOS_YELLOW_ZNO = "SS_CAOS_YELLOW.ZNO";
    public const string IDS_GMK_SS_EMERALD_MDL_SS_CAOS_GREEN_ZNO = "SS_CAOS_GREEN.ZNO";
    public const string IDS_GMK_SS_EMERALD_MDL_SS_CAOS_WHITE_ZNO = "SS_CAOS_WHITE.ZNO";
    public const string IDS_GMK_SS_EMERALD_MDL_SS_CAOS_CYAN_ZNO = "SS_CAOS_CYAN.ZNO";
    public const string IDS_GMK_SS_EMERALD_MDL_SS_CAOS_PINK_ZNO = "SS_CAOS_PINK.ZNO";
    public const int IDB_GMK_SS_EMERALD_MTN_SS_CAOS_RED_ZNM = 0;
    public const int IDB_GMK_SS_EMERALD_MTN_SS_CAOS_BLUE_ZNM = 1;
    public const int IDB_GMK_SS_EMERALD_MTN_SS_CAOS_YELLOW_ZNM = 2;
    public const int IDB_GMK_SS_EMERALD_MTN_SS_CAOS_GREEN_ZNM = 3;
    public const int IDB_GMK_SS_EMERALD_MTN_SS_CAOS_WHITE_ZNM = 4;
    public const int IDB_GMK_SS_EMERALD_MTN_SS_CAOS_CYAN_ZNM = 5;
    public const int IDB_GMK_SS_EMERALD_MTN_SS_CAOS_PINK_ZNM = 6;
    public const int IDU0_GMK_SS_EMERALD_MTN_SS_CAOS_RED_ZNM = 0;
    public const int IDU0_GMK_SS_EMERALD_MTN_SS_CAOS_BLUE_ZNM = 0;
    public const int IDU0_GMK_SS_EMERALD_MTN_SS_CAOS_YELLOW_ZNM = 0;
    public const int IDU0_GMK_SS_EMERALD_MTN_SS_CAOS_GREEN_ZNM = 0;
    public const int IDU0_GMK_SS_EMERALD_MTN_SS_CAOS_WHITE_ZNM = 0;
    public const int IDU0_GMK_SS_EMERALD_MTN_SS_CAOS_CYAN_ZNM = 0;
    public const int IDU0_GMK_SS_EMERALD_MTN_SS_CAOS_PINK_ZNM = 0;
    public const int IDU1_GMK_SS_EMERALD_MTN_SS_CAOS_RED_ZNM = 0;
    public const int IDU1_GMK_SS_EMERALD_MTN_SS_CAOS_BLUE_ZNM = 0;
    public const int IDU1_GMK_SS_EMERALD_MTN_SS_CAOS_YELLOW_ZNM = 0;
    public const int IDU1_GMK_SS_EMERALD_MTN_SS_CAOS_GREEN_ZNM = 0;
    public const int IDU1_GMK_SS_EMERALD_MTN_SS_CAOS_WHITE_ZNM = 0;
    public const int IDU1_GMK_SS_EMERALD_MTN_SS_CAOS_CYAN_ZNM = 0;
    public const int IDU1_GMK_SS_EMERALD_MTN_SS_CAOS_PINK_ZNM = 0;
    public const string IDS_GMK_SS_EMERALD_MTN_SS_CAOS_RED_ZNM = "SS_CAOS_RED.ZNM";
    public const string IDS_GMK_SS_EMERALD_MTN_SS_CAOS_BLUE_ZNM = "SS_CAOS_BLUE.ZNM";
    public const string IDS_GMK_SS_EMERALD_MTN_SS_CAOS_YELLOW_ZNM = "SS_CAOS_YELLOW.ZNM";
    public const string IDS_GMK_SS_EMERALD_MTN_SS_CAOS_GREEN_ZNM = "SS_CAOS_GREEN.ZNM";
    public const string IDS_GMK_SS_EMERALD_MTN_SS_CAOS_WHITE_ZNM = "SS_CAOS_WHITE.ZNM";
    public const string IDS_GMK_SS_EMERALD_MTN_SS_CAOS_CYAN_ZNM = "SS_CAOS_CYAN.ZNM";
    public const string IDS_GMK_SS_EMERALD_MTN_SS_CAOS_PINK_ZNM = "SS_CAOS_PINK.ZNM";
    public const int IDB_GMK_SS_ENDURANCE_MAT_SS_LASTING_ZNV = 0;
    public const int IDU0_GMK_SS_ENDURANCE_MAT_SS_LASTING_ZNV = 0;
    public const int IDU1_GMK_SS_ENDURANCE_MAT_SS_LASTING_ZNV = 0;
    public const string IDS_GMK_SS_ENDURANCE_MAT_SS_LASTING_ZNV = "SS_LASTING.ZNV";
    public const int IDB_GMK_SS_ENDURANCE_MDL_SS_LASTING_ZNO = 0;
    public const int IDU0_GMK_SS_ENDURANCE_MDL_SS_LASTING_ZNO = 0;
    public const int IDU1_GMK_SS_ENDURANCE_MDL_SS_LASTING_ZNO = 0;
    public const string IDS_GMK_SS_ENDURANCE_MDL_SS_LASTING_ZNO = "SS_LASTING.ZNO";
    public const int IDB_MODEL_SS_LASTING_TVX = 0;
    public const int IDU0_MODEL_SS_LASTING_TVX = 0;
    public const int IDU1_MODEL_SS_LASTING_TVX = 0;
    public const string IDS_MODEL_SS_LASTING_TVX = "SS_LASTING.TVX";
    public const int IDB_GMK_SS_GOAL_MDL_SS_GOAL_ZNO = 0;
    public const int IDU0_GMK_SS_GOAL_MDL_SS_GOAL_ZNO = 0;
    public const int IDU1_GMK_SS_GOAL_MDL_SS_GOAL_ZNO = 0;
    public const string IDS_GMK_SS_GOAL_MDL_SS_GOAL_ZNO = "SS_GOAL.ZNO";
    public const int IDB_GMK_SS_GOAL_TVX_SS_GOAL_TVX = 0;
    public const int IDU0_GMK_SS_GOAL_TVX_SS_GOAL_TVX = 0;
    public const int IDU1_GMK_SS_GOAL_TVX_SS_GOAL_TVX = 0;
    public const string IDS_GMK_SS_GOAL_TVX_SS_GOAL_TVX = "SS_GOAL.TVX";
    public const int IDB_GMK_SS_OBLONG_MAT_SS_OBLONG_ZNV = 0;
    public const int IDU0_GMK_SS_OBLONG_MAT_SS_OBLONG_ZNV = 0;
    public const int IDU1_GMK_SS_OBLONG_MAT_SS_OBLONG_ZNV = 0;
    public const string IDS_GMK_SS_OBLONG_MAT_SS_OBLONG_ZNV = "SS_OBLONG.ZNV";
    public const int IDB_GMK_SS_OBLONG_MDL_SS_OBLONG_ZNO = 0;
    public const int IDU0_GMK_SS_OBLONG_MDL_SS_OBLONG_ZNO = 0;
    public const int IDU1_GMK_SS_OBLONG_MDL_SS_OBLONG_ZNO = 0;
    public const string IDS_GMK_SS_OBLONG_MDL_SS_OBLONG_ZNO = "SS_OBLONG.ZNO";
    public const int IDB_MODEL_SS_OBLONG_TVX = 0;
    public const int IDU0_MODEL_SS_OBLONG_TVX = 0;
    public const int IDU1_MODEL_SS_OBLONG_TVX = 0;
    public const string IDS_MODEL_SS_OBLONG_TVX = "SS_OBLONG.TVX";
    public const int IDB_GMK_SS_RINGGATE_MAT_SS_GATE_ZNV = 0;
    public const int IDU0_GMK_SS_RINGGATE_MAT_SS_GATE_ZNV = 0;
    public const int IDU1_GMK_SS_RINGGATE_MAT_SS_GATE_ZNV = 0;
    public const string IDS_GMK_SS_RINGGATE_MAT_SS_GATE_ZNV = "SS_GATE.ZNV";
    public const int IDB_GMK_SS_RINGGATE_MDL_SS_GATE_ZNO = 0;
    public const int IDB_GMK_SS_RINGGATE_MDL_SS_GATE_MONO_ZNO = 1;
    public const int IDB_GMK_SS_RINGGATE_MDL_SS_GATE_0F_ZNO = 2;
    public const int IDB_GMK_SS_RINGGATE_MDL_SS_GATE_1F_ZNO = 3;
    public const int IDB_GMK_SS_RINGGATE_MDL_SS_GATE_2F_ZNO = 4;
    public const int IDB_GMK_SS_RINGGATE_MDL_SS_GATE_3F_ZNO = 5;
    public const int IDB_GMK_SS_RINGGATE_MDL_SS_GATE_4F_ZNO = 6;
    public const int IDB_GMK_SS_RINGGATE_MDL_SS_GATE_5F_ZNO = 7;
    public const int IDB_GMK_SS_RINGGATE_MDL_SS_GATE_6F_ZNO = 8;
    public const int IDB_GMK_SS_RINGGATE_MDL_SS_GATE_7F_ZNO = 9;
    public const int IDB_GMK_SS_RINGGATE_MDL_SS_GATE_8F_ZNO = 10;
    public const int IDB_GMK_SS_RINGGATE_MDL_SS_GATE_9F_ZNO = 11;
    public const int IDB_GMK_SS_RINGGATE_MDL_SS_GATE_R_ZNO = 12;
    public const int IDU0_GMK_SS_RINGGATE_MDL_SS_GATE_ZNO = 0;
    public const int IDU0_GMK_SS_RINGGATE_MDL_SS_GATE_MONO_ZNO = 0;
    public const int IDU0_GMK_SS_RINGGATE_MDL_SS_GATE_0F_ZNO = 0;
    public const int IDU0_GMK_SS_RINGGATE_MDL_SS_GATE_1F_ZNO = 0;
    public const int IDU0_GMK_SS_RINGGATE_MDL_SS_GATE_2F_ZNO = 0;
    public const int IDU0_GMK_SS_RINGGATE_MDL_SS_GATE_3F_ZNO = 0;
    public const int IDU0_GMK_SS_RINGGATE_MDL_SS_GATE_4F_ZNO = 0;
    public const int IDU0_GMK_SS_RINGGATE_MDL_SS_GATE_5F_ZNO = 0;
    public const int IDU0_GMK_SS_RINGGATE_MDL_SS_GATE_6F_ZNO = 0;
    public const int IDU0_GMK_SS_RINGGATE_MDL_SS_GATE_7F_ZNO = 0;
    public const int IDU0_GMK_SS_RINGGATE_MDL_SS_GATE_8F_ZNO = 0;
    public const int IDU0_GMK_SS_RINGGATE_MDL_SS_GATE_9F_ZNO = 0;
    public const int IDU0_GMK_SS_RINGGATE_MDL_SS_GATE_R_ZNO = 0;
    public const int IDU1_GMK_SS_RINGGATE_MDL_SS_GATE_ZNO = 0;
    public const int IDU1_GMK_SS_RINGGATE_MDL_SS_GATE_MONO_ZNO = 0;
    public const int IDU1_GMK_SS_RINGGATE_MDL_SS_GATE_0F_ZNO = 0;
    public const int IDU1_GMK_SS_RINGGATE_MDL_SS_GATE_1F_ZNO = 0;
    public const int IDU1_GMK_SS_RINGGATE_MDL_SS_GATE_2F_ZNO = 0;
    public const int IDU1_GMK_SS_RINGGATE_MDL_SS_GATE_3F_ZNO = 0;
    public const int IDU1_GMK_SS_RINGGATE_MDL_SS_GATE_4F_ZNO = 0;
    public const int IDU1_GMK_SS_RINGGATE_MDL_SS_GATE_5F_ZNO = 0;
    public const int IDU1_GMK_SS_RINGGATE_MDL_SS_GATE_6F_ZNO = 0;
    public const int IDU1_GMK_SS_RINGGATE_MDL_SS_GATE_7F_ZNO = 0;
    public const int IDU1_GMK_SS_RINGGATE_MDL_SS_GATE_8F_ZNO = 0;
    public const int IDU1_GMK_SS_RINGGATE_MDL_SS_GATE_9F_ZNO = 0;
    public const int IDU1_GMK_SS_RINGGATE_MDL_SS_GATE_R_ZNO = 0;
    public const string IDS_GMK_SS_RINGGATE_MDL_SS_GATE_ZNO = "SS_GATE.ZNO";
    public const string IDS_GMK_SS_RINGGATE_MDL_SS_GATE_MONO_ZNO = "SS_GATE_MONO.ZNO";
    public const string IDS_GMK_SS_RINGGATE_MDL_SS_GATE_0F_ZNO = "SS_GATE_0F.ZNO";
    public const string IDS_GMK_SS_RINGGATE_MDL_SS_GATE_1F_ZNO = "SS_GATE_1F.ZNO";
    public const string IDS_GMK_SS_RINGGATE_MDL_SS_GATE_2F_ZNO = "SS_GATE_2F.ZNO";
    public const string IDS_GMK_SS_RINGGATE_MDL_SS_GATE_3F_ZNO = "SS_GATE_3F.ZNO";
    public const string IDS_GMK_SS_RINGGATE_MDL_SS_GATE_4F_ZNO = "SS_GATE_4F.ZNO";
    public const string IDS_GMK_SS_RINGGATE_MDL_SS_GATE_5F_ZNO = "SS_GATE_5F.ZNO";
    public const string IDS_GMK_SS_RINGGATE_MDL_SS_GATE_6F_ZNO = "SS_GATE_6F.ZNO";
    public const string IDS_GMK_SS_RINGGATE_MDL_SS_GATE_7F_ZNO = "SS_GATE_7F.ZNO";
    public const string IDS_GMK_SS_RINGGATE_MDL_SS_GATE_8F_ZNO = "SS_GATE_8F.ZNO";
    public const string IDS_GMK_SS_RINGGATE_MDL_SS_GATE_9F_ZNO = "SS_GATE_9F.ZNO";
    public const string IDS_GMK_SS_RINGGATE_MDL_SS_GATE_R_ZNO = "SS_GATE_R.ZNO";
    public const int IDB_GMK_SS_RINGGATE_TVX_SS_GATE_TVX = 0;
    public const int IDU0_GMK_SS_RINGGATE_TVX_SS_GATE_TVX = 0;
    public const int IDU1_GMK_SS_RINGGATE_TVX_SS_GATE_TVX = 0;
    public const string IDS_GMK_SS_RINGGATE_TVX_SS_GATE_TVX = "SS_GATE.TVX";
    public const int IDB_GMK_SS_RING_MAT_GMK_SS_RING_INV = 0;
    public const int IDU0_GMK_SS_RING_MAT_GMK_SS_RING_INV = 0;
    public const int IDU1_GMK_SS_RING_MAT_GMK_SS_RING_INV = 0;
    public const string IDS_GMK_SS_RING_MAT_GMK_SS_RING_INV = "GMK_SS_RING.INV";
    public const int IDB_GMK_SS_RING_MDL_GMK_SS_RING_INO = 0;
    public const int IDU0_GMK_SS_RING_MDL_GMK_SS_RING_INO = 0;
    public const int IDU1_GMK_SS_RING_MDL_GMK_SS_RING_INO = 0;
    public const string IDS_GMK_SS_RING_MDL_GMK_SS_RING_INO = "GMK_SS_RING.INO";
    public const int IDB_GMK_SS_SQUARE_MAT_SS_SQUARE_ZNV = 0;
    public const int IDU0_GMK_SS_SQUARE_MAT_SS_SQUARE_ZNV = 0;
    public const int IDU1_GMK_SS_SQUARE_MAT_SS_SQUARE_ZNV = 0;
    public const string IDS_GMK_SS_SQUARE_MAT_SS_SQUARE_ZNV = "SS_SQUARE.ZNV";
    public const int IDB_GMK_SS_SQUARE_MDL_SS_SQUARE_ZNO = 0;
    public const int IDU0_GMK_SS_SQUARE_MDL_SS_SQUARE_ZNO = 0;
    public const int IDU1_GMK_SS_SQUARE_MDL_SS_SQUARE_ZNO = 0;
    public const string IDS_GMK_SS_SQUARE_MDL_SS_SQUARE_ZNO = "SS_SQUARE.ZNO";
    public const int IDB_MODEL_SS_SQUARE_TVX = 0;
    public const int IDU0_MODEL_SS_SQUARE_TVX = 0;
    public const int IDU1_MODEL_SS_SQUARE_TVX = 0;
    public const string IDS_MODEL_SS_SQUARE_TVX = "SS_SQUARE.TVX";
    public const int IDB_GMK_SS_TIME_MDL_SS_TIME_5S_ZNO = 0;
    public const int IDB_GMK_SS_TIME_MDL_SS_TIME_10S_ZNO = 1;
    public const int IDB_GMK_SS_TIME_MDL_SS_TIME_15S_ZNO = 2;
    public const int IDU0_GMK_SS_TIME_MDL_SS_TIME_5S_ZNO = 0;
    public const int IDU0_GMK_SS_TIME_MDL_SS_TIME_10S_ZNO = 0;
    public const int IDU0_GMK_SS_TIME_MDL_SS_TIME_15S_ZNO = 0;
    public const int IDU1_GMK_SS_TIME_MDL_SS_TIME_5S_ZNO = 0;
    public const int IDU1_GMK_SS_TIME_MDL_SS_TIME_10S_ZNO = 0;
    public const int IDU1_GMK_SS_TIME_MDL_SS_TIME_15S_ZNO = 0;
    public const string IDS_GMK_SS_TIME_MDL_SS_TIME_5S_ZNO = "SS_TIME_5S.ZNO";
    public const string IDS_GMK_SS_TIME_MDL_SS_TIME_10S_ZNO = "SS_TIME_10S.ZNO";
    public const string IDS_GMK_SS_TIME_MDL_SS_TIME_15S_ZNO = "SS_TIME_15S.ZNO";
    public const int IDB_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_GATE_L_ZNO = 0;
    public const int IDB_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_GATE_R_ZNO = 1;
    public const int IDB_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_O_R_ZNO = 2;
    public const int IDB_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_O_L_ZNO = 3;
    public const int IDB_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_A_ZNO = 4;
    public const int IDB_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_2A_ZNO = 5;
    public const int IDB_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_B_ZNO = 6;
    public const int IDB_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_2B_ZNO = 7;
    public const int IDB_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_CRN_ZNO = 8;
    public const int IDB_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_2CRN_ZNO = 9;
    public const int IDU0_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_GATE_L_ZNO = 0;
    public const int IDU0_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_GATE_R_ZNO = 0;
    public const int IDU0_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_O_R_ZNO = 0;
    public const int IDU0_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_O_L_ZNO = 0;
    public const int IDU0_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_A_ZNO = 0;
    public const int IDU0_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_2A_ZNO = 0;
    public const int IDU0_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_B_ZNO = 0;
    public const int IDU0_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_2B_ZNO = 0;
    public const int IDU0_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_CRN_ZNO = 0;
    public const int IDU0_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_2CRN_ZNO = 0;
    public const int IDU1_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_GATE_L_ZNO = 0;
    public const int IDU1_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_GATE_R_ZNO = 0;
    public const int IDU1_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_O_R_ZNO = 0;
    public const int IDU1_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_O_L_ZNO = 0;
    public const int IDU1_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_A_ZNO = 0;
    public const int IDU1_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_2A_ZNO = 0;
    public const int IDU1_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_B_ZNO = 0;
    public const int IDU1_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_2B_ZNO = 0;
    public const int IDU1_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_CRN_ZNO = 0;
    public const int IDU1_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_2CRN_ZNO = 0;
    public const string IDS_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_GATE_L_ZNO = "GMK_STM_PIPE_F_GATE_L.ZNO";
    public const string IDS_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_GATE_R_ZNO = "GMK_STM_PIPE_F_GATE_R.ZNO";
    public const string IDS_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_O_R_ZNO = "GMK_STM_PIPE_F_O_R.ZNO";
    public const string IDS_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_O_L_ZNO = "GMK_STM_PIPE_F_O_L.ZNO";
    public const string IDS_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_A_ZNO = "GMK_STM_PIPE_F_A.ZNO";
    public const string IDS_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_2A_ZNO = "GMK_STM_PIPE_F_2A.ZNO";
    public const string IDS_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_B_ZNO = "GMK_STM_PIPE_F_B.ZNO";
    public const string IDS_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_2B_ZNO = "GMK_STM_PIPE_F_2B.ZNO";
    public const string IDS_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_CRN_ZNO = "GMK_STM_PIPE_F_CRN.ZNO";
    public const string IDS_GMK_STEAMPIPE_F_MDL_GMK_STM_PIPE_F_2CRN_ZNO = "GMK_STM_PIPE_F_2CRN.ZNO";
    public const int IDB_GMK_STEAMPIPE_MDL_STM_PIPE_GATE_L_ZNO = 0;
    public const int IDB_GMK_STEAMPIPE_MDL_STM_PIPE_GATE_R_ZNO = 1;
    public const int IDB_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_O_L_ZNO = 2;
    public const int IDB_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_O_R_ZNO = 3;
    public const int IDB_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_A_ZNO = 4;
    public const int IDB_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_A_02_ZNO = 5;
    public const int IDB_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_A_03_ZNO = 6;
    public const int IDB_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_B_ZNO = 7;
    public const int IDB_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_B_02_ZNO = 8;
    public const int IDB_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_B_03_ZNO = 9;
    public const int IDB_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_CRN_ZNO = 10;
    public const int IDB_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_CRN_02_ZNO = 11;
    public const int IDB_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_CRN_03_ZNO = 12;
    public const int IDB_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_CRN_04_ZNO = 13;
    public const int IDU0_GMK_STEAMPIPE_MDL_STM_PIPE_GATE_L_ZNO = 0;
    public const int IDU0_GMK_STEAMPIPE_MDL_STM_PIPE_GATE_R_ZNO = 0;
    public const int IDU0_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_O_L_ZNO = 0;
    public const int IDU0_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_O_R_ZNO = 0;
    public const int IDU0_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_A_ZNO = 0;
    public const int IDU0_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_A_02_ZNO = 0;
    public const int IDU0_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_A_03_ZNO = 0;
    public const int IDU0_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_B_ZNO = 0;
    public const int IDU0_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_B_02_ZNO = 0;
    public const int IDU0_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_B_03_ZNO = 0;
    public const int IDU0_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_CRN_ZNO = 0;
    public const int IDU0_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_CRN_02_ZNO = 0;
    public const int IDU0_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_CRN_03_ZNO = 0;
    public const int IDU0_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_CRN_04_ZNO = 0;
    public const int IDU1_GMK_STEAMPIPE_MDL_STM_PIPE_GATE_L_ZNO = 0;
    public const int IDU1_GMK_STEAMPIPE_MDL_STM_PIPE_GATE_R_ZNO = 0;
    public const int IDU1_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_O_L_ZNO = 0;
    public const int IDU1_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_O_R_ZNO = 0;
    public const int IDU1_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_A_ZNO = 0;
    public const int IDU1_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_A_02_ZNO = 0;
    public const int IDU1_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_A_03_ZNO = 0;
    public const int IDU1_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_B_ZNO = 0;
    public const int IDU1_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_B_02_ZNO = 0;
    public const int IDU1_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_B_03_ZNO = 0;
    public const int IDU1_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_CRN_ZNO = 0;
    public const int IDU1_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_CRN_02_ZNO = 0;
    public const int IDU1_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_CRN_03_ZNO = 0;
    public const int IDU1_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_CRN_04_ZNO = 0;
    public const string IDS_GMK_STEAMPIPE_MDL_STM_PIPE_GATE_L_ZNO = "STM_PIPE_GATE_L.ZNO";
    public const string IDS_GMK_STEAMPIPE_MDL_STM_PIPE_GATE_R_ZNO = "STM_PIPE_GATE_R.ZNO";
    public const string IDS_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_O_L_ZNO = "GMK_STM_PIPE_O_L.ZNO";
    public const string IDS_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_O_R_ZNO = "GMK_STM_PIPE_O_R.ZNO";
    public const string IDS_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_A_ZNO = "GMK_STM_PIPE_A.ZNO";
    public const string IDS_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_A_02_ZNO = "GMK_STM_PIPE_A_02.ZNO";
    public const string IDS_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_A_03_ZNO = "GMK_STM_PIPE_A_03.ZNO";
    public const string IDS_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_B_ZNO = "GMK_STM_PIPE_B.ZNO";
    public const string IDS_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_B_02_ZNO = "GMK_STM_PIPE_B_02.ZNO";
    public const string IDS_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_B_03_ZNO = "GMK_STM_PIPE_B_03.ZNO";
    public const string IDS_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_CRN_ZNO = "GMK_STM_PIPE_CRN.ZNO";
    public const string IDS_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_CRN_02_ZNO = "GMK_STM_PIPE_CRN_02.ZNO";
    public const string IDS_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_CRN_03_ZNO = "GMK_STM_PIPE_CRN_03.ZNO";
    public const string IDS_GMK_STEAMPIPE_MDL_GMK_STM_PIPE_CRN_04_ZNO = "GMK_STM_PIPE_CRN_04.ZNO";
    public const int IDB_GMK_STOPPER_MAT_GMK_STOPPER_IN_ZNV = 0;
    public const int IDB_GMK_STOPPER_MAT_GMK_STOPPER_2_IN_ZNV = 1;
    public const int IDU0_GMK_STOPPER_MAT_GMK_STOPPER_IN_ZNV = 0;
    public const int IDU0_GMK_STOPPER_MAT_GMK_STOPPER_2_IN_ZNV = 0;
    public const int IDU1_GMK_STOPPER_MAT_GMK_STOPPER_IN_ZNV = 0;
    public const int IDU1_GMK_STOPPER_MAT_GMK_STOPPER_2_IN_ZNV = 0;
    public const string IDS_GMK_STOPPER_MAT_GMK_STOPPER_IN_ZNV = "GMK_STOPPER_IN.ZNV";
    public const string IDS_GMK_STOPPER_MAT_GMK_STOPPER_2_IN_ZNV = "GMK_STOPPER_2_IN.ZNV";
    public const int IDB_GMK_STOPPER_MDL_GMK_STOPPER_ZNO = 0;
    public const int IDB_GMK_STOPPER_MDL_GMK_STOPPER_2_ZNO = 1;
    public const int IDU0_GMK_STOPPER_MDL_GMK_STOPPER_ZNO = 0;
    public const int IDU0_GMK_STOPPER_MDL_GMK_STOPPER_2_ZNO = 0;
    public const int IDU1_GMK_STOPPER_MDL_GMK_STOPPER_ZNO = 0;
    public const int IDU1_GMK_STOPPER_MDL_GMK_STOPPER_2_ZNO = 0;
    public const string IDS_GMK_STOPPER_MDL_GMK_STOPPER_ZNO = "GMK_STOPPER.ZNO";
    public const string IDS_GMK_STOPPER_MDL_GMK_STOPPER_2_ZNO = "GMK_STOPPER_2.ZNO";
    public const int IDB_GMK_SWITCH3_MAT_GMK_SWITCH_TOP_ZNV = 0;
    public const int IDU0_GMK_SWITCH3_MAT_GMK_SWITCH_TOP_ZNV = 0;
    public const int IDU1_GMK_SWITCH3_MAT_GMK_SWITCH_TOP_ZNV = 0;
    public const string IDS_GMK_SWITCH3_MAT_GMK_SWITCH_TOP_ZNV = "GMK_SWITCH_TOP.ZNV";
    public const int IDB_GMK_SWITCH3_MDL_GMK_SWITCH_ZNO = 0;
    public const int IDB_GMK_SWITCH3_MDL_GMK_SWITCH_TOP_ZNO = 1;
    public const int IDU0_GMK_SWITCH3_MDL_GMK_SWITCH_ZNO = 0;
    public const int IDU0_GMK_SWITCH3_MDL_GMK_SWITCH_TOP_ZNO = 0;
    public const int IDU1_GMK_SWITCH3_MDL_GMK_SWITCH_ZNO = 0;
    public const int IDU1_GMK_SWITCH3_MDL_GMK_SWITCH_TOP_ZNO = 0;
    public const string IDS_GMK_SWITCH3_MDL_GMK_SWITCH_ZNO = "GMK_SWITCH.ZNO";
    public const string IDS_GMK_SWITCH3_MDL_GMK_SWITCH_TOP_ZNO = "GMK_SWITCH_TOP.ZNO";
    public const int IDB_GMK_SWITCH4_MDL_GMK_SWITCH_4_ZNO = 0;
    public const int IDB_GMK_SWITCH4_MDL_GMK_SWITCH_4_TOP_ZNO = 1;
    public const int IDU0_GMK_SWITCH4_MDL_GMK_SWITCH_4_ZNO = 0;
    public const int IDU0_GMK_SWITCH4_MDL_GMK_SWITCH_4_TOP_ZNO = 0;
    public const int IDU1_GMK_SWITCH4_MDL_GMK_SWITCH_4_ZNO = 0;
    public const int IDU1_GMK_SWITCH4_MDL_GMK_SWITCH_4_TOP_ZNO = 0;
    public const string IDS_GMK_SWITCH4_MDL_GMK_SWITCH_4_ZNO = "GMK_SWITCH_4.ZNO";
    public const string IDS_GMK_SWITCH4_MDL_GMK_SWITCH_4_TOP_ZNO = "GMK_SWITCH_4_TOP.ZNO";
    public const int IDB_GMK_SW_WALL3_MAT_GMK_SW_WALL_G_3_ZNV = 0;
    public const int IDU0_GMK_SW_WALL3_MAT_GMK_SW_WALL_G_3_ZNV = 0;
    public const int IDU1_GMK_SW_WALL3_MAT_GMK_SW_WALL_G_3_ZNV = 0;
    public const string IDS_GMK_SW_WALL3_MAT_GMK_SW_WALL_G_3_ZNV = "GMK_SW_WALL_G_3.ZNV";
    public const int IDB_GMK_SW_WALL3_MDL_GMK_SW_WALL_3_ZNO = 0;
    public const int IDB_GMK_SW_WALL3_MDL_GMK_SW_WALL_S_3_ZNO = 1;
    public const int IDB_GMK_SW_WALL3_MDL_GMK_SW_WALL_G_3_ZNO = 2;
    public const int IDU0_GMK_SW_WALL3_MDL_GMK_SW_WALL_3_ZNO = 0;
    public const int IDU0_GMK_SW_WALL3_MDL_GMK_SW_WALL_S_3_ZNO = 0;
    public const int IDU0_GMK_SW_WALL3_MDL_GMK_SW_WALL_G_3_ZNO = 0;
    public const int IDU1_GMK_SW_WALL3_MDL_GMK_SW_WALL_3_ZNO = 0;
    public const int IDU1_GMK_SW_WALL3_MDL_GMK_SW_WALL_S_3_ZNO = 0;
    public const int IDU1_GMK_SW_WALL3_MDL_GMK_SW_WALL_G_3_ZNO = 0;
    public const string IDS_GMK_SW_WALL3_MDL_GMK_SW_WALL_3_ZNO = "GMK_SW_WALL_3.ZNO";
    public const string IDS_GMK_SW_WALL3_MDL_GMK_SW_WALL_S_3_ZNO = "GMK_SW_WALL_S_3.ZNO";
    public const string IDS_GMK_SW_WALL3_MDL_GMK_SW_WALL_G_3_ZNO = "GMK_SW_WALL_G_3.ZNO";
    public const int IDB_MODEL_GMK_SW_WALL_3_TVX = 0;
    public const int IDU0_MODEL_GMK_SW_WALL_3_TVX = 0;
    public const int IDU1_MODEL_GMK_SW_WALL_3_TVX = 0;
    public const string IDS_MODEL_GMK_SW_WALL_3_TVX = "GMK_SW_WALL_3.TVX";
    public const int IDB_GMK_SW_WALL4_MDL_GMK_SW_WALL_4_ZNO = 0;
    public const int IDB_GMK_SW_WALL4_MDL_GMK_SW_WALL_GEAR_ZNO = 1;
    public const int IDB_GMK_SW_WALL4_MDL_GMK_SW_WALL_GEAR_BASE_ZNO = 2;
    public const int IDU0_GMK_SW_WALL4_MDL_GMK_SW_WALL_4_ZNO = 0;
    public const int IDU0_GMK_SW_WALL4_MDL_GMK_SW_WALL_GEAR_ZNO = 0;
    public const int IDU0_GMK_SW_WALL4_MDL_GMK_SW_WALL_GEAR_BASE_ZNO = 0;
    public const int IDU1_GMK_SW_WALL4_MDL_GMK_SW_WALL_4_ZNO = 0;
    public const int IDU1_GMK_SW_WALL4_MDL_GMK_SW_WALL_GEAR_ZNO = 0;
    public const int IDU1_GMK_SW_WALL4_MDL_GMK_SW_WALL_GEAR_BASE_ZNO = 0;
    public const string IDS_GMK_SW_WALL4_MDL_GMK_SW_WALL_4_ZNO = "GMK_SW_WALL_4.ZNO";
    public const string IDS_GMK_SW_WALL4_MDL_GMK_SW_WALL_GEAR_ZNO = "GMK_SW_WALL_GEAR.ZNO";
    public const string IDS_GMK_SW_WALL4_MDL_GMK_SW_WALL_GEAR_BASE_ZNO = "GMK_SW_WALL_GEAR_BASE.ZNO";
    public const int IDB_GMK_TRUCK_MDL_GMK_TRUCK_ZNO = 0;
    public const int IDB_GMK_TRUCK_MDL_GMK_TRUCK_TIRE_ZNO = 1;
    public const int IDU0_GMK_TRUCK_MDL_GMK_TRUCK_ZNO = 0;
    public const int IDU0_GMK_TRUCK_MDL_GMK_TRUCK_TIRE_ZNO = 0;
    public const int IDU1_GMK_TRUCK_MDL_GMK_TRUCK_ZNO = 0;
    public const int IDU1_GMK_TRUCK_MDL_GMK_TRUCK_TIRE_ZNO = 0;
    public const string IDS_GMK_TRUCK_MDL_GMK_TRUCK_ZNO = "GMK_TRUCK.ZNO";
    public const string IDS_GMK_TRUCK_MDL_GMK_TRUCK_TIRE_ZNO = "GMK_TRUCK_TIRE.ZNO";
    public const int IDB_GMK_TRUCK_MTN_GMK_TRUCK_RUN_ZNM = 0;
    public const int IDB_GMK_TRUCK_MTN_GMK_TRUCK_JP_ZNM = 1;
    public const int IDB_GMK_TRUCK_MTN_GMK_TRUCK_DOWN_ZNM = 2;
    public const int IDB_GMK_TRUCK_MTN_GMK_TRUCK_ST_ZNM = 3;
    public const int IDU0_GMK_TRUCK_MTN_GMK_TRUCK_RUN_ZNM = 0;
    public const int IDU0_GMK_TRUCK_MTN_GMK_TRUCK_JP_ZNM = 0;
    public const int IDU0_GMK_TRUCK_MTN_GMK_TRUCK_DOWN_ZNM = 0;
    public const int IDU0_GMK_TRUCK_MTN_GMK_TRUCK_ST_ZNM = 0;
    public const int IDU1_GMK_TRUCK_MTN_GMK_TRUCK_RUN_ZNM = 0;
    public const int IDU1_GMK_TRUCK_MTN_GMK_TRUCK_JP_ZNM = 0;
    public const int IDU1_GMK_TRUCK_MTN_GMK_TRUCK_DOWN_ZNM = 0;
    public const int IDU1_GMK_TRUCK_MTN_GMK_TRUCK_ST_ZNM = 0;
    public const string IDS_GMK_TRUCK_MTN_GMK_TRUCK_RUN_ZNM = "GMK_TRUCK_RUN.ZNM";
    public const string IDS_GMK_TRUCK_MTN_GMK_TRUCK_JP_ZNM = "GMK_TRUCK_JP.ZNM";
    public const string IDS_GMK_TRUCK_MTN_GMK_TRUCK_DOWN_ZNM = "GMK_TRUCK_DOWN.ZNM";
    public const string IDS_GMK_TRUCK_MTN_GMK_TRUCK_ST_ZNM = "GMK_TRUCK_ST.ZNM";
    public const int IDB_GMK_T_ROPE_MDL_GMK_T_ROPE_SHAKES02_ZNO = 0;
    public const int IDB_GMK_T_ROPE_MDL_GMK_T_ROPE_SHAKES02_A_ZNO = 1;
    public const int IDB_GMK_T_ROPE_MDL_GMK_T_ROPE_SHAKES02_B_ZNO = 2;
    public const int IDU0_GMK_T_ROPE_MDL_GMK_T_ROPE_SHAKES02_ZNO = 0;
    public const int IDU0_GMK_T_ROPE_MDL_GMK_T_ROPE_SHAKES02_A_ZNO = 0;
    public const int IDU0_GMK_T_ROPE_MDL_GMK_T_ROPE_SHAKES02_B_ZNO = 0;
    public const int IDU1_GMK_T_ROPE_MDL_GMK_T_ROPE_SHAKES02_ZNO = 0;
    public const int IDU1_GMK_T_ROPE_MDL_GMK_T_ROPE_SHAKES02_A_ZNO = 0;
    public const int IDU1_GMK_T_ROPE_MDL_GMK_T_ROPE_SHAKES02_B_ZNO = 0;
    public const string IDS_GMK_T_ROPE_MDL_GMK_T_ROPE_SHAKES02_ZNO = "GMK_T_ROPE_SHAKES02.ZNO";
    public const string IDS_GMK_T_ROPE_MDL_GMK_T_ROPE_SHAKES02_A_ZNO = "GMK_T_ROPE_SHAKES02_A.ZNO";
    public const string IDS_GMK_T_ROPE_MDL_GMK_T_ROPE_SHAKES02_B_ZNO = "GMK_T_ROPE_SHAKES02_B.ZNO";
    public const int IDB_GMK_T_ROPE_MTN_GMK_T_ROPE_SHAKES02_ZNM = 0;
    public const int IDU0_GMK_T_ROPE_MTN_GMK_T_ROPE_SHAKES02_ZNM = 0;
    public const int IDU1_GMK_T_ROPE_MTN_GMK_T_ROPE_SHAKES02_ZNM = 0;
    public const string IDS_GMK_T_ROPE_MTN_GMK_T_ROPE_SHAKES02_ZNM = "GMK_T_ROPE_SHAKES02.ZNM";
    public const int IDB_GMK_UP_BMPR_MDL_GMK_UP_BMPR_ZNO = 0;
    public const int IDU0_GMK_UP_BMPR_MDL_GMK_UP_BMPR_ZNO = 0;
    public const int IDU1_GMK_UP_BMPR_MDL_GMK_UP_BMPR_ZNO = 0;
    public const string IDS_GMK_UP_BMPR_MDL_GMK_UP_BMPR_ZNO = "GMK_UP_BMPR.ZNO";
    public const int IDB_GMK_WATER_SF_MDL_GMK_WATER_SF_INO = 0;
    public const int IDB_GMK_WATER_SF_MDL_GMK_WATER_SF_REF_INO = 1;
    public const int IDB_GMK_WATER_SF_MDL_GMK_WATER_SF_INV = 2;
    public const int IDB_GMK_WATER_SF_MDL_GMK_WATER_SF_REF_INV = 3;
    public const int IDB_GMK_WATER_SF_MDL_WAVE_AA_WII_PVR = 4;
    public const int IDB_GMK_WATER_SF_MDL_WAVE_AB_WII_PVR = 5;
    public const int IDB_GMK_WATER_SF_MDL_Z3_W_GI_REF_WII_PVR = 6;
    public const int IDB_GMK_WATER_SF_MDL_GMK_WATER_BASE_TEX_AMB = 7;
    public const int IDU0_GMK_WATER_SF_MDL_GMK_WATER_SF_INO = 0;
    public const int IDU0_GMK_WATER_SF_MDL_GMK_WATER_SF_REF_INO = 0;
    public const int IDU0_GMK_WATER_SF_MDL_GMK_WATER_SF_INV = 0;
    public const int IDU0_GMK_WATER_SF_MDL_GMK_WATER_SF_REF_INV = 0;
    public const int IDU0_GMK_WATER_SF_MDL_WAVE_AA_WII_PVR = 0;
    public const int IDU0_GMK_WATER_SF_MDL_WAVE_AB_WII_PVR = 0;
    public const int IDU0_GMK_WATER_SF_MDL_Z3_W_GI_REF_WII_PVR = 0;
    public const int IDU0_GMK_WATER_SF_MDL_GMK_WATER_BASE_TEX_AMB = 0;
    public const int IDU1_GMK_WATER_SF_MDL_GMK_WATER_SF_INO = 0;
    public const int IDU1_GMK_WATER_SF_MDL_GMK_WATER_SF_REF_INO = 0;
    public const int IDU1_GMK_WATER_SF_MDL_GMK_WATER_SF_INV = 0;
    public const int IDU1_GMK_WATER_SF_MDL_GMK_WATER_SF_REF_INV = 0;
    public const int IDU1_GMK_WATER_SF_MDL_WAVE_AA_WII_PVR = 0;
    public const int IDU1_GMK_WATER_SF_MDL_WAVE_AB_WII_PVR = 0;
    public const int IDU1_GMK_WATER_SF_MDL_Z3_W_GI_REF_WII_PVR = 0;
    public const int IDU1_GMK_WATER_SF_MDL_GMK_WATER_BASE_TEX_AMB = 0;
    public const string IDS_GMK_WATER_SF_MDL_GMK_WATER_SF_INO = "GMK_WATER_SF.INO";
    public const string IDS_GMK_WATER_SF_MDL_GMK_WATER_SF_REF_INO = "GMK_WATER_SF_REF.INO";
    public const string IDS_GMK_WATER_SF_MDL_GMK_WATER_SF_INV = "GMK_WATER_SF.INV";
    public const string IDS_GMK_WATER_SF_MDL_GMK_WATER_SF_REF_INV = "GMK_WATER_SF_REF.INV";
    public const string IDS_GMK_WATER_SF_MDL_WAVE_AA_WII_PVR = "WAVE_AA_WII.PVR";
    public const string IDS_GMK_WATER_SF_MDL_WAVE_AB_WII_PVR = "WAVE_AB_WII.PVR";
    public const string IDS_GMK_WATER_SF_MDL_Z3_W_GI_REF_WII_PVR = "Z3_W_GI_REF_WII.PVR";
    public const string IDS_GMK_WATER_SF_MDL_GMK_WATER_BASE_TEX_AMB = "GMK_WATER_BASE_TEX.AMB";
    public const int IDB_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_ZNV = 0;
    public const int IDB_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_30D_ZNV = 1;
    public const int IDB_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_45D_ZNV = 2;
    public const int IDB_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_60D_ZNV = 3;
    public const int IDB_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_J30D_ZNV = 4;
    public const int IDB_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_J45D_ZNV = 5;
    public const int IDB_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_J60D_ZNV = 6;
    public const int IDB_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_30D_N_ZNV = 7;
    public const int IDB_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_45D_N_ZNV = 8;
    public const int IDB_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_60D_N_ZNV = 9;
    public const int IDB_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_J30D_N_ZNV = 10;
    public const int IDB_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_J45D_N_ZNV = 11;
    public const int IDB_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_J60D_N_ZNV = 12;
    public const int IDU0_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_ZNV = 0;
    public const int IDU0_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_30D_ZNV = 0;
    public const int IDU0_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_45D_ZNV = 0;
    public const int IDU0_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_60D_ZNV = 0;
    public const int IDU0_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_J30D_ZNV = 0;
    public const int IDU0_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_J45D_ZNV = 0;
    public const int IDU0_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_J60D_ZNV = 0;
    public const int IDU0_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_30D_N_ZNV = 0;
    public const int IDU0_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_45D_N_ZNV = 0;
    public const int IDU0_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_60D_N_ZNV = 0;
    public const int IDU0_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_J30D_N_ZNV = 0;
    public const int IDU0_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_J45D_N_ZNV = 0;
    public const int IDU0_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_J60D_N_ZNV = 0;
    public const int IDU1_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_ZNV = 0;
    public const int IDU1_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_30D_ZNV = 0;
    public const int IDU1_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_45D_ZNV = 0;
    public const int IDU1_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_60D_ZNV = 0;
    public const int IDU1_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_J30D_ZNV = 0;
    public const int IDU1_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_J45D_ZNV = 0;
    public const int IDU1_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_J60D_ZNV = 0;
    public const int IDU1_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_30D_N_ZNV = 0;
    public const int IDU1_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_45D_N_ZNV = 0;
    public const int IDU1_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_60D_N_ZNV = 0;
    public const int IDU1_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_J30D_N_ZNV = 0;
    public const int IDU1_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_J45D_N_ZNV = 0;
    public const int IDU1_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_J60D_N_ZNV = 0;
    public const string IDS_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_ZNV = "GMK_WATER_SLDR.ZNV";
    public const string IDS_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_30D_ZNV = "GMK_WATER_SLDR_30D.ZNV";
    public const string IDS_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_45D_ZNV = "GMK_WATER_SLDR_45D.ZNV";
    public const string IDS_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_60D_ZNV = "GMK_WATER_SLDR_60D.ZNV";
    public const string IDS_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_J30D_ZNV = "GMK_WATER_SLDR_J30D.ZNV";
    public const string IDS_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_J45D_ZNV = "GMK_WATER_SLDR_J45D.ZNV";
    public const string IDS_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_J60D_ZNV = "GMK_WATER_SLDR_J60D.ZNV";
    public const string IDS_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_30D_N_ZNV = "GMK_WATER_SLDR_30D_N.ZNV";
    public const string IDS_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_45D_N_ZNV = "GMK_WATER_SLDR_45D_N.ZNV";
    public const string IDS_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_60D_N_ZNV = "GMK_WATER_SLDR_60D_N.ZNV";
    public const string IDS_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_J30D_N_ZNV = "GMK_WATER_SLDR_J30D_N.ZNV";
    public const string IDS_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_J45D_N_ZNV = "GMK_WATER_SLDR_J45D_N.ZNV";
    public const string IDS_GMK_WATER_SLIDER_MAT_GMK_WATER_SLDR_J60D_N_ZNV = "GMK_WATER_SLDR_J60D_N.ZNV";
    public const int IDB_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_ZNO = 0;
    public const int IDB_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_30D_ZNO = 1;
    public const int IDB_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_45D_ZNO = 2;
    public const int IDB_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_60D_ZNO = 3;
    public const int IDB_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_J30D_ZNO = 4;
    public const int IDB_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_J45D_ZNO = 5;
    public const int IDB_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_J60D_ZNO = 6;
    public const int IDB_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_30D_N_ZNO = 7;
    public const int IDB_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_45D_N_ZNO = 8;
    public const int IDB_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_60D_N_ZNO = 9;
    public const int IDB_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_J30D_N_ZNO = 10;
    public const int IDB_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_J45D_N_ZNO = 11;
    public const int IDB_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_J60D_N_ZNO = 12;
    public const int IDU0_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_ZNO = 0;
    public const int IDU0_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_30D_ZNO = 0;
    public const int IDU0_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_45D_ZNO = 0;
    public const int IDU0_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_60D_ZNO = 0;
    public const int IDU0_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_J30D_ZNO = 0;
    public const int IDU0_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_J45D_ZNO = 0;
    public const int IDU0_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_J60D_ZNO = 0;
    public const int IDU0_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_30D_N_ZNO = 0;
    public const int IDU0_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_45D_N_ZNO = 0;
    public const int IDU0_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_60D_N_ZNO = 0;
    public const int IDU0_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_J30D_N_ZNO = 0;
    public const int IDU0_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_J45D_N_ZNO = 0;
    public const int IDU0_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_J60D_N_ZNO = 0;
    public const int IDU1_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_ZNO = 0;
    public const int IDU1_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_30D_ZNO = 0;
    public const int IDU1_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_45D_ZNO = 0;
    public const int IDU1_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_60D_ZNO = 0;
    public const int IDU1_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_J30D_ZNO = 0;
    public const int IDU1_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_J45D_ZNO = 0;
    public const int IDU1_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_J60D_ZNO = 0;
    public const int IDU1_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_30D_N_ZNO = 0;
    public const int IDU1_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_45D_N_ZNO = 0;
    public const int IDU1_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_60D_N_ZNO = 0;
    public const int IDU1_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_J30D_N_ZNO = 0;
    public const int IDU1_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_J45D_N_ZNO = 0;
    public const int IDU1_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_J60D_N_ZNO = 0;
    public const string IDS_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_ZNO = "GMK_WATER_SLDR.ZNO";
    public const string IDS_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_30D_ZNO = "GMK_WATER_SLDR_30D.ZNO";
    public const string IDS_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_45D_ZNO = "GMK_WATER_SLDR_45D.ZNO";
    public const string IDS_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_60D_ZNO = "GMK_WATER_SLDR_60D.ZNO";
    public const string IDS_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_J30D_ZNO = "GMK_WATER_SLDR_J30D.ZNO";
    public const string IDS_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_J45D_ZNO = "GMK_WATER_SLDR_J45D.ZNO";
    public const string IDS_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_J60D_ZNO = "GMK_WATER_SLDR_J60D.ZNO";
    public const string IDS_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_30D_N_ZNO = "GMK_WATER_SLDR_30D_N.ZNO";
    public const string IDS_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_45D_N_ZNO = "GMK_WATER_SLDR_45D_N.ZNO";
    public const string IDS_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_60D_N_ZNO = "GMK_WATER_SLDR_60D_N.ZNO";
    public const string IDS_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_J30D_N_ZNO = "GMK_WATER_SLDR_J30D_N.ZNO";
    public const string IDS_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_J45D_N_ZNO = "GMK_WATER_SLDR_J45D_N.ZNO";
    public const string IDS_GMK_WATER_SLIDER_MDL_GMK_WATER_SLDR_J60D_N_ZNO = "GMK_WATER_SLDR_J60D_N.ZNO";
    public const int IDB_GMK_WATER_SLIDER_MTN_GMK_WATER_SLDR_30D_N_ZNM = 0;
    public const int IDB_GMK_WATER_SLIDER_MTN_GMK_WATER_SLDR_45D_N_ZNM = 1;
    public const int IDB_GMK_WATER_SLIDER_MTN_GMK_WATER_SLDR_60D_N_ZNM = 2;
    public const int IDB_GMK_WATER_SLIDER_MTN_GMK_WATER_SLDR_J30D_N_ZNM = 3;
    public const int IDB_GMK_WATER_SLIDER_MTN_GMK_WATER_SLDR_J45D_N_ZNM = 4;
    public const int IDB_GMK_WATER_SLIDER_MTN_GMK_WATER_SLDR_J60D_N_ZNM = 5;
    public const int IDU0_GMK_WATER_SLIDER_MTN_GMK_WATER_SLDR_30D_N_ZNM = 0;
    public const int IDU0_GMK_WATER_SLIDER_MTN_GMK_WATER_SLDR_45D_N_ZNM = 0;
    public const int IDU0_GMK_WATER_SLIDER_MTN_GMK_WATER_SLDR_60D_N_ZNM = 0;
    public const int IDU0_GMK_WATER_SLIDER_MTN_GMK_WATER_SLDR_J30D_N_ZNM = 0;
    public const int IDU0_GMK_WATER_SLIDER_MTN_GMK_WATER_SLDR_J45D_N_ZNM = 0;
    public const int IDU0_GMK_WATER_SLIDER_MTN_GMK_WATER_SLDR_J60D_N_ZNM = 0;
    public const int IDU1_GMK_WATER_SLIDER_MTN_GMK_WATER_SLDR_30D_N_ZNM = 0;
    public const int IDU1_GMK_WATER_SLIDER_MTN_GMK_WATER_SLDR_45D_N_ZNM = 0;
    public const int IDU1_GMK_WATER_SLIDER_MTN_GMK_WATER_SLDR_60D_N_ZNM = 0;
    public const int IDU1_GMK_WATER_SLIDER_MTN_GMK_WATER_SLDR_J30D_N_ZNM = 0;
    public const int IDU1_GMK_WATER_SLIDER_MTN_GMK_WATER_SLDR_J45D_N_ZNM = 0;
    public const int IDU1_GMK_WATER_SLIDER_MTN_GMK_WATER_SLDR_J60D_N_ZNM = 0;
    public const string IDS_GMK_WATER_SLIDER_MTN_GMK_WATER_SLDR_30D_N_ZNM = "GMK_WATER_SLDR_30D_N.ZNM";
    public const string IDS_GMK_WATER_SLIDER_MTN_GMK_WATER_SLDR_45D_N_ZNM = "GMK_WATER_SLDR_45D_N.ZNM";
    public const string IDS_GMK_WATER_SLIDER_MTN_GMK_WATER_SLDR_60D_N_ZNM = "GMK_WATER_SLDR_60D_N.ZNM";
    public const string IDS_GMK_WATER_SLIDER_MTN_GMK_WATER_SLDR_J30D_N_ZNM = "GMK_WATER_SLDR_J30D_N.ZNM";
    public const string IDS_GMK_WATER_SLIDER_MTN_GMK_WATER_SLDR_J45D_N_ZNM = "GMK_WATER_SLDR_J45D_N.ZNM";
    public const string IDS_GMK_WATER_SLIDER_MTN_GMK_WATER_SLDR_J60D_N_ZNM = "GMK_WATER_SLDR_J60D_N.ZNM";
    public const int IDB_MAPFAR_SS01_MAT_SS_KALEIDO_01_ZNV = 0;
    public const int IDU0_MAPFAR_SS01_MAT_SS_KALEIDO_01_ZNV = 0;
    public const int IDU1_MAPFAR_SS01_MAT_SS_KALEIDO_01_ZNV = 0;
    public const string IDS_MAPFAR_SS01_MAT_SS_KALEIDO_01_ZNV = "SS_KALEIDO_01.ZNV";
    public const int IDB_MAPFAR_SS01_MDL_SS_KALEIDO_01_ZNO = 0;
    public const int IDU0_MAPFAR_SS01_MDL_SS_KALEIDO_01_ZNO = 0;
    public const int IDU1_MAPFAR_SS01_MDL_SS_KALEIDO_01_ZNO = 0;
    public const string IDS_MAPFAR_SS01_MDL_SS_KALEIDO_01_ZNO = "SS_KALEIDO_01.ZNO";
    public const int IDB_MAPFAR_SS02_MAT_SS_KALEIDO_02_ZNV = 0;
    public const int IDU0_MAPFAR_SS02_MAT_SS_KALEIDO_02_ZNV = 0;
    public const int IDU1_MAPFAR_SS02_MAT_SS_KALEIDO_02_ZNV = 0;
    public const string IDS_MAPFAR_SS02_MAT_SS_KALEIDO_02_ZNV = "SS_KALEIDO_02.ZNV";
    public const int IDB_MAPFAR_SS02_MDL_SS_KALEIDO_02_ZNO = 0;
    public const int IDU0_MAPFAR_SS02_MDL_SS_KALEIDO_02_ZNO = 0;
    public const int IDU1_MAPFAR_SS02_MDL_SS_KALEIDO_02_ZNO = 0;
    public const string IDS_MAPFAR_SS02_MDL_SS_KALEIDO_02_ZNO = "SS_KALEIDO_02.ZNO";
    public const int IDB_MAPFAR_SS03_MAT_SS_KALEIDO_03_ZNV = 0;
    public const int IDU0_MAPFAR_SS03_MAT_SS_KALEIDO_03_ZNV = 0;
    public const int IDU1_MAPFAR_SS03_MAT_SS_KALEIDO_03_ZNV = 0;
    public const string IDS_MAPFAR_SS03_MAT_SS_KALEIDO_03_ZNV = "SS_KALEIDO_03.ZNV";
    public const int IDB_MAPFAR_SS03_MDL_SS_KALEIDO_03_ZNO = 0;
    public const int IDU0_MAPFAR_SS03_MDL_SS_KALEIDO_03_ZNO = 0;
    public const int IDU1_MAPFAR_SS03_MDL_SS_KALEIDO_03_ZNO = 0;
    public const string IDS_MAPFAR_SS03_MDL_SS_KALEIDO_03_ZNO = "SS_KALEIDO_03.ZNO";
    public const int IDB_MAPFAR_SS04_MAT_SS_KALEIDO_04_ZNV = 0;
    public const int IDU0_MAPFAR_SS04_MAT_SS_KALEIDO_04_ZNV = 0;
    public const int IDU1_MAPFAR_SS04_MAT_SS_KALEIDO_04_ZNV = 0;
    public const string IDS_MAPFAR_SS04_MAT_SS_KALEIDO_04_ZNV = "SS_KALEIDO_04.ZNV";
    public const int IDB_MAPFAR_SS04_MDL_SS_KALEIDO_04_ZNO = 0;
    public const int IDU0_MAPFAR_SS04_MDL_SS_KALEIDO_04_ZNO = 0;
    public const int IDU1_MAPFAR_SS04_MDL_SS_KALEIDO_04_ZNO = 0;
    public const string IDS_MAPFAR_SS04_MDL_SS_KALEIDO_04_ZNO = "SS_KALEIDO_04.ZNO";
    public const int IDB_MAPFAR_SS05_MAT_SS_KALEIDO_05_ZNV = 0;
    public const int IDU0_MAPFAR_SS05_MAT_SS_KALEIDO_05_ZNV = 0;
    public const int IDU1_MAPFAR_SS05_MAT_SS_KALEIDO_05_ZNV = 0;
    public const string IDS_MAPFAR_SS05_MAT_SS_KALEIDO_05_ZNV = "SS_KALEIDO_05.ZNV";
    public const int IDB_MAPFAR_SS05_MDL_SS_KALEIDO_05_ZNO = 0;
    public const int IDU0_MAPFAR_SS05_MDL_SS_KALEIDO_05_ZNO = 0;
    public const int IDU1_MAPFAR_SS05_MDL_SS_KALEIDO_05_ZNO = 0;
    public const string IDS_MAPFAR_SS05_MDL_SS_KALEIDO_05_ZNO = "SS_KALEIDO_05.ZNO";
    public const int IDB_MAPFAR_SS06_MAT_SS_KALEIDO_06_ZNV = 0;
    public const int IDU0_MAPFAR_SS06_MAT_SS_KALEIDO_06_ZNV = 0;
    public const int IDU1_MAPFAR_SS06_MAT_SS_KALEIDO_06_ZNV = 0;
    public const string IDS_MAPFAR_SS06_MAT_SS_KALEIDO_06_ZNV = "SS_KALEIDO_06.ZNV";
    public const int IDB_MAPFAR_SS06_MDL_SS_KALEIDO_06_ZNO = 0;
    public const int IDU0_MAPFAR_SS06_MDL_SS_KALEIDO_06_ZNO = 0;
    public const int IDU1_MAPFAR_SS06_MDL_SS_KALEIDO_06_ZNO = 0;
    public const string IDS_MAPFAR_SS06_MDL_SS_KALEIDO_06_ZNO = "SS_KALEIDO_06.ZNO";
    public const int IDB_MAPFAR_SS07_MAT_SS_KALEIDO_07_ZNV = 0;
    public const int IDU0_MAPFAR_SS07_MAT_SS_KALEIDO_07_ZNV = 0;
    public const int IDU1_MAPFAR_SS07_MAT_SS_KALEIDO_07_ZNV = 0;
    public const string IDS_MAPFAR_SS07_MAT_SS_KALEIDO_07_ZNV = "SS_KALEIDO_07.ZNV";
    public const int IDB_MAPFAR_SS07_MDL_SS_KALEIDO_07_ZNO = 0;
    public const int IDU0_MAPFAR_SS07_MDL_SS_KALEIDO_07_ZNO = 0;
    public const int IDU1_MAPFAR_SS07_MDL_SS_KALEIDO_07_ZNO = 0;
    public const string IDS_MAPFAR_SS07_MDL_SS_KALEIDO_07_ZNO = "SS_KALEIDO_07.ZNO";
    public const int IDB_MAPFAR_ZONE1_MAT_Z1_SKYL_T_D_INV = 0;
    public const int IDB_MAPFAR_ZONE1_MAT_Z1_SEA_D_INV = 1;
    public const int IDB_MAPFAR_ZONE1_MAT_Z1_BOSS_IP_FAR_INV = 2;
    public const int IDU0_MAPFAR_ZONE1_MAT_Z1_SKYL_T_D_INV = 0;
    public const int IDU0_MAPFAR_ZONE1_MAT_Z1_SEA_D_INV = 0;
    public const int IDU0_MAPFAR_ZONE1_MAT_Z1_BOSS_IP_FAR_INV = 0;
    public const int IDU1_MAPFAR_ZONE1_MAT_Z1_SKYL_T_D_INV = 0;
    public const int IDU1_MAPFAR_ZONE1_MAT_Z1_SEA_D_INV = 0;
    public const int IDU1_MAPFAR_ZONE1_MAT_Z1_BOSS_IP_FAR_INV = 0;
    public const string IDS_MAPFAR_ZONE1_MAT_Z1_SKYL_T_D_INV = "Z1_SKYL_T_D.INV";
    public const string IDS_MAPFAR_ZONE1_MAT_Z1_SEA_D_INV = "Z1_SEA_D.INV";
    public const string IDS_MAPFAR_ZONE1_MAT_Z1_BOSS_IP_FAR_INV = "Z1_BOSS_IP_FAR.INV";
    public const int IDB_MAPFAR_ZONE1_MDL_Z1_SKYL_T_D_INO = 0;
    public const int IDB_MAPFAR_ZONE1_MDL_Z1_ROCK_A_T_D_INO = 1;
    public const int IDB_MAPFAR_ZONE1_MDL_Z1_ROCK_B_T_D_INO = 2;
    public const int IDB_MAPFAR_ZONE1_MDL_Z1_ROCK_C_T_D_INO = 3;
    public const int IDB_MAPFAR_ZONE1_MDL_Z1_BOSS_FAR_INO = 4;
    public const int IDU0_MAPFAR_ZONE1_MDL_Z1_SKYL_T_D_INO = 0;
    public const int IDU0_MAPFAR_ZONE1_MDL_Z1_ROCK_A_T_D_INO = 0;
    public const int IDU0_MAPFAR_ZONE1_MDL_Z1_ROCK_B_T_D_INO = 0;
    public const int IDU0_MAPFAR_ZONE1_MDL_Z1_ROCK_C_T_D_INO = 0;
    public const int IDU0_MAPFAR_ZONE1_MDL_Z1_BOSS_FAR_INO = 0;
    public const int IDU1_MAPFAR_ZONE1_MDL_Z1_SKYL_T_D_INO = 0;
    public const int IDU1_MAPFAR_ZONE1_MDL_Z1_ROCK_A_T_D_INO = 0;
    public const int IDU1_MAPFAR_ZONE1_MDL_Z1_ROCK_B_T_D_INO = 0;
    public const int IDU1_MAPFAR_ZONE1_MDL_Z1_ROCK_C_T_D_INO = 0;
    public const int IDU1_MAPFAR_ZONE1_MDL_Z1_BOSS_FAR_INO = 0;
    public const string IDS_MAPFAR_ZONE1_MDL_Z1_SKYL_T_D_INO = "Z1_SKYL_T_D.INO";
    public const string IDS_MAPFAR_ZONE1_MDL_Z1_ROCK_A_T_D_INO = "Z1_ROCK_A_T_D.INO";
    public const string IDS_MAPFAR_ZONE1_MDL_Z1_ROCK_B_T_D_INO = "Z1_ROCK_B_T_D.INO";
    public const string IDS_MAPFAR_ZONE1_MDL_Z1_ROCK_C_T_D_INO = "Z1_ROCK_C_T_D.INO";
    public const string IDS_MAPFAR_ZONE1_MDL_Z1_BOSS_FAR_INO = "Z1_BOSS_FAR.INO";
    public const int IDB_MAPFAR_ZONE1_RENDER_MDL_Z1_SEA_D_ZNO = 0;
    public const int IDU0_MAPFAR_ZONE1_RENDER_MDL_Z1_SEA_D_ZNO = 0;
    public const int IDU1_MAPFAR_ZONE1_RENDER_MDL_Z1_SEA_D_ZNO = 0;
    public const string IDS_MAPFAR_ZONE1_RENDER_MDL_Z1_SEA_D_ZNO = "Z1_SEA_D.ZNO";
    public const int IDB_MAPFAR_ZONE2_MAT_BG_02_WHEEL_INV = 0;
    public const int IDU0_MAPFAR_ZONE2_MAT_BG_02_WHEEL_INV = 0;
    public const int IDU1_MAPFAR_ZONE2_MAT_BG_02_WHEEL_INV = 0;
    public const string IDS_MAPFAR_ZONE2_MAT_BG_02_WHEEL_INV = "BG_02_WHEEL.INV";
    public const int IDB_MAPFAR_ZONE2_MDL_Z2_BOSS_IP_FAR_INO = 0;
    public const int IDB_MAPFAR_ZONE2_MDL_BG_02_WHEEL_INO = 1;
    public const int IDB_MAPFAR_ZONE2_MDL_ZONE2_SLIGHT_INO = 2;
    public const int IDU0_MAPFAR_ZONE2_MDL_Z2_BOSS_IP_FAR_INO = 0;
    public const int IDU0_MAPFAR_ZONE2_MDL_BG_02_WHEEL_INO = 0;
    public const int IDU0_MAPFAR_ZONE2_MDL_ZONE2_SLIGHT_INO = 0;
    public const int IDU1_MAPFAR_ZONE2_MDL_Z2_BOSS_IP_FAR_INO = 0;
    public const int IDU1_MAPFAR_ZONE2_MDL_BG_02_WHEEL_INO = 0;
    public const int IDU1_MAPFAR_ZONE2_MDL_ZONE2_SLIGHT_INO = 0;
    public const string IDS_MAPFAR_ZONE2_MDL_Z2_BOSS_IP_FAR_INO = "Z2_BOSS_IP_FAR.INO";
    public const string IDS_MAPFAR_ZONE2_MDL_BG_02_WHEEL_INO = "BG_02_WHEEL.INO";
    public const string IDS_MAPFAR_ZONE2_MDL_ZONE2_SLIGHT_INO = "ZONE2_SLIGHT.INO";
    public const int IDB_MAPFAR_ZONE2_MTN_BG_02_WHEEL_INM = 0;
    public const int IDB_MAPFAR_ZONE2_MTN_ZONE2_SLIGHT_INM = 1;
    public const int IDU0_MAPFAR_ZONE2_MTN_BG_02_WHEEL_INM = 0;
    public const int IDU0_MAPFAR_ZONE2_MTN_ZONE2_SLIGHT_INM = 0;
    public const int IDU1_MAPFAR_ZONE2_MTN_BG_02_WHEEL_INM = 0;
    public const int IDU1_MAPFAR_ZONE2_MTN_ZONE2_SLIGHT_INM = 0;
    public const string IDS_MAPFAR_ZONE2_MTN_BG_02_WHEEL_INM = "BG_02_WHEEL.INM";
    public const string IDS_MAPFAR_ZONE2_MTN_ZONE2_SLIGHT_INM = "ZONE2_SLIGHT.INM";
    public const int IDB_MAPFAR_ZONE3_MDL_Z3_FAR_INO = 0;
    public const int IDU0_MAPFAR_ZONE3_MDL_Z3_FAR_INO = 0;
    public const int IDU1_MAPFAR_ZONE3_MDL_Z3_FAR_INO = 0;
    public const string IDS_MAPFAR_ZONE3_MDL_Z3_FAR_INO = "Z3_FAR.INO";
    public const int IDB_MAPFAR_ZONEF_MDL_ZF_BOSS_IP_FAR_INO = 0;
    public const int IDU0_MAPFAR_ZONEF_MDL_ZF_BOSS_IP_FAR_INO = 0;
    public const int IDU1_MAPFAR_ZONEF_MDL_ZF_BOSS_IP_FAR_INO = 0;
    public const string IDS_MAPFAR_ZONEF_MDL_ZF_BOSS_IP_FAR_INO = "ZF_BOSS_IP_FAR.INO";
    public const int IDB_RING_MAT_RING_INV = 0;
    public const int IDU0_RING_MAT_RING_INV = 0;
    public const int IDU1_RING_MAT_RING_INV = 0;
    public const string IDS_RING_MAT_RING_INV = "RING.INV";
    public const int IDB_RING_MDL_RING_INO = 0;
    public const int IDU0_RING_MDL_RING_INO = 0;
    public const int IDU1_RING_MDL_RING_INO = 0;
    public const string IDS_RING_MDL_RING_INO = "RING.INO";
    public const int IDB_SON_MDL_SON_MODEL_ZNO = 0;
    public const int IDB_SON_MDL_SON_SPINMODEL_ZNO = 1;
    public const int IDU0_SON_MDL_SON_MODEL_ZNO = 0;
    public const int IDU0_SON_MDL_SON_SPINMODEL_ZNO = 0;
    public const int IDU1_SON_MDL_SON_MODEL_ZNO = 0;
    public const int IDU1_SON_MDL_SON_SPINMODEL_ZNO = 0;
    public const string IDS_SON_MDL_SON_MODEL_ZNO = "SON_MODEL.ZNO";
    public const string IDS_SON_MDL_SON_SPINMODEL_ZNO = "SON_SPINMODEL.ZNO";
    public const int IDB_SON_MTN_SON_BRAKE01_ZNM = 0;
    public const int IDB_SON_MTN_SON_BRAKE02_ZNM = 1;
    public const int IDB_SON_MTN_SON_BRAKE03_ZNM = 2;
    public const int IDB_SON_MTN_SON_CHANGE_01_ZNM = 3;
    public const int IDB_SON_MTN_SON_CHANGE_01_1_ZNM = 4;
    public const int IDB_SON_MTN_SON_CHANGE_01_2_ZNM = 5;
    public const int IDB_SON_MTN_SON_CHANGE_02_ZNM = 6;
    public const int IDB_SON_MTN_SON_DAMAGE_ZNM = 7;
    public const int IDB_SON_MTN_SON_DASH1_ZNM = 8;
    public const int IDB_SON_MTN_SON_DASH2_ZNM = 9;
    public const int IDB_SON_MTN_SON_DIE_01_ZNM = 10;
    public const int IDB_SON_MTN_SON_DIE_02_ZNM = 11;
    public const int IDB_SON_MTN_SON_FW_ZNM = 12;
    public const int IDB_SON_MTN_SON_FWEX_ZNM = 13;
    public const int IDB_SON_MTN_SON_FWWAIT0_01_ZNM = 14;
    public const int IDB_SON_MTN_SON_FWWAIT0_02_ZNM = 15;
    public const int IDB_SON_MTN_SON_FWWAIT1_01_ZNM = 16;
    public const int IDB_SON_MTN_SON_FWWAIT1_02_ZNM = 17;
    public const int IDB_SON_MTN_SON_FWWAIT2_01_ZNM = 18;
    public const int IDB_SON_MTN_SON_FWWAIT2_02_ZNM = 19;
    public const int IDB_SON_MTN_SON_GOAL_01_ZNM = 20;
    public const int IDB_SON_MTN_SON_GOAL_02_ZNM = 21;
    public const int IDB_SON_MTN_SON_JUMP_F_ZNM = 22;
    public const int IDB_SON_MTN_SON_JUMP_S_01_ZNM = 23;
    public const int IDB_SON_MTN_SON_JUMP_S_02_ZNM = 24;
    public const int IDB_SON_MTN_SON_JUMP_S_03_ZNM = 25;
    public const int IDB_SON_MTN_SON_LOOKUP_01_ZNM = 26;
    public const int IDB_SON_MTN_SON_LOOKUP_02_ZNM = 27;
    public const int IDB_SON_MTN_SON_LOOKUP_03_ZNM = 28;
    public const int IDB_SON_MTN_SON_RUN_ZNM = 29;
    public const int IDB_SON_MTN_SON_SPIN01_ZNM = 30;
    public const int IDB_SON_MTN_SON_SPIN02_ZNM = 31;
    public const int IDB_SON_MTN_SON_SPIN_ZNM = 32;
    public const int IDB_SON_MTN_SON_SQUAT_01_ZNM = 33;
    public const int IDB_SON_MTN_SON_SQUAT_02_ZNM = 34;
    public const int IDB_SON_MTN_SON_SQUAT_03_ZNM = 35;
    public const int IDB_SON_MTN_SON_ST_B_ZNM = 36;
    public const int IDB_SON_MTN_SON_ST_D_ZNM = 37;
    public const int IDB_SON_MTN_SON_ST_F_ZNM = 38;
    public const int IDB_SON_MTN_SON_TURN_ZNM = 39;
    public const int IDB_SON_MTN_SON_TURN_BRAKE_ZNM = 40;
    public const int IDB_SON_MTN_SON_TURN_RUN_ZNM = 41;
    public const int IDB_SON_MTN_SON_WALK_ZNM = 42;
    public const int IDB_SON_MTN_SON_WALL_01_ZNM = 43;
    public const int IDB_SON_MTN_SON_WALL_02_ZNM = 44;
    public const int IDB_SON_MTN_SON_HANG_ZNM = 45;
    public const int IDB_SON_MTN_SON_HANG_B_ZNM = 46;
    public const int IDB_SON_MTN_SON_HANG_F_ZNM = 47;
    public const int IDB_SON_MTN_SON_BALL_01_ZNM = 48;
    public const int IDB_SON_MTN_SON_BALL_02_ZNM = 49;
    public const int IDB_SON_MTN_SON_BREATH_ZNM = 50;
    public const int IDB_SON_MTN_SON_ROPE_ZNM = 51;
    public const int IDB_SON_MTN_SON_ROPE_ST_ZNM = 52;
    public const int IDB_SON_MTN_SON_SLIDE_ZNM = 53;
    public const int IDB_SON_MTN_SON_SPIN_N_ZNM = 54;
    public const int IDB_SON_MTN_SON_SPIN_G_ZNM = 55;
    public const int IDB_SON_MTN_SON_SPIN_B_ZNM = 56;
    public const int IDB_SON_MTN_SON_FALL_ZNM = 57;
    public const int IDB_SON_MTN_SON_FALL_TURN_ZNM = 58;
    public const int IDB_SON_MTN_SON_FALL_R_ZNM = 59;
    public const int IDB_SON_MTN_SON_FALL_R_TURN_ZNM = 60;
    public const int IDB_SON_MTN_SON_HANG_ST_ZNM = 61;
    public const int IDB_SON_MTN_SON_HANG_ACT_ZNM = 62;
    public const int IDB_SON_MTN_SON_BREATH_J_ZNM = 63;
    public const int IDB_SON_MTN_SON_TRUCK_RUN_ZNM = 64;
    public const int IDB_SON_MTN_SON_TRUCK_JP_ZNM = 65;
    public const int IDB_SON_MTN_SON_TRUCK_DOWN_ZNM = 66;
    public const int IDB_SON_MTN_SON_TRUCK_ST_ZNM = 67;
    public const int IDB_SON_MTN_SON_TRUCK_DANGER_ZNM = 68;
    public const int IDB_SON_MTN_SON_TRUCK_DANGER_ST_ZNM = 69;
    public const int IDB_SON_MTN_SON_TRUCK_DANGER_RE_ZNM = 70;
    public const int IDB_SON_MTN_SON_END_1_01_ZNM = 71;
    public const int IDB_SON_MTN_SON_END_1_02_ZNM = 72;
    public const int IDB_SON_MTN_SON_END_1_03_ZNM = 73;
    public const int IDB_SON_MTN_SON_END_1_04_ZNM = 74;
    public const int IDB_SON_MTN_SON_END_2_03_ZNM = 75;
    public const int IDB_SON_MTN_SON_END_2_04_ZNM = 76;
    public const int IDB_SON_MTN_SON_DASH2_L_ZNM = 77;
    public const int IDB_SON_MTN_SON_DAMAGE_L_ZNM = 78;
    public const int IDB_SON_MTN_SON_FW_L_ZNM = 79;
    public const int IDB_SON_MTN_SON_TURN_L_ZNM = 80;
    public const int IDB_SON_MTN_SON_SQUAT_L_02_ZNM = 81;
    public const int IDB_SON_MTN_SON_SQUAT_L_03_ZNM = 82;
    public const int IDB_SON_MTN_SON_BRAKE_L_01_ZNM = 83;
    public const int IDB_SON_MTN_SON_BRAKE_L_02_ZNM = 84;
    public const int IDB_SON_MTN_SON_BRAKE_L_03_ZNM = 85;
    public const int IDB_SON_MTN_SON_TURN_BRAKE_L_ZNM = 86;
    public const int IDB_SON_MTN_SON_LOOKUP_L_01_ZNM = 87;
    public const int IDB_SON_MTN_SON_LOOKUP_L_02_ZNM = 88;
    public const int IDB_SON_MTN_SON_LOOKUP_L_03_ZNM = 89;
    public const int IDB_SON_MTN_SON_BREATH_L_ZNM = 90;
    public const int IDB_SON_MTN_SON_CHANGE_L_01_ZNM = 91;
    public const int IDB_SON_MTN_SON_CHANGE_L_01_1_ZNM = 92;
    public const int IDB_SON_MTN_SON_CHANGE_L_01_2_ZNM = 93;
    public const int IDB_SON_MTN_SON_CHANGE_L_02_ZNM = 94;
    public const int IDB_SON_MTN_SON_TRUCK_RUN_L_ZNM = 95;
    public const int IDB_SON_MTN_SON_TRUCK_ST_L_ZNM = 96;
    public const int IDB_SON_MTN_SON_FALL_L_ZNM = 97;
    public const int IDB_SON_MTN_SON_FALL_TURN_L_ZNM = 98;
    public const int IDB_SON_MTN_SON_FALL_R_L_ZNM = 99;
    public const int IDB_SON_MTN_SON_FALL_R_TURN_L_ZNM = 100;
    public const int IDB_SON_MTN_SON_BREATH_J_L_ZNM = 101;
    public const int IDB_SON_MTN_SSON_DASH1_ZNM = 102;
    public const int IDB_SON_MTN_SSON_FW_ZNM = 103;
    public const int IDB_SON_MTN_SSON_FWWAIT1_01_ZNM = 104;
    public const int IDB_SON_MTN_SSON_FWWAIT1_02_ZNM = 105;
    public const int IDB_SON_MTN_SSON_JUMP_F_ZNM = 106;
    public const int IDB_SON_MTN_SSON_JUMP_S_01_ZNM = 107;
    public const int IDB_SON_MTN_SSON_JUMP_S_02_ZNM = 108;
    public const int IDB_SON_MTN_SSON_JUMP_S_03_ZNM = 109;
    public const int IDB_SON_MTN_SSON_LOOKUP_01_ZNM = 110;
    public const int IDB_SON_MTN_SSON_LOOKUP_02_ZNM = 111;
    public const int IDB_SON_MTN_SSON_LOOKUP_03_ZNM = 112;
    public const int IDB_SON_MTN_SSON_SPIN_N_ZNM = 113;
    public const int IDB_SON_MTN_SSON_SPIN_G_ZNM = 114;
    public const int IDB_SON_MTN_SSON_SPIN_B_ZNM = 115;
    public const int IDB_SON_MTN_SSON_SQUAT_01_ZNM = 116;
    public const int IDB_SON_MTN_SSON_SQUAT_02_ZNM = 117;
    public const int IDB_SON_MTN_SSON_SQUAT_03_ZNM = 118;
    public const int IDB_SON_MTN_SSON_TURN_ZNM = 119;
    public const int IDB_SON_MTN_SSON_END_1_03_ZNM = 120;
    public const int IDB_SON_MTN_SSON_END_1_04_ZNM = 121;
    public const int IDB_SON_MTN_SSON_DASH1_L_ZNM = 122;
    public const int IDB_SON_MTN_SSON_FW_L_ZNM = 123;
    public const int IDB_SON_MTN_SSON_SQUAT_L_02_ZNM = 124;
    public const int IDB_SON_MTN_SSON_SQUAT_L_03_ZNM = 125;
    public const int IDB_SON_MTN_SSON_TURN_L_ZNM = 126;
    public const int IDB_SON_MTN_SSON_LOOKUP_L_01_ZNM = 127;
    public const int IDB_SON_MTN_SSON_LOOKUP_L_02_ZNM = 128;
    public const int IDB_SON_MTN_SSON_LOOKUP_L_03_ZNM = 129;
    public const int IDU0_SON_MTN_SON_BRAKE01_ZNM = 0;
    public const int IDU0_SON_MTN_SON_BRAKE02_ZNM = 0;
    public const int IDU0_SON_MTN_SON_BRAKE03_ZNM = 0;
    public const int IDU0_SON_MTN_SON_CHANGE_01_ZNM = 0;
    public const int IDU0_SON_MTN_SON_CHANGE_01_1_ZNM = 0;
    public const int IDU0_SON_MTN_SON_CHANGE_01_2_ZNM = 0;
    public const int IDU0_SON_MTN_SON_CHANGE_02_ZNM = 0;
    public const int IDU0_SON_MTN_SON_DAMAGE_ZNM = 0;
    public const int IDU0_SON_MTN_SON_DASH1_ZNM = 0;
    public const int IDU0_SON_MTN_SON_DASH2_ZNM = 0;
    public const int IDU0_SON_MTN_SON_DIE_01_ZNM = 0;
    public const int IDU0_SON_MTN_SON_DIE_02_ZNM = 0;
    public const int IDU0_SON_MTN_SON_FW_ZNM = 0;
    public const int IDU0_SON_MTN_SON_FWEX_ZNM = 0;
    public const int IDU0_SON_MTN_SON_FWWAIT0_01_ZNM = 0;
    public const int IDU0_SON_MTN_SON_FWWAIT0_02_ZNM = 0;
    public const int IDU0_SON_MTN_SON_FWWAIT1_01_ZNM = 0;
    public const int IDU0_SON_MTN_SON_FWWAIT1_02_ZNM = 0;
    public const int IDU0_SON_MTN_SON_FWWAIT2_01_ZNM = 0;
    public const int IDU0_SON_MTN_SON_FWWAIT2_02_ZNM = 0;
    public const int IDU0_SON_MTN_SON_GOAL_01_ZNM = 0;
    public const int IDU0_SON_MTN_SON_GOAL_02_ZNM = 0;
    public const int IDU0_SON_MTN_SON_JUMP_F_ZNM = 0;
    public const int IDU0_SON_MTN_SON_JUMP_S_01_ZNM = 0;
    public const int IDU0_SON_MTN_SON_JUMP_S_02_ZNM = 0;
    public const int IDU0_SON_MTN_SON_JUMP_S_03_ZNM = 0;
    public const int IDU0_SON_MTN_SON_LOOKUP_01_ZNM = 0;
    public const int IDU0_SON_MTN_SON_LOOKUP_02_ZNM = 0;
    public const int IDU0_SON_MTN_SON_LOOKUP_03_ZNM = 0;
    public const int IDU0_SON_MTN_SON_RUN_ZNM = 0;
    public const int IDU0_SON_MTN_SON_SPIN01_ZNM = 0;
    public const int IDU0_SON_MTN_SON_SPIN02_ZNM = 0;
    public const int IDU0_SON_MTN_SON_SPIN_ZNM = 0;
    public const int IDU0_SON_MTN_SON_SQUAT_01_ZNM = 0;
    public const int IDU0_SON_MTN_SON_SQUAT_02_ZNM = 0;
    public const int IDU0_SON_MTN_SON_SQUAT_03_ZNM = 0;
    public const int IDU0_SON_MTN_SON_ST_B_ZNM = 0;
    public const int IDU0_SON_MTN_SON_ST_D_ZNM = 0;
    public const int IDU0_SON_MTN_SON_ST_F_ZNM = 0;
    public const int IDU0_SON_MTN_SON_TURN_ZNM = 0;
    public const int IDU0_SON_MTN_SON_TURN_BRAKE_ZNM = 0;
    public const int IDU0_SON_MTN_SON_TURN_RUN_ZNM = 0;
    public const int IDU0_SON_MTN_SON_WALK_ZNM = 0;
    public const int IDU0_SON_MTN_SON_WALL_01_ZNM = 0;
    public const int IDU0_SON_MTN_SON_WALL_02_ZNM = 0;
    public const int IDU0_SON_MTN_SON_HANG_ZNM = 0;
    public const int IDU0_SON_MTN_SON_HANG_B_ZNM = 0;
    public const int IDU0_SON_MTN_SON_HANG_F_ZNM = 0;
    public const int IDU0_SON_MTN_SON_BALL_01_ZNM = 0;
    public const int IDU0_SON_MTN_SON_BALL_02_ZNM = 0;
    public const int IDU0_SON_MTN_SON_BREATH_ZNM = 0;
    public const int IDU0_SON_MTN_SON_ROPE_ZNM = 0;
    public const int IDU0_SON_MTN_SON_ROPE_ST_ZNM = 0;
    public const int IDU0_SON_MTN_SON_SLIDE_ZNM = 0;
    public const int IDU0_SON_MTN_SON_SPIN_N_ZNM = 0;
    public const int IDU0_SON_MTN_SON_SPIN_G_ZNM = 0;
    public const int IDU0_SON_MTN_SON_SPIN_B_ZNM = 0;
    public const int IDU0_SON_MTN_SON_FALL_ZNM = 0;
    public const int IDU0_SON_MTN_SON_FALL_TURN_ZNM = 0;
    public const int IDU0_SON_MTN_SON_FALL_R_ZNM = 0;
    public const int IDU0_SON_MTN_SON_FALL_R_TURN_ZNM = 0;
    public const int IDU0_SON_MTN_SON_HANG_ST_ZNM = 0;
    public const int IDU0_SON_MTN_SON_HANG_ACT_ZNM = 0;
    public const int IDU0_SON_MTN_SON_BREATH_J_ZNM = 0;
    public const int IDU0_SON_MTN_SON_TRUCK_RUN_ZNM = 0;
    public const int IDU0_SON_MTN_SON_TRUCK_JP_ZNM = 0;
    public const int IDU0_SON_MTN_SON_TRUCK_DOWN_ZNM = 0;
    public const int IDU0_SON_MTN_SON_TRUCK_ST_ZNM = 0;
    public const int IDU0_SON_MTN_SON_TRUCK_DANGER_ZNM = 0;
    public const int IDU0_SON_MTN_SON_TRUCK_DANGER_ST_ZNM = 0;
    public const int IDU0_SON_MTN_SON_TRUCK_DANGER_RE_ZNM = 0;
    public const int IDU0_SON_MTN_SON_END_1_01_ZNM = 0;
    public const int IDU0_SON_MTN_SON_END_1_02_ZNM = 0;
    public const int IDU0_SON_MTN_SON_END_1_03_ZNM = 0;
    public const int IDU0_SON_MTN_SON_END_1_04_ZNM = 0;
    public const int IDU0_SON_MTN_SON_END_2_03_ZNM = 0;
    public const int IDU0_SON_MTN_SON_END_2_04_ZNM = 0;
    public const int IDU0_SON_MTN_SON_DASH2_L_ZNM = 0;
    public const int IDU0_SON_MTN_SON_DAMAGE_L_ZNM = 0;
    public const int IDU0_SON_MTN_SON_FW_L_ZNM = 0;
    public const int IDU0_SON_MTN_SON_TURN_L_ZNM = 0;
    public const int IDU0_SON_MTN_SON_SQUAT_L_02_ZNM = 0;
    public const int IDU0_SON_MTN_SON_SQUAT_L_03_ZNM = 0;
    public const int IDU0_SON_MTN_SON_BRAKE_L_01_ZNM = 0;
    public const int IDU0_SON_MTN_SON_BRAKE_L_02_ZNM = 0;
    public const int IDU0_SON_MTN_SON_BRAKE_L_03_ZNM = 0;
    public const int IDU0_SON_MTN_SON_TURN_BRAKE_L_ZNM = 0;
    public const int IDU0_SON_MTN_SON_LOOKUP_L_01_ZNM = 0;
    public const int IDU0_SON_MTN_SON_LOOKUP_L_02_ZNM = 0;
    public const int IDU0_SON_MTN_SON_LOOKUP_L_03_ZNM = 0;
    public const int IDU0_SON_MTN_SON_BREATH_L_ZNM = 0;
    public const int IDU0_SON_MTN_SON_CHANGE_L_01_ZNM = 0;
    public const int IDU0_SON_MTN_SON_CHANGE_L_01_1_ZNM = 0;
    public const int IDU0_SON_MTN_SON_CHANGE_L_01_2_ZNM = 0;
    public const int IDU0_SON_MTN_SON_CHANGE_L_02_ZNM = 0;
    public const int IDU0_SON_MTN_SON_TRUCK_RUN_L_ZNM = 0;
    public const int IDU0_SON_MTN_SON_TRUCK_ST_L_ZNM = 0;
    public const int IDU0_SON_MTN_SON_FALL_L_ZNM = 0;
    public const int IDU0_SON_MTN_SON_FALL_TURN_L_ZNM = 0;
    public const int IDU0_SON_MTN_SON_FALL_R_L_ZNM = 0;
    public const int IDU0_SON_MTN_SON_FALL_R_TURN_L_ZNM = 0;
    public const int IDU0_SON_MTN_SON_BREATH_J_L_ZNM = 0;
    public const int IDU0_SON_MTN_SSON_DASH1_ZNM = 0;
    public const int IDU0_SON_MTN_SSON_FW_ZNM = 0;
    public const int IDU0_SON_MTN_SSON_FWWAIT1_01_ZNM = 0;
    public const int IDU0_SON_MTN_SSON_FWWAIT1_02_ZNM = 0;
    public const int IDU0_SON_MTN_SSON_JUMP_F_ZNM = 0;
    public const int IDU0_SON_MTN_SSON_JUMP_S_01_ZNM = 0;
    public const int IDU0_SON_MTN_SSON_JUMP_S_02_ZNM = 0;
    public const int IDU0_SON_MTN_SSON_JUMP_S_03_ZNM = 0;
    public const int IDU0_SON_MTN_SSON_LOOKUP_01_ZNM = 0;
    public const int IDU0_SON_MTN_SSON_LOOKUP_02_ZNM = 0;
    public const int IDU0_SON_MTN_SSON_LOOKUP_03_ZNM = 0;
    public const int IDU0_SON_MTN_SSON_SPIN_N_ZNM = 0;
    public const int IDU0_SON_MTN_SSON_SPIN_G_ZNM = 0;
    public const int IDU0_SON_MTN_SSON_SPIN_B_ZNM = 0;
    public const int IDU0_SON_MTN_SSON_SQUAT_01_ZNM = 0;
    public const int IDU0_SON_MTN_SSON_SQUAT_02_ZNM = 0;
    public const int IDU0_SON_MTN_SSON_SQUAT_03_ZNM = 0;
    public const int IDU0_SON_MTN_SSON_TURN_ZNM = 0;
    public const int IDU0_SON_MTN_SSON_END_1_03_ZNM = 0;
    public const int IDU0_SON_MTN_SSON_END_1_04_ZNM = 0;
    public const int IDU0_SON_MTN_SSON_DASH1_L_ZNM = 0;
    public const int IDU0_SON_MTN_SSON_FW_L_ZNM = 0;
    public const int IDU0_SON_MTN_SSON_SQUAT_L_02_ZNM = 0;
    public const int IDU0_SON_MTN_SSON_SQUAT_L_03_ZNM = 0;
    public const int IDU0_SON_MTN_SSON_TURN_L_ZNM = 0;
    public const int IDU0_SON_MTN_SSON_LOOKUP_L_01_ZNM = 0;
    public const int IDU0_SON_MTN_SSON_LOOKUP_L_02_ZNM = 0;
    public const int IDU0_SON_MTN_SSON_LOOKUP_L_03_ZNM = 0;
    public const int IDU1_SON_MTN_SON_BRAKE01_ZNM = 0;
    public const int IDU1_SON_MTN_SON_BRAKE02_ZNM = 0;
    public const int IDU1_SON_MTN_SON_BRAKE03_ZNM = 0;
    public const int IDU1_SON_MTN_SON_CHANGE_01_ZNM = 0;
    public const int IDU1_SON_MTN_SON_CHANGE_01_1_ZNM = 0;
    public const int IDU1_SON_MTN_SON_CHANGE_01_2_ZNM = 0;
    public const int IDU1_SON_MTN_SON_CHANGE_02_ZNM = 0;
    public const int IDU1_SON_MTN_SON_DAMAGE_ZNM = 0;
    public const int IDU1_SON_MTN_SON_DASH1_ZNM = 0;
    public const int IDU1_SON_MTN_SON_DASH2_ZNM = 0;
    public const int IDU1_SON_MTN_SON_DIE_01_ZNM = 0;
    public const int IDU1_SON_MTN_SON_DIE_02_ZNM = 0;
    public const int IDU1_SON_MTN_SON_FW_ZNM = 0;
    public const int IDU1_SON_MTN_SON_FWEX_ZNM = 0;
    public const int IDU1_SON_MTN_SON_FWWAIT0_01_ZNM = 0;
    public const int IDU1_SON_MTN_SON_FWWAIT0_02_ZNM = 0;
    public const int IDU1_SON_MTN_SON_FWWAIT1_01_ZNM = 0;
    public const int IDU1_SON_MTN_SON_FWWAIT1_02_ZNM = 0;
    public const int IDU1_SON_MTN_SON_FWWAIT2_01_ZNM = 0;
    public const int IDU1_SON_MTN_SON_FWWAIT2_02_ZNM = 0;
    public const int IDU1_SON_MTN_SON_GOAL_01_ZNM = 0;
    public const int IDU1_SON_MTN_SON_GOAL_02_ZNM = 0;
    public const int IDU1_SON_MTN_SON_JUMP_F_ZNM = 0;
    public const int IDU1_SON_MTN_SON_JUMP_S_01_ZNM = 0;
    public const int IDU1_SON_MTN_SON_JUMP_S_02_ZNM = 0;
    public const int IDU1_SON_MTN_SON_JUMP_S_03_ZNM = 0;
    public const int IDU1_SON_MTN_SON_LOOKUP_01_ZNM = 0;
    public const int IDU1_SON_MTN_SON_LOOKUP_02_ZNM = 0;
    public const int IDU1_SON_MTN_SON_LOOKUP_03_ZNM = 0;
    public const int IDU1_SON_MTN_SON_RUN_ZNM = 0;
    public const int IDU1_SON_MTN_SON_SPIN01_ZNM = 0;
    public const int IDU1_SON_MTN_SON_SPIN02_ZNM = 0;
    public const int IDU1_SON_MTN_SON_SPIN_ZNM = 0;
    public const int IDU1_SON_MTN_SON_SQUAT_01_ZNM = 0;
    public const int IDU1_SON_MTN_SON_SQUAT_02_ZNM = 0;
    public const int IDU1_SON_MTN_SON_SQUAT_03_ZNM = 0;
    public const int IDU1_SON_MTN_SON_ST_B_ZNM = 0;
    public const int IDU1_SON_MTN_SON_ST_D_ZNM = 0;
    public const int IDU1_SON_MTN_SON_ST_F_ZNM = 0;
    public const int IDU1_SON_MTN_SON_TURN_ZNM = 0;
    public const int IDU1_SON_MTN_SON_TURN_BRAKE_ZNM = 0;
    public const int IDU1_SON_MTN_SON_TURN_RUN_ZNM = 0;
    public const int IDU1_SON_MTN_SON_WALK_ZNM = 0;
    public const int IDU1_SON_MTN_SON_WALL_01_ZNM = 0;
    public const int IDU1_SON_MTN_SON_WALL_02_ZNM = 0;
    public const int IDU1_SON_MTN_SON_HANG_ZNM = 0;
    public const int IDU1_SON_MTN_SON_HANG_B_ZNM = 0;
    public const int IDU1_SON_MTN_SON_HANG_F_ZNM = 0;
    public const int IDU1_SON_MTN_SON_BALL_01_ZNM = 0;
    public const int IDU1_SON_MTN_SON_BALL_02_ZNM = 0;
    public const int IDU1_SON_MTN_SON_BREATH_ZNM = 0;
    public const int IDU1_SON_MTN_SON_ROPE_ZNM = 0;
    public const int IDU1_SON_MTN_SON_ROPE_ST_ZNM = 0;
    public const int IDU1_SON_MTN_SON_SLIDE_ZNM = 0;
    public const int IDU1_SON_MTN_SON_SPIN_N_ZNM = 0;
    public const int IDU1_SON_MTN_SON_SPIN_G_ZNM = 0;
    public const int IDU1_SON_MTN_SON_SPIN_B_ZNM = 0;
    public const int IDU1_SON_MTN_SON_FALL_ZNM = 0;
    public const int IDU1_SON_MTN_SON_FALL_TURN_ZNM = 0;
    public const int IDU1_SON_MTN_SON_FALL_R_ZNM = 0;
    public const int IDU1_SON_MTN_SON_FALL_R_TURN_ZNM = 0;
    public const int IDU1_SON_MTN_SON_HANG_ST_ZNM = 0;
    public const int IDU1_SON_MTN_SON_HANG_ACT_ZNM = 0;
    public const int IDU1_SON_MTN_SON_BREATH_J_ZNM = 0;
    public const int IDU1_SON_MTN_SON_TRUCK_RUN_ZNM = 0;
    public const int IDU1_SON_MTN_SON_TRUCK_JP_ZNM = 0;
    public const int IDU1_SON_MTN_SON_TRUCK_DOWN_ZNM = 0;
    public const int IDU1_SON_MTN_SON_TRUCK_ST_ZNM = 0;
    public const int IDU1_SON_MTN_SON_TRUCK_DANGER_ZNM = 0;
    public const int IDU1_SON_MTN_SON_TRUCK_DANGER_ST_ZNM = 0;
    public const int IDU1_SON_MTN_SON_TRUCK_DANGER_RE_ZNM = 0;
    public const int IDU1_SON_MTN_SON_END_1_01_ZNM = 0;
    public const int IDU1_SON_MTN_SON_END_1_02_ZNM = 0;
    public const int IDU1_SON_MTN_SON_END_1_03_ZNM = 0;
    public const int IDU1_SON_MTN_SON_END_1_04_ZNM = 0;
    public const int IDU1_SON_MTN_SON_END_2_03_ZNM = 0;
    public const int IDU1_SON_MTN_SON_END_2_04_ZNM = 0;
    public const int IDU1_SON_MTN_SON_DASH2_L_ZNM = 0;
    public const int IDU1_SON_MTN_SON_DAMAGE_L_ZNM = 0;
    public const int IDU1_SON_MTN_SON_FW_L_ZNM = 0;
    public const int IDU1_SON_MTN_SON_TURN_L_ZNM = 0;
    public const int IDU1_SON_MTN_SON_SQUAT_L_02_ZNM = 0;
    public const int IDU1_SON_MTN_SON_SQUAT_L_03_ZNM = 0;
    public const int IDU1_SON_MTN_SON_BRAKE_L_01_ZNM = 0;
    public const int IDU1_SON_MTN_SON_BRAKE_L_02_ZNM = 0;
    public const int IDU1_SON_MTN_SON_BRAKE_L_03_ZNM = 0;
    public const int IDU1_SON_MTN_SON_TURN_BRAKE_L_ZNM = 0;
    public const int IDU1_SON_MTN_SON_LOOKUP_L_01_ZNM = 0;
    public const int IDU1_SON_MTN_SON_LOOKUP_L_02_ZNM = 0;
    public const int IDU1_SON_MTN_SON_LOOKUP_L_03_ZNM = 0;
    public const int IDU1_SON_MTN_SON_BREATH_L_ZNM = 0;
    public const int IDU1_SON_MTN_SON_CHANGE_L_01_ZNM = 0;
    public const int IDU1_SON_MTN_SON_CHANGE_L_01_1_ZNM = 0;
    public const int IDU1_SON_MTN_SON_CHANGE_L_01_2_ZNM = 0;
    public const int IDU1_SON_MTN_SON_CHANGE_L_02_ZNM = 0;
    public const int IDU1_SON_MTN_SON_TRUCK_RUN_L_ZNM = 0;
    public const int IDU1_SON_MTN_SON_TRUCK_ST_L_ZNM = 0;
    public const int IDU1_SON_MTN_SON_FALL_L_ZNM = 0;
    public const int IDU1_SON_MTN_SON_FALL_TURN_L_ZNM = 0;
    public const int IDU1_SON_MTN_SON_FALL_R_L_ZNM = 0;
    public const int IDU1_SON_MTN_SON_FALL_R_TURN_L_ZNM = 0;
    public const int IDU1_SON_MTN_SON_BREATH_J_L_ZNM = 0;
    public const int IDU1_SON_MTN_SSON_DASH1_ZNM = 0;
    public const int IDU1_SON_MTN_SSON_FW_ZNM = 0;
    public const int IDU1_SON_MTN_SSON_FWWAIT1_01_ZNM = 0;
    public const int IDU1_SON_MTN_SSON_FWWAIT1_02_ZNM = 0;
    public const int IDU1_SON_MTN_SSON_JUMP_F_ZNM = 0;
    public const int IDU1_SON_MTN_SSON_JUMP_S_01_ZNM = 0;
    public const int IDU1_SON_MTN_SSON_JUMP_S_02_ZNM = 0;
    public const int IDU1_SON_MTN_SSON_JUMP_S_03_ZNM = 0;
    public const int IDU1_SON_MTN_SSON_LOOKUP_01_ZNM = 0;
    public const int IDU1_SON_MTN_SSON_LOOKUP_02_ZNM = 0;
    public const int IDU1_SON_MTN_SSON_LOOKUP_03_ZNM = 0;
    public const int IDU1_SON_MTN_SSON_SPIN_N_ZNM = 0;
    public const int IDU1_SON_MTN_SSON_SPIN_G_ZNM = 0;
    public const int IDU1_SON_MTN_SSON_SPIN_B_ZNM = 0;
    public const int IDU1_SON_MTN_SSON_SQUAT_01_ZNM = 0;
    public const int IDU1_SON_MTN_SSON_SQUAT_02_ZNM = 0;
    public const int IDU1_SON_MTN_SSON_SQUAT_03_ZNM = 0;
    public const int IDU1_SON_MTN_SSON_TURN_ZNM = 0;
    public const int IDU1_SON_MTN_SSON_END_1_03_ZNM = 0;
    public const int IDU1_SON_MTN_SSON_END_1_04_ZNM = 0;
    public const int IDU1_SON_MTN_SSON_DASH1_L_ZNM = 0;
    public const int IDU1_SON_MTN_SSON_FW_L_ZNM = 0;
    public const int IDU1_SON_MTN_SSON_SQUAT_L_02_ZNM = 0;
    public const int IDU1_SON_MTN_SSON_SQUAT_L_03_ZNM = 0;
    public const int IDU1_SON_MTN_SSON_TURN_L_ZNM = 0;
    public const int IDU1_SON_MTN_SSON_LOOKUP_L_01_ZNM = 0;
    public const int IDU1_SON_MTN_SSON_LOOKUP_L_02_ZNM = 0;
    public const int IDU1_SON_MTN_SSON_LOOKUP_L_03_ZNM = 0;
    public const string IDS_SON_MTN_SON_BRAKE01_ZNM = "SON_BRAKE01.ZNM";
    public const string IDS_SON_MTN_SON_BRAKE02_ZNM = "SON_BRAKE02.ZNM";
    public const string IDS_SON_MTN_SON_BRAKE03_ZNM = "SON_BRAKE03.ZNM";
    public const string IDS_SON_MTN_SON_CHANGE_01_ZNM = "SON_CHANGE_01.ZNM";
    public const string IDS_SON_MTN_SON_CHANGE_01_1_ZNM = "SON_CHANGE_01_1.ZNM";
    public const string IDS_SON_MTN_SON_CHANGE_01_2_ZNM = "SON_CHANGE_01_2.ZNM";
    public const string IDS_SON_MTN_SON_CHANGE_02_ZNM = "SON_CHANGE_02.ZNM";
    public const string IDS_SON_MTN_SON_DAMAGE_ZNM = "SON_DAMAGE.ZNM";
    public const string IDS_SON_MTN_SON_DASH1_ZNM = "SON_DASH1.ZNM";
    public const string IDS_SON_MTN_SON_DASH2_ZNM = "SON_DASH2.ZNM";
    public const string IDS_SON_MTN_SON_DIE_01_ZNM = "SON_DIE_01.ZNM";
    public const string IDS_SON_MTN_SON_DIE_02_ZNM = "SON_DIE_02.ZNM";
    public const string IDS_SON_MTN_SON_FW_ZNM = "SON_FW.ZNM";
    public const string IDS_SON_MTN_SON_FWEX_ZNM = "SON_FWEX.ZNM";
    public const string IDS_SON_MTN_SON_FWWAIT0_01_ZNM = "SON_FWWAIT0_01.ZNM";
    public const string IDS_SON_MTN_SON_FWWAIT0_02_ZNM = "SON_FWWAIT0_02.ZNM";
    public const string IDS_SON_MTN_SON_FWWAIT1_01_ZNM = "SON_FWWAIT1_01.ZNM";
    public const string IDS_SON_MTN_SON_FWWAIT1_02_ZNM = "SON_FWWAIT1_02.ZNM";
    public const string IDS_SON_MTN_SON_FWWAIT2_01_ZNM = "SON_FWWAIT2_01.ZNM";
    public const string IDS_SON_MTN_SON_FWWAIT2_02_ZNM = "SON_FWWAIT2_02.ZNM";
    public const string IDS_SON_MTN_SON_GOAL_01_ZNM = "SON_GOAL_01.ZNM";
    public const string IDS_SON_MTN_SON_GOAL_02_ZNM = "SON_GOAL_02.ZNM";
    public const string IDS_SON_MTN_SON_JUMP_F_ZNM = "SON_JUMP_F.ZNM";
    public const string IDS_SON_MTN_SON_JUMP_S_01_ZNM = "SON_JUMP_S_01.ZNM";
    public const string IDS_SON_MTN_SON_JUMP_S_02_ZNM = "SON_JUMP_S_02.ZNM";
    public const string IDS_SON_MTN_SON_JUMP_S_03_ZNM = "SON_JUMP_S_03.ZNM";
    public const string IDS_SON_MTN_SON_LOOKUP_01_ZNM = "SON_LOOKUP_01.ZNM";
    public const string IDS_SON_MTN_SON_LOOKUP_02_ZNM = "SON_LOOKUP_02.ZNM";
    public const string IDS_SON_MTN_SON_LOOKUP_03_ZNM = "SON_LOOKUP_03.ZNM";
    public const string IDS_SON_MTN_SON_RUN_ZNM = "SON_RUN.ZNM";
    public const string IDS_SON_MTN_SON_SPIN01_ZNM = "SON_SPIN01.ZNM";
    public const string IDS_SON_MTN_SON_SPIN02_ZNM = "SON_SPIN02.ZNM";
    public const string IDS_SON_MTN_SON_SPIN_ZNM = "SON_SPIN.ZNM";
    public const string IDS_SON_MTN_SON_SQUAT_01_ZNM = "SON_SQUAT_01.ZNM";
    public const string IDS_SON_MTN_SON_SQUAT_02_ZNM = "SON_SQUAT_02.ZNM";
    public const string IDS_SON_MTN_SON_SQUAT_03_ZNM = "SON_SQUAT_03.ZNM";
    public const string IDS_SON_MTN_SON_ST_B_ZNM = "SON_ST_B.ZNM";
    public const string IDS_SON_MTN_SON_ST_D_ZNM = "SON_ST_D.ZNM";
    public const string IDS_SON_MTN_SON_ST_F_ZNM = "SON_ST_F.ZNM";
    public const string IDS_SON_MTN_SON_TURN_ZNM = "SON_TURN.ZNM";
    public const string IDS_SON_MTN_SON_TURN_BRAKE_ZNM = "SON_TURN_BRAKE.ZNM";
    public const string IDS_SON_MTN_SON_TURN_RUN_ZNM = "SON_TURN_RUN.ZNM";
    public const string IDS_SON_MTN_SON_WALK_ZNM = "SON_WALK.ZNM";
    public const string IDS_SON_MTN_SON_WALL_01_ZNM = "SON_WALL_01.ZNM";
    public const string IDS_SON_MTN_SON_WALL_02_ZNM = "SON_WALL_02.ZNM";
    public const string IDS_SON_MTN_SON_HANG_ZNM = "SON_HANG.ZNM";
    public const string IDS_SON_MTN_SON_HANG_B_ZNM = "SON_HANG_B.ZNM";
    public const string IDS_SON_MTN_SON_HANG_F_ZNM = "SON_HANG_F.ZNM";
    public const string IDS_SON_MTN_SON_BALL_01_ZNM = "SON_BALL_01.ZNM";
    public const string IDS_SON_MTN_SON_BALL_02_ZNM = "SON_BALL_02.ZNM";
    public const string IDS_SON_MTN_SON_BREATH_ZNM = "SON_BREATH.ZNM";
    public const string IDS_SON_MTN_SON_ROPE_ZNM = "SON_ROPE.ZNM";
    public const string IDS_SON_MTN_SON_ROPE_ST_ZNM = "SON_ROPE_ST.ZNM";
    public const string IDS_SON_MTN_SON_SLIDE_ZNM = "SON_SLIDE.ZNM";
    public const string IDS_SON_MTN_SON_SPIN_N_ZNM = "SON_SPIN_N.ZNM";
    public const string IDS_SON_MTN_SON_SPIN_G_ZNM = "SON_SPIN_G.ZNM";
    public const string IDS_SON_MTN_SON_SPIN_B_ZNM = "SON_SPIN_B.ZNM";
    public const string IDS_SON_MTN_SON_FALL_ZNM = "SON_FALL.ZNM";
    public const string IDS_SON_MTN_SON_FALL_TURN_ZNM = "SON_FALL_TURN.ZNM";
    public const string IDS_SON_MTN_SON_FALL_R_ZNM = "SON_FALL_R.ZNM";
    public const string IDS_SON_MTN_SON_FALL_R_TURN_ZNM = "SON_FALL_R_TURN.ZNM";
    public const string IDS_SON_MTN_SON_HANG_ST_ZNM = "SON_HANG_ST.ZNM";
    public const string IDS_SON_MTN_SON_HANG_ACT_ZNM = "SON_HANG_ACT.ZNM";
    public const string IDS_SON_MTN_SON_BREATH_J_ZNM = "SON_BREATH_J.ZNM";
    public const string IDS_SON_MTN_SON_TRUCK_RUN_ZNM = "SON_TRUCK_RUN.ZNM";
    public const string IDS_SON_MTN_SON_TRUCK_JP_ZNM = "SON_TRUCK_JP.ZNM";
    public const string IDS_SON_MTN_SON_TRUCK_DOWN_ZNM = "SON_TRUCK_DOWN.ZNM";
    public const string IDS_SON_MTN_SON_TRUCK_ST_ZNM = "SON_TRUCK_ST.ZNM";
    public const string IDS_SON_MTN_SON_TRUCK_DANGER_ZNM = "SON_TRUCK_DANGER.ZNM";
    public const string IDS_SON_MTN_SON_TRUCK_DANGER_ST_ZNM = "SON_TRUCK_DANGER_ST.ZNM";
    public const string IDS_SON_MTN_SON_TRUCK_DANGER_RE_ZNM = "SON_TRUCK_DANGER_RE.ZNM";
    public const string IDS_SON_MTN_SON_END_1_01_ZNM = "SON_END_1_01.ZNM";
    public const string IDS_SON_MTN_SON_END_1_02_ZNM = "SON_END_1_02.ZNM";
    public const string IDS_SON_MTN_SON_END_1_03_ZNM = "SON_END_1_03.ZNM";
    public const string IDS_SON_MTN_SON_END_1_04_ZNM = "SON_END_1_04.ZNM";
    public const string IDS_SON_MTN_SON_END_2_03_ZNM = "SON_END_2_03.ZNM";
    public const string IDS_SON_MTN_SON_END_2_04_ZNM = "SON_END_2_04.ZNM";
    public const string IDS_SON_MTN_SON_DASH2_L_ZNM = "SON_DASH2_L.ZNM";
    public const string IDS_SON_MTN_SON_DAMAGE_L_ZNM = "SON_DAMAGE_L.ZNM";
    public const string IDS_SON_MTN_SON_FW_L_ZNM = "SON_FW_L.ZNM";
    public const string IDS_SON_MTN_SON_TURN_L_ZNM = "SON_TURN_L.ZNM";
    public const string IDS_SON_MTN_SON_SQUAT_L_02_ZNM = "SON_SQUAT_L_02.ZNM";
    public const string IDS_SON_MTN_SON_SQUAT_L_03_ZNM = "SON_SQUAT_L_03.ZNM";
    public const string IDS_SON_MTN_SON_BRAKE_L_01_ZNM = "SON_BRAKE_L_01.ZNM";
    public const string IDS_SON_MTN_SON_BRAKE_L_02_ZNM = "SON_BRAKE_L_02.ZNM";
    public const string IDS_SON_MTN_SON_BRAKE_L_03_ZNM = "SON_BRAKE_L_03.ZNM";
    public const string IDS_SON_MTN_SON_TURN_BRAKE_L_ZNM = "SON_TURN_BRAKE_L.ZNM";
    public const string IDS_SON_MTN_SON_LOOKUP_L_01_ZNM = "SON_LOOKUP_L_01.ZNM";
    public const string IDS_SON_MTN_SON_LOOKUP_L_02_ZNM = "SON_LOOKUP_L_02.ZNM";
    public const string IDS_SON_MTN_SON_LOOKUP_L_03_ZNM = "SON_LOOKUP_L_03.ZNM";
    public const string IDS_SON_MTN_SON_BREATH_L_ZNM = "SON_BREATH_L.ZNM";
    public const string IDS_SON_MTN_SON_CHANGE_L_01_ZNM = "SON_CHANGE_L_01.ZNM";
    public const string IDS_SON_MTN_SON_CHANGE_L_01_1_ZNM = "SON_CHANGE_L_01_1.ZNM";
    public const string IDS_SON_MTN_SON_CHANGE_L_01_2_ZNM = "SON_CHANGE_L_01_2.ZNM";
    public const string IDS_SON_MTN_SON_CHANGE_L_02_ZNM = "SON_CHANGE_L_02.ZNM";
    public const string IDS_SON_MTN_SON_TRUCK_RUN_L_ZNM = "SON_TRUCK_RUN_L.ZNM";
    public const string IDS_SON_MTN_SON_TRUCK_ST_L_ZNM = "SON_TRUCK_ST_L.ZNM";
    public const string IDS_SON_MTN_SON_FALL_L_ZNM = "SON_FALL_L.ZNM";
    public const string IDS_SON_MTN_SON_FALL_TURN_L_ZNM = "SON_FALL_TURN_L.ZNM";
    public const string IDS_SON_MTN_SON_FALL_R_L_ZNM = "SON_FALL_R_L.ZNM";
    public const string IDS_SON_MTN_SON_FALL_R_TURN_L_ZNM = "SON_FALL_R_TURN_L.ZNM";
    public const string IDS_SON_MTN_SON_BREATH_J_L_ZNM = "SON_BREATH_J_L.ZNM";
    public const string IDS_SON_MTN_SSON_DASH1_ZNM = "SSON_DASH1.ZNM";
    public const string IDS_SON_MTN_SSON_FW_ZNM = "SSON_FW.ZNM";
    public const string IDS_SON_MTN_SSON_FWWAIT1_01_ZNM = "SSON_FWWAIT1_01.ZNM";
    public const string IDS_SON_MTN_SSON_FWWAIT1_02_ZNM = "SSON_FWWAIT1_02.ZNM";
    public const string IDS_SON_MTN_SSON_JUMP_F_ZNM = "SSON_JUMP_F.ZNM";
    public const string IDS_SON_MTN_SSON_JUMP_S_01_ZNM = "SSON_JUMP_S_01.ZNM";
    public const string IDS_SON_MTN_SSON_JUMP_S_02_ZNM = "SSON_JUMP_S_02.ZNM";
    public const string IDS_SON_MTN_SSON_JUMP_S_03_ZNM = "SSON_JUMP_S_03.ZNM";
    public const string IDS_SON_MTN_SSON_LOOKUP_01_ZNM = "SSON_LOOKUP_01.ZNM";
    public const string IDS_SON_MTN_SSON_LOOKUP_02_ZNM = "SSON_LOOKUP_02.ZNM";
    public const string IDS_SON_MTN_SSON_LOOKUP_03_ZNM = "SSON_LOOKUP_03.ZNM";
    public const string IDS_SON_MTN_SSON_SPIN_N_ZNM = "SSON_SPIN_N.ZNM";
    public const string IDS_SON_MTN_SSON_SPIN_G_ZNM = "SSON_SPIN_G.ZNM";
    public const string IDS_SON_MTN_SSON_SPIN_B_ZNM = "SSON_SPIN_B.ZNM";
    public const string IDS_SON_MTN_SSON_SQUAT_01_ZNM = "SSON_SQUAT_01.ZNM";
    public const string IDS_SON_MTN_SSON_SQUAT_02_ZNM = "SSON_SQUAT_02.ZNM";
    public const string IDS_SON_MTN_SSON_SQUAT_03_ZNM = "SSON_SQUAT_03.ZNM";
    public const string IDS_SON_MTN_SSON_TURN_ZNM = "SSON_TURN.ZNM";
    public const string IDS_SON_MTN_SSON_END_1_03_ZNM = "SSON_END_1_03.ZNM";
    public const string IDS_SON_MTN_SSON_END_1_04_ZNM = "SSON_END_1_04.ZNM";
    public const string IDS_SON_MTN_SSON_DASH1_L_ZNM = "SSON_DASH1_L.ZNM";
    public const string IDS_SON_MTN_SSON_FW_L_ZNM = "SSON_FW_L.ZNM";
    public const string IDS_SON_MTN_SSON_SQUAT_L_02_ZNM = "SSON_SQUAT_L_02.ZNM";
    public const string IDS_SON_MTN_SSON_SQUAT_L_03_ZNM = "SSON_SQUAT_L_03.ZNM";
    public const string IDS_SON_MTN_SSON_TURN_L_ZNM = "SSON_TURN_L.ZNM";
    public const string IDS_SON_MTN_SSON_LOOKUP_L_01_ZNM = "SSON_LOOKUP_L_01.ZNM";
    public const string IDS_SON_MTN_SSON_LOOKUP_L_02_ZNM = "SSON_LOOKUP_L_02.ZNM";
    public const string IDS_SON_MTN_SSON_LOOKUP_L_03_ZNM = "SSON_LOOKUP_L_03.ZNM";
    public const int IDB_SS01_MAPFAR_MAPFAR_SS01_MDL_AMB = 0;
    public const int IDB_SS01_MAPFAR_MAPFAR_SS01_TEX_AMB = 1;
    public const int IDB_SS01_MAPFAR_MAPFAR_SS01_MAT_AMB = 2;
    public const int IDU0_SS01_MAPFAR_MAPFAR_SS01_MDL_AMB = 0;
    public const int IDU0_SS01_MAPFAR_MAPFAR_SS01_TEX_AMB = 0;
    public const int IDU0_SS01_MAPFAR_MAPFAR_SS01_MAT_AMB = 0;
    public const int IDU1_SS01_MAPFAR_MAPFAR_SS01_MDL_AMB = 0;
    public const int IDU1_SS01_MAPFAR_MAPFAR_SS01_TEX_AMB = 0;
    public const int IDU1_SS01_MAPFAR_MAPFAR_SS01_MAT_AMB = 0;
    public const string IDS_SS01_MAPFAR_MAPFAR_SS01_MDL_AMB = "MAPFAR_SS01_MDL.AMB";
    public const string IDS_SS01_MAPFAR_MAPFAR_SS01_TEX_AMB = "MAPFAR_SS01_TEX.AMB";
    public const string IDS_SS01_MAPFAR_MAPFAR_SS01_MAT_AMB = "MAPFAR_SS01_MAT.AMB";
    public const int IDB_SS02_MAPFAR_MAPFAR_SS02_MDL_AMB = 0;
    public const int IDB_SS02_MAPFAR_MAPFAR_SS02_TEX_AMB = 1;
    public const int IDB_SS02_MAPFAR_MAPFAR_SS02_MAT_AMB = 2;
    public const int IDU0_SS02_MAPFAR_MAPFAR_SS02_MDL_AMB = 0;
    public const int IDU0_SS02_MAPFAR_MAPFAR_SS02_TEX_AMB = 0;
    public const int IDU0_SS02_MAPFAR_MAPFAR_SS02_MAT_AMB = 0;
    public const int IDU1_SS02_MAPFAR_MAPFAR_SS02_MDL_AMB = 0;
    public const int IDU1_SS02_MAPFAR_MAPFAR_SS02_TEX_AMB = 0;
    public const int IDU1_SS02_MAPFAR_MAPFAR_SS02_MAT_AMB = 0;
    public const string IDS_SS02_MAPFAR_MAPFAR_SS02_MDL_AMB = "MAPFAR_SS02_MDL.AMB";
    public const string IDS_SS02_MAPFAR_MAPFAR_SS02_TEX_AMB = "MAPFAR_SS02_TEX.AMB";
    public const string IDS_SS02_MAPFAR_MAPFAR_SS02_MAT_AMB = "MAPFAR_SS02_MAT.AMB";
    public const int IDB_SS03_MAPFAR_MAPFAR_SS03_MDL_AMB = 0;
    public const int IDB_SS03_MAPFAR_MAPFAR_SS03_TEX_AMB = 1;
    public const int IDB_SS03_MAPFAR_MAPFAR_SS03_MAT_AMB = 2;
    public const int IDU0_SS03_MAPFAR_MAPFAR_SS03_MDL_AMB = 0;
    public const int IDU0_SS03_MAPFAR_MAPFAR_SS03_TEX_AMB = 0;
    public const int IDU0_SS03_MAPFAR_MAPFAR_SS03_MAT_AMB = 0;
    public const int IDU1_SS03_MAPFAR_MAPFAR_SS03_MDL_AMB = 0;
    public const int IDU1_SS03_MAPFAR_MAPFAR_SS03_TEX_AMB = 0;
    public const int IDU1_SS03_MAPFAR_MAPFAR_SS03_MAT_AMB = 0;
    public const string IDS_SS03_MAPFAR_MAPFAR_SS03_MDL_AMB = "MAPFAR_SS03_MDL.AMB";
    public const string IDS_SS03_MAPFAR_MAPFAR_SS03_TEX_AMB = "MAPFAR_SS03_TEX.AMB";
    public const string IDS_SS03_MAPFAR_MAPFAR_SS03_MAT_AMB = "MAPFAR_SS03_MAT.AMB";
    public const int IDB_SS04_MAPFAR_MAPFAR_SS04_MDL_AMB = 0;
    public const int IDB_SS04_MAPFAR_MAPFAR_SS04_TEX_AMB = 1;
    public const int IDB_SS04_MAPFAR_MAPFAR_SS04_MAT_AMB = 2;
    public const int IDU0_SS04_MAPFAR_MAPFAR_SS04_MDL_AMB = 0;
    public const int IDU0_SS04_MAPFAR_MAPFAR_SS04_TEX_AMB = 0;
    public const int IDU0_SS04_MAPFAR_MAPFAR_SS04_MAT_AMB = 0;
    public const int IDU1_SS04_MAPFAR_MAPFAR_SS04_MDL_AMB = 0;
    public const int IDU1_SS04_MAPFAR_MAPFAR_SS04_TEX_AMB = 0;
    public const int IDU1_SS04_MAPFAR_MAPFAR_SS04_MAT_AMB = 0;
    public const string IDS_SS04_MAPFAR_MAPFAR_SS04_MDL_AMB = "MAPFAR_SS04_MDL.AMB";
    public const string IDS_SS04_MAPFAR_MAPFAR_SS04_TEX_AMB = "MAPFAR_SS04_TEX.AMB";
    public const string IDS_SS04_MAPFAR_MAPFAR_SS04_MAT_AMB = "MAPFAR_SS04_MAT.AMB";
    public const int IDB_SS05_MAPFAR_MAPFAR_SS05_MDL_AMB = 0;
    public const int IDB_SS05_MAPFAR_MAPFAR_SS05_TEX_AMB = 1;
    public const int IDB_SS05_MAPFAR_MAPFAR_SS05_MAT_AMB = 2;
    public const int IDU0_SS05_MAPFAR_MAPFAR_SS05_MDL_AMB = 0;
    public const int IDU0_SS05_MAPFAR_MAPFAR_SS05_TEX_AMB = 0;
    public const int IDU0_SS05_MAPFAR_MAPFAR_SS05_MAT_AMB = 0;
    public const int IDU1_SS05_MAPFAR_MAPFAR_SS05_MDL_AMB = 0;
    public const int IDU1_SS05_MAPFAR_MAPFAR_SS05_TEX_AMB = 0;
    public const int IDU1_SS05_MAPFAR_MAPFAR_SS05_MAT_AMB = 0;
    public const string IDS_SS05_MAPFAR_MAPFAR_SS05_MDL_AMB = "MAPFAR_SS05_MDL.AMB";
    public const string IDS_SS05_MAPFAR_MAPFAR_SS05_TEX_AMB = "MAPFAR_SS05_TEX.AMB";
    public const string IDS_SS05_MAPFAR_MAPFAR_SS05_MAT_AMB = "MAPFAR_SS05_MAT.AMB";
    public const int IDB_SS06_MAPFAR_MAPFAR_SS06_MDL_AMB = 0;
    public const int IDB_SS06_MAPFAR_MAPFAR_SS06_TEX_AMB = 1;
    public const int IDB_SS06_MAPFAR_MAPFAR_SS06_MAT_AMB = 2;
    public const int IDU0_SS06_MAPFAR_MAPFAR_SS06_MDL_AMB = 0;
    public const int IDU0_SS06_MAPFAR_MAPFAR_SS06_TEX_AMB = 0;
    public const int IDU0_SS06_MAPFAR_MAPFAR_SS06_MAT_AMB = 0;
    public const int IDU1_SS06_MAPFAR_MAPFAR_SS06_MDL_AMB = 0;
    public const int IDU1_SS06_MAPFAR_MAPFAR_SS06_TEX_AMB = 0;
    public const int IDU1_SS06_MAPFAR_MAPFAR_SS06_MAT_AMB = 0;
    public const string IDS_SS06_MAPFAR_MAPFAR_SS06_MDL_AMB = "MAPFAR_SS06_MDL.AMB";
    public const string IDS_SS06_MAPFAR_MAPFAR_SS06_TEX_AMB = "MAPFAR_SS06_TEX.AMB";
    public const string IDS_SS06_MAPFAR_MAPFAR_SS06_MAT_AMB = "MAPFAR_SS06_MAT.AMB";
    public const int IDB_SS07_MAPFAR_MAPFAR_SS07_MDL_AMB = 0;
    public const int IDB_SS07_MAPFAR_MAPFAR_SS07_TEX_AMB = 1;
    public const int IDB_SS07_MAPFAR_MAPFAR_SS07_MAT_AMB = 2;
    public const int IDU0_SS07_MAPFAR_MAPFAR_SS07_MDL_AMB = 0;
    public const int IDU0_SS07_MAPFAR_MAPFAR_SS07_TEX_AMB = 0;
    public const int IDU0_SS07_MAPFAR_MAPFAR_SS07_MAT_AMB = 0;
    public const int IDU1_SS07_MAPFAR_MAPFAR_SS07_MDL_AMB = 0;
    public const int IDU1_SS07_MAPFAR_MAPFAR_SS07_TEX_AMB = 0;
    public const int IDU1_SS07_MAPFAR_MAPFAR_SS07_MAT_AMB = 0;
    public const string IDS_SS07_MAPFAR_MAPFAR_SS07_MDL_AMB = "MAPFAR_SS07_MDL.AMB";
    public const string IDS_SS07_MAPFAR_MAPFAR_SS07_TEX_AMB = "MAPFAR_SS07_TEX.AMB";
    public const string IDS_SS07_MAPFAR_MAPFAR_SS07_MAT_AMB = "MAPFAR_SS07_MAT.AMB";
    public const int IDB_SSON_MDL_SSON_MODEL_ZNO = 0;
    public const int IDB_SSON_MDL_SSON_SPINMODEL_ZNO = 1;
    public const int IDU0_SSON_MDL_SSON_MODEL_ZNO = 0;
    public const int IDU0_SSON_MDL_SSON_SPINMODEL_ZNO = 0;
    public const int IDU1_SSON_MDL_SSON_MODEL_ZNO = 0;
    public const int IDU1_SSON_MDL_SSON_SPINMODEL_ZNO = 0;
    public const string IDS_SSON_MDL_SSON_MODEL_ZNO = "SSON_MODEL.ZNO";
    public const string IDS_SSON_MDL_SSON_SPINMODEL_ZNO = "SSON_SPINMODEL.ZNO";
    public const int IDB_ZONE1_MAPFAR_MAPFAR_ZONE1_MDL_AMB = 0;
    public const int IDB_ZONE1_MAPFAR_MAPFAR_TEX_AMB = 1;
    public const int IDB_ZONE1_MAPFAR_MAPFAR_ZONE1_MAT_AMB = 2;
    public const int IDB_ZONE1_MAPFAR_MAPFAR_ZONE1_RENDER_MDL_AMB = 3;
    public const int IDU0_ZONE1_MAPFAR_MAPFAR_ZONE1_MDL_AMB = 0;
    public const int IDU0_ZONE1_MAPFAR_MAPFAR_TEX_AMB = 0;
    public const int IDU0_ZONE1_MAPFAR_MAPFAR_ZONE1_MAT_AMB = 0;
    public const int IDU0_ZONE1_MAPFAR_MAPFAR_ZONE1_RENDER_MDL_AMB = 0;
    public const int IDU1_ZONE1_MAPFAR_MAPFAR_ZONE1_MDL_AMB = 0;
    public const int IDU1_ZONE1_MAPFAR_MAPFAR_TEX_AMB = 0;
    public const int IDU1_ZONE1_MAPFAR_MAPFAR_ZONE1_MAT_AMB = 0;
    public const int IDU1_ZONE1_MAPFAR_MAPFAR_ZONE1_RENDER_MDL_AMB = 0;
    public const string IDS_ZONE1_MAPFAR_MAPFAR_ZONE1_MDL_AMB = "MAPFAR_ZONE1_MDL.AMB";
    public const string IDS_ZONE1_MAPFAR_MAPFAR_TEX_AMB = "MAPFAR_TEX.AMB";
    public const string IDS_ZONE1_MAPFAR_MAPFAR_ZONE1_MAT_AMB = "MAPFAR_ZONE1_MAT.AMB";
    public const string IDS_ZONE1_MAPFAR_MAPFAR_ZONE1_RENDER_MDL_AMB = "MAPFAR_ZONE1_RENDER_MDL.AMB";
    public const int IDB_ZONE1_T_PC_ZONE1_T_PC_TXB = 0;
    public const int IDB_ZONE1_T_PC_Z1_TEX01_DDS = 1;
    public const int IDB_ZONE1_T_PC_Z1_TEX02_DDS = 2;
    public const int IDB_ZONE1_T_PC_Z1_TEX03_DDS = 3;
    public const int IDB_ZONE1_T_PC_Z1_TEXN_DDS = 4;
    public const int IDB_ZONE1_T_PC_Z1_TEXD01_DDS = 5;
    public const int IDB_ZONE1_T_PC_Z1_TEXD02_DDS = 6;
    public const int IDU0_ZONE1_T_PC_ZONE1_T_PC_TXB = 0;
    public const int IDU0_ZONE1_T_PC_Z1_TEX01_DDS = 0;
    public const int IDU0_ZONE1_T_PC_Z1_TEX02_DDS = 0;
    public const int IDU0_ZONE1_T_PC_Z1_TEX03_DDS = 0;
    public const int IDU0_ZONE1_T_PC_Z1_TEXN_DDS = 0;
    public const int IDU0_ZONE1_T_PC_Z1_TEXD01_DDS = 0;
    public const int IDU0_ZONE1_T_PC_Z1_TEXD02_DDS = 0;
    public const int IDU1_ZONE1_T_PC_ZONE1_T_PC_TXB = 0;
    public const int IDU1_ZONE1_T_PC_Z1_TEX01_DDS = 0;
    public const int IDU1_ZONE1_T_PC_Z1_TEX02_DDS = 0;
    public const int IDU1_ZONE1_T_PC_Z1_TEX03_DDS = 0;
    public const int IDU1_ZONE1_T_PC_Z1_TEXN_DDS = 0;
    public const int IDU1_ZONE1_T_PC_Z1_TEXD01_DDS = 0;
    public const int IDU1_ZONE1_T_PC_Z1_TEXD02_DDS = 0;
    public const string IDS_ZONE1_T_PC_ZONE1_T_PC_TXB = "ZONE1_T_PC.TXB";
    public const string IDS_ZONE1_T_PC_Z1_TEX01_DDS = "Z1_TEX01.DDS";
    public const string IDS_ZONE1_T_PC_Z1_TEX02_DDS = "Z1_TEX02.DDS";
    public const string IDS_ZONE1_T_PC_Z1_TEX03_DDS = "Z1_TEX03.DDS";
    public const string IDS_ZONE1_T_PC_Z1_TEXN_DDS = "Z1_TEXN.DDS";
    public const string IDS_ZONE1_T_PC_Z1_TEXD01_DDS = "Z1_TEXD01.DDS";
    public const string IDS_ZONE1_T_PC_Z1_TEXD02_DDS = "Z1_TEXD02.DDS";
    public const int IDB_ZONE2_MAPFAR_MAPFAR_ZONE2_MDL_AMB = 0;
    public const int IDB_ZONE2_MAPFAR_MAPFAR_ZONE2_MTN_AMB = 1;
    public const int IDB_ZONE2_MAPFAR_MAPFAR_ZONE2_MAT_AMB = 2;
    public const int IDB_ZONE2_MAPFAR_MAPFAR_TEX_AMB = 3;
    public const int IDU0_ZONE2_MAPFAR_MAPFAR_ZONE2_MDL_AMB = 0;
    public const int IDU0_ZONE2_MAPFAR_MAPFAR_ZONE2_MTN_AMB = 0;
    public const int IDU0_ZONE2_MAPFAR_MAPFAR_ZONE2_MAT_AMB = 0;
    public const int IDU0_ZONE2_MAPFAR_MAPFAR_TEX_AMB = 0;
    public const int IDU1_ZONE2_MAPFAR_MAPFAR_ZONE2_MDL_AMB = 0;
    public const int IDU1_ZONE2_MAPFAR_MAPFAR_ZONE2_MTN_AMB = 0;
    public const int IDU1_ZONE2_MAPFAR_MAPFAR_ZONE2_MAT_AMB = 0;
    public const int IDU1_ZONE2_MAPFAR_MAPFAR_TEX_AMB = 0;
    public const string IDS_ZONE2_MAPFAR_MAPFAR_ZONE2_MDL_AMB = "MAPFAR_ZONE2_MDL.AMB";
    public const string IDS_ZONE2_MAPFAR_MAPFAR_ZONE2_MTN_AMB = "MAPFAR_ZONE2_MTN.AMB";
    public const string IDS_ZONE2_MAPFAR_MAPFAR_ZONE2_MAT_AMB = "MAPFAR_ZONE2_MAT.AMB";
    public const string IDS_ZONE2_MAPFAR_MAPFAR_TEX_AMB = "MAPFAR_TEX.AMB";
    public const int IDB_ZONE2_T_PC_ZONE2_T_PC_TXB = 0;
    public const int IDB_ZONE2_T_PC_Z2_TEX4_DDS = 1;
    public const int IDB_ZONE2_T_PC_Z2_BALLOON_ILMA_DDS = 2;
    public const int IDB_ZONE2_T_PC_Z2_BALLOON_ILMB_DDS = 3;
    public const int IDB_ZONE2_T_PC_Z2_ILM_BUILB_DDS = 4;
    public const int IDB_ZONE2_T_PC_Z2_ILM_FLOWER_DDS = 5;
    public const int IDB_ZONE2_T_PC_Z2_TEX1_DDS = 6;
    public const int IDB_ZONE2_T_PC_Z2_TEX3_DDS = 7;
    public const int IDB_ZONE2_T_PC_Z2_TEX2_DDS = 8;
    public const int IDB_ZONE2_T_PC_Z2_ILM_ASHIBA_DDS = 9;
    public const int IDB_ZONE2_T_PC_Z2_CODE_ILM_DDS = 10;
    public const int IDB_ZONE2_T_PC_Z2_ILMBELT_DDS = 11;
    public const int IDB_ZONE2_T_PC_Z2_3MARK_DDS = 12;
    public const int IDB_ZONE2_T_PC_Z2_PALM_DDS = 13;
    public const int IDB_ZONE2_T_PC_Z2_TEX7_DDS = 14;
    public const int IDB_ZONE2_T_PC_Z2_ROLL_ILM_DDS = 15;
    public const int IDB_ZONE2_T_PC_Z2_ILM_V_DDS = 16;
    public const int IDB_ZONE2_T_PC_Z2_ILMC_DDS = 17;
    public const int IDB_ZONE2_T_PC_Z2_ILMA_DDS = 18;
    public const int IDB_ZONE2_T_PC_Z2_PANEL_DDS = 19;
    public const int IDB_ZONE2_T_PC_Z2_ILMB_DDS = 20;
    public const int IDB_ZONE2_T_PC_Z2_ILM_BUILA_DDS = 21;
    public const int IDU0_ZONE2_T_PC_ZONE2_T_PC_TXB = 0;
    public const int IDU0_ZONE2_T_PC_Z2_TEX4_DDS = 0;
    public const int IDU0_ZONE2_T_PC_Z2_BALLOON_ILMA_DDS = 0;
    public const int IDU0_ZONE2_T_PC_Z2_BALLOON_ILMB_DDS = 0;
    public const int IDU0_ZONE2_T_PC_Z2_ILM_BUILB_DDS = 0;
    public const int IDU0_ZONE2_T_PC_Z2_ILM_FLOWER_DDS = 0;
    public const int IDU0_ZONE2_T_PC_Z2_TEX1_DDS = 0;
    public const int IDU0_ZONE2_T_PC_Z2_TEX3_DDS = 0;
    public const int IDU0_ZONE2_T_PC_Z2_TEX2_DDS = 0;
    public const int IDU0_ZONE2_T_PC_Z2_ILM_ASHIBA_DDS = 0;
    public const int IDU0_ZONE2_T_PC_Z2_CODE_ILM_DDS = 0;
    public const int IDU0_ZONE2_T_PC_Z2_ILMBELT_DDS = 0;
    public const int IDU0_ZONE2_T_PC_Z2_3MARK_DDS = 0;
    public const int IDU0_ZONE2_T_PC_Z2_PALM_DDS = 0;
    public const int IDU0_ZONE2_T_PC_Z2_TEX7_DDS = 0;
    public const int IDU0_ZONE2_T_PC_Z2_ROLL_ILM_DDS = 0;
    public const int IDU0_ZONE2_T_PC_Z2_ILM_V_DDS = 0;
    public const int IDU0_ZONE2_T_PC_Z2_ILMC_DDS = 0;
    public const int IDU0_ZONE2_T_PC_Z2_ILMA_DDS = 0;
    public const int IDU0_ZONE2_T_PC_Z2_PANEL_DDS = 0;
    public const int IDU0_ZONE2_T_PC_Z2_ILMB_DDS = 0;
    public const int IDU0_ZONE2_T_PC_Z2_ILM_BUILA_DDS = 0;
    public const int IDU1_ZONE2_T_PC_ZONE2_T_PC_TXB = 0;
    public const int IDU1_ZONE2_T_PC_Z2_TEX4_DDS = 0;
    public const int IDU1_ZONE2_T_PC_Z2_BALLOON_ILMA_DDS = 0;
    public const int IDU1_ZONE2_T_PC_Z2_BALLOON_ILMB_DDS = 0;
    public const int IDU1_ZONE2_T_PC_Z2_ILM_BUILB_DDS = 0;
    public const int IDU1_ZONE2_T_PC_Z2_ILM_FLOWER_DDS = 0;
    public const int IDU1_ZONE2_T_PC_Z2_TEX1_DDS = 0;
    public const int IDU1_ZONE2_T_PC_Z2_TEX3_DDS = 0;
    public const int IDU1_ZONE2_T_PC_Z2_TEX2_DDS = 0;
    public const int IDU1_ZONE2_T_PC_Z2_ILM_ASHIBA_DDS = 0;
    public const int IDU1_ZONE2_T_PC_Z2_CODE_ILM_DDS = 0;
    public const int IDU1_ZONE2_T_PC_Z2_ILMBELT_DDS = 0;
    public const int IDU1_ZONE2_T_PC_Z2_3MARK_DDS = 0;
    public const int IDU1_ZONE2_T_PC_Z2_PALM_DDS = 0;
    public const int IDU1_ZONE2_T_PC_Z2_TEX7_DDS = 0;
    public const int IDU1_ZONE2_T_PC_Z2_ROLL_ILM_DDS = 0;
    public const int IDU1_ZONE2_T_PC_Z2_ILM_V_DDS = 0;
    public const int IDU1_ZONE2_T_PC_Z2_ILMC_DDS = 0;
    public const int IDU1_ZONE2_T_PC_Z2_ILMA_DDS = 0;
    public const int IDU1_ZONE2_T_PC_Z2_PANEL_DDS = 0;
    public const int IDU1_ZONE2_T_PC_Z2_ILMB_DDS = 0;
    public const int IDU1_ZONE2_T_PC_Z2_ILM_BUILA_DDS = 0;
    public const string IDS_ZONE2_T_PC_ZONE2_T_PC_TXB = "ZONE2_T_PC.TXB";
    public const string IDS_ZONE2_T_PC_Z2_TEX4_DDS = "Z2_TEX4.DDS";
    public const string IDS_ZONE2_T_PC_Z2_BALLOON_ILMA_DDS = "Z2_BALLOON_ILMA.DDS";
    public const string IDS_ZONE2_T_PC_Z2_BALLOON_ILMB_DDS = "Z2_BALLOON_ILMB.DDS";
    public const string IDS_ZONE2_T_PC_Z2_ILM_BUILB_DDS = "Z2_ILM_BUILB.DDS";
    public const string IDS_ZONE2_T_PC_Z2_ILM_FLOWER_DDS = "Z2_ILM_FLOWER.DDS";
    public const string IDS_ZONE2_T_PC_Z2_TEX1_DDS = "Z2_TEX1.DDS";
    public const string IDS_ZONE2_T_PC_Z2_TEX3_DDS = "Z2_TEX3.DDS";
    public const string IDS_ZONE2_T_PC_Z2_TEX2_DDS = "Z2_TEX2.DDS";
    public const string IDS_ZONE2_T_PC_Z2_ILM_ASHIBA_DDS = "Z2_ILM_ASHIBA.DDS";
    public const string IDS_ZONE2_T_PC_Z2_CODE_ILM_DDS = "Z2_CODE_ILM.DDS";
    public const string IDS_ZONE2_T_PC_Z2_ILMBELT_DDS = "Z2_ILMBELT.DDS";
    public const string IDS_ZONE2_T_PC_Z2_3MARK_DDS = "Z2_3MARK.DDS";
    public const string IDS_ZONE2_T_PC_Z2_PALM_DDS = "Z2_PALM.DDS";
    public const string IDS_ZONE2_T_PC_Z2_TEX7_DDS = "Z2_TEX7.DDS";
    public const string IDS_ZONE2_T_PC_Z2_ROLL_ILM_DDS = "Z2_ROLL_ILM.DDS";
    public const string IDS_ZONE2_T_PC_Z2_ILM_V_DDS = "Z2_ILM_V.DDS";
    public const string IDS_ZONE2_T_PC_Z2_ILMC_DDS = "Z2_ILMC.DDS";
    public const string IDS_ZONE2_T_PC_Z2_ILMA_DDS = "Z2_ILMA.DDS";
    public const string IDS_ZONE2_T_PC_Z2_PANEL_DDS = "Z2_PANEL.DDS";
    public const string IDS_ZONE2_T_PC_Z2_ILMB_DDS = "Z2_ILMB.DDS";
    public const string IDS_ZONE2_T_PC_Z2_ILM_BUILA_DDS = "Z2_ILM_BUILA.DDS";
    public const int IDB_ZONE3_MAPFAR_MAPFAR_ZONE3_MDL_AMB = 0;
    public const int IDB_ZONE3_MAPFAR_MAPFAR_TEX_AMB = 1;
    public const int IDB_ZONE3_MAPFAR_MAPFAR_ZONE3_MAT_AMB = 2;
    public const int IDU0_ZONE3_MAPFAR_MAPFAR_ZONE3_MDL_AMB = 0;
    public const int IDU0_ZONE3_MAPFAR_MAPFAR_TEX_AMB = 0;
    public const int IDU0_ZONE3_MAPFAR_MAPFAR_ZONE3_MAT_AMB = 0;
    public const int IDU1_ZONE3_MAPFAR_MAPFAR_ZONE3_MDL_AMB = 0;
    public const int IDU1_ZONE3_MAPFAR_MAPFAR_TEX_AMB = 0;
    public const int IDU1_ZONE3_MAPFAR_MAPFAR_ZONE3_MAT_AMB = 0;
    public const string IDS_ZONE3_MAPFAR_MAPFAR_ZONE3_MDL_AMB = "MAPFAR_ZONE3_MDL.AMB";
    public const string IDS_ZONE3_MAPFAR_MAPFAR_TEX_AMB = "MAPFAR_TEX.AMB";
    public const string IDS_ZONE3_MAPFAR_MAPFAR_ZONE3_MAT_AMB = "MAPFAR_ZONE3_MAT.AMB";
    public const int IDB_ZONE3_T_PC_ZONE3_T_PC_TXB = 0;
    public const int IDB_ZONE3_T_PC_Z3_B_TEX_DDS = 1;
    public const int IDB_ZONE3_T_PC_Z3_C_TEX_DDS = 2;
    public const int IDB_ZONE3_T_PC_Z3_A_TEX_DDS = 3;
    public const int IDB_ZONE3_T_PC_Z3_ANIM_B_DDS = 4;
    public const int IDU0_ZONE3_T_PC_ZONE3_T_PC_TXB = 0;
    public const int IDU0_ZONE3_T_PC_Z3_B_TEX_DDS = 0;
    public const int IDU0_ZONE3_T_PC_Z3_C_TEX_DDS = 0;
    public const int IDU0_ZONE3_T_PC_Z3_A_TEX_DDS = 0;
    public const int IDU0_ZONE3_T_PC_Z3_ANIM_B_DDS = 0;
    public const int IDU1_ZONE3_T_PC_ZONE3_T_PC_TXB = 0;
    public const int IDU1_ZONE3_T_PC_Z3_B_TEX_DDS = 0;
    public const int IDU1_ZONE3_T_PC_Z3_C_TEX_DDS = 0;
    public const int IDU1_ZONE3_T_PC_Z3_A_TEX_DDS = 0;
    public const int IDU1_ZONE3_T_PC_Z3_ANIM_B_DDS = 0;
    public const string IDS_ZONE3_T_PC_ZONE3_T_PC_TXB = "ZONE3_T_PC.TXB";
    public const string IDS_ZONE3_T_PC_Z3_B_TEX_DDS = "Z3_B_TEX.DDS";
    public const string IDS_ZONE3_T_PC_Z3_C_TEX_DDS = "Z3_C_TEX.DDS";
    public const string IDS_ZONE3_T_PC_Z3_A_TEX_DDS = "Z3_A_TEX.DDS";
    public const string IDS_ZONE3_T_PC_Z3_ANIM_B_DDS = "Z3_ANIM_B.DDS";
    public const int IDB_ZONE4_T_PC_ZONE4_T_PC_TXB = 0;
    public const int IDB_ZONE4_T_PC_Z4_MAP_IPHONE_TEX01_DDS = 1;
    public const int IDB_ZONE4_T_PC_Z4_MAP_IPHONE_TEX02_DDS = 2;
    public const int IDB_ZONE4_T_PC_Z4_MAP_IPHONE_TEX03_DDS = 3;
    public const int IDB_ZONE4_T_PC_Z4_MAP_IPHONE_TEX05_DDS = 4;
    public const int IDB_ZONE4_T_PC_MID_2_DRM_A_I_DDS = 5;
    public const int IDB_ZONE4_T_PC_MID_2_PIPE_I_DDS = 6;
    public const int IDB_ZONE4_T_PC_MID_2_PISTON_I_DDS = 7;
    public const int IDB_ZONE4_T_PC_Z4_TANK_02_ACT_I_DDS = 8;
    public const int IDB_ZONE4_T_PC_Z4_TANK_02_STOP_I_DDS = 9;
    public const int IDU0_ZONE4_T_PC_ZONE4_T_PC_TXB = 0;
    public const int IDU0_ZONE4_T_PC_Z4_MAP_IPHONE_TEX01_DDS = 0;
    public const int IDU0_ZONE4_T_PC_Z4_MAP_IPHONE_TEX02_DDS = 0;
    public const int IDU0_ZONE4_T_PC_Z4_MAP_IPHONE_TEX03_DDS = 0;
    public const int IDU0_ZONE4_T_PC_Z4_MAP_IPHONE_TEX05_DDS = 0;
    public const int IDU0_ZONE4_T_PC_MID_2_DRM_A_I_DDS = 0;
    public const int IDU0_ZONE4_T_PC_MID_2_PIPE_I_DDS = 0;
    public const int IDU0_ZONE4_T_PC_MID_2_PISTON_I_DDS = 0;
    public const int IDU0_ZONE4_T_PC_Z4_TANK_02_ACT_I_DDS = 0;
    public const int IDU0_ZONE4_T_PC_Z4_TANK_02_STOP_I_DDS = 0;
    public const int IDU1_ZONE4_T_PC_ZONE4_T_PC_TXB = 0;
    public const int IDU1_ZONE4_T_PC_Z4_MAP_IPHONE_TEX01_DDS = 0;
    public const int IDU1_ZONE4_T_PC_Z4_MAP_IPHONE_TEX02_DDS = 0;
    public const int IDU1_ZONE4_T_PC_Z4_MAP_IPHONE_TEX03_DDS = 0;
    public const int IDU1_ZONE4_T_PC_Z4_MAP_IPHONE_TEX05_DDS = 0;
    public const int IDU1_ZONE4_T_PC_MID_2_DRM_A_I_DDS = 0;
    public const int IDU1_ZONE4_T_PC_MID_2_PIPE_I_DDS = 0;
    public const int IDU1_ZONE4_T_PC_MID_2_PISTON_I_DDS = 0;
    public const int IDU1_ZONE4_T_PC_Z4_TANK_02_ACT_I_DDS = 0;
    public const int IDU1_ZONE4_T_PC_Z4_TANK_02_STOP_I_DDS = 0;
    public const string IDS_ZONE4_T_PC_ZONE4_T_PC_TXB = "ZONE4_T_PC.TXB";
    public const string IDS_ZONE4_T_PC_Z4_MAP_IPHONE_TEX01_DDS = "Z4_MAP_IPHONE_TEX01.DDS";
    public const string IDS_ZONE4_T_PC_Z4_MAP_IPHONE_TEX02_DDS = "Z4_MAP_IPHONE_TEX02.DDS";
    public const string IDS_ZONE4_T_PC_Z4_MAP_IPHONE_TEX03_DDS = "Z4_MAP_IPHONE_TEX03.DDS";
    public const string IDS_ZONE4_T_PC_Z4_MAP_IPHONE_TEX05_DDS = "Z4_MAP_IPHONE_TEX05.DDS";
    public const string IDS_ZONE4_T_PC_MID_2_DRM_A_I_DDS = "MID_2_DRM_A_I.DDS";
    public const string IDS_ZONE4_T_PC_MID_2_PIPE_I_DDS = "MID_2_PIPE_I.DDS";
    public const string IDS_ZONE4_T_PC_MID_2_PISTON_I_DDS = "MID_2_PISTON_I.DDS";
    public const string IDS_ZONE4_T_PC_Z4_TANK_02_ACT_I_DDS = "Z4_TANK_02_ACT_I.DDS";
    public const string IDS_ZONE4_T_PC_Z4_TANK_02_STOP_I_DDS = "Z4_TANK_02_STOP_I.DDS";
    public const int IDB_ZONEF_MAPFAR_MAPFAR_ZONEF_MDL_AMB = 0;
    public const int IDB_ZONEF_MAPFAR_MAPFAR_TEX_AMB = 1;
    public const int IDB_ZONEF_MAPFAR_MAPFAR_ZONEF_MAT_AMB = 2;
    public const int IDU0_ZONEF_MAPFAR_MAPFAR_ZONEF_MDL_AMB = 0;
    public const int IDU0_ZONEF_MAPFAR_MAPFAR_TEX_AMB = 0;
    public const int IDU0_ZONEF_MAPFAR_MAPFAR_ZONEF_MAT_AMB = 0;
    public const int IDU1_ZONEF_MAPFAR_MAPFAR_ZONEF_MDL_AMB = 0;
    public const int IDU1_ZONEF_MAPFAR_MAPFAR_TEX_AMB = 0;
    public const int IDU1_ZONEF_MAPFAR_MAPFAR_ZONEF_MAT_AMB = 0;
    public const string IDS_ZONEF_MAPFAR_MAPFAR_ZONEF_MDL_AMB = "MAPFAR_ZONEF_MDL.AMB";
    public const string IDS_ZONEF_MAPFAR_MAPFAR_TEX_AMB = "MAPFAR_TEX.AMB";
    public const string IDS_ZONEF_MAPFAR_MAPFAR_ZONEF_MAT_AMB = "MAPFAR_ZONEF_MAT.AMB";
    public const int IDB_ZONEF_T_PC_ZONEF_T_PC_TXB = 0;
    public const int IDB_ZONEF_T_PC_ZF_MAP_IPHONE_TEX01_DDS = 1;
    public const int IDB_ZONEF_T_PC_ZF_MAP_IPHONE_TEXANIM03_DDS = 2;
    public const int IDB_ZONEF_T_PC_ZF_MAP_IPHONE_TEXANIM04_DDS = 3;
    public const int IDB_ZONEF_T_PC_ZF_MAP_IPHONE_TEXANIM05_DDS = 4;
    public const int IDB_ZONEF_T_PC_ZF_MAP_IPHONE_TEXANIM06_DDS = 5;
    public const int IDB_ZONEF_T_PC_ZF_MAP_IPHONE_TEXANIM01_DDS = 6;
    public const int IDB_ZONEF_T_PC_ZF_MAP_IPHONE_TEXANIM07_DDS = 7;
    public const int IDB_ZONEF_T_PC_ZF_MAP_IPHONE_TEXANIM08_DDS = 8;
    public const int IDU0_ZONEF_T_PC_ZONEF_T_PC_TXB = 0;
    public const int IDU0_ZONEF_T_PC_ZF_MAP_IPHONE_TEX01_DDS = 0;
    public const int IDU0_ZONEF_T_PC_ZF_MAP_IPHONE_TEXANIM03_DDS = 0;
    public const int IDU0_ZONEF_T_PC_ZF_MAP_IPHONE_TEXANIM04_DDS = 0;
    public const int IDU0_ZONEF_T_PC_ZF_MAP_IPHONE_TEXANIM05_DDS = 0;
    public const int IDU0_ZONEF_T_PC_ZF_MAP_IPHONE_TEXANIM06_DDS = 0;
    public const int IDU0_ZONEF_T_PC_ZF_MAP_IPHONE_TEXANIM01_DDS = 0;
    public const int IDU0_ZONEF_T_PC_ZF_MAP_IPHONE_TEXANIM07_DDS = 0;
    public const int IDU0_ZONEF_T_PC_ZF_MAP_IPHONE_TEXANIM08_DDS = 0;
    public const int IDU1_ZONEF_T_PC_ZONEF_T_PC_TXB = 0;
    public const int IDU1_ZONEF_T_PC_ZF_MAP_IPHONE_TEX01_DDS = 0;
    public const int IDU1_ZONEF_T_PC_ZF_MAP_IPHONE_TEXANIM03_DDS = 0;
    public const int IDU1_ZONEF_T_PC_ZF_MAP_IPHONE_TEXANIM04_DDS = 0;
    public const int IDU1_ZONEF_T_PC_ZF_MAP_IPHONE_TEXANIM05_DDS = 0;
    public const int IDU1_ZONEF_T_PC_ZF_MAP_IPHONE_TEXANIM06_DDS = 0;
    public const int IDU1_ZONEF_T_PC_ZF_MAP_IPHONE_TEXANIM01_DDS = 0;
    public const int IDU1_ZONEF_T_PC_ZF_MAP_IPHONE_TEXANIM07_DDS = 0;
    public const int IDU1_ZONEF_T_PC_ZF_MAP_IPHONE_TEXANIM08_DDS = 0;
    public const string IDS_ZONEF_T_PC_ZONEF_T_PC_TXB = "ZONEF_T_PC.TXB";
    public const string IDS_ZONEF_T_PC_ZF_MAP_IPHONE_TEX01_DDS = "ZF_MAP_IPHONE_TEX01.DDS";
    public const string IDS_ZONEF_T_PC_ZF_MAP_IPHONE_TEXANIM03_DDS = "ZF_MAP_IPHONE_TEXANIM03.DDS";
    public const string IDS_ZONEF_T_PC_ZF_MAP_IPHONE_TEXANIM04_DDS = "ZF_MAP_IPHONE_TEXANIM04.DDS";
    public const string IDS_ZONEF_T_PC_ZF_MAP_IPHONE_TEXANIM05_DDS = "ZF_MAP_IPHONE_TEXANIM05.DDS";
    public const string IDS_ZONEF_T_PC_ZF_MAP_IPHONE_TEXANIM06_DDS = "ZF_MAP_IPHONE_TEXANIM06.DDS";
    public const string IDS_ZONEF_T_PC_ZF_MAP_IPHONE_TEXANIM01_DDS = "ZF_MAP_IPHONE_TEXANIM01.DDS";
    public const string IDS_ZONEF_T_PC_ZF_MAP_IPHONE_TEXANIM07_DDS = "ZF_MAP_IPHONE_TEXANIM07.DDS";
    public const string IDS_ZONEF_T_PC_ZF_MAP_IPHONE_TEXANIM08_DDS = "ZF_MAP_IPHONE_TEXANIM08.DDS";
    public const int DMD_TITLEOP_DEBUG_TEST = 0;
    public const int DMD_TITLEOP_DEBUG_TEST_FOG = 0;
    public const int DMD_TITLEOP_DEBUG_TEST_CAMERA = 0;
    public const int DMD_TITLEOP_DEBUG_TEST_EXIT = 0;
    public const int DMD_TITLEOP_DEBUG_TEST_ROCK_EDIT = 0;
    public const int DMD_TITLEOP_TASK_PRIO_DATA_LOAD = 4096;
    public const int DMD_TITLEOP_TASK_GROUP_DATA_LOAD = 0;
    public const int DMD_TITLEOP_TASK_PRIO_DATA_BUILD = 4096;
    public const int DMD_TITLEOP_TASK_GROUP_DATA_BUILD = 0;
    public const int DMD_TITLEOP_TASK_PRIO_DATA_FLUSH = 4096;
    public const int DMD_TITLEOP_TASK_GROUP_DATA_FLUSH = 0;
    public const int DMD_TITLEOP_TASK_PRIO_DATA_RELEASE = 4096;
    public const int DMD_TITLEOP_TASK_GROUP_DATA_RELEASE = 0;
    public const int DMD_TITLEOP_TASK_PRIO_MGR = 12288;
    public const int DMD_TITLEOP_TASK_GROUP_MGR = 0;
    public const int DMD_TITLEOP_TASK_PRIO_CAMERA = 12288;
    public const int DMD_TITLEOP_TASK_GROUP_CAMERA = 0;
    public const int DMD_TITLEOP_TASK_PRIO_FAR_SKY_T = 24576;
    public const int DMD_TITLEOP_TASK_GROUP_FAR_SKY_T = 0;
    public const int DMD_TITLEOP_TASK_PRIO_FAR_SKY_B = 16384;
    public const int DMD_TITLEOP_TASK_GROUP_FAR_SKY_B = 0;
    public const int DMD_TITLEOP_TASK_PRIO_FAR_ROCK_T = 24832;
    public const int DMD_TITLEOP_TASK_GROUP_FAR_ROCK_T = 0;
    public const int DMD_TITLEOP_TASK_PRIO_FAR_ROCK_B = 16640;
    public const int DMD_TITLEOP_TASK_GROUP_FAR_ROCK_B = 0;
    public const int DMD_TITLEOP_TASK_PRIO_FAR_SEA = 20480;
    public const int DMD_TITLEOP_TASK_GROUP_FAR_SEA = 0;
    public const int DMD_TITLEOP_TASK_PAUSELEVEL_DEF = 0;
    public const int DMD_TITLEOP_OBJ_OBJPAUSELEVEL_DEF = 0;
    public const int DMD_TITLEOP_OBJTYPE_MAPFAR = 1;
    public const int DMD_TITLEOP_CAMERA_ID = 0;
    public const int DMD_TITLEOP_DRAW_CMD_STATE_PRE_MAPFAR = 0;
    public const int DMD_TITLEOP_DRAW_CMD_STATE_MAPFAR_B = 1;
    public const int DMD_TITLEOP_DRAW_CMD_STATE_MAPFAR_SEA = 2;
    public const int DMD_TITLEOP_DRAW_CMD_STATE_MAPFAR_T = 3;
    public const int DMD_TITLEOP_DRAW_CMD_STATE_POST_MAPFAR = 4;
    public const int DMD_TITLEOP_DRAW_CMD_STATE_3DNN = 5;
    public const int DMD_TITLEOP_ROCK_TYPE_NUM = 3;
    public const int DMD_TITLEOP_ROCK_SETTING_NUM = 6;
    public const int DMD_TITLEOP_ROCK_DISP_CLIP_DIST = 1179648;
    public const int DMD_TITLEOP_MAP_SCRL_SPD = -128;
    public const int DMD_TITLEOP_MAP_SCRL_LOOP_DIST = 3145728;
    public const int DMD_TITLEOP_ACT_LOGO_START_FRANE = 30;
    public const int DMD_TITLEOP_ACT_RIGHT_START_FRANE = 75;
    public const int DMD_TITLEOP_ACT_ALL_SET_END_FRAME = 105;
    public const int DMD_TITLEOP_ACT_FINGER_WAVE_S_FRAME = 60;
    public const int DMD_TITLEOP_ACT_FINGER_WAVE_E_FRAME = 84;
    public const int DMD_TITLEOP_DATA_FAR_AMB = 0;
    public const int DMD_TITLEOP_DATA_COM_AMA_SET_AMB = 1;
    public const int DMD_TITLEOP_DATA_MAX = 2;
    public const int DMD_TITLEOP_MAPFAR_DATA_MDL = 0;
    public const int DMD_TITLEOP_MAPFAR_DATA_TEX = 1;
    public const int DMD_TITLEOP_MAPFAR_DATA_MAT = 2;
    public const int DMD_TITLEOP_MAPFAR_DATA_MDL_WATER = 3;
    public const int DMD_TITLEOP_MAPFAR_DATA_MAX = 4;
    public const int DMD_TITLEOP_AMA_DATA_SET_AMA = 0;
    public const int DMD_TITLEOP_AMA_DATA_SET_TEX_AMB = 1;
    public const int DMD_TITLEOP_AMA_DATA_SET_MAX = 2;
    public const int DMD_TITLEOP_OBJWORK_SKY_T = 0;
    public const int DMD_TITLEOP_OBJWORK_ROCK_A_T = 1;
    public const int DMD_TITLEOP_OBJWORK_ROCK_B_T = 2;
    public const int DMD_TITLEOP_OBJWORK_ROCK_C_T = 3;
    public const int DMD_TITLEOP_OBJWORK_SEW = 4;
    public const int DMD_TITLEOP_OBJWORK_MAX = 5;
    public const int DMD_TITLEOP_AOSTEX_COM = 0;
    public const int DMD_TITLEOP_AOSTEX_MAX = 1;
    public const int DMD_TITLEOP_AOS_ACT_LOGO_1 = 0;
    public const int DMD_TITLEOP_AOS_ACT_FINGER = 1;
    public const int DMD_TITLEOP_AOS_ACT_LOGO_2 = 2;
    public const int DMD_TITLEOP_AOS_ACT_LOGO_3 = 3;
    public const int DMD_TITLEOP_AOS_ACT_RIGHT = 4;
    public const int DMD_TITLEOP_AOS_ACT_FREE = 5;
    public const int DMD_TITLEOP_AOS_ACT_FREE_RED = 6;
    public const int DMD_TITLEOP_AOS_ACT_MAX = 7;
    public const uint DMD_TITLEOP_FLAG_ACT_DISP_LOGO_1 = 1;
    public const uint DMD_TITLEOP_FLAG_ACT_DISP_FINGER = 2;
    public const uint DMD_TITLEOP_FLAG_ACT_DISP_LOGO_2 = 4;
    public const uint DMD_TITLEOP_FLAG_ACT_DISP_LOGO_3 = 8;
    public const uint DMD_TITLEOP_FLAG_ACT_DISP_RIGHT = 16;
    public const uint DMD_TITLEOP_FLAG_ACT_DISP_FREE = 32;
    public const uint DMD_TITLEOP_FLAG_ACT_DISP_FREE_RED = 64;
    public const uint DMD_TITLEOP_FLAG_ACT_USER_NODISP_LOGO_1 = 256;
    public const uint DMD_TITLEOP_FLAG_ACT_USER_NODISP_FINGER = 512;
    public const uint DMD_TITLEOP_FLAG_ACT_USER_NODISP_LOGO_2 = 1024;
    public const uint DMD_TITLEOP_FLAG_ACT_USER_NODISP_LOGO_3 = 2048;
    public const uint DMD_TITLEOP_FLAG_ACT_USER_NODISP_RIGHT = 4096;
    public const uint DMD_TITLEOP_FLAG_SCRL = 268435456;
    public const uint DMD_TITLEOP_FLAG_EXIT = 536870912;
    public const uint DMD_TITLEOP_FLAG_ALL_ACT_END = 1073741824;
    public const uint DMD_TITLEOP_FLAG_2DACT_READY = 2147483648;
    private const int dm_titleop_com_file_num = 2;
    private const int IDB_MAPFAR_ZONE1_MAT_Z1_SEA_D_ZNV = 1;
    private const int AOD_WIN_TYPE_A = 0;
    private const int AOD_WIN_TYPE_NUM = 1;
    private const int AOD_WIN_TYPE_NONE = 2;
    public const int AOD_PAD_PORT_MAX = 4;
    public const int OBD_DATA_ARCHIVE_FLAG = 32768;
    public const uint OBD_AUTO_CHARSIZE = 65535;
    public const uint OBD_AUTO_PLTSIZE = 65535;
    public const int OBD_LOAD_INITIAL_DRAW_ONCE = 256;
    public const int OBD_LOAD_INITIAL_OBJECT_MAX = 255;
    public const int OBD_COLLISION_OBJECT_MAX = 144;
    public const int OBD_COLOBJ_OFFSET = 24;
    public const int OBD_COLOBJ_OFFSET_SS = 24;
    public const int NND_CLIP_DBGPRINT = 0;
    public const int NND_BBCLIP_DBGPRINT = 0;
    public const uint NND_OBJECTSTATUS_HIDE = 1;
    public const uint NND_OBJECTSTATUS_INSIDE = 2;
    public const uint NND_DRAWOBJ_HIDE = 1;
    public const uint NND_DRAWOBJ_INSIDE = 2;
    public const uint NND_DRAWOBJ_MESHSETCLIP = 16;
    public const uint NND_DRAWOBJ_DOUBLESIDE = 32;
    public const uint NND_DRAWOBJ_BACKSIDE = 64;
    public const uint NND_DRAWOBJ_FRONTSIDE = 96;
    public const uint NND_DRAWOBJ_CULLING_MASK = 96;
    public const uint NND_DRAWOBJ_DISABLE_LIGHTING = 128;
    public const uint NND_DRAWOBJ_LIGHTING_MASK = 128;
    public const uint NND_DRAWOBJ_NORM = 256;
    public const uint NND_DRAWOBJ_NORMAL = 256;
    public const uint NND_DRAWOBJ_TANGENTSPACE = 512;
    public const uint NND_DRAWOBJ_VECTORMASK = 768;
    public const uint NND_DRAWOBJ_IGNOREMATSPEC = 1024;
    public const uint NND_DRAWOBJ_IGNORETEXTURE = 2048;
    public const uint NND_DRAWOBJ_IGNOREMATMASK = 3072;
    public const uint NND_DRAWOBJ_WIRE = 4096;
    public const uint NND_DRAWOBJ_COLORNTEXTURE = 8192;
    public const uint NND_DRAWOBJ_COLORSTRIP = 12288;
    public const uint NND_DRAWOBJ_COLORMESHSET = 16384;
    public const uint NND_DRAWOBJ_COLORMATERIAL = 20480;
    public const uint NND_DRAWOBJ_COLORNWEIGHT = 24576;
    public const uint NND_DRAWOBJ_COLORSHADER = 28672;
    public const uint NND_DRAWOBJ_SURFACE_MASK = 28672;
    public const uint NND_DRAWOBJ_FRAGPARALIGHT1 = 65536;
    public const uint NND_DRAWOBJ_FRAGPARALIGHT2 = 131072;
    public const uint NND_DRAWOBJ_FRAGPARALIGHT3 = 196608;
    public const uint NND_DRAWOBJ_FRAGPARALIGHT_MASK = 196608;
    public const uint NND_DRAWOBJ_FRAGPOINTLIGHT1 = 262144;
    public const uint NND_DRAWOBJ_FRAGPOINTLIGHT2 = 524288;
    public const uint NND_DRAWOBJ_FRAGPOINTLIGHT3 = 786432;
    public const uint NND_DRAWOBJ_FRAGPOINTLIGHT_MASK = 786432;
    public const uint NND_DRAWOBJ_FRAGLIGHT_MASK = 983040;
    public const uint NND_DRAWOBJ_DEPTH_ONLY = 2147483648;
    public const uint NND_DRAWOBJ_DISABLE_ALPHATEST = 1;
    public const uint NND_DRAWOBJ_SHADER_VERTEXBLEND = 2;
    public const uint NND_DRAWOBJ_DISABLE_NORMALMAP = 1024;
    public const uint NND_DRAWOBJ_DISABLE_SPECULARMAP = 2048;
    public const uint NND_DRAWOBJ_DISABLE_SHININESSMAP = 4096;
    public const uint NND_DRAWOBJ_DISABLE_DUALPARABOLOIDMAP = 8192;
    public const uint NND_DRAWOBJ_DISABLE_ENVMASKMAP = 16384;
    public const uint NND_DRAWOBJ_DISABLE_MODULATEMAP = 32768;
    public const uint NND_DRAWOBJ_DISABLE_ADDMAP = 65536;
    public const uint NND_DRAWOBJ_DISABLE_OPACITYMAP = 131072;
    public const uint NND_DRAWOBJ_DISABLE_USER1MAP = 262144;
    public const uint NND_DRAWOBJ_DISABLE_USER2MAP = 524288;
    public const uint NND_DRAWOBJ_DISABLE_USER3MAP = 1048576;
    public const uint NND_DRAWOBJ_DISABLE_USER4MAP = 2097152;
    public const uint NND_DRAWOBJ_DISABLE_USER5MAP = 4194304;
    public const uint NND_DRAWOBJ_DISABLE_USER6MAP = 8388608;
    public const uint NND_DRAWOBJ_DISABLE_USER7MAP = 16777216;
    public const uint NND_DRAWOBJ_DISABLE_USER8MAP = 33554432;
    public const uint NND_DRAWOBJ_DISABLE_MAPMASK = 67107840;
    public const uint NND_DRAWOBJ_MATCTRL_DIFFUSE = 1048576;
    public const uint NND_DRAWOBJ_MATCTRL_AMBIENT = 2097152;
    public const uint NND_DRAWOBJ_MATCTRL_SPECULAR = 4194304;
    public const uint NND_DRAWOBJ_MATCTRL_ALPHA = 8388608;
    public const uint NND_DRAWOBJ_MATCTRL_ENVTEXMTX = 16777216;
    public const uint NND_DRAWOBJ_MATCTRL_BLEND = 33554432;
    public const uint NND_DRAWOBJ_MATCTRL_TEXOFFSET = 268435456;
    public const uint NND_DRAWOBJ_MATCTRL_USERSAMPLERCUBE1 = 1073741824;
    public const uint NND_DRAWOBJ_MATCTRL_USERSAMPLERCUBE2 = 2147483648;
    public const uint NND_DRAWOBJ_MATCTRL_USERSAMPLERCUBE_MASK = 3221225472;
    public const uint NND_DRAWOBJ_MATCTRL_MASK = 334495744;
    public const uint NND_CALCPLIABLE_PLIABILITY_ALL = 1;
    public const uint NND_CALCPLIABLE_GL_BINDBUFFER = 2;
    public const uint NND_CALCPLIABLE_PS3_BINDBUFFER = 2;
    public const uint NND_CALCPLIABLE_PS2_SINGLEBUFFER = 4;
    public const uint NND_CALCPLIABLE_USE_NODESTATUS = 8;
    public const uint NND_CALCPLIABLE_DX_OBJECTBUFFER = 16;
    public const uint NND_CALCPLIABLE_DX_PRINODEOBJCT = 32;
    public const uint NND_CALCPLIABLE_DX_NOINDEX = 64;
    public const int AMD_THREAD_SAFE_NO_THREAD_MAIN = 0;
    public const int AMD_THREAD_SAFE_NO_THREAD_DRAW = 2;
    public const int AMD_MOTION_FILE_MAX = 4;
    public const int AMD_MOTION_DEFAULT_MAX = 64;
    public const int AMD_MOTION_MATERIAL_DEFAULT_MAX = 16;
    public const ushort AMD_MOTION_CREATE_FLAG_MARGE = 1;
    public const int AMD_AME_MULTI_UPDATE = 0;
    public const int AMD_AME_ROTATE_PRECALC = 1;
    public const int AMD_AME_ECB_SIZE = 128;
    public const int AMD_AME_ENTRY_SIZE = 512;
    public const int AMD_AME_RUNTIME_SIZE = 512;
    public const int AMD_AME_WORK_SIZE = 1024;
    public const float AMD_AME_UNIT_FRAME = 1f;
    public const float AMD_AME_UNIT_TIME = 0.01666667f;
    public const int AMD_AME_STATE_KILL = 32768;
    public const int AMD_AME_STATE_ACCEPT_KILL = 16384;
    public const int AMD_AME_STATE_ROOT = 8192;
    public const int AMD_BFUNC_ADD = 0;
    public const int AMD_BFUNC_SUB = 1;
    public const int AMD_BFUNC_SUB_REV = 2;
    public const int AMD_BFUNC_MIN = 3;
    public const int AMD_BFUNC_MAX = 4;
    public const int AMD_BFUNC_ABS = 5;
    public const int AMD_SRC_COLOR = 0;
    public const int AMD_ONE_MINUS_SRC_COLOR = 1;
    public const int AMD_DST_COLOR = 0;
    public const int AMD_ONE_MINUS_DST_COLOR = 1;
    public const int AMD_SRC_ALPHA = 2;
    public const int AMD_ONE_MINUS_SRC_ALPHA = 3;
    public const int AMD_DST_ALPHA = 4;
    public const int AMD_ONE_MINUS_DST_ALPHA = 5;
    public const int AMD_DOUBLE_SRC_ALPHA = 6;
    public const int AMD_ONE_MINUS_DOUBLE_SRC_ALPHA = 7;
    public const int AMD_DOUBLE_DST_ALPHA = 8;
    public const int AMD_ONE_MINUS_DOUBLE_DST_ALPHA = 9;
    public const int AMD_FIX_VALUE = 10;
    public const int AMM_BLEND_NORMAL = 50;
    public const int AMM_BLEND_ADD = 162;
    public const int AMM_BLEND_SUB = 674;
    public const int AMD_AME_GROUP_AKIRA = 65536;
    public const int AMD_AME_GROUP_JUDEA = 131072;
    public const int AMD_AME_GROUP_SAKURA = 262144;
    public const int AMD_AME_GROUP_GOTOU = 524288;
    public const int AMD_AME_GROUP_TAKINAMI = 1048576;
    public const int AMD_AME_GROUP_KAMUI = 2097152;
    public const int AMD_AME_GROUP_ROOKIE00 = 4194304;
    public const int AMD_AME_GROUP_ROOKIE01 = 8388608;
    public const uint AMD_AME_RWFLAG_SKIP_ANIMATION = 2;
    public const uint AMD_AME_RWFLAG_TWIST_REVERSE = 4;
    public const uint AMD_AME_RWFLAG_TEXTURE_FLIP_U = 8;
    public const uint AMD_AME_RWFLAG_TEXTURE_FLIP_V = 16;
    public const uint AMD_AME_RWFLAG_SOFTPTR_OFF = 32;
    public const uint AMD_AME_RWFLAG_SHADOW_ON = 64;
    private const int GME_PLY_EFCT_TRAIL_TYPE_HOMING = 0;
    private const int GME_PLY_EFCT_TRAIL_TYPE_SPINDASH = 1;
    private const int GME_PLY_EFCT_TRAIL_TYPE_MAX = 2;
    public const float GMD_PLY_EFCT_OFST_FRONT_PLAYER = 16f;
    public const float GMD_PLY_EFCT_OFST_FRONT_A = 160f;
    public const int GMD_PLY_EFCT_BARRIER_ADD_OFST_Z = 15;
    public const int GMD_PLY_EFCT_SPIN_DASH_CIRCLE_BLUR_BASE_OFST_Y = 0;
    public const int GMD_PLY_EFCT_SPIN_DASH_CIRCLE_BLUR_BASE_OFST_Y_PINBALL = 0;
    public const int GMD_PLY_EFCT_SPIN_DASH_CIRCLE_BLUR_BASE_OFST_Z = 0;
    public const int GMD_PLY_EFCT_SPIN_DASH_BLUR_BASE_OFST_Y = 0;
    public const int GMD_PLY_EFCT_SPIN_DASH_BLUR_BASE_OFST_Y_PINBALL = 1;
    public const int GMD_PLY_EFCT_SPIN_START_BLUR_BASE_OFST_Y = 2;
    public const int GMD_PLY_EFCT_SPIN_START_BLUR_BASE_OFST_Y_PINBALL = 1;
    public const int GMD_PLY_EFCT_SPIN_START_BLUR_BASE_OFST_Z = 14;
    public const int GMD_PLY_EFCT_SPIN_START_BLUR_FRAME = 15;
    public const int GMD_PLY_EFCT_SPIN_JUMP_BLUR_BASE_OFST_Y = -5;
    public const int GMD_PLY_EFCT_SPIN_JUMP_BLUR_BASE_OFST_Y_PINBALL = 1;
    public const int GMD_PLY_EFCT_SPIN_JUMP_BLUR_DIST_MAX = 8;
    public const int GMD_PLY_EFCT_SPIN_JUMP_BLUR_DIST_MIN = 1;
    public const int GMD_PLY_EFCT_SPIN_JUMP_BLUR_PLY_MTN_FRAME = 20;
    public const int GMD_PLY_EFCT_BUBBLE_SPD_Y_ACC = -64;
    public const int GMD_PLY_EFCT_BUBBLE_SPD_Y_MAX = -65536;
    public const int GMD_PLY_EFCT_BUBBLE_SURFACE_ADJUST = 32768;
    public const int GMD_PLF_EFCT_RUN_SPRAY_MIN_SPD = 4096;
    public const int GMD_PLF_EFCT_RUN_SPRAY_BIG_SPD = 16384;
    public const int GMD_PLF_EFCT_RUN_SPRAY_OFST_Z = 15;
    public const int GMD_DWORK_NO_DUMMY = 0;
    public const int GMD_DWORK_NO_FIX_START = 1;
    public const int GMD_DWORK_NO_FIX_END = 2;
    public const int GMD_DWORK_NO_RING_START = 2;
    public const int GMD_DWORK_NO_RING_MODEL = 2;
    public const int GMD_DWORK_NO_RING_TEX = 3;
    public const int GMD_DWORK_NO_RING_MAT = 4;
    public const int GMD_DWORK_NO_RING_END = 5;
    public const int GMD_DWORK_NO_EFFECT_START = 5;
    public const int GMD_DWORK_NO_EFFECT_ARC_START = 5;
    public const int GMD_DWORK_NO_EFFECT_CMN_ARC = 5;
    public const int GMD_DWORK_NO_EFFECT_ZONE_ARC = 6;
    public const int GMD_DWORK_NO_EFFECT_ENE_E02_ARC = 7;
    public const int GMD_DWORK_NO_EFFECT_ENE_E04_ARC = 8;
    public const int GMD_DWORK_NO_EFFECT_ENE_E05_ARC = 9;
    public const int GMD_DWORK_NO_EFFECT_ENE_E06_ARC = 10;
    public const int GMD_DWORK_NO_EFFECT_ENE_E07_ARC = 11;
    public const int GMD_DWORK_NO_EFFECT_ENE_E10_ARC = 12;
    public const int GMD_DWORK_NO_EFFECT_ENE_E13_ARC = 13;
    public const int GMD_DWORK_NO_EFFECT_ENE_E14_ARC = 14;
    public const int GMD_DWORK_NO_EFFECT_BOSS_CMN_ARC = 15;
    public const int GMD_DWORK_NO_EFFECT_ARC_END = 16;
    public const int GMD_DWORK_NO_EFFECT_CMN_AMBTEX = 17;
    public const int GMD_DWORK_NO_EFFECT_CMN_TEXLIST = 18;
    public const int GMD_DWORK_NO_EFFECT_CMN_AME_START = 19;
    public const int GMD_DWORK_NO_EFFECT_CMN_AME_00 = 19;
    public const int GMD_DWORK_NO_EFFECT_CMN_AME_END = 116;
    public const int GMD_DWORK_NO_EFFECT_CMN_MODELDAT_START = 117;
    public const int GMD_DWORK_NO_EFFECT_CMN_MODELDAT_00 = 117;
    public const int GMD_DWORK_NO_EFFECT_CMN_MODELDAT_END = 214;
    public const int GMD_DWORK_NO_EFFECT_CMN_OBJECT_START = 215;
    public const int GMD_DWORK_NO_EFFECT_CMN_OBJECT_00 = 215;
    public const int GMD_DWORK_NO_EFFECT_CMN_OBJECT_END = 312;
    public const int GMD_DWORK_NO_EFFECT_CMN_MDL_AMBTEX_START = 313;
    public const int GMD_DWORK_NO_EFFECT_CMN_MDL_AMBTEX_END = 410;
    public const int GMD_DWORK_NO_EFFECT_CMN_MDL_TEXLIST_START = 411;
    public const int GMD_DWORK_NO_EFFECT_CMN_MDL_TEXLIST_END = 508;
    public const int GMD_DWORK_NO_EFFECT_ZONE_AMBTEX = 509;
    public const int GMD_DWORK_NO_EFFECT_ZONE_TEXLIST = 510;
    public const int GMD_DWORK_NO_EFFECT_ZONE_AME_START = 511;
    public const int GMD_DWORK_NO_EFFECT_ZONE_AME_00 = 511;
    public const int GMD_DWORK_NO_EFFECT_ZONE_AME_END = 581;
    public const int GMD_DWORK_NO_EFFECT_ZONE_MODELDAT_START = 582;
    public const int GMD_DWORK_NO_EFFECT_ZONE_MODELDAT_END = 583;
    public const int GMD_DWORK_NO_EFFECT_ZONE_OBJECT_START = 584;
    public const int GMD_DWORK_NO_EFFECT_ZONE_OBJECT_END = 585;
    public const int GMD_DWORK_NO_EFFECT_ZONE_MDL_AMBTEX_START = 586;
    public const int GMD_DWORK_NO_EFFECT_ZONE_MDL_AMBTEX_END = 587;
    public const int GMD_DWORK_NO_EFFECT_ZONE_MDL_TEXLIST_START = 588;
    public const int GMD_DWORK_NO_EFFECT_ZONE_MDL_TEXLIST_END = 589;
    public const int GMD_DWORK_NO_EFFECT_ENE_START = 590;
    public const int GMD_DWORK_NO_EFFECT_ENE_AMBTEX_E02 = 590;
    public const int GMD_DWORK_NO_EFFECT_ENE_TEXLIST_E02 = 591;
    public const int GMD_DWORK_NO_EFFECT_ENE_AMBTEX_E04 = 592;
    public const int GMD_DWORK_NO_EFFECT_ENE_TEXLIST_E04 = 593;
    public const int GMD_DWORK_NO_EFFECT_ENE_AMBTEX_E05 = 594;
    public const int GMD_DWORK_NO_EFFECT_ENE_TEXLIST_E05 = 595;
    public const int GMD_DWORK_NO_EFFECT_ENE_AMBTEX_E06 = 596;
    public const int GMD_DWORK_NO_EFFECT_ENE_TEXLIST_E06 = 597;
    public const int GMD_DWORK_NO_EFFECT_ENE_AMBTEX_E07 = 598;
    public const int GMD_DWORK_NO_EFFECT_ENE_TEXLIST_E07 = 599;
    public const int GMD_DWORK_NO_EFFECT_ENE_AMBTEX_E10 = 600;
    public const int GMD_DWORK_NO_EFFECT_ENE_TEXLIST_E10 = 601;
    public const int GMD_DWORK_NO_EFFECT_ENE_AMBTEX_E13 = 602;
    public const int GMD_DWORK_NO_EFFECT_ENE_TEXLIST_E13 = 603;
    public const int GMD_DWORK_NO_EFFECT_ENE_AMBTEX_E14 = 604;
    public const int GMD_DWORK_NO_EFFECT_ENE_TEXLIST_E14 = 605;
    public const int GMD_DWORK_NO_EFFECT_ENE_TEX_END = 606;
    public const int GMD_DWORK_NO_EFFECT_ENE_AME_E02_JET_S = 607;
    public const int GMD_DWORK_NO_EFFECT_ENE_AME_E02_JET_S_SMORK = 608;
    public const int GMD_DWORK_NO_EFFECT_ENE_AME_E04_DUMMY1 = 609;
    public const int GMD_DWORK_NO_EFFECT_ENE_AME_E04_DUMMY2 = 610;
    public const int GMD_DWORK_NO_EFFECT_ENE_AME_E04_MEREON_MISS = 611;
    public const int GMD_DWORK_NO_EFFECT_ENE_AME_E05_GUARD = 612;
    public const int GMD_DWORK_NO_EFFECT_ENE_AME_E06_HARO = 613;
    public const int GMD_DWORK_NO_EFFECT_ENE_AME_E07_MOGU_E = 614;
    public const int GMD_DWORK_NO_EFFECT_ENE_AME_E07_MOGU_W = 615;
    public const int GMD_DWORK_NO_EFFECT_ENE_AME_E10_BUKUBUKU = 616;
    public const int GMD_DWORK_NO_EFFECT_ENE_AME_E13_CROW = 617;
    public const int GMD_DWORK_NO_EFFECT_ENE_AME_E13_T_STAR = 618;
    public const int GMD_DWORK_NO_EFFECT_ENE_AME_E14_JET_H = 619;
    public const int GMD_DWORK_NO_EFFECT_ENE_END = 620;
    public const int GMD_DWORK_NO_EFFECT_BOSS_CMN_START = 621;
    public const int GMD_DWORK_NO_EFFECT_BOSS_CMN_AMBTEX = 621;
    public const int GMD_DWORK_NO_EFFECT_BOSS_CMN_TEXLIST = 622;
    public const int GMD_DWORK_NO_EFFECT_BOSS_CMN_AME_START = 623;
    public const int GMD_DWORK_NO_EFFECT_BOSS_CMN_AME_00 = 623;
    public const int GMD_DWORK_NO_EFFECT_BOSS_CMN_AME_END = 629;
    public const int GMD_DWORK_NO_EFFECT_BOSS_CMN_MODELDAT_START = 630;
    public const int GMD_DWORK_NO_EFFECT_BOSS_CMN_MODELDAT_00 = 630;
    public const int GMD_DWORK_NO_EFFECT_BOSS_CMN_MODELDAT_END = 636;
    public const int GMD_DWORK_NO_EFFECT_BOSS_CMN_OBJECT_START = 637;
    public const int GMD_DWORK_NO_EFFECT_BOSS_CMN_OBJECT_00 = 637;
    public const int GMD_DWORK_NO_EFFECT_BOSS_CMN_OBJECT_END = 643;
    public const int GMD_DWORK_NO_EFFECT_BOSS_CMN_MDL_AMBTEX_START = 644;
    public const int GMD_DWORK_NO_EFFECT_BOSS_CMN_MDL_AMBTEX_END = 650;
    public const int GMD_DWORK_NO_EFFECT_BOSS_CMN_MDL_TEXLIST_START = 651;
    public const int GMD_DWORK_NO_EFFECT_BOSS_CMN_MDL_TEXLIST_END = 657;
    public const int GMD_DWORK_NO_EFFECT_BOSS_CMN_END = 658;
    public const int GMD_DWORK_NO_EFFECT_END = 658;
    public const int GMD_DWORK_NO_ENEMY_START = 658;
    public const int GMD_DWORK_NO_ENEMY_HARISENBO_MODEL = 658;
    public const int GMD_DWORK_NO_ENEMY_HARISENBO_TEX = 659;
    public const int GMD_DWORK_NO_ENEMY_HARISENBO_MTN = 660;
    public const int GMD_DWORK_NO_ENEMY_MOTORA_MODEL = 661;
    public const int GMD_DWORK_NO_ENEMY_MOTORA_TEX = 662;
    public const int GMD_DWORK_NO_ENEMY_MOTORA_MTN = 663;
    public const int GMD_DWORK_NO_ENEMY_GABU_MODEL = 664;
    public const int GMD_DWORK_NO_ENEMY_GABU_TEX = 665;
    public const int GMD_DWORK_NO_ENEMY_GABU_MTN = 666;
    public const int GMD_DWORK_NO_ENEMY_STING_MODEL = 667;
    public const int GMD_DWORK_NO_ENEMY_STING_TEX = 668;
    public const int GMD_DWORK_NO_ENEMY_STING_MTN = 669;
    public const int GMD_DWORK_NO_ENEMY_MEREON_MODEL = 670;
    public const int GMD_DWORK_NO_ENEMY_MEREON_R_MODEL = 671;
    public const int GMD_DWORK_NO_ENEMY_MEREON_TEX = 672;
    public const int GMD_DWORK_NO_ENEMY_MEREON_MTN = 673;
    public const int GMD_DWORK_NO_ENEMY_MOGU_MODEL = 674;
    public const int GMD_DWORK_NO_ENEMY_MOGU_TEX = 675;
    public const int GMD_DWORK_NO_ENEMY_MOGU_MTN = 676;
    public const int GMD_DWORK_NO_ENEMY_GARDON_MODEL = 677;
    public const int GMD_DWORK_NO_ENEMY_GARDON_TEX = 678;
    public const int GMD_DWORK_NO_ENEMY_GARDON_MTN = 679;
    public const int GMD_DWORK_NO_ENEMY_T_STAR_MODEL = 680;
    public const int GMD_DWORK_NO_ENEMY_T_STAR_TEX = 681;
    public const int GMD_DWORK_NO_ENEMY_T_STAR_MTN = 682;
    public const int GMD_DWORK_NO_ENEMY_T_STAR_MAT = 683;
    public const int GMD_DWORK_NO_ENEMY_KANI_MODEL = 684;
    public const int GMD_DWORK_NO_ENEMY_KANI_TEX = 685;
    public const int GMD_DWORK_NO_ENEMY_KANI_MTN = 686;
    public const int GMD_DWORK_NO_ENEMY_HARO_MODEL = 687;
    public const int GMD_DWORK_NO_ENEMY_HARO_TEX = 688;
    public const int GMD_DWORK_NO_ENEMY_HARO_MTN = 689;
    public const int GMD_DWORK_NO_ENEMY_UNIDES_MODEL = 690;
    public const int GMD_DWORK_NO_ENEMY_UNIDES_TEX = 691;
    public const int GMD_DWORK_NO_ENEMY_UNIDES_MTN = 692;
    public const int GMD_DWORK_NO_ENEMY_UNIUNI_MODEL = 693;
    public const int GMD_DWORK_NO_ENEMY_UNIUNI_TEX = 694;
    public const int GMD_DWORK_NO_ENEMY_UNIUNI_MTN = 695;
    public const int GMD_DWORK_NO_ENEMY_BUKU_MODEL = 696;
    public const int GMD_DWORK_NO_ENEMY_BUKU_TEX = 697;
    public const int GMD_DWORK_NO_ENEMY_BUKU_MTN = 698;
    public const int GMD_DWORK_NO_ENEMY_KAMA_MODEL = 699;
    public const int GMD_DWORK_NO_ENEMY_KAMA_TEX = 700;
    public const int GMD_DWORK_NO_ENEMY_KAMA_MTN = 701;
    public const int GMD_DWORK_NO_ENEMY_END = 702;
    public const int GMD_DWORK_NO_BOSS_START = 703;
    public const int GMD_DWORK_NO_BOSS_01_BODY_MTN = 703;
    public const int GMD_DWORK_NO_BOSS_01_CHAIN_MTN = 704;
    public const int GMD_DWORK_NO_BOSS_01_EGG_MTN = 705;
    public const int GMD_DWORK_NO_BOSS_01_EF_SW00_ES = 706;
    public const int GMD_DWORK_NO_BOSS_01_EF_SW01_ES = 707;
    public const int GMD_DWORK_NO_BOSS_01_EF_SW02_ES = 708;
    public const int GMD_DWORK_NO_BOSS_01_EF_SW_AMBTEX = 709;
    public const int GMD_DWORK_NO_BOSS_01_EF_SW_TEXLIST = 710;
    public const int GMD_DWORK_NO_BOSS_02_BODY_MTN = 711;
    public const int GMD_DWORK_NO_BOSS_02_BODY_MAT = 712;
    public const int GMD_DWORK_NO_BOSS_02_EGG_MTN = 713;
    public const int GMD_DWORK_NO_BOSS_02_EF_BLITZ00_ES = 714;
    public const int GMD_DWORK_NO_BOSS_02_EF_BLITZ01_ES = 715;
    public const int GMD_DWORK_NO_BOSS_02_EF_BLITZ02_ES = 716;
    public const int GMD_DWORK_NO_BOSS_02_EF_BALL_ES = 717;
    public const int GMD_DWORK_NO_BOSS_02_EF_BALL_PART_ES = 718;
    public const int GMD_DWORK_NO_BOSS_02_EF_ROLLATTACK01_ES = 719;
    public const int GMD_DWORK_NO_BOSS_02_EF_ROLLATTACK02_ES = 720;
    public const int GMD_DWORK_NO_BOSS_02_EF_ROLLATTACK03_ES = 721;
    public const int GMD_DWORK_NO_BOSS_02_EF_AMBTEX = 722;
    public const int GMD_DWORK_NO_BOSS_02_EF_TEXLIST = 723;
    public const int GMD_DWORK_NO_BOSS_02_EF_ROLL_OBJECT = 724;
    public const int GMD_DWORK_NO_BOSS_02_EF_ROLL_MDL_DATA = 725;
    public const int GMD_DWORK_NO_BOSS_02_EF_ROLL_AMBTEX = 726;
    public const int GMD_DWORK_NO_BOSS_02_EF_ROLL_TEXLIST = 727;
    public const int GMD_DWORK_NO_BOSS_03_BODY_MTN = 728;
    public const int GMD_DWORK_NO_BOSS_03_EGG_MTN = 729;
    public const int GMD_DWORK_NO_BOSS_04_BODY_MTN = 730;
    public const int GMD_DWORK_NO_BOSS_04_EGG_MTN = 731;
    public const int GMD_DWORK_NO_BOSS_04_CAPSULE_MTN = 732;
    public const int GMD_DWORK_NO_BOSS_04_EF_AMBTEX = 733;
    public const int GMD_DWORK_NO_BOSS_04_EF_TEXLIST = 734;
    public const int GMD_DWORK_NO_BOSS_04_EF_CAP_EX_ES = 735;
    public const int GMD_DWORK_NO_BOSS_04_EF_EGG1_EX_ES = 736;
    public const int GMD_DWORK_NO_BOSS_04_EF_EGG2_EX_ES = 737;
    public const int GMD_DWORK_NO_BOSS_04_EF_EGG3_EX_ES = 738;
    public const int GMD_DWORK_NO_BOSS_04_EF_BOOST1_ES = 739;
    public const int GMD_DWORK_NO_BOSS_04_EF_BOOST2_ES = 740;
    public const int GMD_DWORK_NO_BOSS_04_EF_BOOSTX_ES = 741;
    public const int GMD_DWORK_NO_BOSS_04_EF_BOOSTX2_ES = 742;
    public const int GMD_DWORK_NO_BOSS_04_EF_PARTS_EX_ES = 743;
    public const int GMD_DWORK_NO_BOSS_04_EF_BOSS_LIGHT_ES = 744;
    public const int GMD_DWORK_NO_BOSS_05_BODY_MTN = 745;
    public const int GMD_DWORK_NO_BOSS_05_EGG_MTN = 746;
    public const int GMD_DWORK_NO_BOSS_05_ROCKET_MTN = 747;
    public const int GMD_DWORK_NO_BOSS_05_CTPLT_MAT = 748;
    public const int GMD_DWORK_NO_BOSS_05_LAND01_MAT = 749;
    public const int GMD_DWORK_NO_BOSS_05_LAND02_MAT = 750;
    public const int GMD_DWORK_NO_BOSS_05_LAND03_MAT = 751;
    public const int GMD_DWORK_NO_BOSS_05_EF_BLITZ_FB_00_ES = 752;
    public const int GMD_DWORK_NO_BOSS_05_EF_BLITZ_FB_01_ES = 753;
    public const int GMD_DWORK_NO_BOSS_05_EF_BLITZ_FB_02_ES = 754;
    public const int GMD_DWORK_NO_BOSS_05_EF_BLITZ_FB_03_ES = 755;
    public const int GMD_DWORK_NO_BOSS_05_EF_BLITZ_FB_C_00_ES = 756;
    public const int GMD_DWORK_NO_BOSS_05_EF_BLITZ_FB_C_01_ES = 757;
    public const int GMD_DWORK_NO_BOSS_05_EF_BLITZ_FB_C_02_ES = 758;
    public const int GMD_DWORK_NO_BOSS_05_EF_BLITZ_FB_START_ES = 759;
    public const int GMD_DWORK_NO_BOSS_05_EF_FB_SMORK00_ES = 760;
    public const int GMD_DWORK_NO_BOSS_05_EF_FB_SMORK01_ES = 761;
    public const int GMD_DWORK_NO_BOSS_05_EF_FB_SMORK02_ES = 762;
    public const int GMD_DWORK_NO_BOSS_05_EF_GLASS_ES = 763;
    public const int GMD_DWORK_NO_BOSS_05_EF_JET_FB_ES = 764;
    public const int GMD_DWORK_NO_BOSS_05_EF_JET_FB_SMORK_ES = 765;
    public const int GMD_DWORK_NO_BOSS_05_EF_ROCKET_BLITZ_ES = 766;
    public const int GMD_DWORK_NO_BOSS_05_EF_ROCKET_E_ES = 767;
    public const int GMD_DWORK_NO_BOSS_05_EF_ROCKET_JET_ES = 768;
    public const int GMD_DWORK_NO_BOSS_05_EF_ROCKET_S_ES = 769;
    public const int GMD_DWORK_NO_BOSS_05_EF_ROCKET_SMORK_ES = 770;
    public const int GMD_DWORK_NO_BOSS_05_EF_SHOCK_ES = 771;
    public const int GMD_DWORK_NO_BOSS_05_EF_SHOCK_ATK_ES = 772;
    public const int GMD_DWORK_NO_BOSS_05_EF_TARGET_FB_ES = 773;
    public const int GMD_DWORK_NO_BOSS_05_EF_TARGET_FB_E_ES = 774;
    public const int GMD_DWORK_NO_BOSS_05_EF_TARGET_FB_S_ES = 775;
    public const int GMD_DWORK_NO_BOSS_05_EF_TARGET_FB_W_ES = 776;
    public const int GMD_DWORK_NO_BOSS_05_EF_TARGET_FB_W_E_ES = 777;
    public const int GMD_DWORK_NO_BOSS_05_EF_TARGET_FB_W_S_ES = 778;
    public const int GMD_DWORK_NO_BOSS_05_EF_CMN_AMBTEX = 779;
    public const int GMD_DWORK_NO_BOSS_05_EF_CMN_TEXLIST = 780;
    public const int GMD_DWORK_NO_BOSS_05_EF_MD_JT_AMBTEX = 781;
    public const int GMD_DWORK_NO_BOSS_05_EF_MD_JT_TEXLIST = 782;
    public const int GMD_DWORK_NO_BOSS_05_EF_TH_AMBTEX = 783;
    public const int GMD_DWORK_NO_BOSS_05_EF_TH_TEXLIST = 784;
    public const int GMD_DWORK_NO_BOSS_05_EF_JET_MODELDAT = 785;
    public const int GMD_DWORK_NO_BOSS_05_EF_JET_OBJECT = 786;
    public const int GMD_DWORK_NO_BOSS_05_EF_THUNDER_MODELDAT = 787;
    public const int GMD_DWORK_NO_BOSS_05_EF_THUNDER_OBJECT = 788;
    public const int GMD_DWORK_NO_BOSS_END = 789;
    public const int GMD_DWORK_NO_GMK_START = 789;
    public const int GMD_DWORK_NO_GMK_ITEM_MODEL = 789;
    public const int GMD_DWORK_NO_GMK_ITEM_TEX = 790;
    public const int GMD_DWORK_NO_GMK_SPRING_MODEL = 791;
    public const int GMD_DWORK_NO_GMK_SPRING_TEX = 792;
    public const int GMD_DWORK_NO_GMK_SPRING_MTN = 793;
    public const int GMD_DWORK_NO_GMK_B_LAND1_MODEL = 794;
    public const int GMD_DWORK_NO_GMK_B_LAND1_TEX = 795;
    public const int GMD_DWORK_NO_GMK_B_LAND1_MTN = 796;
    public const int GMD_DWORK_NO_GMK_B_WALL_MODEL = 797;
    public const int GMD_DWORK_NO_GMK_B_WALL_TEX = 798;
    public const int GMD_DWORK_NO_GMK_B_OBJ_MODEL = 799;
    public const int GMD_DWORK_NO_GMK_B_OBJ_TEX = 800;
    public const int GMD_DWORK_NO_GMK_LAND_1_MODEL = 801;
    public const int GMD_DWORK_NO_GMK_LAND_1_TEX = 802;
    public const int GMD_DWORK_NO_GMK_LAND_2_MODEL = 803;
    public const int GMD_DWORK_NO_GMK_LAND_2_TEX = 804;
    public const int GMD_DWORK_NO_GMK_LAND_2_MTN = 805;
    public const int GMD_DWORK_NO_GMK_LAND_2_MAT = 806;
    public const int GMD_DWORK_NO_GMK_LAND_3_MODEL = 807;
    public const int GMD_DWORK_NO_GMK_LAND_3_TEX = 808;
    public const int GMD_DWORK_NO_GMK_LAND_3_ROPE_MAT = 809;
    public const int GMD_DWORK_NO_GMK_LAND_3_TVX = 810;
    public const int GMD_DWORK_NO_GMK_LAND_4_MODEL = 811;
    public const int GMD_DWORK_NO_GMK_LAND_4_TEX = 812;
    public const int GMD_DWORK_NO_GMK_LAND_F_MODEL = 813;
    public const int GMD_DWORK_NO_GMK_LAND_F_TEX = 814;
    public const int GMD_DWORK_NO_GMK_LAND_F_MAT = 815;
    public const int GMD_DWORK_NO_GMK_ROCK_MODEL = 816;
    public const int GMD_DWORK_NO_GMK_ROCK_TEX = 817;
    public const int GMD_DWORK_NO_GMK_ROCK_MTN = 818;
    public const int GMD_DWORK_NO_GMK_PULLEY_MODEL = 819;
    public const int GMD_DWORK_NO_GMK_PULLEY_TEX = 820;
    public const int GMD_DWORK_NO_GMK_PULLEY_MTN = 821;
    public const int GMD_DWORK_NO_GMK_NEEDLE_MODEL = 822;
    public const int GMD_DWORK_NO_GMK_NEEDLE_TEX = 823;
    public const int GMD_DWORK_NO_GMK_NEEDLE_TVX = 824;
    public const int GMD_DWORK_NO_GMK_DASH_P_MODEL = 825;
    public const int GMD_DWORK_NO_GMK_DASH_P_TEX = 826;
    public const int GMD_DWORK_NO_GMK_DASH_P_MTN = 827;
    public const int GMD_DWORK_NO_GMK_DASH_P_MAT = 828;
    public const int GMD_DWORK_NO_GMK_T_ROPE_MODEL = 829;
    public const int GMD_DWORK_NO_GMK_T_ROPE_TEX = 830;
    public const int GMD_DWORK_NO_GMK_T_ROPE_MTN = 831;
    public const int GMD_DWORK_NO_GMK_WATER_SLIDER_MODEL = 832;
    public const int GMD_DWORK_NO_GMK_WATER_SLIDER_TEX = 833;
    public const int GMD_DWORK_NO_GMK_WATER_SLIDER_MTN = 834;
    public const int GMD_DWORK_NO_GMK_WATER_SLIDER_MAT = 835;
    public const int GMD_DWORK_NO_GMK_GOAL_PNL_MODEL = 836;
    public const int GMD_DWORK_NO_GMK_GOAL_PNL_TEX = 837;
    public const int GMD_DWORK_NO_GMK_P_MARKER_MODEL = 838;
    public const int GMD_DWORK_NO_GMK_P_MARKER_TEX = 839;
    public const int GMD_DWORK_NO_GMK_P_MARKER_MTN = 840;
    public const int GMD_DWORK_NO_GMK_P_MARKER_MAT = 841;
    public const int GMD_DWORK_NO_GMK_PISTON_MODEL = 842;
    public const int GMD_DWORK_NO_GMK_PISTON_TEX = 843;
    public const int GMD_DWORK_NO_GMK_BELTCONV_MODEL = 844;
    public const int GMD_DWORK_NO_GMK_BELTCONV_TEX = 845;
    public const int GMD_DWORK_NO_GMK_BELTCONV_TVX = 846;
    public const int GMD_DWORK_NO_GMK_STOPPER_MODEL = 847;
    public const int GMD_DWORK_NO_GMK_STOPPER_TEX = 848;
    public const int GMD_DWORK_NO_GMK_STOPPER_MAT = 849;
    public const int GMD_DWORK_NO_GMK_UPBUMPER_MODEL = 850;
    public const int GMD_DWORK_NO_GMK_UPBUMPER_TEX = 851;
    public const int GMD_DWORK_NO_GMK_BUMPER_MODEL = 852;
    public const int GMD_DWORK_NO_GMK_BUMPER_TEX = 853;
    public const int GMD_DWORK_NO_GMK_BUMPER_MTN = 854;
    public const int GMD_DWORK_NO_GMK_BUMPER_MAT = 855;
    public const int GMD_DWORK_NO_GMK_SPEAR_MODEL = 856;
    public const int GMD_DWORK_NO_GMK_SPEAR_TEX = 857;
    public const int GMD_DWORK_NO_GMK_CANNON_MODEL = 858;
    public const int GMD_DWORK_NO_GMK_CANNON_TEX = 859;
    public const int GMD_DWORK_NO_GMK_CAPSULE_MODEL = 860;
    public const int GMD_DWORK_NO_GMK_CAPSULE_TEX = 861;
    public const int GMD_DWORK_NO_GMK_CAPSULE_MTN = 862;
    public const int GMD_DWORK_NO_GMK_BOBBIN_MODEL = 863;
    public const int GMD_DWORK_NO_GMK_BOBBIN_TEX = 864;
    public const int GMD_DWORK_NO_GMK_BOBBIN_MTN = 865;
    public const int GMD_DWORK_NO_GMK_BOBBIN_MAT = 866;
    public const int GMD_DWORK_NO_GMK_FLIPPER_MODEL = 867;
    public const int GMD_DWORK_NO_GMK_FLIPPER_TEX = 868;
    public const int GMD_DWORK_NO_GMK_FLIPPER_MAT = 869;
    public const int GMD_DWORK_NO_GMK_ANIMAL_MODEL = 870;
    public const int GMD_DWORK_NO_GMK_ANIMAL_TEX = 871;
    public const int GMD_DWORK_NO_GMK_ANIMAL_MTN = 872;
    public const int GMD_DWORK_NO_GMK_SLOT_MODEL = 873;
    public const int GMD_DWORK_NO_GMK_SLOT_TEX = 874;
    public const int GMD_DWORK_NO_GMK_SLOT_MAT = 875;
    public const int GMD_DWORK_NO_GMK_SEESAW_MODEL = 876;
    public const int GMD_DWORK_NO_GMK_SEESAW_TEX = 877;
    public const int GMD_DWORK_NO_GMK_BRIDGE_MODEL = 878;
    public const int GMD_DWORK_NO_GMK_BRIDGE_TEX = 879;
    public const int GMD_DWORK_NO_GMK_SPL_RING_MODEL = 880;
    public const int GMD_DWORK_NO_GMK_SPL_RING_TEX = 881;
    public const int GMD_DWORK_NO_GMK_SPL_RING_MAT = 882;
    public const int GMD_DWORK_NO_GMK_SPCTPLT_MODEL = 883;
    public const int GMD_DWORK_NO_GMK_SPCTPLT_TEX = 884;
    public const int GMD_DWORK_NO_GMK_SPCTPLT_MTN = 885;
    public const int GMD_DWORK_NO_GMK_SPCTPLT_MAT = 886;
    public const int GMD_DWORK_NO_GMK_GEAR = 887;
    public const int GMD_DWORK_NO_GMK_GEAR_MODEL = 888;
    public const int GMD_DWORK_NO_GMK_GEAR_TEX = 889;
    public const int GMD_DWORK_NO_GMK_GEAR2_MODEL = 890;
    public const int GMD_DWORK_NO_GMK_GEAR2_OPT_MODEL = 891;
    public const int GMD_DWORK_NO_GMK_PRESSWALL_MODEL = 892;
    public const int GMD_DWORK_NO_GMK_PRESSWALL_TEX = 893;
    public const int GMD_DWORK_NO_GMK_PRESSWALL_MTN = 894;
    public const int GMD_DWORK_NO_GMK_PRESSWALL_MAT = 895;
    public const int GMD_DWORK_NO_GMK_SS_SQUARE_MODEL = 896;
    public const int GMD_DWORK_NO_GMK_SS_SQUARE_TEX = 897;
    public const int GMD_DWORK_NO_GMK_SS_SQUARE_MAT = 898;
    public const int GMD_DWORK_NO_GMK_SS_SQUARE_TVX = 899;
    public const int GMD_DWORK_NO_GMK_SS_CIRCLE_MODEL = 900;
    public const int GMD_DWORK_NO_GMK_SS_CIRCLE_TEX = 901;
    public const int GMD_DWORK_NO_GMK_SS_CIRCLE_TVX = 902;
    public const int GMD_DWORK_NO_GMK_SS_ENDURANCE_MODEL = 903;
    public const int GMD_DWORK_NO_GMK_SS_ENDURANCE_TEX = 904;
    public const int GMD_DWORK_NO_GMK_SS_ENDURANCE_MAT = 905;
    public const int GMD_DWORK_NO_GMK_SS_ENDURANCE_TVX = 906;
    public const int GMD_DWORK_NO_GMK_SS_GOAL_MODEL = 907;
    public const int GMD_DWORK_NO_GMK_SS_GOAL_TEX = 908;
    public const int GMD_DWORK_NO_GMK_SS_GOAL_TVX = 909;
    public const int GMD_DWORK_NO_GMK_SS_EMERALD_MODEL = 910;
    public const int GMD_DWORK_NO_GMK_SS_EMERALD_TEX = 911;
    public const int GMD_DWORK_NO_GMK_SS_EMERALD_MTN = 912;
    public const int GMD_DWORK_NO_GMK_SS_1UP_MODEL = 913;
    public const int GMD_DWORK_NO_GMK_SS_1UP_TEX = 914;
    public const int GMD_DWORK_NO_GMK_SS_TIME_MODEL = 915;
    public const int GMD_DWORK_NO_GMK_SS_TIME_TEX = 916;
    public const int GMD_DWORK_NO_GMK_SS_RINGGATE_MODEL = 917;
    public const int GMD_DWORK_NO_GMK_SS_RINGGATE_TEX = 918;
    public const int GMD_DWORK_NO_GMK_SS_RINGGATE_MAT = 919;
    public const int GMD_DWORK_NO_GMK_SS_RINGGATE_TVX = 920;
    public const int GMD_DWORK_NO_GMK_STEAMPIPE_MODEL = 921;
    public const int GMD_DWORK_NO_GMK_STEAMPIPE_TEX = 922;
    public const int GMD_DWORK_NO_GMK_DRAIN_TANK_MODEL = 923;
    public const int GMD_DWORK_NO_GMK_DRAIN_TANK_TEX = 924;
    public const int GMD_DWORK_NO_GMK_DRAIN_TANK_MAT = 925;
    public const int GMD_DWORK_NO_GMK_POPSTEAM_MODEL = 926;
    public const int GMD_DWORK_NO_GMK_POPSTEAM_TEX = 927;
    public const int GMD_DWORK_NO_GMK_TRUCK_MODEL = 928;
    public const int GMD_DWORK_NO_GMK_TRUCK_TEX = 929;
    public const int GMD_DWORK_NO_GMK_TRUCK_MTN = 930;
    public const int GMD_DWORK_NO_GMK_SWITCH_MODEL = 931;
    public const int GMD_DWORK_NO_GMK_SWITCH_TEX = 932;
    public const int GMD_DWORK_NO_GMK_SWITCH_MAT = 933;
    public const int GMD_DWORK_NO_GMK_SW_WALL_MODEL = 934;
    public const int GMD_DWORK_NO_GMK_SW_WALL_TEX = 935;
    public const int GMD_DWORK_NO_GMK_SW_WALL_MAT = 936;
    public const int GMD_DWORK_NO_GMK_SW_WALL_TVX = 937;
    public const int GMD_DWORK_NO_GMK_SHUTTER_MODEL = 938;
    public const int GMD_DWORK_NO_GMK_SHUTTER_TEX = 939;
    public const int GMD_DWORK_NO_GMK_SHUTTER_MAT = 940;
    public const int GMD_DWORK_NO_GMK_BOSS3_PILLAR_MODEL = 941;
    public const int GMD_DWORK_NO_GMK_BOSS3_PILLAR_TEX = 942;
    public const int GMD_DWORK_NO_GMK_BOSS3_PILLAR_MAT = 943;
    public const int GMD_DWORK_NO_GMK_BOSS3_PILLAR_TVX = 944;
    public const int GMD_DWORK_NO_GMK_BOSS3_WALL_MODEL = 945;
    public const int GMD_DWORK_NO_GMK_BOSS3_WALL_TEX = 946;
    public const int GMD_DWORK_NO_GMK_BOSS3_WALL_MAT = 947;
    public const int GMD_DWORK_NO_GMK_BOSS3_WALL_TVX = 948;
    public const int GMD_DWORK_NO_GMK_END_SONIC_MODEL = 949;
    public const int GMD_DWORK_NO_GMK_END_SONIC_TEX = 950;
    public const int GMD_DWORK_NO_GMK_PRESS_PILLAR_MODEL = 951;
    public const int GMD_DWORK_NO_GMK_PRESS_PILLAR_TEX = 952;
    public const int GMD_DWORK_NO_GMK_PRESS_PILLAR_MAT = 953;
    public const int GMD_DWORK_NO_GMK_DSIGN_MODEL = 954;
    public const int GMD_DWORK_NO_GMK_DSIGN_TEX = 955;
    public const int GMD_DWORK_NO_GMK_STFRL_RING_MODEL = 956;
    public const int GMD_DWORK_NO_GMK_STFRL_RING_TEX = 957;
    public const int GMD_DWORK_NO_GMK_STFRL_FONT_TEX = 958;
    public const int GMD_DWORK_NO_GMK_STFRL_CMN_WIN_TEX = 959;
    public const int GMD_DWORK_NO_GMK_STFRL_SCR_IMG_TEX = 960;
    public const int GMD_DWORK_NO_GMK_STFRL_CMN_MSG_JP = 961;
    public const int GMD_DWORK_NO_GMK_STFRL_CMN_MSG_US = 962;
    public const int GMD_DWORK_NO_GMK_STFRL_CMN_MSG_FR = 963;
    public const int GMD_DWORK_NO_GMK_STFRL_CMN_MSG_IT = 964;
    public const int GMD_DWORK_NO_GMK_STFRL_CMN_MSG_GE = 965;
    public const int GMD_DWORK_NO_GMK_STFRL_CMN_MSG_SP = 966;
    public const int GMD_DWORK_NO_GMK_STFRL_CMN_MSG_FI = 967;
    public const int GMD_DWORK_NO_GMK_STFRL_CMN_MSG_PT = 968;
    public const int GMD_DWORK_NO_GMK_STFRL_CMN_MSG_RU = 969;
    public const int GMD_DWORK_NO_GMK_STFRL_CMN_MSG_CN = 970;
    public const int GMD_DWORK_NO_GMK_STFRL_CMN_MSG_HK = 971;
    public const int GMD_DWORK_NO_GMK_STFRL_END_TEX = 972;
    public const int GMD_DWORK_NO_GMK_STFRL_END_TEX_JP = 973;
    public const int GMD_DWORK_NO_GMK_STFRL_END_TEX_US = 974;
    public const int GMD_DWORK_NO_GMK_STFRL_END_TEX_FR = 975;
    public const int GMD_DWORK_NO_GMK_STFRL_END_TEX_IT = 976;
    public const int GMD_DWORK_NO_GMK_STFRL_END_TEX_GE = 977;
    public const int GMD_DWORK_NO_GMK_STFRL_END_TEX_SP = 978;
    public const int GMD_DWORK_NO_GMK_STFRL_END_TEX_FI = 979;
    public const int GMD_DWORK_NO_GMK_STFRL_END_TEX_PT = 980;
    public const int GMD_DWORK_NO_GMK_STFRL_END_TEX_RU = 981;
    public const int GMD_DWORK_NO_GMK_STFRL_END_TEX_CN = 982;
    public const int GMD_DWORK_NO_GMK_STFRL_END_TEX_HK = 983;
    public const int GMD_DWORK_NO_GMK_SS_ARROW_MODEL = 984;
    public const int GMD_DWORK_NO_GMK_SS_ARROW_TEX = 985;
    public const int GMD_DWORK_NO_GMK_SS_ARROW_MAT = 986;
    public const int GMD_DWORK_NO_GMK_SS_OBLONG_MODEL = 987;
    public const int GMD_DWORK_NO_GMK_SS_OBLONG_TEX = 988;
    public const int GMD_DWORK_NO_GMK_SS_OBLONG_MAT = 989;
    public const int GMD_DWORK_NO_GMK_SS_OBLONG_TVX = 990;
    public const int GMD_DWORK_NO_GMK_START_EXP_MSG = 991;
    public const int GMD_DWORK_NO_GMK_START_EXP_WIN = 992;
    public const int GMD_DWORK_NO_GMK_END = 993;
    public const int GMD_DWORK_NO_DEC_START = 993;
    public const int GMD_DWORK_NO_DEC_END = 994;
    public const int GMD_DWORK_NO_MAX = 994;
    public const int GMD_GMK_SS_EME_EVE_FLAG_EME_MASK = 7;
    public const int GMD_GMK_PULLEY_RECT_LF = -4;
    public const int GMD_GMK_PULLEY_RECT_UP = 9;
    public const int GMD_GMK_PULLEY_RECT_RT = 4;
    public const int GMD_GMK_PULLEY_RECT_DW = 24;
    public const int GMD_GMK_PULLEY_REGISTER_NUM = 32;
    public const int GDM_GMK_PULLEY_POLE_YOFS = 6;
    private const int GMD_GMK_PULLEY_TYPE_ROPE_N = 0;
    private const int GMD_GMK_PULLEY_TYPE_ROPE_TL = 1;
    private const int GMD_GMK_PULLEY_TYPE_ROPE_TR = 2;
    private const int GMD_GMK_PULLEY_TYPE_POLE_L = 3;
    private const int GMD_GMK_PULLEY_TYPE_POLE_R = 4;
    private const int GMD_GMK_PULLEY_TYPE_MAX = 5;
    public const short GMD_GMK_PULLEY_ANGLE = 10240;
    public const int GMD_GMK_PULLEY_BRAKE = 64;
    public const int GMD_GMK_PULLEY_GRAVITY = 128;
    public const int GMD_GMK_PULLEY_ACCEL = 160;
    public const int GMD_GMK_PULLEY_MOVE_STOP = 32768;
    public const int GMD_GMK_PULLEY_PUT_XSPD_MIN = 16384;
    public const int GMD_GMK_PULLEY_PUT_XSPD_MAX = 24576;
    public const int GMD_GMK_PULLEY_PUT_YSPD = -12288;
    public const short GMD_GMK_PULLEY_EVE_FLAG_LEFT = 1;
    public const short GMD_GMK_PULLEY_EVE_FLAG_TILT = 2;
    public const int GMD_GMK_PULLEY_REHIT_TIME = 36;
    public const int IDB_GMK_PRESSWALL_MDL_GMK_P_WALL_3_ZNO = 0;
    public const int IDB_GMK_PRESSWALL_MDL_GMK_P_RAIL_BTM_3_ZNO = 1;
    public const int IDB_GMK_PRESSWALL_MDL_GMK_P_RAIL_TOP_3_ZNO = 2;
    public const int IDU0_GMK_PRESSWALL_MDL_GMK_P_WALL_3_ZNO = 0;
    public const int IDU0_GMK_PRESSWALL_MDL_GMK_P_RAIL_BTM_3_ZNO = 0;
    public const int IDU0_GMK_PRESSWALL_MDL_GMK_P_RAIL_TOP_3_ZNO = 0;
    public const int IDU1_GMK_PRESSWALL_MDL_GMK_P_WALL_3_ZNO = 0;
    public const int IDU1_GMK_PRESSWALL_MDL_GMK_P_RAIL_BTM_3_ZNO = 0;
    public const int IDU1_GMK_PRESSWALL_MDL_GMK_P_RAIL_TOP_3_ZNO = 0;
    public const string IDS_GMK_PRESSWALL_MDL_GMK_P_WALL_3_ZNO = "GMK_P_WALL_3.ZNO";
    public const string IDS_GMK_PRESSWALL_MDL_GMK_P_RAIL_BTM_3_ZNO = "GMK_P_RAIL_BTM_3.ZNO";
    public const string IDS_GMK_PRESSWALL_MDL_GMK_P_RAIL_TOP_3_ZNO = "GMK_P_RAIL_TOP_3.ZNO";
    public const int GMD_GMK_PRESSWALL_WIDTH = 1310720;
    public const int GMD_GMK_PRESSWALL_HEIGHT = 786432;
    public const int GMD_GMK_PRESSWALL_COL_OFST_X = -192;
    public const int GMD_GMK_PRESSWALL_COL_WIDTH = 192;
    public const int GMD_GMK_PRESSWALL_COL_HEIGHT = 256;
    public const int GMD_GMK_PRESSWALL4_MAT_GLARE = 0;
    public const int GMD_GMK_PRESSWALL4_MAT_ROLL = 1;
    public const int GMD_GMK_PRESSWALL4_MDL = 0;
    public const int GMD_GMK_PRESSWALL4_MDL_A = 1;
    public const int GMD_GMK_PRESSWALL4_MDL_B = 2;
    public const int GMD_GMK_PRESSWALL4_MDL_G = 3;
    public const int GMD_GMK_PRESSWALL4_MDL_LIGHT = -1;
    public const int GMD_GMK_PRESSWALL_VIB_TABLE_NUM = 20;
    public const int GMD_GMK_PRESSWALLZ4HIT_WAIT_TIME = 64;
    public const int GMK_Z4PRESSWALL_MDL_TBL_NUM = 3;
    public const ushort GMD_GMK_PSTEAM_STAT_HIT = 1;
    public const ushort GMD_GMK_PSTEAM_STAT_TRUE = 2;
    public const int GME_EFCT_CMN_IDX_STEAM_L_LOOP = 87;
    public const int GME_EFCT_CMN_IDX_STEAM_M_LOOP = 88;
    public const int GME_EFCT_CMN_IDX_STEAM_S_LOOP = 89;
    public const int GMD_POP_STEAM_MAIN_PRIO_Z = 32768;
    public const int GMD_POP_STEAM_STEAM_PRIO_Z = 4096;
    public const int GMD_POP_STEAM_STEAM_EFFECT_PRIO_Z = 65536;
    public const int GMD_POP_STEAM_USE_DIR_MODEL = 1;
    private const int GME_GMK_TYPE_POPSTEAM_U = 0;
    private const int GME_GMK_TYPE_POPSTEAM_R = 1;
    private const int GME_GMK_TYPE_POPSTEAM_D = 2;
    private const int GME_GMK_TYPE_POPSTEAM_L = 3;
    public const int GMD_GMK_POPSTEAM_RECT_FWD = 96;
    public const int GMD_GMK_POPSTEAM_RECT_BACK = 0;
    public const int GMD_GMK_POPSTEAM_RECT_SIDE = 8;
    public const int GMD_GMK_P_STEAM_INTTIME = 60;
    public const int GMD_GMK_ITEM_EVE_FLAG_NO_GROUND_COL = 1;
    public const int GMD_GMK_ITEM_BODY_RECT_LEFT = -30;
    public const int GMD_GMK_ITEM_BODY_RECT_TOP = -50;
    public const int GMD_GMK_ITEM_BODY_RECT_RIGHT = 30;
    public const int GMD_GMK_ITEM_BODY_RECT_BOTTOM = 10;
    public const int GMD_GMK_ITEM_DEF_RECT_LEFT = -30;
    public const int GMD_GMK_ITEM_DEF_RECT_TOP = -48;
    public const int GMD_GMK_ITEM_DEF_RECT_RIGHT = 30;
    public const int GMD_GMK_ITEM_DEF_RECT_BOTTOM = 0;
    public const int GMD_GMK_ITEM_FIELD_RECT_LEFT = -8;
    public const int GMD_GMK_ITEM_FIELD_RECT_TOP = -8;
    public const int GMD_GMK_ITEM_FIELD_RECT_RIGHT = 8;
    public const int GMD_GMK_ITEM_FIELD_RECT_BOTTOM = 0;
    public const int GMD_GMK_ITEM_COL_RECT_WIDTH = 40;
    public const int GMD_GMK_ITEM_COL_RECT_HEIGHT = 32;
    public const int GMD_GMK_ITEM_COL_RECT_OFST_X = -20;
    public const int GMD_GMK_ITEM_COL_RECT_OFST_Y = -32;
    public const int GMD_GMK_ITEM_JUMP_SPD_Y = -8192;
    public const int GMD_GMK_ITEM_EFFECT_WAIT_TIME = 60;
    public const int GMD_GMK_ITEM_POPUP_EFCT_OFST_Y = -86016;
    public const int GMD_GMK_ITEM_POPUP_EFCT_SCALE = 6144;
    public const int GMD_GMK_ITEM_POPUP_EFCT_SPD_Y = -10240;
    public const int GMD_GMK_ITEM_POPUP_EFCT_SPD_ADD_Y = 320;
    public const int GMD_GMK_ITEM_POPUP_EFCT_END_DISP_TIME = 30;
    public const int GMD_GMK_ITEM_BREAK_EFCT_NUM = 8;
    public const int GMD_GMK_ITEM_BREAK_EFCT_OFST_Y = -57344;
    public const int GMD_GMK_ITEM_BREAK_EFCT_BASE_SPD_X = 8192;
    public const int GMD_GMK_ITEM_BREAK_EFCT_BASE_SPD_Y = -16384;
    public const int GMD_GMK_ITEM_BREAK_EFCT_SPD_DEC_X = 128;
    private const int GMD_GMK_ITEM_MAT_USER_DATA_BARRIA = 1;
    private const int GMD_GMK_ITEM_MAT_USER_DATA_HISPEED = 2;
    private const int GMD_GMK_ITEM_MAT_USER_DATA_INVINCIBLE = 3;
    private const int GMD_GMK_ITEM_MAT_USER_DATA_RING10 = 4;
    private const int GMD_GMK_ITEM_MAT_USER_DATA_1UP = 5;
    private const int GMD_GMK_ITEM_MAT_USER_DATA_NORMAL_END = 6;
    private const int GMD_GMK_ITEM_MAT_USER_DATA_BODY = 64;
    private const int GME_ENE_GARDON_SHIELD_NONE = 0;
    private const int GME_ENE_GARDON_SHIELD_UP = 1;
    private const int GME_ENE_GARDON_SHIELD_FRONT = 2;
    private const int GME_ENE_GARDON_SHIELD_MAX = 3;
    private const int GMD_ENE_GARDON_EVE_FLAG_RIGHT = 1;
    private const int GMD_ENE_GARDON_MOVE_SPD_X = 1024;
    private const int GMD_ENE_GARDON_FW_TIME = 61440;
    private const int GMD_ENE_GARDON_TURN_FRAME = 40;
    private const int GMD_ENE_GARDON_SEARCH_LENGTH = 2;
    private const float GMD_ENE_GARDON_GUARD_FLICK_SPD = 1.5f;
    private const int GMD_ENE_GARDON_GUARD_UP_EFCT_Y = 30;
    private const int GMD_ENE_GARDON_GUARD_FRONT_EFCT_X = 30;
    private const string GMD_ENE_GARDON_SE_GUARD = "Casino1";
    public const short GMD_ENE_BUKU_EVE_FLAG_RIGHT = 1;
    public const short GMD_ENE_BUKU_MOVE_SPD_X = 2048;
    public const int GMD_ENE_BUKU_FW_TIME = 61440;
    public const short GMD_ENE_BUKU_TURN_FRAME = 40;
    public const float GMD_ENE_BUKU_EFCT_BUBBLE_X = -24f;
    public const float GMD_ENE_BUKU_EFCT_BUBBLE_Y = -5f;
    public const int GMD_EFCT_ZONE_BUILD_REG_ALLOWANCE_NUM = 48;
    public const int GMD_EFCT_ZONE_FLUSH_REG_ALLOWANCE_NUM = 8;
    private const int GME_EFCT_ZONE_PROCESS_STATE_NOP = 0;
    private const int GME_EFCT_ZONE_PROCESS_STATE_WAIT_START = 1;
    private const int GME_EFCT_ZONE_PROCESS_STATE_WAIT_COMPLETE = 2;
    private const int GME_EFCT_ZONE_PROCESS_STATE_MAX = 3;
    private const int GME_EFCT_Z01_IDX_ASHIBA = 0;
    private const int GME_EFCT_Z01_IDX_ITEM_Z1 = 1;
    private const int GME_EFCT_Z01_IDX_OBJECT_Z1 = 2;
    private const int GME_EFCT_Z01_IDX_OBJECT_Z1_A3 = 3;
    private const int GME_EFCT_Z01_IDX_SMORK_B_Z1 = 4;
    private const int GME_EFCT_Z01_IDX_SMORK_S_Z1 = 5;
    private const int GME_EFCT_Z01_IDX_SPARK_K = 6;
    private const int GME_EFCT_Z01_IDX_TAKI_Z1 = 7;
    private const int GME_EFCT_Z01_IDX_WALL_Z1 = 8;
    private const int GME_EFCT_Z01_IDX_MAX = 9;
    private const int GME_EFCT_Z02_IDX_OBJECT_Z2 = 0;
    private const int GME_EFCT_Z02_IDX_WALL_Z2 = 1;
    private const int GME_EFCT_Z02_IDX_MAX = 2;
    private const int GME_EFCT_Z03_IDX_BOMB_SMOKE_Z3 = 0;
    private const int GME_EFCT_Z03_IDX_BUBBLE_BIG = 1;
    private const int GME_EFCT_Z03_IDX_BUBBLE_LOST = 2;
    private const int GME_EFCT_Z03_IDX_BUBBLE_LOST_2 = 3;
    private const int GME_EFCT_Z03_IDX_BUBBLE_POINT = 4;
    private const int GME_EFCT_Z03_IDX_CANDLE_01 = 5;
    private const int GME_EFCT_Z03_IDX_CANDLE_02 = 6;
    private const int GME_EFCT_Z03_IDX_CANDLE_03 = 7;
    private const int GME_EFCT_Z03_IDX_DASH_Z3 = 8;
    private const int GME_EFCT_Z03_IDX_ITEM_Z3 = 9;
    private const int GME_EFCT_Z03_IDX_LIGHT_01 = 10;
    private const int GME_EFCT_Z03_IDX_OBJECT_W_Z3 = 11;
    private const int GME_EFCT_Z03_IDX_OBJECT_Z3 = 12;
    private const int GME_EFCT_Z03_IDX_PILLAR_01 = 13;
    private const int GME_EFCT_Z03_IDX_PILLAR_02 = 14;
    private const int GME_EFCT_Z03_IDX_PILLAR_03 = 15;
    private const int GME_EFCT_Z03_IDX_PILLAR_HIT = 16;
    private const int GME_EFCT_Z03_IDX_ROCK_01 = 17;
    private const int GME_EFCT_Z03_IDX_ROCK_02 = 18;
    private const int GME_EFCT_Z03_IDX_ROLLDASH_S_Z3 = 19;
    private const int GME_EFCT_Z03_IDX_RUN_Z3 = 20;
    private const int GME_EFCT_Z03_IDX_SLIDER = 21;
    private const int GME_EFCT_Z03_IDX_SLIDER_02 = 22;
    private const int GME_EFCT_Z03_IDX_SLIDER_SONIC = 23;
    private const int GME_EFCT_Z03_IDX_SMORK_B_Z3 = 24;
    private const int GME_EFCT_Z03_IDX_SMORK_S_Z3 = 25;
    private const int GME_EFCT_Z03_IDX_SPARK = 26;
    private const int GME_EFCT_Z03_IDX_SPARK_S = 27;
    private const int GME_EFCT_Z03_IDX_SPIN_02 = 28;
    private const int GME_EFCT_Z03_IDX_SPIN_03 = 29;
    private const int GME_EFCT_Z03_IDX_SPRAY_L_Z3 = 30;
    private const int GME_EFCT_Z03_IDX_SPRAY_S_Z3 = 31;
    private const int GME_EFCT_Z03_IDX_WALL_M_Z3 = 32;
    private const int GME_EFCT_Z03_IDX_WALL_Z3 = 33;
    private const int GME_EFCT_Z03_IDX_WATER = 34;
    private const int GME_EFCT_Z03_IDX_WATER_02 = 35;
    private const int GME_EFCT_Z03_IDX_MAX = 36;
    private const int GME_EFCT_Z04_IDX_LIGHT_Z4 = 0;
    private const int GME_EFCT_Z04_IDX_PILLAR_Z4 = 1;
    private const int GME_EFCT_Z04_IDX_WALL_M_Z4 = 2;
    private const int GME_EFCT_Z04_IDX_WALL_Z4 = 3;
    private const int GME_EFCT_Z04_IDX_MAX = 4;
    private const int GME_EFCT_ZFINAL_IDX_LIGHT_Z5 = 0;
    private const int GME_EFCT_ZFINAL_IDX_MAX = 1;
    private const int GME_EFCT_ZSS_IDX_1UP = 0;
    private const int GME_EFCT_ZSS_IDX_CHAOS_E_1 = 1;
    private const int GME_EFCT_ZSS_IDX_CHAOS_E_2 = 2;
    private const int GME_EFCT_ZSS_IDX_CHAOS_E_3 = 3;
    private const int GME_EFCT_ZSS_IDX_CHAOS_E_4 = 4;
    private const int GME_EFCT_ZSS_IDX_CHAOS_E_5 = 5;
    private const int GME_EFCT_ZSS_IDX_CHAOS_E_6 = 6;
    private const int GME_EFCT_ZSS_IDX_CHAOS_E_7 = 7;
    private const int GME_EFCT_ZSS_IDX_LOST = 8;
    private const int GME_EFCT_ZSS_IDX_RING_GATE = 9;
    private const int GME_EFCT_ZSS_IDX_TIME_DE = 10;
    private const int GME_EFCT_ZSS_IDX_TIME_DOWN = 11;
    private const int GME_EFCT_ZSS_IDX_TIME_EN = 12;
    private const int GME_EFCT_ZSS_IDX_TIME_ES = 13;
    private const int GME_EFCT_ZSS_IDX_TIME_FR = 14;
    private const int GME_EFCT_ZSS_IDX_TIME_IT = 15;
    private const int GME_EFCT_ZSS_IDX_TIME_JP = 16;
    private const int GME_EFCT_ZSS_IDX_TIME_UP = 17;
    private const int GME_EFCT_ZSS_IDX_MAX = 18;
    private const int GME_EFCT_ZSS_IDX_TIME_FI = 12;
    private const int GME_EFCT_ZSS_IDX_TIME_PT = 12;
    private const int GME_EFCT_ZSS_IDX_TIME_RU = 12;
    private const int GME_EFCT_ZSS_IDX_TIME_CN = 12;
    private const int GME_EFCT_ZSS_IDX_TIME_HK = 12;
    public const int DME_STFRL_3D_DATA_TYPE_SONIC = 0;
    public const int DME_STFRL_3D_DATA_TYPE_EGGMAN = 1;
    public const int DME_STFRL_3D_DATA_TYPE_RING = 2;
    public const int DME_STFRL_3D_DATA_TYPE_NUM = 3;
    public const int DME_STFRL_3D_DATA_TYPE_NONE = 4;
    public const int DMD_STFRL_TASK_PAUSELEVEL = 32767;
    public const int DMD_STFRL_TASK_PRIO_MAIN = 12288;
    public const int DMD_STFRL_TASK_GROUP_MAIN = 10;
    public const int DMD_STFRL_FILE_PATH_NUM_MAX = 60;
    public const float DMD_STFRL_SIZE_WIDTH = 960f;
    public const float DMD_STFRL_SIZE_HEIGHT = 720f;
    public const float DMD_STFRL_SIZE_HALF_WIDTH = 480f;
    public const float DMD_STFRL_SIZE_HALF_HEIGHT = 360f;
    public const int DMD_STFRL_DRAW_PRIO_CHAR = 2560;
    public const int DMD_STFRL_DRAW_PRIO_BG = 2048;
    public const int DMD_STFRL_DRAW_PRIO_FIX = 2304;
    public const int DMD_STFRL_DRAW_PRIO_WIN = 3072;
    public const float DMD_STFRL_DISP_ONE_CHAR_SIZE = 32f;
    public const float DMD_STFRL_DISP_ONE_CHAR_U_RATE = 0.0625f;
    public const float DMD_STFRL_DISP_ONE_CHAR_V_RATE = 0.125f;
    public const int DMD_STFRL_CHAR_LINE_NUM = 16;
    public const int DMD_STFRL_DRAW_STATE_PRIO_BG = 40;
    public const int DMD_STFRL_DRAW_STATE_PRIO_FIX = 30;
    public const int DMD_STFRL_DRAW_STATE_PRIO_CHAR = 20;
    public const int DMD_STFRL_DRAW_STATE_PRIO_WIN = 50;
    public const float DMD_STFRL_FONT_CENTER_DIST_X = 112f;
    public const float DMD_STFRL_SCR_DISP_POS_X = 160f;
    public const float DMD_STFRL_SCR_DISP_POS_Y = 216f;
    public const float DMD_STFRL_SIZE_SCR_TEXTURE_X = 512f;
    public const float DMD_STFRL_SIZE_SCR_TEXTURE_Y = 288f;
    public const float DMD_STFRL_UV_U_RATE_TEXTURE = 1f;
    public const float DMD_STFRL_UV_V_RATE_TEXTURE = 0.5625f;
    public const int DMD_STFRL_DIMPS_LOGO_JP_TEX_ID = 2;
    public const int DMD_STFRL_SEGA_LOGO_JP_TEX_ID = 3;
    public const int DMD_STFRL_SEGA_LOGO_US_TEX_ID = 4;
    public const int DMD_STFRL_WINDOW_TEX_ID = 1;
    public const float DMD_STFRL_WINDOW_SIZE_W = 380f;
    public const float DMD_STFRL_WINDOW_SIZE_H = 180f;
    public const float DMD_STFRL_WIN_DEF_RATE = 1f;
    public const float DMD_STFRL_WIN_EFCT_TIME = 8f;
    public const float DMD_STFRL_FADEIN_TIME = 64f;
    public const float DMD_STFRL_FADEOUT_TIME = 64f;
    public const float DMD_STFRL_MODE_FADEIN_TIME = 80f;
    public const float DMD_STFRL_MODE_FADEOUT_TIME = 80f;
    public const int DMD_STFRL_MODE_SND_FADEOUT_TIME = 80;
    public const float DMD_STFRL_EFCT_FADE_IN_TIME = 32f;
    public const float DMD_STFRL_EFCT_FADE_OUT_TIME = 32f;
    public const float DMD_STFRL_EFCT_FADE_WAIT_TIME = 32f;
    public const int DMD_STFRL_EFCT_QSTN_COLOR_INIT = 255;
    public const int DMD_STFRL_EFCT_QSTN_ALPHA_INIT = 0;
    public const int DMD_STFRL_EFCT_QSTN_ALPHA_MAX = 255;
    public const int DMD_STFRL_EFCT_QSTN_FADE_SPD = 8;
    public const int DMD_STFRL_TEX_CONTINUE_DISP_TIME = 240;
    public const int DMD_STFRL_PLAY_SE_METAL_SONIC_EYE = 140;
    public const float DMD_STFRL_DISP_SCALE_TEXT = 1.6875f;
    public const uint DMD_STFRL_FLAG_EXIT = 1;
    public const uint DMD_STFRL_FLAG_CANCEL = 2;
    public const uint DMD_STFRL_FLAG_DECIDE = 4;
    public const uint DMD_STFRL_FLAG_BACK_LOAD_SCR_DATA = 8;
    public const uint DMD_STFRL_FLAG_IMAGE_FADE_START = 16;
    public const uint DMD_STFRL_FLAG_IMAGE_FADE_END = 32;
    public const uint DMD_STFRL_FLAG_DISP_IN_WINDOW = 64;
    public const uint DMD_STFRL_FLAG_COUNT_TIME = 128;
    public const uint DMD_STFRL_FLAG_POSSIBLE_INPUT = 256;
    public const uint DMD_STFRL_FLAG_WIN_EFCT_END = 512;
    public const uint DMD_STFRL_FLAG_WIN_ALL_DRAW = 1024;
    public const uint DMD_STFRL_FLAG_MAKE_SND_TASK = 2048;
    public const uint DMD_STFRL_FLAG_DISP_CONTINUE_TEX = 4096;
    public const uint DMD_STFRL_FLAG_ALL_PROC_STOP = 8192;
    public const uint DMD_STFRL_FLAG_HBM_BGM_STOP = 16384;
    public const uint DMD_STFRL_FLAG_HBM_BGM_REPLAY = 32768;
    public const uint DMD_STFRL_FLAG_SET_EVT_SIGN_OUT = 1073741824;
    public const uint DMD_STFRL_FLAG_SIGN_OUT_EXIT = 2147483648;
    public const int DME_STFRL_DATA_TYPE_LIST1_DATA = 0;
    public const int DME_STFRL_DATA_TYPE_SCR_DATA = 1;
    public const int DME_STFRL_DATA_TYPE_END_JP_DATA = 2;
    public const int DME_STFRL_DATA_TYPE_NUM = 3;
    public const int DME_STFRL_DATA_TYPE_NONE = 4;
    public const int DME_STFRL_FONT_DISP_TYPE_POST = 0;
    public const int DME_STFRL_FONT_DISP_TYPE_NAME = 1;
    public const int DME_STFRL_FONT_DISP_TYPE_SPACE = 2;
    public const int DME_STFRL_FONT_DISP_TYPE_WHITE_POST = 3;
    public const int DME_STFRL_FONT_DISP_TYPE_SONIC_TEAM = 4;
    public const int DME_STFRL_FONT_DISP_TYPE_DIMPS = 5;
    public const int DME_STFRL_FONT_DISP_TYPE_SEGA = 6;
    public const int DME_STFRL_FONT_DISP_TYPE_SEGA_SPACE = 7;
    public const int DME_STFRL_FONT_DISP_TYPE_NUM = 8;
    public const int DME_STFRL_FONT_DISP_TYPE_NONE = 9;
    public const int DME_STFRL_NEXT_EVT_MAINMENU = 0;
    public const int DME_STFRL_NEXT_EVT_TITLE = 1;
    public const int DME_STFRL_NEXT_EVT_NUM = 2;
    public const int DME_STFRL_NEXT_EVT_NONE = 3;
    public const int DME_STFRL_DISP_MODE_MAIN = 0;
    public const int DME_STFRL_DISP_MODE_END = 1;
    public const int DME_STFRL_DISP_MODE_WIN_MSG = 2;
    public const int DME_STFRL_DISP_MODE_NUM = 3;
    public const int DME_STFRL_DISP_MODE_NONE = 4;
    public const int DME_STFRL_WIN_GET_EMERALD = 0;
    public const int DME_STFRL_WIN_NUM = 1;
    public const int DME_STFRL_WIN_NONE = 2;
    private const int GME_BS_CMN_CNM_MODE_REPLACE = 0;
    private const int GME_BS_CMN_CNM_MODE_MULT_LEFT = 1;
    private const int GME_BS_CMN_CNM_MODE_MULT_RIGHT = 2;
    private const int GME_BS_CMN_CNM_MODE_MAX = 3;
    private const float dm_stfrl_list_id_font_size_scale = 1.4f;
    private const float dm_stfrl_list_id_font_height_scale = 1.26f;
    private const int AOD_SYS_MSG_NUM = 0;
    private const int AOD_SYS_MSG_NONE = 1;
    private const int AOD_SYS_MSG_SELECT_OK = 0;
    private const int AOD_SYS_MSG_SELECT_OKCANCEL = 1;
    private const int AOD_SYS_MSG_SELECT_YESNO = 2;
    private const int AOD_SYS_MSG_SELECT_YESNOCANCEL = 3;
    private const int AOD_SYS_MSG_SELECT_NUM = 4;
    private const int AOD_SYS_MSG_SELECT_NONE = 5;
    private const int AOD_SYS_MSG_RESULT_OK = 0;
    private const int AOD_SYS_MSG_RESULT_CANCEL = 1;
    private const int AOD_SYS_MSG_RESULT_YES = 2;
    private const int AOD_SYS_MSG_RESULT_NO = 3;
    private const int AOD_SYS_MSG_RESULT_SYS_CANCEL = 4;
    private const int AOD_SYS_MSG_RESULT_NUM = 5;
    private const int AOD_SYS_MSG_RESULT_NONE = 6;
    public static readonly int[] gs_trophy_acquisition_tbl;
    public static readonly AppMain.ACHIEVEMENT_INFO[] achievements;
    private static AppMain._obj_block_collision_func_delegate[] _obj_block_collision_func;
    private static AppMain.OBS_BLOCK_COLLISION _obj_bcol;
    private static AppMain.NNS_NODEUSRMOT_CALLBACK_FUNC nngNodeUserMotionCallbackFunc;
    private static float nngNodeUserMotionTriggerTime;
    private static AppMain.AMS_TRAIL_INTERFACE AmTrailGlobal;
    private static readonly AppMain.AMS_TRAIL_EFFECT _amTrailEF_head;
    private static readonly AppMain.AMS_TRAIL_EFFECT _amTrailEF_tail;
    private static AppMain.AMS_TRAIL_EFFECT[] _amTrailEF_buf;
    private static AppMain.AMS_TRAIL_EFFECT[] _amTrailEF_ref;
    private static int _amTrailEF_alloc;
    private static int _amTrailEF_free;
    private static AppMain.AMS_TRAIL_INTERFACE pTr;
    private static AppMain.MTS_TASK_TCB gm_pause_tcb;
    private static AppMain.MTS_TASK_TCB gm_pad_vib_tcb;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_slot_obj_3d_list;
    private static AppMain.GMS_PLAYER_WORK slot_start_player;
    private static int slot_start_call;
    private static uint rand_result;
    private static short GMD_GMK_SLOT_PROB_JJJ;
    private static short GMD_GMK_SLOT_PROB_EEE;
    private static short GMD_GMK_SLOT_PROB_SSS;
    private static short GMD_GMK_SLOT_PROB_RRR;
    private static short GMD_GMK_SLOT_PROB_BBB;
    private static short GMD_GMK_SLOT_1ST_LOT;
    private static short GMD_GMK_SLOT_EGG_LOT;
    private static short GMD_GMK_SLOT_PROB_JJJ_MAX;
    private static short GMD_GMK_SLOT_PROB_EEE_MAX;
    private static short GMD_GMK_SLOT_PROB_SSS_MAX;
    private static short GMD_GMK_SLOT_PROB_RRR_MAX;
    private static short GMD_GMK_SLOT_PROB_BBB_MAX;
    private static short GMD_GMK_SLOT_EGG_SUBERI;
    private static short GMD_GMK_SLOT_REEL_ALLMARK;
    private static short GMD_GMK_SLOT_REEL1KOMA_HEIGHT;
    private static short GMD_GMK_SLOT_REEL_MAX_SPEED;
    private static short GMD_GMK_SLOT_REEL_MIN_SPEED;
    private static short GMD_GMK_SLOT_REEL_EGG_SPEED;
    private static short GMD_GMK_SLOT_REEL_ACC;
    private static short GMD_GMK_SLOT_REEL_BRAKE;
    private static byte[][] tbl_gmk_reel_mark;
    private static short[] tbl_gmk_slot_prob;
    private static short[] tbl_gmk_slot_prob_max;
    private static int[] tbl_slot_bonus_ring;
    private static int[] tbl_slot_bonus_score;
    private static short[][] tbl_dam_ofst_xy;
    private static ushort[] tbl_gmk_slot_reelmodel_id;
    private static short[] tbl_reel_tex_u;
    private static short[][] tbl_reel_tex_v;
    private static int[] g_gm_gmk_bumper_model_id;
    private static int[] g_gm_gmk_bumper_motion_id;
    private static ushort[] g_gm_gmk_bumper_angle_z;
    private static short[][] g_gmk_bumper_rect;
    private static int[] g_gmk_bumper_effect_id_flush;
    private static int[][] g_gmk_bumper_effect_offset_flush;
    private static AppMain.OBS_ACTION3D_NN_WORK[] g_gm_gmk_bumper_obj_3d_list;
    private static AppMain._eve_func_[] gm_evemgr_create_eve_func_tbl;
    private static ushort[] gm_evemgr_create_size_tbl;
    private static AppMain.GMS_EVE_MGR_WORK g_gm_eve_mgr_work;
    private static AppMain.MTS_TASK_TCB gm_eve_mgr_tcb;
    public static AppMain.GMS_EVE_DATA_EV_HEADER gm_eve_data;
    public static AppMain.GMS_EVE_DATA_RG_HEADER gm_ring_data;
    public static AppMain.GMS_EVE_DATA_DC_HEADER gm_deco_data;
    public static readonly uint[] gm_eve_local_evt_obj_use_flag;
    private static readonly AppMain.GMS_EVE_RECORD_EVENT[] gm_eve_local_evt_record;
    public static readonly uint[] gm_eve_local_ring_obj_use_flag;
    private static readonly AppMain.GMS_EVE_RECORD_RING[] gm_eve_local_ring_record;
    public static readonly uint[] gm_eve_local_deco_obj_use_flag;
    private static readonly AppMain.GMS_EVE_RECORD_DECORATE[] gm_eve_local_deco_record;
    private static int[] ev_rect;
    private static int[] lcd_rect;
    private static int[] block_rect;
    private static byte[] g_gm_default_col;
    public static AppMain.MPP_VOID_OBS_OBJECT_WORK _ObjDrawActionSummary;
    public static AppMain.MPP_VOID_OBS_OBJECT_WORK _GmEnemyDefaultInFunc;
    public static AppMain.MPP_VOID_OBS_OBJECT_WORK _GmEnemyDefaultMoveFunc;
    public static AppMain.MPP_VOID_OBS_OBJECT_WORK _gmEnemyDefaultRecFunc;
    public static AppMain.OBS_OBJECT_WORK_Delegate2 _gmEnemyActionCallBack;
    public static AppMain.OBS_RECT_WORK_Delegate1 _GmEnemyDefaultDefFunc;
    public static AppMain.OBS_RECT_WORK_Delegate1 _GmEnemyDefaultAtkFunc;
    private static uint gm_efct_cmn_proc_state;
    private static int gm_efct_cmn_tex_reg_id;
    private static int[] gm_efct_cmn_model_reg_id_list;
    private static int gm_efct_cmn_model_reg_num;
    private static int[] gm_efct_cmn_mdl_tex_reg_id_list;
    private static AppMain.AMS_AMB_HEADER eff_cmn_arc;
    private static AppMain.OBS_DATA_WORK ambtex_dwork;
    private static object texlistbuf;
    private static int model_reg_cnt;
    private static int stage;
    private static int StageCount;
    private static bool GmEfctCmnBuildDataLoopInitPartWorking;
    private static AppMain.GMS_BOSS5_EFCT_DATA_INFO[] gm_boss5_efct_data_info_tbl;
    private static AppMain.GMS_EFFECT_CREATE_PARAM[] gm_boss5_efct_create_param_tbl;
    private static float[][] gm_boss5_efct_breakdown_smoke_disp_ofst_tbl;
    private static short[][] gm_boss5_efct_breakdown_smoke_disp_rot_tbl;
    private static float[][] gm_boss5_efct_body_small_smoke_disp_ofst_tbl;
    private static short[][] gm_boss5_efct_body_small_smoke_disp_rot_tbl;
    private static float[][] gm_boss5_efct_berserk_steam_disp_ofst_tbl;
    private static short[][] gm_boss5_efct_berserk_steam_disp_rot_tbl;
    public static ushort GMD_BOSS5_EFCT_ROCKET_ROLLING_SPARK_DIR_Z;
    private static ushort[] objDiffCollisionDirHeightCheck_usDir1;
    private static ushort[] objDiffCollisionDirHeightCheck_usDir2;
    private static ushort[] objDiffCollisionDirHeightCheck_usDir3;
    private static uint[] objDiffCollisionDirHeightCheck_ulAttr;
    private static AppMain.MTS_TASK_TCB obj_camera_tcb;
    private static AppMain.OBS_CAMERA_SYS obj_camera_sys;
    private AppMain.NNS_VECTOR nngGridPos;
    private int nngGridXnum;
    private int nngGridZnum;
    public static int NNE_LIGHT_0;
    public static int NNE_LIGHT_1;
    public static int NNE_LIGHT_2;
    public static int NNE_LIGHT_3;
    public static int NNE_LIGHT_4;
    public static int NNE_LIGHT_5;
    public static int NNE_LIGHT_6;
    public static int NNE_LIGHT_7;
    public static int NNE_LIGHT_MAX;
    public static int NNE_LIGHT_ALL;
    private static readonly AppMain.NNS_DRAWCALLBACK_VAL nngDrawCallBackVal;
    private static int[] nnsTexCoordSrc;
    private static uint nnsNormalFormatType;
    private static readonly OpenGL.glArray4f BreakWall_1_3_Color;
    public static AppMain.AMS_DRAW_VIDEO _am_draw_video;
    public static readonly AppMain.AMS_RENDER_TARGET _am_draw_target;
    private static AppMain._am_draw_command_delegate _am_draw_command_sort;
    private static AppMain._am_draw_command_delegate _am_draw_command_func;
    public static int _am_draw_command_buf_max;
    public static int _am_draw_data_buf_max;
    public static int _am_draw_work_buf_max;
    public static AppMain.AMS_TASK _am_draw_task;
    private static AppMain.NNS_RGBA_U8 _am_draw_bg_color;
    private static int _am_draw_in_scene;
    private static int _am_draw_offset_x;
    private static readonly AppMain.AMS_DRAWSTATE _am_draw_state;
    private static int _am_draw_state_stack_num;
    private static readonly AppMain.AMS_DRAWSTATE[] _am_draw_state_stack;
    public static AppMain.NNS_MATRIX _am_draw_proj_mtx;
    public static int _am_draw_proj_type;
    private static readonly AppMain.AMS_DISPLAYLIST_MANAGER _am_displaylist_manager;
    private static AppMain._am_draw_command_delegate[] _am_draw_sort_system_exec;
    private static AppMain._am_draw_regist_delegate[] _am_draw_regist_func;
    private static AppMain._am_draw_command_delegate[] _am_draw_system_exec;
    private static readonly AppMain.NNS_MATRIX _am_draw_world_view_matrix;
    private static object[][] _am_draw_command_buf;
    private static object[][] _am_draw_data_buf;
    private static AppMain.Pool<AppMain.AMS_PARAM_DRAW_PRIMITIVE> amDraw_AMS_PARAM_DRAW_PRIMITIVE_Pool;
    private static AppMain.Pool<AppMain.NNS_MATRIX> amDraw_NNS_MATRIX_Pool;
    private static AppMain.Pool<AppMain.AMS_PARAM_MAKE_TASK> amDraw_AMS_PARAM_MAKE_TASK_Pool;
    private static AppMain.Pool<AppMain.AMS_DRAWSTATE_FOG> amDraw_AMS_DRAWSTATE_FOG_Pool;
    private static AppMain.Pool<AppMain.AMS_DRAWSTATE_FOG_COLOR> amDraw_AMS_DRAWSTATE_FOG_COLOR_Pool;
    private static AppMain.Pool<AppMain.AMS_DRAWSTATE_FOG_RANGE> amDraw_AMS_DRAWSTATE_FOG_RANGE_Pool;
    private static AppMain.Pool<AppMain.AMS_PARAM_DRAW_OBJECT_MATERIAL> amDraw_AMS_PARAM_DRAW_OBJECT_MATERIAL_Pool;
    private static AppMain.Pool<AppMain.GMS_GMK_ITEM_MAT_CB_PARAM> amDraw_GMS_GMK_ITEM_MAT_CB_PARAM_Pool;
    private static AppMain.Pool<AppMain.DMAP_PARAM_WATER> amDraw_DMAP_PARAM_WATER_Pool;
    private static AppMain.NNS_PRIM3D_PCT[] NNS_PRIM3D_PCT_buf;
    private static int NNS_PRIM3D_PCT_buf_size;
    private static AppMain.NNS_PRIM3D_PCT_ARRAY[] NNS_PRIM3D_PCT_arrays;
    private static int NNS_PRIM3D_PCT_arrays_count;
    private static AppMain.ArrayPool<AppMain.NNS_PRIM3D_PC> amDraw_NNS_PRIM3D_PC_Array_Pool;
    private static AppMain.ArrayPool<AppMain.GMS_MAP_PRIM_DRAW_WORK> amDraw_GMS_MAP_PRIM_DRAW_WORK_Array_Pool;
    private static AppMain.ArrayPoolFast<AppMain.NNS_TRS> amDraw_NNS_TRS_Array_Pool;
    private static AppMain.Pool<AppMain.NNS_MATERIAL_STDSHADER_COLOR> amDraw_NNS_MATERIAL_STDSHADER_COLOR_Pool;
    private static AppMain.Pool<AppMain.NNS_MATERIAL_GLES11_DESC> amDraw_NNS_MATERIAL_GLES11_DESC_Pool;
    private static AppMain.Pool<AppMain.NNS_MATERIALPTR> amDraw_NNS_MATERIALPTR_Pool;
    private static AppMain.ArrayPoolFast<AppMain.NNS_MATERIALPTR> amDraw_NNS_MATERIALPTR_Array_Pool;
    private static AppMain.ArrayPoolFast<AppMain.GMS_BS_CMN_CNM_NODE_INFO> amDraw_GMS_BS_CMN_CNM_NODE_INFO_Array_Pool;
    private static AppMain.Pool<AppMain.GMS_BS_CMN_CNM_NODE_INFO> amDraw_GMS_BS_CMN_CNM_NODE_INFO_Pool;
    private static AppMain.Pool<AppMain.GMS_BS_CMN_CNM_PARAM> amDraw_GMS_BS_CMN_CNM_PARAM_Pool;
    private static AppMain.Pool<AppMain.OBS_DRAW_PARAM_3DNN_USER_FUNC> amDraw_OBS_DRAW_PARAM_3DNN_USER_FUNC_Pool;
    private static AppMain.Pool<AppMain.OBS_DRAW_PARAM_3DNN_MOTION> amDraw_OBS_DRAW_PARAM_3DNN_MOTION_Pool;
    private static AppMain.Pool<AppMain.OBS_DRAW_PARAM_3DNN_DRAW_MOTION> amDraw_OBS_DRAW_PARAM_3DNN_DRAW_MOTION_Pool;
    private static AppMain.Pool<AppMain.AMS_PARAM_DRAW_MOTION_TRS> amDraw_AMS_PARAM_DRAW_MOTION_TRS_Pool;
    private static AppMain.Pool<AppMain.NNS_TRS> amDraw_NNS_TRS_Pool;
    private static AppMain.Pool<AppMain.AOS_ACT_DRAW> amDraw_AOS_ACT_DRAW_Pool;
    private static AppMain.Pool<AppMain.NNS_OBJECT> amDraw_NNS_OBJECT_Pool;
    public static int NNS_PRIM3D_PCT_ALLOC_CNT;
    private static AppMain.NNS_MATRIX _amDrawSortPrimitive3D_base_mtx;
    private static AppMain.NNS_MATRIX _amDrawSortPrimitive2D_mtx;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_stopper_obj_3d_list;
    private static short[] tbl_gm_gmk_piston_col_rect;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_spctplt_obj_3d_list;
    private static short[][] tbl_gm_gmk_spctplt_rect;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_beltconv_obj_3d_list;
    private static AppMain.AMS_AMB_HEADER gm_gmk_beltconv_obj_tvx_list;
    public static AppMain.TVX_FILE _tvx_roller;
    public static AppMain.TVX_FILE _tvx_axis;
    public static AppMain.TVX_FILE _tvx_belt_up;
    public static AppMain.TVX_FILE _tvx_belt_down;
    public static short GMD_ENE_HARO_EVE_FLAG_RIGHT;
    public static short GMD_ENE_HARO_MOVE_SPD_X;
    public static int GMD_ENE_HARO_FW_TIME;
    public static int GMD_ENE_HARO_TURN_FRAME;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_ene_haro_obj_3d_list;
    public static readonly AppMain.GMS_EFCT_ENE_CREATE_PARAM[] gm_efct_ene_create_param_tbl;
    private static readonly int[] gm_efct_ene_tex_reg_id_list;
    private static readonly int[] gm_efct_ene_model_reg_id_list;
    private static int gm_efct_ene_target_zone_no;
    private static readonly ushort[] gm_boss4_eff_sw_atk_flag_tbl;
    private static readonly ushort[] gm_boss4_eff_sw_def_flag_tbl;
    private static AppMain.MTS_TASK_TCB gs_sound_tcb;
    private static Dictionary<string, SoundEffect> cacheFxSounds;
    private static string[] sLevel_Common_BGMList;
    private static string[] sLevel_1_BGMList;
    private static string[] sLevel_2_BGMList;
    private static string[] sLevel_3_BGMList;
    private static string[] sLevel_4_BGMList;
    private static string[][] bgmLists;
    private static int m_iBGMPreparedLevel;
    private static Dictionary<string, Song> bgmPreloadedList;
    private static readonly AppMain.GSS_SND_SYS_MAIN_INFO gs_sound_sys_main_info;
    private static readonly AppMain.GSS_SND_SCB[] gs_sound_scb_heap;
    private static readonly byte[] gs_sound_scb_heap_usage_flag;
    private static readonly AppMain.GSS_SND_SE_HANDLE[] gs_sound_se_handle_heap;
    private static readonly byte[] gs_sound_se_handle_heap_usage_flag;
    private static readonly AppMain.GSS_SND_SE_HANDLE gs_sound_se_handle_error;
    private static AppMain.GSS_SND_SE_HANDLE[] gs_sound_se_handle_default;
    private static readonly float[] gs_sound_volume;
    private static Dictionary<string, AppMain.SOUND_TABLE> sound_fx_list;
    private static Dictionary<string, AppMain.SOUND_TABLE> sound_bgm_list;
    private static int g_iCurrentCachedIndex;
    private static bool g_bSoundsPrecached;
    private static bool b_bPrioritySoundsLoaded;
    private static AppMain.OBS_DIFF_COLLISION _obj_fcol;
    public static AppMain.NNS_CLIP_PLANE nngClipPlane;
    public static AppMain.NNS_CLIP_PLANE nngClipPlaneGs;
    private static float nngNormalLength;
    private static float nngTangentLength;
    private static float nngBinormalLength;
    private static AppMain.NNS_RGBA nngNormalColor;
    private static AppMain.NNS_RGBA nngTangentColor;
    private static AppMain.NNS_RGBA nngBinormalColor;
    private static AppMain.NNS_RGBA nngWireColor;
    private static byte[] gm_player_motion_list_son_right;
    private static byte[] gm_player_motion_list_sson_right;
    private static byte[] gm_player_motion_list_pn_son_right;
    private static byte[] gm_player_motion_list_pn_sson_right;
    private static byte[] gm_player_motion_list_tr_son_right;
    private static byte[] gm_player_model_list_pn_son;
    private static byte[] gm_player_model_list_son;
    private static byte[] gm_player_model_list_tr_son;
    private static byte[] gm_player_motion_list_pn_son_left;
    private static byte[] gm_player_motion_list_pn_sson_left;
    private static byte[] gm_player_motion_list_son_left;
    private static byte[] gm_player_motion_list_sson_left;
    private static byte[] gm_player_motion_list_tr_son_left;
    public static byte[][] _g_gm_player_motion_right_tbl;
    public static byte[][] _g_gm_player_motion_left_tbl;
    private static byte[][] _g_gm_player_model_tbl;
    private static byte[][] _g_gm_player_mtn_blend_setting_tbl;
    private static byte[] gm_player_mtn_blend_setting_son;
    private static byte[] gm_player_mtn_blend_setting_tr_son;
    private static byte[] gm_player_mtn_blend_setting_pn_son;
    public static readonly AppMain.GMS_PLY_PARAMETER[] g_gm_player_parameter;
    public static int nextDemoLevel;
    public static AppMain.GMS_MAIN_SYSTEM g_gm_main_system;
    private static AppMain.MTS_TASK_TCB gm_main_load_wait_tcb;
    private static AppMain.MTS_TASK_TCB gm_main_release_wait_tcb;
    private static AppMain.MTS_TASK_TCB gm_main_load_bossbattle_tcb;
    private static AppMain.MTS_TASK_TCB gm_main_release_bossbattle_tcb;
    private static OpenGL.glArray4f[] LightColor;
    public static bool g_pause_flag;
    private static Thread _bossThread;
    private static bool _bossFinishThread;
    public static short GMD_GMK_PPIL_COL_WIDTH;
    public static short GMD_GMK_PPIL_COL_HEIGHT;
    public static int GMD_GMK_PPIL_PIL_OFS_MAX;
    public static int GMD_GMK_PPIL_PIL_OFS_MIN;
    public static int GMD_GMK_PPIL_SPR_OFS_MAX;
    public static int GMD_GMK_PPIL_SPR_OFS_MIN;
    public static uint GMD_GMK_PPIL_ID_NUM_MASK;
    public static int GMD_GMK_PPIL_ID_NUM_MAX;
    public static int GMD_GMK_PPIL_FLAG_SHOCK_ABS;
    public static int GMD_GMK_PPIL_FLAG_EFFECT;
    public static uint GMD_GMK_PPIL_COLHIT;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_press_pillar_obj_3d_list;
    private static byte[] gm_gmk_press_pillar_sw;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_ene_motora_obj_3d_list;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_ene_mereon_obj_3d_list;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_ene_mereon_r_obj_3d_list;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_ene_harisenbo_obj_3d_list;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_ene_harisenbo_r_obj_3d_list;
    private static AppMain.NNS_MATRIX gmEneHariMotionCallback_node_mtx;
    private static AppMain.NNS_MATRIX gmEneHariMotionCallback_base_mtx;
    public static readonly AppMain.GMS_EFCT_CMN_CREATE_PARAM[] gm_efct_cmn_create_param_tbl;
    private static readonly int[][] g_gm_deco_model_index;
    private static readonly uint[] g_gm_deco_disp_flag;
    private static readonly int[][] g_gm_deco_node_motion_index;
    private static readonly int[][] g_gm_deco_mat_motion_index;
    private static uint[] g_gm_deco_user_work;
    private static int[] g_gm_deco_user_timer;
    public static uint[] g_gm_deco_command_state;
    public static AppMain.OBS_RECT_WORK_Delegate1[] g_gm_deco_func_rect;
    public static readonly short[][] g_gm_deco_rect_size;
    private static uint[] g_gm_deco_user_flag;
    private static readonly ushort[] g_gm_deco_rot_z;
    private static readonly AppMain.MPP_VOID_OBS_OBJECT_WORK[] g_gm_deco_func_main;
    private static readonly int[][] g_gm_deco_pos;
    private static readonly AppMain.GSF_TASK_PROCEDURE[] g_gm_deco_func_dest;
    private static readonly AppMain.MPP_VOID_OBS_OBJECT_WORK[] g_gm_deco_func_move;
    private static readonly AppMain.MPP_VOID_OBS_OBJECT_WORK[] g_gm_deco_func_out;
    private static AppMain.GMS_DECO_FALL_MANAGER[] g_deco_fall_manager;
    private static AppMain.GMS_DECO_PRIM_DRAW_WORK[] g_deco_tvx_work;
    private static AppMain.NNS_RGBA_U8 g_deco_rendaer_target_color;
    private static AppMain.GMS_DECO_MGR g_deco_mgr_real;
    private static AppMain.GMS_DECO_MGR g_deco_mgr;
    private static readonly AppMain.GMS_DECO_DATA g_deco_data_real;
    private static AppMain.GMS_DECO_DATA g_deco_data;
    private static AppMain.AMS_AMB_HEADER gmDeco_matMotionHeader;
    private static AppMain.AMS_AMB_HEADER gmDeco_motionHeader;
    private static AppMain.OBF_DRAW_USER_DT_FUNC _gmDecoTcbProcPostDT;
    private static AppMain.OBF_DRAW_USER_DT_FUNC _gmDecoDrawFallFrontUserFunc;
    private static AppMain.OBF_DRAW_USER_DT_FUNC _gmDecoDrawFallBackUserFunc;
    public static int OBD_DRAW_USER_COMMAND_SORT_3DNN_MODEL;
    public static int OBD_DRAW_USER_COMMAND_SORT_3DNN_MATMTN;
    public static int OBD_DRAW_USER_COMMAND_SORT_3DNN_MAX;
    public static int OBD_DRAW_USER_COMMAND_3DNN_MODEL;
    public static int OBD_DRAW_USER_COMMAND_3DNN_MODEL_MATMTN;
    public static int OBD_DRAW_USER_COMMAND_3DNN_MOTION;
    public static int OBD_DRAW_USER_COMMAND_3DNN_MOTION_MATMTN;
    public static int OBD_DRAW_USER_COMMAND_3DNN_SET_CAMERA;
    public static int OBD_DRAW_USER_COMMAND_3DNN_USER_FUNC;
    public static int OBD_DRAW_USER_COMMAND_3DNN_DRAW_MOTION;
    public static int OBD_DRAW_USER_COMMAND_3DNN_DRAW_MOTION_MATMTN;
    public static int OBD_DRAW_USER_COMMAND_3DNN_MAX;
    public static AppMain._am_draw_command_delegate[] obj_draw_user_command_func_tbl;
    public static AppMain.MPP_VOID_AMSCOMMANDHEADER_NNFDRAWOBJ[] obj_draw_user_command_sort_func_tbl;
    public static readonly uint[] obj_draw_3dnn_command_state_tbl;
    public static bool[] obj_draw_3dnn_command_state_exe_end_scene_tbl;
    private static AppMain.MPP_BOOL_NNSDRAWCALLBACKVAL_OBJECT_DELEGATE obj_draw_material_cb_func;
    private static object obj_draw_material_cb_param;
    private static AppMain.MTS_TASK_TCB obj_draw_effect_server_tcb;
    public static AppMain.TaskProc _objDrawStart_DT;
    private static AppMain.NNS_MATRIX ObjDrawAction3DNN_obj_mtx;
    private static AppMain.Pool<AppMain.OBS_DRAW_PARAM_3DNN_MODEL> _ObjDraw3DNNModel_Pool;
    private static AppMain.Pool<AppMain.OBS_DRAW_PARAM_3DNN_DRAW_PRIMITIVE> OBS_DRAW_PARAM_3DNN_DRAW_PRIMITIVE_Pool;
    private static AppMain.OBF_DRAW_USER_DT_FUNC _objDraw3DNNDrawPrimitive_DT;
    public static AppMain.SNNS_VECTOR4D vec_dispObjDrawAction3DES;
    public static AppMain.SNNS_VECTOR4D vec_posObjDrawAction3DES;
    public static AppMain.SNNS_VECTOR4D vec_scaleObjDrawAction3DES;
    public static AppMain.SNNS_VECTOR4D vecObjDrawAction3DES;
    private static AppMain.OBF_DRAW_USER_DT_FUNC _objDraw3DESMatrixPush_UserFunc;
    private static AppMain.OBF_DRAW_USER_DT_FUNC _objDraw3DESMatrixPop_UserFunc;
    private static AppMain.AOS_ACT_ACM ObjDrawAction2DAMA_acm;
    public static AppMain.OBF_DRAW_USER_DT_FUNC _objDraw2DAMAPre_DT;
    private static AppMain.Pool<AppMain.OBS_DRAW_PARAM_3DNN_SET_CAMERA> _objDraw3DNNSetCamera_Pool;
    private static AppMain.Pool<AppMain.OBS_DRAW_PARAM_3DNN_SORT_MODEL> OBS_DRAW_PARAM_3DNN_SORT_MODEL_Pool;
    private static AppMain.NNS_MATERIALCALLBACK_FUNC _objDraw3DNNMaterialCallback;
    public static AppMain.SNNS_MATRIX tempSNNS_MATRIX0;
    private static int player_spd_x;
    private static int player_spd_y;
    private static short player_spd_keep_timer;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_upbumper_obj_3d_list;
    private static readonly AppMain.GMS_GMK_UPBUMPER_REBOUND_DATA[] tbl_upbmper_rebound_data;
    public static int GMD_GMK_UPBUMPER_REBOUND_DATA_NUM;
    public static AppMain.GMS_DECOGLARE_PARAM[] _gm_decoGlare_param;
    public static AppMain.GMDECO_GLARE_INTERFACE gmDeco_Glare_global;
    public static AppMain.GMDECO_GLARE_INTERFACE pIF;
    public static uint GMD_BOSS5_LAND_FLAG_SHAKE_ACTIVE;
    public static uint GMD_BOSS5_LAND_FLAG_BREAK_ACTIVE;
    public static uint GMD_BOSS5_LAND_LDPART_SPIN_ROT_AXIS_NUM;
    public static int GMD_BOSS5_LAND_LDPART_SPIN_ROT_SPD_DEG;
    public static uint GMD_BOSS5_LAND_LDPART_WIDTH_INT;
    public static ushort GMD_BOSS5_LAND_LDPART_HEIGHT_INT;
    public static int GMD_BOSS5_LAND_LDPART_WIDTH_FX;
    public static int GMD_BOSS5_LAND_LDPART_HEIGHT_FX;
    public static int GMD_BOSS5_LAND_LDPART_CENTER_OFST_X_FX;
    public static int GMD_BOSS5_LAND_LDPART_CENTER_OFST_Y_FX;
    public static int GMD_BOSS5_LAND_LDPART_FALL_Z_SPD_MAX;
    public static float GMD_BOSS5_LAND_LDPART_FALL_XY_SPD_FL;
    public static int GMD_BOSS5_LAND_LDPART_FALL_XY_DIR_RANGE_DEG;
    public static int GMD_BOSS5_LAND_LDPART_VIB_AMPLITUDE;
    private static int[] gm_boss5_land_mdl_amb_idx_tbl;
    private static int[] gm_boss5_land_mat_mtn_data_tbl;
    private static int[] gm_boss5_land_mat_mtn_dwork_no_tbl;
    private static int[] gm_boss5_land_place_pattern_tbl;
    private static int[][] gm_boss5_land_vib_tbl;
    public static string c_global;
    public static string[] c_lang;
    public static uint c_priority;
    public static uint c_user;
    public static uint c_attribute;
    public static readonly string[] g_dm_buy_screen_amb_lng_tbl;
    private static int GMD_TVX_DRAW_WORK_NUM;
    private static int GMD_TVX_DRAW_STACK_NUM;
    private static uint GMD_TVX_DISP_ROTATE;
    private static uint GMD_TVX_DISP_SCALE;
    private static uint GMD_TVX_DISP_LIGHT_DISABLE;
    private static uint GMD_TVX_DISP_BLEND;
    private static AppMain.GMS_TVX_DRAW_WORK[] gm_tvx_draw_work;
    public static AppMain.AMS_PARAM_DRAW_PRIMITIVE _AMS_PARAM_DRAW_PRIMITIVE;
    public static DoubleType<uint[], AppMain.GMS_MAP_PRIM_DRAW_TVX_MGR_INDEX[]> gm_map_prim_draw_tvx_mgr_index_tbl_z2;
    public static DoubleType<uint[], AppMain.GMS_MAP_PRIM_DRAW_TVX_MGR_INDEX[]> gm_map_prim_draw_tvx_mgr_index_tbl_z3;
    public static DoubleType<uint[], AppMain.GMS_MAP_PRIM_DRAW_TVX_MGR_INDEX[]> gm_map_prim_draw_tvx_mgr_index_tbl_z4;
    public static readonly AppMain.GMS_MAP_PRIM_DRAW_TVX_MGR[] gm_map_prim_draw_tvx_mgr_tbl_z4_MID_2_DRM_A_I_DDS;
    public static readonly AppMain.GMS_MAP_PRIM_DRAW_TVX_MGR[] gm_map_prim_draw_tvx_mgr_tbl_z4_MID_2_PIPE_I_DDS;
    public static readonly AppMain.GMS_MAP_PRIM_DRAW_TVX_MGR[] gm_map_prim_draw_tvx_mgr_tbl_z4_MID_2_PISTON_I_DDS;
    public static readonly AppMain.GMS_MAP_PRIM_DRAW_TVX_MGR[] gm_map_prim_draw_tvx_mgr_tbl_z4_Z4_TANK_02_ACT_I_DDS;
    public static AppMain.GMS_MAP_PRIM_DRAW_TVX_MGR[][] gm_map_prim_draw_tvx_mgr_tbl_z4;
    public static readonly AppMain.NNS_TEXCOORD[] gm_map_prim_draw_tvx_uv_mgr_tbl_z4_MID_2_DRM_A_I_DDS;
    public static readonly AppMain.NNS_TEXCOORD[] gm_map_prim_draw_tvx_uv_mgr_tbl_z4_MID_2_PIPE_I_DDS;
    public static readonly AppMain.NNS_TEXCOORD[] gm_map_prim_draw_tvx_uv_mgr_tbl_z4_Z4_TANK_02_ACT_I_DDS;
    public static AppMain.NNS_TEXCOORD[][] gm_map_prim_draw_tvx_uv_mgr_tbl_z4;
    public static DoubleType<uint[], AppMain.GMS_MAP_PRIM_DRAW_TVX_MGR_INDEX[]> gm_map_prim_draw_tvx_mgr_index_tbl_zf;
    public static readonly AppMain.GMS_MAP_PRIM_DRAW_TVX_MGR[] gm_map_prim_draw_tvx_mgr_tbl_zf_ZF_MAP_IPHONE_TEXANIM_DDS;
    public static int[] gm_map_prim_draw_tvx_mgr_tbl_z4_num;
    public static int[] gm_map_prim_draw_tvx_mgr_tbl_zf_num;
    public static AppMain.GMS_MAP_PRIM_DRAW_TVX_MGR[][] gm_map_prim_draw_tvx_mgr_tbl_zf;
    public static readonly AppMain.NNS_TEXCOORD[] gm_map_prim_draw_tvx_uv_mgr_tbl_zf_ZF_MAP_IPHONE_TEXANIM_DDS;
    public static AppMain.NNS_TEXCOORD[][] gm_map_prim_draw_tvx_uv_mgr_tbl_zf;
    public static readonly AppMain.GMS_MAP_PRIM_DRAW_TVX_MGR[] gm_map_prim_draw_tvx_mgr_tbl_z2_Z2_PALM_DDS;
    public static readonly AppMain.GMS_MAP_PRIM_DRAW_TVX_MGR[] gm_map_prim_draw_tvx_mgr_tbl_z2_Z2_ILM_DDS;
    public static readonly AppMain.GMS_MAP_PRIM_DRAW_TVX_MGR[] gm_map_prim_draw_tvx_mgr_tbl_z2_Z2_PANEL_DDS;
    public static readonly AppMain.GMS_MAP_PRIM_DRAW_TVX_MGR[] gm_map_prim_draw_tvx_mgr_tbl_z2_Z2_ILM_BUILA_DDS;
    public static readonly AppMain.GMS_MAP_PRIM_DRAW_TVX_MGR[] gm_map_prim_draw_tvx_mgr_tbl_z2_Z2_ILM_BUILB_DDS;
    public static readonly AppMain.GMS_MAP_PRIM_DRAW_TVX_MGR[] gm_map_prim_draw_tvx_mgr_tbl_z2_Z2_ILMBELT_DDS;
    public static readonly AppMain.GMS_MAP_PRIM_DRAW_TVX_MGR[] gm_map_prim_draw_tvx_mgr_tbl_z2_Z2_3MARK_DDS;
    public static readonly AppMain.GMS_MAP_PRIM_DRAW_TVX_MGR[] gm_map_prim_draw_tvx_mgr_tbl_z2_Z2_ILM_V_DDS;
    public static readonly AppMain.GMS_MAP_PRIM_DRAW_TVX_MGR[] gm_map_prim_draw_tvx_mgr_tbl_z2_Z2_BALLOON_ILM_DDS;
    public static readonly AppMain.GMS_MAP_PRIM_DRAW_TVX_MGR[] gm_map_prim_draw_tvx_mgr_tbl_z2_Z2_CODE_ILM_DDS;
    public static readonly AppMain.GMS_MAP_PRIM_DRAW_TVX_MGR[] gm_map_prim_draw_tvx_mgr_tbl_z2_Z2_ILM_FLOWER_DDS;
    public static readonly AppMain.GMS_MAP_PRIM_DRAW_TVX_MGR[] gm_map_prim_draw_tvx_mgr_tbl_z2_Z2_ROLL_ILM_DDS;
    public static readonly AppMain.GMS_MAP_PRIM_DRAW_TVX_MGR[] gm_map_prim_draw_tvx_mgr_tbl_z2_Z2_ILM_ASHIBA_DDS;
    public static int[] gm_map_prim_draw_tvx_mgr_tbl_z2_num;
    public static readonly AppMain.NNS_TEXCOORD[] gm_map_prim_draw_tvx_uv_mgr_tbl_z2_Z2_ILM_DDS;
    public static readonly AppMain.NNS_TEXCOORD[] gm_map_prim_draw_tvx_uv_mgr_tbl_z2_Z2_PANEL_DDS;
    public static readonly AppMain.NNS_TEXCOORD[] gm_map_prim_draw_tvx_uv_mgr_tbl_z2_Z2_ILM_BUILA_DDS;
    public static readonly AppMain.NNS_TEXCOORD[] gm_map_prim_draw_tvx_uv_mgr_tbl_z2_Z2_ILM_BUILB_DDS;
    public static readonly AppMain.NNS_TEXCOORD[] gm_map_prim_draw_tvx_uv_mgr_tbl_z2_Z2_ILMBELT_DDS;
    public static readonly AppMain.NNS_TEXCOORD[] gm_map_prim_draw_tvx_uv_mgr_tbl_z2_Z2_3MARK_DDS;
    public static readonly AppMain.NNS_TEXCOORD[] gm_map_prim_draw_tvx_uv_mgr_tbl_z2_Z2_ILM_V_DDS;
    public static readonly AppMain.NNS_TEXCOORD[] gm_map_prim_draw_tvx_uv_mgr_tbl_z2_Z2_BALLOON_ILM_DDS;
    public static readonly AppMain.NNS_TEXCOORD[] gm_map_prim_draw_tvx_uv_mgr_tbl_z2_Z2_CODE_ILM_DDS;
    public static readonly AppMain.NNS_TEXCOORD[] gm_map_prim_draw_tvx_uv_mgr_tbl_z2_Z2_ILM_FLOWER_DDS;
    public static readonly AppMain.NNS_TEXCOORD[] gm_map_prim_draw_tvx_uv_mgr_tbl_z2_Z2_ROLL_ILM_DDS;
    public static readonly AppMain.NNS_TEXCOORD[] gm_map_prim_draw_tvx_uv_mgr_tbl_z2_Z2_ILM_ASHIBA_DDS;
    public static readonly AppMain.NNS_TEXCOORD[] gm_map_prim_draw_tvx_uv_mgr_tbl_z3_Z3_ANIM_B_DDS;
    public static readonly AppMain.NNS_TEXCOORD[] gm_map_prim_draw_tvx_uv_mgr_tbl_z2_Z2_PALM_DDS;
    public static readonly AppMain.GMS_MAP_PRIM_DRAW_TVX_MGR[] gm_map_prim_draw_tvx_mgr_tbl_z3_Z3_ANIM_B_DDS;
    public static AppMain.GMS_MAP_PRIM_DRAW_TVX_MGR[][] gm_map_prim_draw_tvx_mgr_tbl_z2;
    public static AppMain.NNS_TEXCOORD[][] gm_map_prim_draw_tvx_uv_mgr_tbl_z2;
    public static int[] gm_map_prim_draw_tvx_mgr_tbl_z3_num;
    public static AppMain.GMS_MAP_PRIM_DRAW_TVX_MGR[][] gm_map_prim_draw_tvx_mgr_tbl_z3;
    public static AppMain.NNS_TEXCOORD[][] gm_map_prim_draw_tvx_uv_mgr_tbl_z3;
    private static readonly int[] g_gm_gmk_tarzan_rope_model_id;
    private static readonly int[] g_gm_gmk_tarzan_rope_motion_id;
    private static AppMain.OBS_ACTION3D_NN_WORK[] g_gm_gmk_tarzan_rope_obj_3d_list;
    private static readonly AppMain.NNS_MATRIX g_gm_gmk_tarzan_rope_active_matrix;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_spear_obj_3d_list;
    private static readonly short[][] tbl_gm_gmk_spear_rect;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_land_obj_3d_list;
    private static byte[] gm_gmk_land_spd_tbl;
    private static int[][] gm_gmk_land_obj_data;
    private static int[][] gm_gmk_land_mdl_data;
    private static byte[] gm_gmk_land_col_type_tbl;
    private static AppMain.AMS_AMB_HEADER gm_gmk_land_3_obj_tvx_list;
    public static AppMain.MPP_VOID_OBS_OBJECT_WORK _gmGmkLandColFall;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_gear_obj_3d_list;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_gear_move_obj_3d_list;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_gear_sw_obj_3d_list;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_gear_opt_obj_3d_list;
    private static object[] gm_gmk_gear_add_data;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_dash_panel_obj_3d_list;
    private static object[] g_gm_gamedat_map;
    private static object[] g_gm_gamedat_map_set;
    private static object[] g_gm_gamedat_map_set_add;
    private static object[] g_gm_gamedat_map_attr_set;
    private static AppMain.AMS_AMB_HEADER g_gm_gamedat_enemy_arc;
    private static object[] g_gm_gamedat_ring;
    private static AppMain.AMS_AMB_HEADER[] g_gm_gamedat_gimmick;
    private static object[] g_gm_gamedat_enemy;
    private static object[] g_gm_gamedat_effect;
    private static AppMain.AMS_AMB_HEADER g_gm_gamedat_cockpit_main_arc;
    private static int[] g_gm_gamedat_bossbattle_stage_id_tbl;
    private static AppMain.MTS_TASK_TCB gm_gamedat_load_tcb;
    private static AppMain.GMS_GAMEDAT_LOAD_WORK gm_gamedat_load_work;
    private static readonly AppMain.GMS_BOSS4_PART_ACT_INFO[] gm_boss4_egg_act_id_tbl;
    private static readonly int[][] dm_stfrl_ring_disp_pos_tbl;
    private static readonly int[][] dm_stfrl_ring_efct_disp_offset_tbl;
    private static AppMain.OBS_ACTION3D_NN_WORK[] dm_stfrl_sonic_obj_3d_list;
    private static AppMain.OBS_ACTION3D_NN_WORK[] dm_stfrl_boss1_obj_3d_list;
    private static AppMain.OBS_ACTION3D_NN_WORK[] dm_stfrl_ring_obj_3d;
    private static ulong _am_timer_id;
    private AppMain.AMS_ALARM _am_alarm_timer;
    private static readonly int[] g_gm_gmk_water_slider_model_id_main;
    private static readonly int[] g_gm_gmk_water_slider_material_id_main;
    private static readonly int[] g_gm_gmk_water_slider_model_id_sub;
    private static readonly int[] g_gm_gmk_water_slider_motion_id_sub;
    private static readonly int[] g_gm_gmk_water_slider_material_id_sub;
    private static AppMain.OBS_ACTION3D_NN_WORK[] g_gm_gmk_water_slider_obj_3d_list;
    private static AppMain.GSS_SND_SE_HANDLE g_gm_gmk_water_slider_se_handle;
    private static AppMain.GMS_EFFECT_3DES_WORK g_gm_gmk_water_slider_effct_player;
    public static int GMD_GMK_TRUCK_SPARK_EFCT_SMALL_MIN_SPD;
    public static int GMD_GMK_TRUCK_SPARK_EFCT_BIG_MIN_SPD;
    public static int GMD_GMK_TRUCK_SE_MIN_SPD;
    public static int GMD_GMK_TRUCK_SE_MAX_SPD;
    public static float GMD_GMK_TRUCK_SE_GOAL_MIN_DIST;
    public static float GMD_GMK_TRUCK_SE_GOAL_MAX_DIST;
    public static int GMD_GMK_TRUCK_NODE_ID_TIRE_POS_F;
    public static int GMD_GMK_TRUCK_NODE_ID_TIRE_POS_B;
    public static int GMD_GMK_TRUCK_NODE_ID_LIGHT_POS;
    public static ushort[] gm_gmk_t_gravity_flat_dir_tbl;
    public static int GMD_GMK_TRUCK_FIELD_RECT_LEFT;
    public static int GMD_GMK_TRUCK_FIELD_RECT_TOP;
    public static int GMD_GMK_TRUCK_FIELD_RECT_RIGHT;
    public static int GMD_GMK_TRUCK_FIELD_RECT_BOTTOM;
    public static int GMD_GMK_TRUCK_TIRE_FRONT_OFST_X;
    public static int GMD_GMK_TRUCK_TIRE_FRONT_OFST_Y;
    public static int GMD_GMK_TRUCK_TIRE_FRONT_OFST_Z;
    public static int GMD_GMK_TRUCK_TIRE_BACK_OFST_X;
    public static int GMD_GMK_TRUCK_TIRE_BACK_OFST_Y;
    public static int GMD_GMK_TRUCK_TIRE_BACK_OFST_Z;
    public static float GMD_GMK_TRUCK_EFCT_SPRAK_OFST_DIST;
    public static int GMD_GMK_T_GRAVITY_A;
    public static int GMD_GMK_T_GRAVITY_B;
    public static int GMD_GMK_T_CLEAR_PSEUDOFALL_DIR_FIX;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_truck_obj_3d_list;
    private static short[] gm_gmk_t_gravity_r_rect_tbl;
    private static short[][] gm_gmk_t_gravity_rr_rect_tbl;
    private static int[] g_gm_gmk_en_bmpr_mat_motion_id;
    private static ushort[] g_gm_gmk_en_bmpr_angle_z;
    private static short[][] g_gmk_en_bmpr_rect;
    private static AppMain.OBS_ACTION3D_NN_WORK[] g_gm_gmk_en_bmpr_obj_3d_list;
    public static readonly AppMain.GSE_MAIN_STAGE_TYPE[] g_gm_gamedat_stage_type_tbl;
    public static readonly int[] g_gm_gamedat_zone_type_tbl;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_common;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_INFO[] gm_gamedat_tbl_common_info_tbl;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_player_sonic;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_INFO[] gm_gamedat_tbl_player_info_tbl;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_map01_01;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_map01_02;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_map01_03;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_map01_BOSS;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_map02_01;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_map02_02;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_map02_03;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_map02_BOSS;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_map03_01;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_map03_02;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_map03_03;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_map03_BOSS;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_map04_01;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_map04_02;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_map04_03;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_map04_BOSS;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_map_final_BOSS01;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_map_final_BOSS02;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_map_final_BOSS03;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_map_final_BOSS04;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_map_final_BOSS05;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_map_SS01;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_map_SS02;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_map_SS03;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_map_SS04;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_map_SS05;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_map_SS06;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_map_SS07;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_map_ending;
    private static readonly AppMain.GMS_GAMEDAT_LOAD_INFO[] gm_gamedat_tbl_map_info_tbl;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_effect01_01;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_effect01_02;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_effect01_03;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_effect01_BOSS;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_effect02_01;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_effect02_02;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_effect02_03;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_effect02_BOSS;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_effect03_01;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_effect03_02;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_effect03_03;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_effect03_BOSS;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_effect04_01;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_effect04_02;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_effect04_03;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_effect04_BOSS;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_effect_final_BOSS01;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_effect_final_BOSS02;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_effect_final_BOSS03;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_effect_final_BOSS04;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_effect_final_BOSS05;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_effect_ss01;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_effect_ending;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_INFO[] gm_gamedat_tbl_effect_info_tbl;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_enemy01_01;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_enemy01_02;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_enemy01_03;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_enemy01_BOSS;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_enemy02_01;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_enemy02_02;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_enemy02_03;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_enemy02_BOSS;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_enemy03_01;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_enemy03_02;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_enemy03_03;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_enemy03_BOSS;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_enemy03_final_BOSS;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_enemy04_01;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_enemy04_02;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_enemy04_03;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_enemy04_BOSS;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_enemy_final_BOSS01;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_enemy_final_BOSS02;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_enemy_final_BOSS03;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_enemy_final_BOSS04;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_enemy_final_BOSS05;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_enemy_ending;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_INFO[] gm_gamedat_tbl_enemy_info_tbl;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_INFO[] gm_gamedat_tbl_enemy_final_info_tbl;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_com_gimmick;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_gimmick01_01;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_gimmick01_02;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_gimmick01_03;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_gimmick01_BOSS;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_gimmick02_01;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_gimmick02_02;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_gimmick02_03;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_gimmick02_BOSS;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_gimmick03_01;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_gimmick03_02;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_gimmick03_03;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_gimmick03_BOSS;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_gimmick04_01;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_gimmick04_02;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_gimmick04_03;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_gimmick04_BOSS;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_gimmick_Final_BOSS01;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_gimmick_Final_BOSS02;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_gimmick_Final_BOSS03;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_gimmick_Final_BOSS04;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_gimmick_Final_BOSS05;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_gimmick_ss01;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_DATA[] gm_gamedat_tbl_gimmick_ending;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_INFO[] gm_gamedat_tbl_gimmick_common_info_tbl;
    public static readonly AppMain.GMS_GAMEDAT_LOAD_INFO[] gm_gamedat_tbl_gimmick_info_tbl;
    private static AppMain.MTS_TASK_TCB gm_fix_tcb;
    private static object[] gm_fix_texamb_list;
    private static AppMain.AOS_TEXTURE[] gm_fix_textures;
    private static int[][] gm_fix_tex_amb_idx_tbl;
    private static int[][] gm_fix_ama_amb_idx_tbl;
    private static AppMain.GMF_FIX_PART_INIT_FUNC[] gm_fix_part_init_func_tbl;
    private static AppMain.GMF_FIX_PART_INIT_FUNC[] gm_fix_ta_part_init_func_tbl;
    private static AppMain.GMF_FIX_PART_INIT_FUNC[] gm_fix_ta_s22_part_init_func_tbl;
    private static AppMain.GMF_FIX_PART_INIT_FUNC[] gm_fix_ss_part_init_func_tbl;
    private static int[] gm_fix_ringcount_act_id_tbl;
    private static int[] gm_fix_score_act_id_tbl;
    private static int[][] gm_fix_score_stage22_act_id_tbl;
    private static int[] gm_fix_timer_act_id_tbl;
    private static int[] gm_fix_timer_timeattack_act_id_tbl;
    private static int[][] gm_fix_timer_ss_act_id_tbl;
    private static int[][] gm_fix_challenge_act_id_tbl;
    private static int[][] gm_fix_virtual_pad_act_id_tbl;
    private static float[] gm_fix_part_common_digit_type_frame_tbl;
    private static int[] gm_fix_part_ring_count_digit_subpart_idx_tbl;
    private static float[] gm_fix_part_ring_count_digit_type_frame_tbl;
    private static int[] gm_fix_part_score_digit_subpart_idx_tbl;
    private static int[] gm_fix_part_timer_digit_subpart_idx_tbl;
    private static int[] gm_fix_part_timer_deco_char_subpart_idx_tbl;
    private static int[] gm_fix_part_challenge_digit_subpart_idx_tbl;
    private static int[] act_id_tblgmFixScorePartInit;
    private static int[] act_id_tblgmFixTimerPartInit;
    private static int[] digit_num_listgmFixTimerPartUpdateDigitList;
    private static readonly AppMain.SKeyToFrame[] c_key_to_frame_table;
    public static readonly short GMD_BOSS4_RIGHTWARD_ANGLE;
    public static readonly short GMD_BOSS4_LEFTWARD_ANGLE;
    public static readonly AppMain.NNS_RGB gm_boss4_color_white;
    private static AppMain.GMS_RING_WORK gm_boss4_util_ring;
    public static readonly short GMD_BOSS4_CAP_FALL_ROTATE_SPD;
    public static readonly int GMD_BOSS4_CAP_FALL_ANGLE;
    private static int _cap_rot_y;
    private static int _cap_rot_z;
    private static int _cap_rot_x;
    private static int _cap_rot_z_flag;
    private static int _cap_rot_x_flag;
    private static float _cap_len;
    private static float _cap_len_flag;
    private static float _cap_len_time;
    private static int _cap_no;
    private static int _cap_inv_flag;
    private static bool _cap_inv_hit;
    private static int _cap_kill_flag;
    private static int _cap_count;
    public static readonly AppMain.GMS_PLY_SEQ_STATE_DATA[][] g_gm_ply_seq_state_data_tbl;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_sw_wall_obj_3d_list;
    private static AppMain.AMS_AMB_HEADER g_gm_gmk_sw_wall3_obj_tvx_list;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_switch_obj_3d_list;
    private static AppMain.GMS_GMK_SW_STATE_WORK[] gm_gmk_switch_state;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_ss_endurance_obj_3d_list;
    private static readonly ushort[] gm_gmk_ss_endurance_color;
    private static AppMain.AMS_AMB_HEADER gm_gmk_ss_endurance_obj_tvx_list;
    private static readonly AppMain.NNS_TEXCOORD[] gm_gmk_ss_endurance_mat_color;
    private static readonly byte[] gm_gmk_ss_endurance_uv_parameter;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_ss_circle_obj_3d_list;
    private static AppMain.AMS_AMB_HEADER gm_gmk_ss_circle_obj_tvx_list;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_dsign_obj_3d_list;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_ene_t_star_obj_3d_list;
    public static int GMD_BOSS5_CTPLT_BG_FARSIDE_POS_Z;
    public static int GMD_BOSS5_CTPLT_MOVE_DOWN_ACC;
    public static int GMD_BOSS5_CTPLT_MOVE_DOWN_HIDE_HEIGHT;
    public static ushort GMD_BOSS5_CTPLT_OBJ_COL_RECT_WIDTH_INT;
    public static ushort GMD_BOSS5_CTPLT_OBJ_COL_RECT_HEIGHT_INT;
    public static short GMD_BOSS5_CTPLT_OBJ_COL_RECT_OFST_X_INT;
    public static short GMD_BOSS5_CTPLT_OBJ_COL_RECT_OFST_Y_INT;
    public static AppMain.Reference<AppMain.MTS_TASK_TCB> dm_logo_sega_load_tcb;
    public static AppMain.MTS_TASK_TCB dm_logo_sega_build_tcb;
    public static AppMain.MTS_TASK_TCB dm_logo_sega_flush_tcb;
    public static AppMain.AOS_TEXTURE[] dm_logo_sega_aos_tex;
    public static readonly AppMain.OBS_DATA_WORK[] dm_logo_sega_efct_mdl_data_work;
    public static readonly int[] dm_logo_sega_efct_mdl_state;
    public static bool dm_logo_sega_build_state;
    public static readonly AppMain.DMS_LOGO_COM_LOAD_FILE_INFO[] dm_logo_sega_com_fileinfo_list;
    private static readonly AppMain.DMS_LOGO_COM_LOAD_FILE_INFO[] dm_logo_sega_localize_fileinfo_list_region_jp;
    private static readonly AppMain.DMS_LOGO_COM_LOAD_FILE_INFO[] dm_logo_sega_localize_fileinfo_list_region_us;
    private static readonly AppMain.DMS_LOGO_COM_LOAD_FILE_INFO[] dm_logo_sega_localize_fileinfo_list_region_eu;
    private static readonly AppMain.DMS_LOGO_COM_LOAD_FILE_INFO[][] dm_logo_sega_localize_fileinfo_list_tbl;
    private static readonly int[] dm_logo_sega_efct_mdl_id_tbl;
    private static readonly AppMain.AMS_AMB_HEADER[] dm_logo_sega_data;
    private AppMain.OBS_ACTION3D_NN_WORK[] dm_logo_sega_obj_3d_list;
    public static byte[] dm_logo_sega_tex_id_tbl;
    public static GameTime lastGameTime;
    public static string g_ao_storage_filename;
    private static readonly AppMain.AOS_STORAGE g_ao_storage;
    private static AppMain.NNS_VECTOR nnCalcTRSMotion_tv;
    private static AppMain.NNS_VECTOR nnCalcTRSMotion_sv;
    private static AppMain.GSS_SND_SCB gm_sound_bgm_scb;
    private static AppMain.GSS_SND_SCB gm_sound_bgm_sub_scb;
    private static AppMain.GSS_SND_SCB gm_sound_jingle_scb;
    private static AppMain.GSS_SND_SCB gm_sound_jingle_bgm_scb;
    private static uint gm_sound_flag;
    private static AppMain.MTS_TASK_TCB gm_sound_1shot_tcb;
    private static AppMain.MTS_TASK_TCB gm_sound_bgm_fade_tcb;
    private static AppMain.MTS_TASK_TCB gm_sound_bgm_win_boss_tcb;
    private static readonly string[] gm_sound_bgm_name_list;
    private static readonly string[] gm_sound_speedup_bgm_name_list;
    private static readonly string[] gm_sound_jingle_name_list;
    private static readonly string[] gm_sound_bgm_win_boss_name_list;
    private static readonly int[] gm_sound_bgm_win_boss_wait_frame_list;
    private static readonly int[][] gm_score_vib_tbl;
    private static readonly int[] gm_score_vib_scale_tbl;
    public static float GMD_GMK_ROCK_RIDE_KEY_ANGLE_LIMIT;
    private static AppMain.OBS_ACTION3D_NN_WORK[] g_gm_gmk_rock_ride_obj_3d_list;
    private static readonly uint[] gm_gmk_ndl_type_tbl;
    private static readonly int[][] gm_gmk_atk_rect_tbl;
    private static readonly int[][] gm_gmk_col_rect_tbl;
    private static readonly int[][] gm_gmk_disp_ofst_tbl_u;
    private static readonly int[][] gm_gmk_disp_ofst_tbl_l;
    private static readonly int[][] gm_gmk_disp_ofst_tbl_d;
    private static readonly int[][] gm_gmk_disp_ofst_tbl_r;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_needle_obj_3d_list;
    private static AppMain.AMS_AMB_HEADER gm_gmk_needle_obj_tvx_list;
    private static AppMain.TVX_FILE tvx_needle;
    private static AppMain.TVX_FILE tvx_stand;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_goal_panel_obj_3d_list;
    private static AppMain.GMS_EFFECT_3DES_WORK gm_gmk_goal_panel_effct;
    public static int GMD_GAMEDAT_FILE_PATH_LENGTH_MAX;
    public static int GMD_GAMEDAT_LOAD_CONTEXT_MAX;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_bridge_obj_3d_list;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_breakobj_obj_3d_list;
    private static readonly short[][] tbl_gm_gmk_bobj_col_rect;
    private static readonly ushort[] tbl_gm_gmk_bobj_act_id;
    private static readonly ushort[] tbl_gmk_breakobj_effect;
    private static readonly ushort[][] tbl_gm_gmk_bobj1_parts;
    private static readonly ushort[][] tbl_gm_gmk_bobj2_parts;
    private static readonly ushort[][] tbl_gm_gmk_bobj3_parts;
    private static readonly AppMain.tag_GMS_GMK_BOBJ_PARTS_PARAM_TABLE[] GMS_GMK_BOBJ_PARTS_PARAM_TABLE;
    private static int GME_GAME_DBUILD_MDL_STATE_REG_WAIT;
    private static int GME_GAME_DBUILD_MDL_STATE_BUILD_WAIT;
    private static int GME_GAME_DBUILD_MDL_STATE_REG_FLUSH_WAIT;
    private static int GME_GAME_DBUILD_MDL_STATE_FLUSH_WAIT;
    private static int GME_GAME_DBUILD_MDL_STATE_MAX;
    private static AppMain.gamedat_build_area_func[] gm_gamedat_build_area_tbl;
    private static AppMain.gamedat_build_area_func[] gm_gamedat_flush_area_tbl;
    private static readonly AppMain.GMS_GDBUILD_BUILD_MDL_WORK[] gm_obj_build_model_work_buf;
    private static int gm_obj_build_model_work_reg_num;
    private static AppMain.gamedat_build_area_func[] gm_gamedat_build_boss_buttle_tbl;
    private static AppMain.gamedat_build_area_func[] gm_gamedat_flush_boss_buttle_tbl;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_ene_kama_obj_3d_list;
    private static AppMain.GMS_ENE_KAMA_FADE_ANIME_PAT[] gm_ene_kama_blink_anime_pat;
    private static AppMain.GMS_ENE_KAMA_FADE_ANIME gm_ene_kama_blink_anime;
    private static AppMain.NNS_MATRIX gmEneKamaHandWaitMain_msm;
    private static AppMain.NNS_MATRIX gmEneKamaHandAttackMain_rmat;
    private static AppMain.NNS_MATRIX gmEneKamaHandAttackMain_tmat;
    private static AppMain.NNS_MATRIX gmEneKamaHandAttackMain_mat;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_ene_gabu_obj_3d_list;
    private static readonly AppMain.GMS_EFCT_BOSS_CMN_CREATE_PARAM[] gm_efct_boss_cmn_create_param_tbl;
    private static int gm_efct_boss_cmn_tex_reg_id;
    private static int[] gm_efct_boss_cmn_model_reg_id_list;
    private static int gm_efct_boss_cmn_model_reg_num;
    private static int[] gm_efct_boss_cmn_mdl_tex_reg_id_list;
    private static int gm_efct_boss_single_reg_num;
    private static readonly AppMain.GMS_EFCT_BOSS_SINGLE_BUILD_WORK[] gm_efct_boss_single_build_list;
    public static uint GMD_BOSS5_EGG_FLAG_SWEAT_ACTIVE;
    public static int GMD_BOSS5_EGG_HIDE_HIGHT;
    public static int GMD_BOSS5_EGG_ESCAPE_RUN_DISTANCE_FASTEST;
    public static int GMD_BOSS5_EGG_ESCAPE_RUN_DISTANCE_SLOWEST;
    public static int GMD_BOSS5_EGG_ESCAPE_RUN_SLOWEST_SPD;
    public static short GMD_BOSS5_EGG_ESCAPE_RUN_VIEWOUT_OFST_LEFT;
    public static short GMD_BOSS5_EGG_ESCAPE_RUN_VIEWOUT_OFST_RIGHT;
    public static int GMD_BOSS5_EGG_JUMP_START_OFST_POS_X;
    public static int GMD_BOSS5_EGG_JUMP_RUNUP_SPD_X;
    public static int GMD_BOSS5_EGG_JUMP_INIT_SPD_X;
    public static int GMD_BOSS5_EGG_JUMP_INIT_SPD_Y;
    private static readonly string[] dm_save_menu_cmn_lng_amb_name_tbl;
    private static readonly float[][] dm_save_win_act_pos_tbl;
    private static readonly int[] dm_save_win_size_y_tbl;
    private static readonly uint[] g_dm_act_id_tbl;
    private static readonly AppMain.DMS_SAVE_MGR dm_save_mgr;
    private static AppMain.DMS_SAVE_MGR dm_save_mgr_p;
    private static uint dm_save_draw_state;
    private static uint dm_save_msg_flag;
    private static bool dm_save_first_save;
    private static readonly AppMain.AOS_TEXTURE[] dm_save_cmn_tex;
    private static readonly AppMain.AOS_ACTION[] dm_save_act;
    private static uint dm_save_disp_flag;
    private static uint dm_save_is_draw_state;
    private static readonly float[] dm_save_win_size_rate;
    private static int dm_save_win_mode;
    private static bool dm_save_draw_reserve;
    private static bool dm_save_is_task_draw;
    private static bool dm_save_is_snd_build;
    private static readonly AppMain.AMS_AMB_HEADER[] dm_logo_sonic_data;
    public static AppMain.Reference<AppMain.MTS_TASK_TCB> dm_logo_sonic_load_tcb;
    public static AppMain.MTS_TASK_TCB dm_logo_sonic_build_tcb;
    public static AppMain.MTS_TASK_TCB dm_logo_sonic_flush_tcb;
    public static AppMain.AOS_TEXTURE[] dm_logo_sonic_aos_tex;
    public static bool dm_logo_sonic_build_state;
    public static readonly AppMain.DMS_LOGO_COM_LOAD_FILE_INFO[] dm_logo_sonic_com_fileinfo_list;
    public static int dm_logo_sonic_com_file_num;
    public static byte[] dm_logo_sonic_tex_id_tbl;
    public static uint[] g_dm_act_id_tbl_loading;
    private static AppMain.DMS_LOADING_MGR dm_loading_mgr_p;
    private static AppMain.AMS_AMB_HEADER dm_loading_arc_amb;
    private static AppMain.A2S_AMA_HEADER[] dm_loading_ama;
    private static AppMain.AMS_AMB_HEADER[] dm_loading_amb;
    private static AppMain.AOS_TEXTURE[] dm_loading_tex;
    private static bool dm_loading_check_load_comp;
    private static uint dm_loading_draw_state;
    public static Game m_game;
    public static GraphicsDeviceManager m_graphics;
    public static GraphicsDevice m_graphicsDevice;
    public static ContentManager m_manager;
    public static bool isForeground;
    private static uint[] _am_system_flag;
    private static uint[] _am_debug_flag;
    private static uint _am_draw_counter;
    public static AppMain.NNS_MATRIXSTACK _am_default_stack;
    private static AppMain.AMS_THREAD _am_cri_thread;
    public static int _am_sample_count;
    public static bool _am_sample_draw_enable;
    private static bool _am_sample_is_suspended;
    private static int _am_sample_suspended_count;
    private static bool _am_sample_is_sleep;
    private static bool _am_sample_is_accel;
    private static bool _am_sample_is_ignore_audio_interruption;
    private static bool _am_sample_end_suspended;
    public static RenderTarget2D _renderTarget;
    public static AppMain _instance;
    //public static IsolatedStorageFile store;
    public static string storePath;
    public static PresentationParameters presentationParameters;
    private static byte[] g_gs_bin_win_a_amb;
    public static AppMain.AMS_TCB g_gs_init_tcb;
    private static AppMain.MatrixPool nnmatrixstack_mtx_pool;
    public static AppMain.AMS_TP_TOUCH_STATUS[] _am_tp_touch;
    private static AppMain.AMS_IPHONE_TP_DATA _amTpUpdateTouch_req_DispData;
    private static AppMain.AMS_TASK _am_default_taskp;
    private static AppMain.AMS_TASKLIST_OWNER[] _am_owner_list;
    private static int _am_szOwnerList;
    private static int _am_display_tasklist;
    private static int _am_tlist_cline;
    private static int _am_tlist_dline;
    private static LinkedList<AppMain.AMS_FS> ams_fsList;
    public static int FsReadSpeedBytesPerFrame;
    public static AppMain.AMS_FS lastReadAMS_FS;
    public static uint GMD_SMSG_FLAG_WIN_DISP;
    public static uint GMD_SMSG_FLAG_OK_DISP;
    public static uint GMD_SMSG_FLAG_END;
    public static int GMD_SMSG_KEY_WAIT;
    public static float GMD_SMSG_SCALE;
    public static int GMD_SMSG_ACT_SCALE;
    public static int GMD_SMSG_Z2_MSG_TEX_H;
    public static int GMD_SMSG_Z2_MSG_TEX_W;
    public static int GMD_SMSG_Z3_MSG_TEX_H;
    public static int GMD_SMSG_Z3_MSG_TEX_W;
    public static int GMD_SMSG_SS_MSG_TEX_H;
    public static int GMD_SMSG_SS_MSG_TEX_W;
    public static int GMD_SMSG_Z2_JP_MSG_H;
    public static int GMD_SMSG_Z2_JP_MSG_W;
    public static int GMD_SMSG_Z2_US_MSG_H;
    public static int GMD_SMSG_Z2_US_MSG_W;
    public static int GMD_SMSG_Z2_FR_MSG_H;
    public static int GMD_SMSG_Z2_FR_MSG_W;
    public static int GMD_SMSG_Z2_IT_MSG_H;
    public static int GMD_SMSG_Z2_IT_MSG_W;
    public static int GMD_SMSG_Z2_GE_MSG_H;
    public static int GMD_SMSG_Z2_GE_MSG_W;
    public static int GMD_SMSG_Z2_SP_MSG_H;
    public static int GMD_SMSG_Z2_SP_MSG_W;
    public static int GMD_SMSG_Z3_JP_MSG_H;
    public static int GMD_SMSG_Z3_JP_MSG_W;
    public static int GMD_SMSG_Z3_US_MSG_H;
    public static int GMD_SMSG_Z3_US_MSG_W;
    public static int GMD_SMSG_Z3_FR_MSG_H;
    public static int GMD_SMSG_Z3_FR_MSG_W;
    public static int GMD_SMSG_Z3_IT_MSG_H;
    public static int GMD_SMSG_Z3_IT_MSG_W;
    public static int GMD_SMSG_Z3_GE_MSG_H;
    public static int GMD_SMSG_Z3_GE_MSG_W;
    public static int GMD_SMSG_Z3_SP_MSG_H;
    public static int GMD_SMSG_Z3_SP_MSG_W;
    public static int GMD_SMSG_SS_JP_MSG_H;
    public static int GMD_SMSG_SS_JP_MSG_W;
    public static int GMD_SMSG_SS_US_MSG_H;
    public static int GMD_SMSG_SS_US_MSG_W;
    public static int GMD_SMSG_SS_FR_MSG_H;
    public static int GMD_SMSG_SS_FR_MSG_W;
    public static int GMD_SMSG_SS_IT_MSG_H;
    public static int GMD_SMSG_SS_IT_MSG_W;
    public static int GMD_SMSG_SS_GE_MSG_H;
    public static int GMD_SMSG_SS_GE_MSG_W;
    public static int GMD_SMSG_SS_SP_MSG_H;
    public static int GMD_SMSG_SS_SP_MSG_W;
    public static int GMD_SMSG_MSG_ACTION_H;
    public static int GMD_SMSG_MSG_OK_H;
    public static int GMD_SMSG_MSG_OK_W;
    public static int GMD_SMSG_MSGOK_SPACE;
    public static int GMD_SMSG_SCR_WIDTH;
    public static int GMD_SMSG_SCR_HEIGHT;
    public static int GMD_SMSG_AMA_ACT_MAX;
    public static int GMD_SMSG_AMA_ACT_ACTION_MAX;
    private static int[][][][] gm_start_msg_ama_act_pos_tbl;
    private static AppMain.AOS_TEXTURE[] gm_start_msg_aos_tex;
    private static AppMain.MTS_TASK_TCB gm_start_msg_tcb;
    private static bool gm_start_msg_end_state;
    private static short[] gm_start_msg_ama_act_num_tbl;
    private static float[][][] gm_start_msg_win_size_tbl;
    private static int[][] gm_start_msg_body_act_id_table;
    private static AppMain.OBS_RECT_WORK[] gm_ply_touch_rect;
    private static ushort[][] gm_player_push_jump_key_rect;
    private static ushort[][] gm_player_push_ssonic_key_rect;
    private static int gm_pos_x;
    private static int gm_pos_y;
    private static int gm_pos_z;
    private static int[] gm_ply_score_combo_vib_level_tbl;
    public static AppMain.OBS_DATA_WORK[][] g_gm_player_data_work;
    private static AppMain.OBS_ACTION3D_NN_WORK[] g_gm_ply_son_obj_3d_list;
    private static AppMain.OBS_ACTION3D_NN_WORK[] g_gm_ply_sson_obj_3d_list;
    private static int[] gm_ply_score_combo_scale_tbl;
    private static int[] gm_ply_score_combo_tbl;
    private static uint[] gm_key_map_key_list;
    private static AppMain.OBS_ACTION3D_NN_WORK[][][] gm_ply_obj_3d_list_tbl;
    private static int fall_rot_buf_gmPlayerDefaultInFunc;
    public static int GMD_PLAYER_NODE_ID_TRUCK_CENTER;
    private static AppMain.MTS_TASK_TCB gm_over_tcb;
    private static AppMain.AMS_AMB_HEADER[] gm_over_texamb_list;
    private static readonly AppMain.AOS_TEXTURE[] gm_over_textures;
    private static readonly int[][] gm_over_tex_amb_idx_tbl;
    private static readonly int[][] gm_over_ama_amb_idx_tbl;
    private static readonly uint[][] gm_over_string_act_id_tbl;
    private static readonly uint[] gm_over_fadeout_act_id_tbl;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_ss_ringgate_obj_3d_list;
    private static AppMain.AMS_AMB_HEADER gm_gmk_ss_ringgate_obj_tvx_list;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_ss_oblong_obj_3d_list;
    private static AppMain.AMS_AMB_HEADER gm_gmk_ss_oblong_obj_tvx_list;
    private static readonly AppMain.NNS_TEXCOORD[] gm_gmk_ss_oblong_mat_color;
    public static AppMain.TVX_FILE gmGmkSsOblongDrawFunctvx;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_splring_obj_3d_list;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_pmarker_obj_3d_list;
    private static float GMD_BOSS5_DEFAULT_BLEND_SPD;
    private static int GMD_BOSS5_LIFE;
    private static int GMD_BOSS5_STRONG_MODE_THRESHOLD_LIFE;
    private static int GMD_BOSS5_DEFAULT_POS_Z;
    private static int GMD_BOSS5_BG_FARSIDE_POS_Z;
    private static int GMD_BOSS5_SCT_SPIN_SPD_ANGLE;
    public static int GMD_BOSS5_BODY_NODE_IDX_BODY;
    public static int GMD_BOSS5_BODY_NODE_IDX_FOOT_L;
    public static int GMD_BOSS5_BODY_NODE_IDX_FOOT_R;
    public static int GMD_BOSS5_BODY_NODE_IDX_LEG_L;
    public static int GMD_BOSS5_BODY_NODE_IDX_LEG_R;
    public static int GMD_BOSS5_BODY_NODE_IDX_POLE;
    public static int GMD_BOSS5_BODY_NODE_IDX_GROIN_L;
    public static int GMD_BOSS5_BODY_NODE_IDX_GROIN_R;
    public static int GMD_BOSS5_BODY_NODE_IDX_NOZZLE_L;
    public static int GMD_BOSS5_BODY_NODE_IDX_NOZZLE_R;
    public static int GMD_BOSS5_BODY_NODE_IDX_SHOULDER_L;
    public static int GMD_BOSS5_BODY_NODE_IDX_ELBOW_L;
    public static int GMD_BOSS5_BODY_NODE_IDX_FOREARM_L;
    public static int GMD_BOSS5_BODY_NODE_IDX_SHOULDER_R;
    public static int GMD_BOSS5_BODY_NODE_IDX_ELBOW_R;
    public static int GMD_BOSS5_BODY_NODE_IDX_FOREARM_R;
    public static int GMD_BOSS5_BODY_NODE_IDX_HEAD;
    public static int GMD_BOSS5_BODY_NODE_IDX_NECK;
    public static int GMD_BOSS5_BODY_NODE_IDX_COVER;
    public static uint GMD_BOSS5_BODY_NODE_SNM_NUM;
    public static uint GMD_BOSS5_BODY_NODE_CNM_NUM;
    public static uint MD_BOSS5_RECT_ENABLE_FLAG_ATK;
    public static int GMD_BOSS5_PLY_OP_DEMO_RUN_DEST_X_OFST_FROM_BODY;
    public static int GMD_BOSS5_EXPL_OFST_Z;
    public static int GMD_BOSS5_EXPL_BODY_OFST_X;
    public static int GMD_BOSS5_EXPL_BODY_OFST_Y;
    public static int GMD_BOSS5_EXPL_BODY_WIDTH;
    public static int GMD_BOSS5_EXPL_BODY_HEIGHT;
    public static uint GMD_BOSS5_EXPL_BODY_INTERVAL_MIN;
    public static uint GMD_BOSS5_EXPL_BODY_INTERVAL_MAX;
    public static float GMD_BOSS5_EXPL_BODY_SE_FREQUENCY;
    public static int GMD_BOSS5_EXPL_CHASE_SMALL_WIDTH;
    public static int GMD_BOSS5_EXPL_CHASE_SMALL_HEIGHT;
    public static int GMD_BOSS5_EXPL_CHASE_SMALL_OFST_X;
    public static int GMD_BOSS5_EXPL_CHASE_SMALL_OFST_Y;
    public static uint GMD_BOSS5_EXPL_CHASE_SMALL_INTERVAL_MIN;
    public static uint GMD_BOSS5_EXPL_CHASE_SMALL_INTERVAL_MAX;
    public static int GMD_BOSS5_EXPL_CHASE_SMALL_CHASE_SPD_X;
    public static int GMD_BOSS5_EXPL_CHASE_SMALL_CHASE_RIGHTEDGE_OFST_X_MAX;
    public static int GMD_BOSS5_EXPL_CHASE_SMALL_CHASE_OFST_X_MAX;
    public static float GMD_BOSS5_EXPL_CHASE_SMALL_SE_FREQUENCY;
    public static int GMD_BOSS5_EXPL_CHASE_BIG_WIDTH;
    public static int GMD_BOSS5_EXPL_CHASE_BIG_HEIGHT;
    public static int GMD_BOSS5_EXPL_CHASE_BIG_OFST_X;
    public static int GMD_BOSS5_EXPL_CHASE_BIG_OFST_Y;
    public static uint GMD_BOSS5_EXPL_CHASE_BIG_INTERVAL_MIN;
    public static uint GMD_BOSS5_EXPL_CHASE_BIG_INTERVAL_MAX;
    public static int GMD_BOSS5_EXPL_CHASE_BIG_CHASE_SPD_X;
    public static int GMD_BOSS5_EXPL_CHASE_BIG_CHASE_RIGHTEDGE_OFST_X_MAX;
    public static int GMD_BOSS5_EXPL_CHASE_BIG_CHASE_OFST_X_MAX;
    public static int GMD_BOSS5_EXPL_CHASE_BIG_DELAY_OFST_X;
    public static float GMD_BOSS5_EXPL_CHASE_BIG_SE_FREQUENCY;
    public static short GMD_BOSS5_CAMERA_LIFT_OFFSET_POS_Y;
    public static short GMD_BOSS5_CAMERA_SLIDE_FOR_NARROW_OFFSET_POS_X;
    public static int GMD_BOSS5_CAM_SCR_LIMIT_RELEASE_GNTL_SPD_X_INIT;
    public static int GMD_BOSS5_CAM_SCR_LIMIT_RELEASE_GNTL_ACC_X;
    public static uint GMD_BOSS5_MGR_WAIT_EXPLODE_TIME;
    public static uint GMD_BOSS5_MGR_CLOSING_DEMO_WAIT_BEGIN_TIME_MAX;
    public static uint GMD_BOSS5_MGR_CLOSING_DEMO_DURATION_TIME;
    public static uint GMD_BOSS5_MGR_CLOSING_DEMO_WHITEOUT_TIME;
    public static float GMD_BOSS5_BODY_DMG_FLICKER_RADIUS;
    public static int GMD_BOSS5_BODY_DMG_NO_HIT_TIME;
    public static int GMD_BOSS5_BODY_HIDE_RADIUS;
    public static int GMD_BOSS5_BODY_JETSMOKE_CLEAR_HEIGHT;
    public static short GMD_BOSS5_BODY_DEFAULT_FIELD_RECT_SIZE_LEFT;
    public static short GMD_BOSS5_BODY_DEFAULT_FIELD_RECT_SIZE_TOP;
    public static short GMD_BOSS5_BODY_DEFAULT_FIELD_RECT_SIZE_RIGHT;
    public static short GMD_BOSS5_BODY_DEFAULT_FIELD_RECT_SIZE_BOTTOM;
    public static short GMD_BOSS5_BODY_SCT_FIEELD_RECT_SIZE_LEFT;
    public static short GMD_BOSS5_BODY_SCT_FIEELD_RECT_SIZE_TOP;
    public static short GMD_BOSS5_BODY_SCT_FIEELD_RECT_SIZE_RIGHT;
    public static short GMD_BOSS5_BODY_SCT_FIEELD_RECT_SIZE_BOTTOM;
    public static int GMD_BOSS5_BODY_PLY_NML_REBOUND_X;
    public static int GMD_BOSS5_BODY_PLY_NML_REBOUND_Y;
    public static int GMD_BOSS5_BODY_PLY_NML_REBOUND_NOJUMPMOVE_TIME;
    public static int GMD_BOSS5_BODY_PLY_HOMING_REBOUND_X;
    public static int GMD_BOSS5_BODY_PLY_HOMING_REBOUND_Y;
    public static int GMD_BOSS5_BODY_PLY_HOMING_REBOUND_NOJUMPMOVE_TIME;
    public static uint GMD_BOSS5_BODY_START_WAIT_RISE_TIME;
    public static int GMD_BOSS5_BODY_START_BURY_HEIGHT;
    public static int GMD_BOSS5_BODY_START_RISE_SPD_Y;
    public static uint GMD_BOSS5_BODY_START_WAIT_END_TIME;
    public static int GMD_BOSS5_BODY_START_RISE_VIB_AMP_MAX;
    public static uint GMD_BOSS5_BODY_START_RISE_VIB_INTERVAL;
    public static float GMD_BOSS5_BODY_CANOPY_CLOSE_RATIO_SPD_ACC;
    public static float GMD_BOSS5_BODY_CANOPY_CLOSE_RATIO_SPD_MAX;
    public static int GMD_BOSS5_BODY_CANOPY_CLOSE_START_ANGLE_X;
    public static int GMD_BOSS5_BODY_WALK_WALK_END_WALL_DISTANCE;
    public static int GMD_BOSS5_BODY_RUN_FWD_JUMP_INIT_SPD_X;
    public static int GMD_BOSS5_BODY_RUN_FWD_FLY_INIT_SPD_X;
    public static int GMD_BOSS5_BODY_RUN_FWD_FLY_INIT_SPD_Y;
    public static int GMD_BOSS5_BODY_RUN_BWD_SPD_X_FACTOR;
    public static uint GMD_BOSS5_BODY_RUN_GROUNDING_EFCT_DELAY;
    public static float GMD_BOSS5_BODY_RUN_ACT_FRAME_OVERRUN_ALLOW_RATIO;
    public static uint GMD_BOSS5_BODY_RUN_PRE_RECOVER_TIMEOUT_FRAME;
    public static uint GMD_BOSS5_BODY_RUN_RECOVER_TIMEOUT_FRAME;
    public static uint GMD_BOSS5_BODY_STOMP_IGNITE_TIME;
    public static int GMD_BOSS5_BODY_SFLYUP_INIT_SPD;
    public static int GMD_BOSS5_BODY_SFLYUP_ACC;
    public static uint GMD_BOSS5_BODY_STOMP_WAIT_TIME;
    public static int GMD_BOSS5_BODY_STOMP_FALL_INIT_SPD;
    public static int GMD_BOSS5_BODY_STOMP_FALL_ACC;
    public static uint GMD_BOSS5_BODY_STOMP_SEARCH_DELAY;
    public static uint GMD_BOSS5_BODY_STOMP_NO_SEARCH_TIME;
    public static int GMD_BOSS5_BODY_STOMP_FALL_POS_MARGIN;
    public static int GMD_BOSS5_BODY_STOMP_WALL_BEHIND_WALL_DISTANCE;
    public static uint GMD_BOSS5_BODY_BERSERK_ROAR_PREP_TIME;
    public static uint GMD_BOSS5_BODY_BERSERK_ROAR_LOOP_TIME;
    public static float GMD_BOSS5_BODY_BERSERK_TURN_FRONT_DEG_F;
    public static float GMD_BOSS5_BODY_BERSERK_TURN_RETURN_DEG_F;
    public static float GMD_BOSS5_BODY_BERSERK_TURN_RATIO_SPD;
    public static uint GMD_BOSS5_BODY_BERSERK_BREAKDOWN_TIME;
    public static float GMD_BOSS5_BODY_BERSERK_SHAKE_MOTION_SPD_DEST;
    public static float GMD_BOSS5_BODY_BERSERK_SHAKE_MOTION_SPD_RATIO_ACC;
    public static uint GMD_BOSS5_BODY_BERSERK_SHAKE_STAY_TIME;
    public static uint GMD_BOSS5_BODY_BERSERK_STAMP_SMOKE_CREATE_DELAY;
    public static uint GMD_BOSS5_BODY_BERSERK_STAMP_VIB_START_DELAY;
    public static uint GMD_BOSS5_BODY_BERSERK_STAMP_SE_START_DELAY;
    public static int GMD_BOSS5_BODY_CFLYUP_INIT_SPD;
    public static int GMD_BOSS5_BODY_CFLYUP_ACC;
    public static uint GMD_BOSS5_BODY_CRASH_WAIT_TIME;
    public static uint GMD_BOSS5_BODY_CRASH_CURSOR_SPAWN_TIME_TRHESHOLD;
    public static int GMD_BOSS5_BODY_CRASH_FALL_INIT_SPD;
    public static int GMD_BOSS5_BODY_CRASH_FALL_ACC;
    public static uint GMD_BOSS5_BODY_CRASH_LANDED_IDLE_TIME;
    public static int GMD_BOSS5_BODY_CRASH_PLY_IMMOBILE_TIME;
    public static uint GMD_BOSS5_BODY_CRASH_STRIKE_SW_CREATE_DELAY;
    public static uint GMD_BOSS5_BODY_CRASH_STRIKE_VIB_START_DELAY;
    public static uint GMD_BOSS5_BODY_CRASH_STRIKE_BODY_VIB_START_DELAY;
    public static float GMD_BOSS5_BODY_CRASH_STRIKE_BODY_VIB_RATIO_ADD;
    public static int GMD_BOSS5_BODY_CRASH_STRIKE_BODY_VIB_SCALE;
    public static uint GMD_BOSS5_BODY_CRASH_STRIKE_SE_START_DELAY;
    public static uint GMD_BOSS5_BODY_DEFEAT_WAIT_START_TIME;
    public static uint GMD_BOSS5_BODY_DEFEAT_SCT_FALL_LAND_VIB_TIME;
    public static int GMD_BOSS5_BODY_DEFEAT_SCT_FALL_LAND_VIB_AMP;
    public static int GMD_BOSS5_BODY_DEFEAT_SCT_FALL_LAND_VIB_DEG_SPD;
    public static float GMD_BOSS5_BODY_RPUNCH_LAUNCH_TIMING_DELAY;
    public static byte GMD_BOSS5_ALARM_FADE_DEST_ALPHA;
    public static byte GMD_BOSS5_ALARM_FADE_DEST_RED;
    public static byte GMD_BOSS5_ALARM_FADE_DEST_GREEN;
    public static byte GMD_BOSS5_ALARM_FADE_DEST_BLUE;
    public static int GMD_BOSS5_FLASH_SCREEN_FADEOUT_TIME;
    public static float GMD_BOSS5_SCT_NDC_FLY_SPD_FLOAT;
    public static int GMD_BOSS5_BODY_SEQ_RPUNCH_NML_FASTSHOT_PROB;
    public static uint GMD_BOSS5_BODY_SEQ_RPUNCH_NML_SEARCH_TIME_SHORT;
    public static uint GMD_BOSS5_BODY_SEQ_RPUNCH_NML_SEARCH_TIME_NORMAL;
    public static uint GMD_BOSS5_BODY_SEQ_RPUNCH_STR_FASTSHOT_PROB;
    public static uint GMD_BOSS5_BODY_SEQ_RPUNCH_STR_SEARCH_TIME_SHORT;
    public static uint GMD_BOSS5_BODY_SEQ_RPUNCH_STR_SEARCH_TIME_NORMAL;
    public static int GMD_BOSS5_BODY_SE_TARGET_INIT_INTERVAL;
    public static float GMD_BOSS5_BODY_SE_TARGET_INTERVAL_DEC_SPD;
    public static int GMD_BOSS5_BODY_SE_TARGET_INTERVAL_MIN;
    private AppMain.MPP_VOID_GMS_BOSS5_BODY_WORK GMF_BOSS5_BODY_STATE_ENTER_FUNC;
    private AppMain.MPP_VOID_GMS_BOSS5_BODY_WORK GMF_BOSS5_BODY_STATE_LEAVE_FUNC;
    private AppMain.MPP_VOID_GMS_BOSS5_BODY_WORK GMF_BOSS5_BODY_SUBSEQ_ENTER_FUNC;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_boss5_obj_3d_list;
    private static AppMain.GMS_BOSS5_BODY_STATE_ENTER_INFO[] gm_boss5_body_state_enter_info_tbl;
    private static AppMain.MPP_VOID_GMS_BOSS5_BODY_WORK[] gm_boss5_body_state_leave_func_tbl;
    private static AppMain.GMS_BOSS5_BODY_SUBSEQ_ENTER_INFO[] gm_boss5_body_sub_seq_enter_func_tbl;
    private static int[] gm_boss5_body_state_strat_tbl;
    private static AppMain.GMS_BOSS5_MOVE_INFO[] gm_boss5_body_walk_move_info_tbl;
    private static AppMain.GMD_BOSS5_WALK_GROUND_TIMING_INFO[] gm_boss5_body_walk_ground_timing_info_tbl;
    private static int[] gm_boss5_body_scatter_parts_cnm_node_id_tbl;
    private static AppMain.GMS_BOSS5_SCT_PART_INFO[] gm_boss5_scatter_parts_info_tbl;
    private static AppMain.GMS_BOSS5_SCT_NDC_INFO[] gm_boss5_scatter_ndc_info_tbl;
    private static AppMain.GMS_BOSS5_ALARM_FADE_INFO[] gm_boss5_alarm_fade_info;
    private static uint[] gm_boss5_alarm_se_interval_time_tbl;
    private static int[][] gm_boss5_vib_tbl;
    private static int[][] gm_boss5_vib_param_tbl;
    private static AppMain.GMS_BOSS5_PART_ACT_INFO[][] gm_boss5_act_id_tbl;
    private static AppMain.GMS_BOSS5_ARM_ANIM_INFO[] gm_boss5_arm_anim_info_tbl;
    private static AppMain.GMS_BOSS5_BODY_RECT_SETTING_INFO[] gm_boss5_body_rect_setting_info_tbl;
    private static AppMain.GMS_BOSS5_STRAT_PROB_INFO[][] gm_boss5_body_seq_strat_branch_prob_tbl;
    private static int[] snm_reg_id_tbl;
    private static int[][] arm_part_node_ids;
    public static bool event_after_buy;
    private static readonly string[] dm_title_file_lng_amb_name_tbl;
    private static readonly string[] dm_title_menu_cmn_amb_name_tbl;
    private static readonly string[] dm_title_menu_cmn_lng_amb_name_tbl;
    private static readonly float[] dm_title_crsr_pos_y_tbl;
    private static readonly float[] dm_title_crsr_trial_pos_y_tbl;
    private static readonly float[,] dm_title_win_act_pos_tbl;
    public static readonly uint[] dm_title_g_dm_act_id_tbl;
    private static bool dm_title_is_title_start;
    private static AppMain.MTS_TASK_TCB dm_snd_bgm_player_tcb;
    private static uint dm_snd_bgm_player_flag;
    public static string DMD_OPT_CMN_DATA_FILENAME;
    public static string DMD_OPT_DATA_FILENAME;
    public static string[] dm_opt_menu_cmn_amb_name_tbl;
    public static string[] dm_opt_menu_cmn_lng_amb_name_tbl;
    public static string[] dm_opt_main_lng_amb_name_tbl;
    public static string[] dm_opt_manual_file_lng_amb_name_tbl;
    public static float[][] dm_opt_ctrl_up_tab_disp_pos_tbl;
    public static float[][] dm_opt_ctrl_down_tab_disp_pos_tbl;
    public static float[][] dm_opt_ctrl_menu_disp_chng_frm_tbl;
    public static float[][] dm_opt_ctrl_icon_disp_pos_tbl;
    public static float[][] dm_opt_ctrl_nrml_disp_pos_tbl;
    public static float[][] dm_opt_ctrl_clsc_disp_pos_tbl;
    public static float[] dm_opt_set_tab_pos_y_tbl;
    public static float[] dm_opt_set_line_pos_y_tbl;
    public static int[] dm_opt_top_menu_tex_tbl;
    public static int[] dm_opt_set_menu_tex_tbl;
    public static readonly uint[] g_dm_act_id_tbl_opt;
    public static AppMain.DMS_OPT_MGR dm_opt_mgr;
    public static AppMain.DMS_OPT_MGR dm_opt_mgr_p;
    public static AppMain.AOS_TEXTURE dm_opt_win_tex;
    public static uint dm_opt_draw_state;
    public static bool dm_opt_is_pause_maingame;
    public static short dm_opt_prev_evt;
    public static bool dm_opt_show_xboxlive;
    public static int dm_xbox_show_progress;
    private static int g_ao_account_current_id;
    private static AppMain.SYS_EVT_DATA[] _gs_evt_data;
    public static uint[] gs_main_eme_get_act_no_tbl;
    public static AppMain.NNS_TEXLIST nngCurrentTextureList;
    private static AppMain.NNS_RGBA nngColorWhite;
    private static AppMain.NNS_RGBA nngColorBlack;
    private static AppMain.NNS_MATRIX nngUnitMatrix;
    private static AppMain.NNS_MATRIX nngProjectionMatrix;
    private static int nngProjectionType;
    private static int nnsystem_init;
    private static bool nngFogSwitch;
    private static float nngFogStart;
    private static float nngFogEnd;
    private static float nngFogDensity;
    private static float[] nnSetFogColor_col;
    public static readonly AppMain.GMS_START_DEMO_DATA g_start_demo_data_real;
    private static AppMain.GMS_START_DEMO_DATA g_start_demo_data;
    private static readonly AppMain.GMS_START_DEMO_MGR g_start_demo_mgr_real;
    private static AppMain.GMS_START_DEMO_MGR g_start_demo_mgr;
    private static int[][] g_gm_start_demo_data_amb_id;
    private static int[][] g_gm_start_demo_data_ama_id;
    private static int[] g_gm_start_demo_data_type_cmn;
    private static int[] g_gm_start_demo_action_id_cmn;
    private static string[] g_gm_start_demo_action_name_cmn;
    private static int[] g_gm_start_demo_action_node_flag_cmn;
    private static int[] g_gm_start_demo_data_type_zone;
    private static int?[][] g_gm_start_demo_action_id_zone;
    private static string[] g_gm_start_demo_action_name_zone;
    private static int[] g_gm_start_demo_action_node_flag_zone;
    private static int[] g_gm_start_demo_data_type_act;
    private static int[] g_gm_start_demo_act_no;
    private static int[][] g_gm_start_demo_action_id_act;
    private static int[][] g_gm_start_demo_action_id_message;
    private static string[] g_gm_start_demo_action_name_act;
    private static string g_gm_start_demo_action_name_message;
    private static int[] g_gm_start_demo_action_node_flag_act;
    private static AppMain.MTS_TASK_TCB gm_spl_tcb;
    private static uint[] gm_spl_stage_init_time;
    private static ushort[][] gm_spl_stage_ringgate_num;
    private static byte[] gm_gmk_ss_switch;
    public static short g_gm_ring_size;
    public static AppMain.MTS_TASK_TCB gm_ring_tcb;
    public static AppMain.GMS_RING_SYS_WORK gm_ring_sys_work;
    public static AppMain.OBS_ACTION3D_NN_WORK gm_ring_obj_3d;
    public static readonly int GMD_RING_SIZE;
    public static short gm_ring_fall_acc_x;
    public static short gm_ring_fall_acc_y;
    private static int gm_ring_scale;
    public static short gm_ring_die_offset;
    private static readonly float[][] gm_ring_roll_uv;
    private static byte[] gm_ring_damege_num_tbl;
    private static AppMain.OBS_RECT[] ply_rect;
    private static AppMain.OBS_RECT ring_rect;
    public static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_steampipe_obj_3d_list;
    private static byte[] tbl_gmk_pipe_vect;
    private static short[][] tbl_gm_gmk_steampipe_rect;
    private static byte[] g_gm_ss_parts_col;
    public static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_ss_square_obj_3d_list;
    public static AppMain.AMS_AMB_HEADER gm_gmk_ss_square_obj_tvx_list;
    private static AppMain.NNS_TEXCOORD[] gm_gmk_ss_square_mat_color;
    private static byte[] gm_gmk_ss_square_uv_parameter;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_ss_arrow_obj_3d_list;
    private static AppMain.VecFx32[] g_gm_gmk_disp_offset;
    private static AppMain.OBS_ACTION3D_NN_WORK[] g_gm_gmk_needle_neon_obj_3d_list;
    private static AppMain.AMS_AMB_HEADER g_gm_gmk_needle_neon_obj_tvx_list;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_ene_unides_obj_3d_list;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_ene_kani_obj_3d_list;
    private static readonly int[] dm_clrdm_stage_text_amb_id;
    private static ushort[] dm_clrdm_stage_text_act_id;
    private static readonly ushort[] dm_clrdm_stage_num_act_id;
    private static readonly ushort[] dm_clrdm_stage_ge_num_act_id;
    private static readonly ushort[] dm_clrdm_stage_fr_num_act_id;
    private static readonly ushort[] dm_clrdm_stage_sp_num_act_id;
    private static readonly ushort[] dm_clrdm_stage_tex_act_id;
    private static readonly ushort[] dm_clrdm_stage_ge_tex_act_id;
    private static readonly int[] g_gm_clear_demo_data_ama_id;
    private static readonly int[] g_gm_clear_demo_data_amb_id;
    private static readonly int[][] dm_clrdm_clear_time_sec_tbl;
    private static readonly uint[] dm_clrdm_clear_time_score_tbl;
    private static readonly ushort[] dm_clrdm_act_id_tbl;
    private static readonly int[] dm_clrdm_spe_stg_get_act_no;
    private static ushort[] dm_clrdm_spe_stg_get_prev_act_no;
    private static readonly AppMain.GMS_CLRDM_MGR gm_clrdm_mgr;
    private static AppMain.GMS_CLRDM_MGR gm_clrdm_mgr_p;
    private static readonly AppMain.AMS_AMB_HEADER[] gm_clrdm_amb;
    private static readonly AppMain.AOS_TEXTURE[] gm_clrdm_tex;
    public static int GMD_BOSS5_TURRET_TILT_NEAR_ANGLE;
    public static float GMD_BOSS5_TURRET_FACE_PLY_SPD_DEG;
    public static uint GMD_BOSS5_TURRET_FACE_TIME;
    public static float GMD_BOSS5_TURRET_SLIDE_LENGTH_MAX;
    public static float GMD_BOSS5_TURRET_SLIDE_RAISE_SPD_F;
    public static float GMD_BOSS5_TURRET_SLIDE_LOWER_SPD_F;
    public static float GMD_BOSS5_TURRET_COVER_SLIDE_DEG_MAX;
    public static float GMD_BOSS5_TURRET_COVER_SLIDE_SCALE_MAX;
    public static float GMD_BOSS5_TURRET_COVER_SLIDE_OPEN_RATIO_SPD_F;
    public static float GMD_BOSS5_TURRET_COVER_SLIDE_CLOSE_RATIO_SPD_F;
    public static float GMD_BOSS5_TURRET_SLIDE_POLE_DISP_OFST_Y;
    public static int GMD_BOSS5_TURRET_VULCAN_SHOT_INTERVAL;
    public static int GMD_BOSS5_TURRET_VULCAN_BULLET_SPD;
    public static int GMD_BOSS5_TURRET_VULCAN_FIRE_OFST_FORWARD;
    public static int GMD_BOSS5_TURRET_VULCAN_FIRE_OFST_Z;
    public static int GMD_BOSS5_TURRET_VULCAN_BULLET_OFST_FORWARD;
    public static int GMD_BOSS5_TURRET_VULCAN_BULLET_OFST_Z;
    public static int GMD_BOSS5_TURRET_START_LIFE_THRESHOLD;
    public static AppMain.GMS_BOSS5_TURRET_SEQ_VUL_SHOT_INFO[] gm_boss5_trt_seq_vul_shot_info_tbl;
    private static AppMain.NNS_MATRIX gmBoss5TurretMain_trt_ofst;
    public static readonly int GMD_BOSS4_CHIBI_ABURNER1_TURN_X;
    private static readonly AppMain.NNS_RGB gm_boss4_color_red;
    private static bool gm_chibi_inv_flag;
    private static bool gm_chibi_exp_flag;
    public static float GMD_BOSS4_SCROLL_SPD_MAX;
    public static float GMD_BOSS4_SCROLL_SPD_START;
    public static float GMD_BOSS4_SCROLL_SPD_ADD;
    public static float GMD_BOSS4_SCROLL_SPD_SUB;
    public static float GMD_BOSS4_SCROLL_SPD_BOSS;
    public static float GMD_BOSS4_SCROLL_SPD_BOSS_BROKEN;
    public static readonly AppMain.GMS_BOSS4_PART_ACT_INFO[][] gm_boss4_act_id_tbl;
    public static AppMain.OBS_ACTION3D_NN_WORK[] gm_boss4_obj_3d_list;
    public static AppMain.GMS_BOSS4_MGR_WORK gm_boss4_mgr_work;
    public static int gm_boss4_n_scroll;
    public static int gm_boss4_n_offset_x;
    public static float gm_boss4_f_scroll_spd;
    public static float gm_boss4_f_scroll_spd_max;
    public static int gm_boss4_n_scroll_pt_x;
    public static int gm_boss4_n_scroll_start;
    public static int gm_boss4_n_scroll_end;
    public static bool gm_boss4_b_warpout;
    public static bool gm_boss4_is_2nd;
    private static AppMain.GSS_SND_SCB dm_sound_bgm_scb;
    private static AppMain.GSS_SND_SCB dm_sound_jingle_scb;
    private static string[] dm_sound_bgm_name_list;
    private static string[] dm_sound_jingle_name_list;
    private static readonly AppMain.AMS_CRIAUDIO_INTERFACE amCriAudio_global;
    private static AppMain.AMS_CRIAUDIO_INTERFACE pAu;
    private static bool g_gs_font_builded;
    private static readonly AppMain.OBS_RECT_WORK[] _obj_user_resist;
    private static readonly byte[] _obj_user_resist_num;
    private static ushort _obj_user_resist_all_num;
    private static readonly ushort[] _obj_user_flag;
    private static readonly AppMain.OBS_RECT_WORK[] _obj_user_resist_nx;
    private static readonly byte[] _obj_user_resist_num_nx;
    private static readonly ushort[] _obj_user_flag_nx;
    private static ushort _obj_user_resist_all_num_nx;
    private static uint _obj_ulFlagBackA;
    private static uint _obj_ulFlagBackD;
    private static byte _obj_ucNoHit;
    private static int mppIntNULL;
    private static ushort mppUshortNULL;
    public static int AMD_RENDER_SURFACE_MAX;
    public static uint AMD_RENDER_FLAG_RESOLVE_COLOR0;
    public static uint AMD_RENDER_FLAG_RESOLVE_COLOR1;
    public static uint AMD_RENDER_FLAG_RESOLVE_COLOR2;
    public static uint AMD_RENDER_FLAG_RESOLVE_COLOR3;
    public static uint AMD_RENDER_FLAG_RESOLVE_DEPTH;
    public static uint AMD_RENDER_FLAG_USE_DEPTH;
    public static uint AMD_RENDER_FLAG_TILED;
    public static uint AMD_RENDER_FLAG_DELETE;
    public static uint AMD_RENDER_CLEAR_COLOR;
    public static uint AMD_RENDER_CLEAR_DEPTH;
    public static uint AMD_RENDER_CLEAR_STENCIL;
    public static uint AMD_RENDER_CLEAR_ALL;
    private static AppMain.AMS_RENDER_MANAGER _am_render_manager;
    private static AppMain.AMS_RENDER_TARGET _am_render_default;
    private static readonly AppMain.AMS_PAD_DATA[] _am_pad;
    private static readonly AppMain.HGS_TROPHY_CHECK_INFO[] hg_trophy_check_info_tbl_clear_demo;
    private static readonly AppMain.HGS_TROPHY_CHECK_INFO[] hg_trophy_check_info_tbl_goal_in;
    private static readonly AppMain.HGS_TROPHY_CHECK_INFO[] hg_trophy_check_info_tbl_inc_ene_kill_count;
    private static readonly AppMain.HGS_TROPHY_CHECK_INFO[] hg_trophy_check_info_tbl_end_credits_finished;
    private static readonly AppMain.HGS_TROPHY_CHECK_INFO[] hg_trophy_check_info_tbl_upload_record;
    private static readonly AppMain.HGS_TROPHY_CHECK_INFO[] hg_trophy_check_info_tbl_inc_challenge;
    private static readonly AppMain.HGS_TROPHY_CHECK_TIMING_INFO[] hg_trophy_check_timing_info_tbl;
    private static short[][] gm_gmk_spring_rect;
    private static ushort[] gm_gmk_spring_dir;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_spring_obj_3d_list;
    private static readonly int[] gm_gmk_shutter_disp_offset_for_final_zone;
    private static AppMain.OBS_ACTION3D_NN_WORK[] g_gm_gmk_shutter_obj_3d_list;
    private static AppMain.OBS_ACTION3D_NN_WORK[] g_gm_gmk_rock_obj_3d_list;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_capsule_obj_3d_list;
    private static ushort GMD_GMK_CAPSULE_ANIMAL_BASEWAIT;
    private static ushort GMD_GMK_CAPSULE_ANIMAL_WAITGAP;
    private static AppMain.GMS_GMK_CAPSULE_ANIMAL_SET_PARAM[] g_gm_gmk_capsule_animal_set;
    public static int GMD_GMK_BUBBLE_INTERVAL_EFFECT_START;
    public static long GMD_GMK_BUBBLE_SPEED_X_ADD;
    public static long GMD_GMK_BUBBLE_SPEED_X_MAX;
    public static long GMD_GMK_BUBBLE_SPEED_Y;
    public static int GMD_GMK_BUBBLE_FRAME_HIT_DELETE;
    public static int GMD_GMK_BUBBLE_OFFSET_X;
    public static int GMD_GMK_BUBBLE_OFFSET_Y;
    public static int GMD_GMK_BUBBLE_HIT_LENGTH;
    public static int GMD_GMK_BUBBLE_HIT_EFFECT_NUM;
    private static ushort[] gm_gmk_bubble_table_atk;
    private static ushort[] gm_gmk_bubble_table_def;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_ene_uniuni_obj_3d_list;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_ene_mogu_obj_3d_list;
    private static readonly AppMain.NNS_VECTOR gm_camera_vibration;
    private static readonly AppMain.GMS_CAMERA_WORK gm_camera_work;
    private static readonly AppMain.NNS_VECTOR gm_camera_option_allow_pos;
    private static readonly AppMain.NNS_VECTOR gm_camera_common_allow_pos;
    private static readonly AppMain.NNS_VECTOR gm_camera_splstg_allow_pos;
    private static short GMD_BOSS5_RKT_SEARCH_INITIAL_DIR_Z_L;
    private static short GMD_BOSS5_RKT_SEARCH_INITIAL_DIR_Z_R;
    private static int GMD_BOSS5_RKT_SEARCH_INITIAL_ADJ_DIR_X_LA;
    private static int GMD_BOSS5_RKT_SEARCH_INITIAL_ADJ_DIR_X_RA;
    private static int GMD_BOSS5_RKT_FALL_SPIN_ANGLE_SPD;
    private static int GMD_BOSS5_RKT_FALL_WOBBLE_SIN_PARAM_DEG_SPD;
    private static int GMD_BOSS5_RKT_GRD_STUCK_LEAN_HIT_VIB_SIN_ANGLE_ADD;
    private static int GMD_BOSS5_RKT_BLOW_FLY_ROT_SPD;
    private static int GMD_BOSS5_RKT_BOUNCE_DIR_ANGLE;
    private static int GMD_BOSS5_RKT_BOUNCE_FLY_ROT_SPD;
    private static int GMD_BOSS5_RKT_LOCKON_DIR_LIMIT_R_START;
    private static int GMD_BOSS5_RKT_LOCKON_DIR_LIMIT_R_END;
    private static int GMD_BOSS5_RKT_LOCKON_DIR_LIMIT_L_START;
    private static int GMD_BOSS5_RKT_LOCKON_DIR_LIMIT_L_END;
    private static AppMain.GMS_BOSS5_RKT_SEQ_WAITFALL_INFO[] gm_boss5_rkt_seq_wait_fall_time_tbl;
    private static short GMD_BOSS3_ANGLE_LEFT;
    private static short GMD_BOSS3_ANGLE_RIGHT;
    public static AppMain.OBS_ACTION3D_NN_WORK[] gm_boss3_obj_3d_list;
    public static AppMain.GMS_BOSS3_PART_ACT_INFO[][] gm_boss3_act_info_tbl;
    private static AppMain.GMS_BOSS3_PART_ACT_INFO[] gm_boss3_egg_act_info_tbl;
    private static AppMain.GMF_BOSS3_BODY_STATE_FUNC[] gm_boss3_body_state_func_tbl_enter;
    private static AppMain.GMF_BOSS3_BODY_STATE_FUNC[] gm_boss3_body_state_func_tbl_leave;
    private static int[] g_boss3_node_index_list;
    private static int[][] g_gm_boss3_battle_move_x;
    private static int[][] g_gm_boss3_battle_pattern_per;
    private static AppMain.MTS_TASK_TCB iz_fade_tcb;
    private static readonly byte[][] iz_fade_color;
    private static byte[] iz_fade_alpha;
    private static readonly AppMain.GMS_WATER_SURFACE_DATA g_water_surface_data_real;
    private static AppMain.GMS_WATER_SURFACE_DATA g_water_surface_data;
    private static readonly AppMain.GMS_WATER_SURFACE_MGR g_water_surface_mgr_real;
    private static AppMain.GMS_WATER_SURFACE_MGR g_water_surface_mgr;
    private static AppMain.DMAP_WATER _dmap_water;
    private static AppMain.OBF_DRAW_USER_DT_FUNC _gmWaterSurfaceTcbProcPreDrawDT;
    private static AppMain.OBF_DRAW_USER_DT_FUNC _gmWaterSurfaceUserFuncMatrixPush;
    private static AppMain.OBF_DRAW_USER_DT_FUNC _gmWaterSurfaceUserFuncPop;
    private static readonly AppMain.AMS_RENDER_TARGET _gm_mapFar_render_work;
    private static readonly AppMain.GMS_MAP_FAR_DATA g_map_far_data_real;
    private static AppMain.GMS_MAP_FAR_DATA g_map_far_data;
    private static readonly AppMain.GMS_MAP_FAR_MGR g_map_far_mgr_real;
    private static AppMain.GMS_MAP_FAR_MGR g_map_far_mgr;
    public static readonly uint[] g_map_far_zone_1_scene_obj_data;
    public static readonly uint[] g_map_far_zone_1_scene_obj_data_mat_motion;
    public static readonly AppMain.MPP_VOID_OBS_OBJECT_WORK[] g_map_far_zone_1_scene_obj_func_main;
    public static readonly AppMain.MPP_VOID_OBS_OBJECT_WORK[] g_map_far_zone_1_scene_obj_func_out;
    public static readonly AppMain.GMS_MAP_FAR_SCROLL[] g_map_far_zone_1_scroll_x;
    public static readonly AppMain.GMS_MAP_FAR_SCROLL[] g_map_far_zone_1_boss_scroll_x;
    public static readonly int g_map_far_zone_1_scroll_num_x;
    public static readonly AppMain.GMS_MAP_FAR_SCROLL[] g_map_far_zone_1_scroll_y;
    public static readonly AppMain.GMS_MAP_FAR_SCROLL[] g_map_far_zone_1_boss_scroll_y;
    public static readonly int g_map_far_zone_1_scroll_num_y;
    public static readonly uint[] g_map_far_zone_2_scene_obj_data;
    public static readonly uint[] g_map_far_zone_2_scene_obj_data_motion;
    public static readonly uint[] g_map_far_zone_2_scene_obj_data_mat_motion;
    public static readonly AppMain.MPP_VOID_OBS_OBJECT_WORK[] g_map_far_zone_2_scene_obj_func_main;
    public static readonly AppMain.MPP_VOID_OBS_OBJECT_WORK[] g_map_far_zone_2_scene_obj_func_out;
    public static readonly AppMain.GMS_MAP_FAR_SCROLL[] g_map_far_zone_2_scroll_x;
    public static readonly AppMain.GMS_MAP_FAR_SCROLL[] g_map_far_zone_2_boss_scroll_x;
    public static readonly int g_map_far_zone_2_scroll_num_x;
    public static readonly AppMain.GMS_MAP_FAR_SCROLL[] g_map_far_zone_2_scroll_y;
    public static readonly AppMain.GMS_MAP_FAR_SCROLL[] g_map_far_zone_2_boss_scroll_y;
    public static readonly int g_map_far_zone_2_scroll_num_y;
    public static readonly uint[] g_map_far_zone_3_scene_obj_data;
    public static readonly uint[] g_map_far_zone_3_scene_obj_data_mat_motion;
    public static readonly AppMain.MPP_VOID_OBS_OBJECT_WORK[] g_map_far_zone_3_scene_obj_func_main;
    public static readonly AppMain.MPP_VOID_OBS_OBJECT_WORK[] g_map_far_zone_3_scene_obj_func_out;
    public static readonly AppMain.GMS_MAP_FAR_SCROLL[] g_map_far_zone_3_scroll_x;
    public static readonly int g_map_far_zone_3_scroll_num_x;
    public static readonly AppMain.GMS_MAP_FAR_SCROLL[] g_map_far_zone_3_scroll_y;
    public static readonly int g_map_far_zone_3_scroll_num_y;
    public static readonly AppMain.GMS_MAP_FAR_SCROLL[] g_map_far_zone_4_scroll_x;
    public static readonly int g_map_far_zone_4_scroll_num_x;
    public static readonly AppMain.GMS_MAP_FAR_SCROLL[] g_map_far_zone_4_scroll_y;
    public static readonly int g_map_far_zone_4_scroll_num_y;
    public static readonly uint[] g_map_far_zone_final_scene_obj_data;
    public static readonly AppMain.MPP_VOID_OBS_OBJECT_WORK[] g_map_far_zone_final_scene_obj_func_main;
    public static readonly AppMain.MPP_VOID_OBS_OBJECT_WORK[] g_map_far_zone_final_scene_obj_func_out;
    public static readonly AppMain.GMS_MAP_FAR_SCROLL[] g_map_far_zone_final_scroll_x;
    public static readonly int g_map_far_zone_final_scroll_num_x;
    public static readonly AppMain.GMS_MAP_FAR_SCROLL[] g_map_far_zone_final_scroll_y;
    public static readonly int g_map_far_zone_final_scroll_num_y;
    public static readonly uint[] g_map_far_zone_ss_scene_obj_data;
    public static readonly uint[] g_map_far_zone_ss_scene_obj_data_mat_motion;
    public static readonly AppMain.MPP_VOID_OBS_OBJECT_WORK[] g_map_far_zone_ss_scene_obj_func_main;
    public static readonly AppMain.MPP_VOID_OBS_OBJECT_WORK[] g_map_far_zone_ss_scene_obj_func_out;
    public static readonly AppMain.GMS_MAP_FAR_SCROLL[] g_map_far_zone_ss_scroll_x;
    public static readonly int g_map_far_zone_ss_scroll_num_x;
    public static readonly AppMain.GMS_MAP_FAR_SCROLL[] g_map_far_zone_ss_scroll_y;
    public static readonly int g_map_far_zone_ss_scroll_num_y;
    private static readonly AppMain.NNS_VECTOR[] g_gm_map_far_camera_target_offset;
    private static AppMain.NNS_RGBA_U8[] g_gm_map_far_clear_color;
    private static readonly AppMain.NNS_VECTOR GmMapFarGetCameraTarget_result;
    private static AppMain.OBF_DRAW_USER_DT_FUNC _gmMapFarTcbProcPreDrawDT;
    private static AppMain.OBF_DRAW_USER_DT_FUNC _gmMapFarTcbProcPostDrawDT;
    private static AppMain.NNS_VECTOR gmMapFarCameraGetPos_result;
    private static readonly AppMain.NNS_VECTOR gmMapFarZone1GetCameraPos_result;
    private static readonly AppMain.NNS_VECTOR gmMapFarZone2GetCameraPos_result;
    private static readonly AppMain.NNS_VECTOR gmMapFarZone3GetCameraPos_result;
    private static readonly AppMain.NNS_VECTOR gmMapFarZoneFinalGetCameraPos_result;
    private static readonly AppMain.NNS_VECTOR gmMapFarZoneSSGetCameraPos_result;
    public static readonly int GMD_GMK_DRAIN_TANK_ROLL_ANGLE_MAX;
    public static readonly int GMD_GMK_DRAIN_TANK_ROLL_ANGLE_MIN;
    public static readonly int GMD_GMK_DRAIN_TANK_ROLL_ANGLE_SPEED;
    private static AppMain.OBS_ACTION3D_NN_WORK[] g_gm_gmk_drain_tank_obj_3d_list;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_cannon_obj_3d_list;
    public static AppMain.Del__[] g_gm_event_tbl;
    public static AppMain.Del__2[] g_gm_decorate_tbl;
    public static ushort[] g_gm_event_size_tbl;
    public static ushort[] g_gm_decorate_size_tbl;
    private static AppMain.MTS_TASK_TCB gm_ending_tcb;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_ending_obj_3d_list;
    private static int[] gm_ending_obj_offset;
    private static short GMD_BOSS2_ANGLE_LEFT;
    private static short GMD_BOSS2_ANGLE_RIGHT;
    private static short GMD_BOSS2_BODY_PINBALL_ROLL_ROT_Z;
    private static short GMD_BOSS2_BODY_PINBALL_ANGLE_LEFT_ROLL;
    private static short GMD_BOSS2_BODY_PINBALL_ANGLE_RIGHT_ROLL;
    private static short GMD_BOSS2_EFFECT_BLITZ_LINE_DISP_ROT_Z;
    private static short GMD_BOSS2_EFFECT_BLITZ_ARM_DISP_ROT_Z;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_boss2_obj_3d_list;
    private static AppMain.GMS_BOSS2_PART_ACT_INFO[][] gm_boss2_act_info_tbl;
    private static AppMain.GMS_BOSS2_PART_ACT_INFO[] gm_boss2_egg_act_info_tbl;
    private static AppMain.MPP_VOID_GMS_BOSS2_BODY_WORK[] gm_boss2_body_state_func_tbl_enter;
    private static AppMain.MPP_VOID_GMS_BOSS2_BODY_WORK[] gm_boss2_body_state_func_tbl_leave;
    private static int[] g_boss2_node_index_list;
    private static readonly uint[] g_dm_act_id_tbl_stg_slct;
    public static readonly string[] dm_stgslct_main_lng_amb_name_tbl;
    public static readonly string[] dm_stgslct_menu_cmn_amb_name_tbl;
    public static readonly string[] dm_stgslct_menu_cmn_lng_amb_name_tbl;
    public static readonly uint[][] dm_stgslct_zone_act_num_tbl;
    public static readonly uint[] dm_stgslct_act_chng_vrtcl_num_tbl;
    public static readonly uint[] dm_stgslct_act_zone_no_tbl;
    public static readonly uint[] dm_stgslct_eme_get_act_no_tbl;
    public static readonly ushort[][] dm_stgslct_conv_stage_no_tbl;
    public static readonly uint[] dm_stgslct_zone_array_act_tbl;
    public static readonly int[][] dm_stgslct_n_zone_input_dir_tbl;
    public static readonly int[][] dm_stgslct_s_zone_input_dir_tbl;
    public static readonly int[][] dm_stgslct_f_zone_input_dir_tbl;
    public static readonly int[][] dm_stgslct_a_zone_input_dir_tbl;
    public static float fTest;
    public static float fTest2;
    public static readonly float[][] dm_stgslct_n_zone_disp_pos_tbl;
    public static readonly float[][] dm_stgslct_n_zone_nodisp_pos_tbl;
    public static readonly float[][] dm_stgslct_f_zone_disp_pos_tbl;
    public static readonly float[][] dm_stgslct_f_zone_nodisp_pos_tbl;
    public static readonly float[][] dm_stgslct_s_zone_disp_pos_tbl;
    public static readonly float[][] dm_stgslct_s_zone_nodisp_pos_tbl;
    public static readonly float[][] dm_stgslct_a_zone_disp_pos_tbl;
    public static readonly float[][] dm_stgslct_a_zone_nodisp_pos_tbl;
    public static readonly float[] dm_stgslct_act_disp_y_pos_tbl;
    private static bool dm_stgslct_is_stage_start;
    private static AppMain.CActionDraw stgSelect_act_draw_sys;
    private static int[] dmStgSlctSetScoreDispFrame_tmp_digit;
    private static int[] dmStgSlctSetScoreDispFrame_time_digit;
    private static AppMain.MTS_TASK_TCB sy_evt_tcb;
    private static AppMain.SYS_EVT_INFO sy_evt_info;
    private static Random random;
    private static float _am_performance_main;
    private static float _am_performance_draw;
    private static float _am_performance_GPU;
    private static float _am_framerate_main;
    private static float _am_framerate_draw;
    private static int _am_exit_game;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_piston_obj_3d_list;
    private static int gm_gmk_boss3_pillar_se_use_count;
    private static int gm_gmk_boss3_pillar_global_flag;
    private static readonly int[] g_gm_gmk_boss3_pillar_event_id;
    private static readonly int[][] g_gm_gmk_boss3_pillar_default_pos;
    private static readonly int[][] g_gm_gmk_boss3_pillar_move_distance;
    private static readonly int[][] g_gm_gmk_boss3_pillar_wait_frame;
    private static readonly int[] g_gm_gmk_boss3_pillar_frame_change_hurry;
    private static readonly float[][] g_gm_gmk_boss3_pillar_adjust_default_pos;
    private static readonly int[] g_gm_boss3_pillar_model_id_left;
    private static readonly int[] g_gm_boss3_pillar_model_id_right;
    private static readonly int[] g_gm_boss3_pillar_model_id_top;
    private static readonly int[] g_gm_boss3_pillar_model_id_bottom;
    private static readonly int[] g_gm_boss3_pillar_parts_offset_left;
    private static readonly int[] g_gm_boss3_pillar_parts_offset_right;
    private static readonly int[] g_gm_boss3_pillar_parts_offset_top;
    private static readonly int[] g_gm_boss3_pillar_parts_offset_bottom;
    private static readonly int[] g_gm_gmk_boss3_pillar_parts_num;
    private static readonly int[][] g_gm_boss3_pillar_model_id;
    private static readonly int[][] g_gm_boss3_pillar_parts_offset;
    private static readonly uint[][] g_gm_boss3_pillar_field_rect_wh;
    private static readonly int[][] g_gm_boss3_pillar_field_rect_offset;
    private static readonly int[][] g_gm_boss3_pillar_adjust_dir;
    private static readonly int[][] g_gm_gmk_boss3_pillar_flag_hit_effect;
    private static readonly int[][] g_gm_gmk_boss3_pillar_wall_default_pos;
    private static readonly float[][] g_gm_gmk_boss3_pillar_f_adjust_default_pos;
    private static readonly int[] g_gm_boss3_pillar_f_model_id_left;
    private static readonly int[] g_gm_boss3_pillar_f_model_id_right;
    private static readonly int[] g_gm_boss3_pillar_f_model_id_top;
    private static readonly int[] g_gm_boss3_pillar_f_model_id_bottom;
    private static readonly int[] g_gm_boss3_pillar_f_parts_offset_left;
    private static readonly int[] g_gm_boss3_pillar_f_parts_offset_right;
    private static readonly int[] g_gm_boss3_pillar_f_parts_offset_top;
    private static readonly int[] g_gm_boss3_pillar_f_parts_offset_bottom;
    private static readonly int[] g_gm_gmk_boss3_pillar_f_parts_num;
    private static readonly int[][] g_gm_boss3_pillar_f_model_id;
    private static readonly int[][] g_gm_boss3_pillar_f_parts_offset;
    private static readonly int[] g_gm_boss3_pillar_f_sub_model_id;
    private static readonly uint[][] g_gm_boss3_pillar_f_field_rect_wh;
    private static readonly int[][] g_gm_boss3_pillar_f_field_rect_offset;
    private static readonly int[][] g_gm_boss3_pillar_f_adjust_dir;
    private static readonly int[][] g_gm_gmk_boss3_pillar_f_wall_default_pos;
    private static AppMain.OBS_ACTION3D_NN_WORK[] g_gm_gmk_boss3_pillar_obj_3d_list;
    private static AppMain.OBS_ACTION3D_NN_WORK[] g_gm_gmk_boss3_wall_obj_3d_list;
    private static AppMain.AMS_AMB_HEADER g_gm_gmk_boss3_pillar_obj_tvx_list;
    private static AppMain.AMS_AMB_HEADER g_gm_gmk_boss3_wall_obj_tvx_list;
    private static AppMain.OBS_ACTION3D_NN_WORK[] g_gm_gmk_bobbin_obj_3d_list;
    public static AppMain.TaskWorkFactoryDelegate _GmEffectCreateWork_Delegate;
    private static AppMain.GSF_TASK_PROCEDURE _GmEffectDefaultExit;
    private static AppMain.MPP_VOID_OBS_OBJECT_WORK _ObjDrawActionSummaryDelegate;
    private static AppMain.MPP_VOID_OBS_OBJECT_WORK _ObjObjectMoveDelegate;
    private static AppMain.MPP_VOID_OBS_OBJECT_WORK _gmEffectDefaultRecFuncDelegate;
    private static AppMain.SimplePool<AppMain.GMS_EFFECT_3DES_WORK> GMS_EFFECT_3DES_WORK_Pool;
    private static AppMain.TaskWorkFactoryDelegate _GmEffect3dESTaskDelegate;
    private static AppMain.MPP_VOID_OBS_OBJECT_WORK _GmEffectDefaultMainFuncDeleteAtEnd;
    public static uint GMD_BS_CMN_CNM_FLAG_INHERIT_SCALE;
    public static uint GMD_BS_CMN_CNM_FLAG_LOCAL_COORDINATE;
    public static uint GMD_BS_CMN_RECT_HIT_SIDE_LEFT;
    public static uint GMD_BS_CMN_RECT_HIT_SIDE_TOP;
    public static uint GMD_BS_CMN_RECT_HIT_SIDE_RIGHT;
    public static uint GMD_BS_CMN_RECT_HIT_SIDE_BOTTOM;
    public static uint GMD_BS_CMN_RECT_HIT_SIDE_H_MASK;
    public static uint GMD_BS_CMN_RECT_HIT_SIDE_V_MASK;
    public static uint GMD_BS_CMN_DMG_FLICKER_DEFAULT_CYCLE;
    public static uint GMD_BS_CMN_DMG_FLICKER_INTERVAL_TIME;
    private static ushort[] gm_bs_cmn_efct_atk_flag_tbl;
    private static ushort[] gm_bs_cmn_efct_def_flag_tbl;
    private static AppMain.NNS_RGB gm_bs_cmn_dmg_flicker_default_color;
    private static AppMain.NNS_MATRIX GmBsCmnUpdateObject3DNNStuckWithNode_rot_mtx;
    private static AppMain.NNS_MATRIX GmBsCmnUpdateObject3DNNStuckWithNode_node_w_rot;
    private static AppMain.NNS_MATRIX GmBsCmnUpdateObject3DESStuckWithNode_node_w_rot;
    private static AppMain.NNS_MATRIX GmBsCmnUpdateObject3DESStuckWithNode_rot_mtx;
    private static AppMain.NNS_MATRIX GmBsCmnUpdateObject3DESStuckWithNode_nml_w_mtx;
    private static AppMain.NNS_MATRIX gmBsCmnMotionCallbackStoreNodeMatrix_base_mtx;
    private static AppMain.NNS_MATRIX gmBsCmnMotionCallbackStoreNodeMatrix_node_mtx;
    private static AppMain.NNS_MATRIX gmBsCmnMtxpltCallbackControlNodeMatrix_init_mtx;
    private static AppMain.NNS_MATRIX gmBsCmnMtxpltCallbackControlNodeMatrix_candidate_mtx;
    private static AppMain.NNS_MATRIX gmBsCmnMtxpltCallbackControlNodeMatrix_inv_view_mtx;
    private static AppMain.NNS_MATRIX gmBsCmnMtxpltCallbackControlNodeMatrix_node_w_mtx;
    private static AppMain.NNS_MATRIX gmBsCmnMtxpltCallbackControlNodeMatrix_cur_mtx;
    private static AppMain.NNS_MATRIX gmBsCmnMtxpltCallbackControlNodeMatrix_inv_cur_mtx;
    private static AppMain.NNS_MATRIX gmBsCmnMtxpltCallbackControlNodeMatrix_parent_cur_mtx;
    private static AppMain.NNS_MATRIX gmBsCmnMtxpltCallbackControlNodeMatrix_inv_parent_orig_mtx;
    private static AppMain.NNS_MATRIX gmBsCmnMtxpltCallbackControlNodeMatrix_parent_mtx;
    private static AppMain.NNS_MATRIX gmBsCmnMtxpltCallbackControlNodeMatrix_diff_mtx;
    private static AppMain.NNS_MATRIX gmBsCmnMtxpltCallbackControlNodeMatrix_parent_init_mtx;
    private static AppMain.NNS_MATRIX[] gmBsCmnMtxpltCallbackControlNodeMatrix_orig_mtx_plt;
    private static AppMain.NNS_MATRIX gmBsCmnGetNodeWorldMtx_init_mtx;
    public static readonly short GMD_BOSS1_RIGHTWARD_ANGLE;
    public static readonly short GMD_BOSS1_LEFTWARD_ANGLE;
    public static readonly int GMD_BOSS1_BODY_ATKNML_MOVE_CURVE_ANGLE_WIDTH;
    public static readonly int GMD_BOSS1_BODY_ATKNML_MOVE_CURVE_START_ANGLE;
    public static readonly int GMD_BOSS1_EFF_SHOCKWAVE_SUB_ROT_X;
    public static readonly int GMD_BOSS1_EFF_SCT_PART_RING_SPIN_SPD_DEG;
    public static readonly int GMD_BOSS1_EFF_SCT_PART_IBALL_SPIN_SPD_DEG;
    private static readonly AppMain.GMS_BOSS1_PART_ACT_INFO[][] gm_boss1_act_id_tbl;
    private static readonly AppMain.GMS_BOSS1_PART_ACT_INFO[] gm_boss1_egg_act_id_tbl;
    private static readonly AppMain.GMS_BOSS1_BODY_STATE_ENTER_INFO[] gm_boss1_body_state_enter_info_tbl;
    private static readonly AppMain.GMF_BOSS1_BODY_STATE_LEAVE_FUNC[] gm_boss1_body_state_leave_func_tbl;
    private static readonly ushort[] gm_boss1_eff_sw_atk_flag_tbl;
    private static readonly ushort[] gm_boss1_eff_sw_def_flag_tbl;
    private static readonly float[][] gm_boss1_eff_small_smoke_disp_ofst_tbl;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_boss1_obj_3d_list;
    public static readonly AppMain.GSS_MAIN_SYS_INFO g_gs_main_sys_info;
    public static uint _mt_math_rand;
    private static AppMain.NNS_MATCTRL_RGB nngMatCtrlDiffuse;
    private static AppMain.NNS_MATCTRL_RGB nngMatCtrlAmbient;
    private static AppMain.NNS_MATCTRL_RGB nngMatCtrlSpecular;
    private static AppMain.NNS_MATCTRL_ALPHA nngMatCtrlAlpha;
    private static AppMain.NNS_MATCTRL_ENVTEXMATRIX nngMatCtrlEnvTexMtx;
    private static AppMain.NNS_MATCTRL_BLENDMODE nngMatCtrlBlendMode;
    private static AppMain.NNS_MATCTRL_TEXOFFSET[] nngMatCtrlTexOffset;
    public static int nngDrawPrimBlend;
    public static int nngDrawPrimTexture;
    public static int nngDrawPrimTexCoord;
    public static uint nngDrawPrimTexName;
    public static int nngDrawPrimTexBlend;
    public static int nngDrawPrimTexSWarp;
    public static int nngDrawPrimTexTWarp;
    private static float[] nnSinTable;
    private static float[] nnCosTable;
    public static SpriteBatch m_spriteBatch;
    private static bool _am_iPhone_quit_req;
    private static bool _am_iPhone_quit;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_ss_goal_obj_3d_list;
    private static AppMain.AMS_AMB_HEADER gm_gmk_ss_goal_obj_tvx_list;
    private static int[] g_gm_gmk_flipper_model_id;
    private static int[] g_gm_gmk_flipper_mat_motion_id;
    private static ushort[] g_gm_gmk_flipper_angle_z;
    private static short[][] g_gmk_flipper_rect;
    private static AppMain.OBS_ACTION3D_NN_WORK[] g_gm_gmk_flipper_obj_3d_list;
    private static int gmk_bwall_effect_y;
    private static short[][] tbl_gm_gmk_bwall_col_rect;
    private static ushort[][] tbl_breakwall_mdl;
    public static short GMD_GMK_BWALL_HIT_LEFT;
    public static short GMD_GMK_BWALL_HIT_RIGHT;
    public static short GMD_GMK_BFLOOR_HIT_TOP;
    public static short GMD_GMK_BFLOOR_HIT_BOTTOM;
    public static uint GMD_GMK_BWALL_HARD_SPIN_D;
    public static uint GMD_GMK_BWALL_HARD_SPIN_J;
    public static uint GMD_GMK_BWALL_HARD_DASH;
    public static uint GMD_GMK_BFLOOR_HARD_CANNON;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_breakwall_obj_3d_list;
    private static ushort[][] tbl_gm_gmk_bwall1_1_parts;
    private static ushort[][] tbl_gm_gmk_bwall1_2_parts;
    private static ushort[][] tbl_gm_gmk_bfloor1_parts;
    private static ushort[][] tbl_gm_gmk_bwall2_1_parts;
    private static ushort[][] tbl_gm_gmk_bwall2_2_parts;
    private static ushort[][] tbl_gm_gmk_bfloor2_parts;
    private static ushort[][] tbl_gm_gmk_bwall3_1_parts;
    private static ushort[][] tbl_gm_gmk_bwall3_2_parts;
    private static ushort[][] tbl_gm_gmk_bwall3_1_h_parts;
    private static ushort[][] tbl_gm_gmk_bwall4_1_parts;
    private static ushort[][] tbl_gm_gmk_bwall4_2_parts;
    private static ushort[][] tbl_gm_gmk_bwall4_h_parts;
    private static AppMain.GMS_GMK_BWALL_PARTS_PARAM_TABLE[] tbl_gmk_bwall_parts_z1;
    private static AppMain.GMS_GMK_BWALL_PARTS_PARAM_TABLE[] tbl_gmk_bwall_parts_z2;
    private static AppMain.GMS_GMK_BWALL_PARTS_PARAM_TABLE[] tbl_gmk_bwall_parts_z3;
    private static AppMain.GMS_GMK_BWALL_PARTS_PARAM_TABLE[] tbl_gmk_bwall_parts_z4;
    private static AppMain.GMS_GMK_BWALL_PARTS_PARAM_TABLE[][] tbl_gmk_bwall_parts;
    public static int GMD_ENE_STING_JET_S_SMOKE_ON;
    public static short GMD_ENE_STING_EVE_FLAG_RIGHT;
    public static short GMD_ENE_STING_SPD_X;
    public static int GMD_ENE_STING_BULLET_SPD;
    public static int GMD_ENE_STING_BULLET_OFST_X;
    public static int GMD_ENE_STING_BULLET_OFST_Y;
    public static int GMD_ENE_STING_BULLET_OFST_Z;
    public static int GMD_ENE_STING_BULLET_WAIT;
    public static int GMD_ENE_STING_BULLET_AFTER_WAIT;
    public static int GMD_ENE_STING_BULLET_FLASH_OFST_X;
    public static int GMD_ENE_STING_BULLET_FLASH_OFST_Y;
    public static int GMD_ENE_STING_BULLET_FLASH_OFST_Z;
    public static int GMD_ENE_STING_DEC_SPD_DIST;
    public static int GMD_ENE_STING_SEARCH_DIR_START;
    public static int GMD_ENE_STING_SEARCH_DIR_END;
    public static int GMD_ENE_STING_GUN_OFST_Y;
    public static int GMD_ENE_STING_TURN_FRAME;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_ene_sting_obj_3d_list;
    public static int GMD_ENE_STING_NODE_ID_R_JET;
    public static int GMD_ENE_STING_NODE_ID_L_JET;
    public static int GMD_ENE_STING_NODE_ID_GUN;
    private static ushort[] gm_ene_com_atk_obj_atk_flag_tbl;
    private static ushort[] gm_ene_com_atk_obj_def_flag_tbl;
    public static readonly int GMD_BOSS4_BODY_ATKNML_MOVE_CURVE_ANGLE_WIDTH;
    public static readonly int GMD_BOSS4_BODY_ATKNML_MOVE_CURVE_START_ANGLE;
    public static readonly int GMD_BOSS4_EFF_ABURNER3_DISP_ROT_X;
    private static readonly AppMain.GMS_BOSS4_BODY_STATE_ENTER_INFO[] gm_boss4_body_state_enter_info_tbl;
    private static readonly AppMain.GMF_BOSS4_BODY_STATE_LEAVE_FUNC[] gm_boss4_body_state_leave_func_tbl;
    private static int gm_boss4_locking;
    public static AppMain.AOS_SYS_GLOBAL g_ao_sys_global;
    private static uint g_ao_act_sys_draw_prio;
    private static bool g_ao_act_sys_draw_state_enable;
    private static uint g_ao_act_sys_draw_state;
    private static float g_ao_act_sys_frame_rate;
    private static float g_ao_act_sys_adjust_x;
    private static float g_ao_act_sys_adjust_y;
    private static byte[] g_ao_act_master_buf;
    private static int g_ao_act_wide_shift;
    private static AppMain.AOS_SPRITE[] g_ao_act_spr_buf;
    private static AppMain.AOS_SPRITE[] g_ao_act_spr_ref;
    private static uint g_ao_act_spr_alloc;
    private static uint g_ao_act_spr_free;
    private static uint g_ao_act_spr_buf_size;
    private static uint g_ao_act_spr_num;
    private static uint g_ao_act_spr_peak;
    private static AppMain.AOS_ACTION[] g_ao_act_buf;
    private static AppMain.AOS_ACTION[] g_ao_act_ref;
    private static uint g_ao_act_alloc;
    private static uint g_ao_act_free;
    private static uint g_ao_act_buf_size;
    private static uint g_ao_act_num;
    private static uint g_ao_act_peak;
    private static AppMain.ArrayPointer<AppMain.AOS_ACT_SORT> g_ao_act_sort_buf;
    private static uint g_ao_act_sort_buf_size;
    private static uint g_ao_act_sort_num;
    private static uint g_ao_act_sort_peak;
    private static AppMain.ArrayPointer<AppMain.AOS_ACT_ACM> g_ao_act_acm_buf;
    private static AppMain.ArrayPointer<AppMain.AOS_ACT_ACM> g_ao_act_acm_cur;
    private static uint g_ao_act_acm_buf_size;
    private static uint g_ao_act_acm_num;
    private static uint g_ao_act_acm_peak;
    public static AppMain.ArrayPointer<uint> g_ao_act_acm_flag_buf;
    public static AppMain.ArrayPointer<uint> g_ao_act_acm_flag_cur;
    private static uint g_ao_act_acm_flag_buf_size;
    private static uint g_ao_act_acm_flag_num;
    private static uint g_ao_act_acm_flag_peak;
    private static AppMain.NNS_TEXLIST g_ao_act_texlist;
    private static AppMain.Pool<AppMain.AOS_SPRITE> AOS_SPRITE_Pool;
    private static AppMain.TaskProc aoActDrawTask_TaskProc;
    private static byte[] AmaMagicId;
    private static AppMain.NNS_MATRIX AoActDrawPre_mtx;
    private static AppMain.NNS_PRIM3D_PCT_ARRAY aoActDrawTask_pct_array;
    private static AppMain.NNS_PRIM3D_PCT[] aoActDrawTask_pct;
    private static AppMain.NNS_PRIM3D_PC[] aoActDrawTask_pc;
    private static AppMain.AOS_SPRITE[] aoActDrawSprState_spr_tbl;
    private static AppMain.AOS_SPRITE[] aoActDrawSortState_spr_tbl;
    private static AppMain.MTS_TASK_TCB gs_task_mt_system_tcb;
    private static AppMain.GSS_TASK_SYS gs_task_mtsys;
    private static AppMain.TaskProc _mtTaskProcedure;
    private static AppMain.TaskProc _mtTaskDestructor;
    private static Dictionary<System.Type, AppMain.SCallSlot> mtTaskMethodDictionary;
    private static AppMain.NNS_SCREEN nngScreen;
    private static AppMain.NNS_CLIP nngClip2d;
    private static AppMain.NNS_CLIP nngClip3d;
    private static ushort[] g_txb_min_filter;
    private static ushort[] g_txb_mag_filter;
    public static readonly AppMain.seq_func_delegate[] g_gm_ply_seq_init_tbl_son;
    public static readonly AppMain.seq_func_delegate[] g_gm_ply_seq_init_tbl_sp_son;
    public static readonly AppMain.seq_func_delegate[] g_gm_ply_seq_init_tbl_tr_son;
    public static readonly AppMain.seq_func_delegate[][] g_gm_ply_seq_init_tbl_list;
    public static readonly ushort[] gm_ply_seq_turn_dir_tbl;
    public static readonly ushort[] gm_ply_seq_turn_l_dir_tbl;
    public static readonly ushort[] gm_ply_seq_fall_turn_dir_tbl;
    public static readonly ushort[] gm_ply_seq_fall_turn_l_dir_tbl;
    private static bool gm_ply_seq_jump_call_se_jump;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_ss_time_obj_3d_list;
    private static readonly uint[] gm_gmk_ss_time_add_subtract;
    private static readonly int[] gm_gmk_ss_time_add_msg;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_seesaw_obj_3d_list;
    private static readonly short[][] tbl_gm_gmk_seesaw_rect;
    private static short[] seesaw_tilt;
    private static short[] seesaw_alive;
    private static AppMain.GMS_GMK_SEESAW_WORK control_right;
    private static ushort lock_seesaw_id;
    private static bool dm_manual_is_pause_maingame;
    private static uint dm_manual_draw_state;
    private static AppMain.AOS_TEXTURE[] dm_manual_tex;
    private static readonly AppMain.DMS_MANUAL_MGR dm_manual_mgr;
    private static AppMain.DMS_MANUAL_MGR dm_manual_mgr_p;
    private static AppMain.A2S_AMA_HEADER[] dm_manual_ama;
    private static AppMain.AMS_AMB_HEADER[] dm_manual_amb;
    public static readonly int[][] dm_manual_disp_act_cmn_tbl;
    private static readonly int[][] dm_manual_disp_act_lang_tbl;
    public static readonly uint[] g_dm_act_id_tbl_m;
    public static int GSD_KEY_DECIDE;
    public static int GSD_KEY_CANCEL;
    public static int GSD_KEY_UP;
    public static int GSD_KEY_DOWN;
    public static int GSD_KEY_LEFT;
    public static int GSD_KEY_RIGHT;
    private static AppMain.GSE_REGION g_gs_env_region;
    private static bool g_gs_env_is_asia;
    public static int g_gs_env_language;
    private static AppMain.GSE_DECIDE_KEY g_gs_env_decide_key;
    private static uint _obj_disp_rand;
    public static AppMain.OBS_OBJECT _g_obj;
    public static readonly short[] g_object_vib_tbl;
    public static readonly AppMain.AMS_DRAWSTATE g_obj_draw_3dnn_draw_state;
    private static AppMain.MTS_TASK_TCB obj_ptcb;
    private static AppMain.OBS_DATA_WORK[] obj_data_work_save;
    private static int obj_data_max_save;
    private static AppMain.GSF_TASK_PROCEDURE _ObjObjectExit;
    private static AppMain.GSF_TASK_PROCEDURE _ObjObjectMain;
    private static AppMain.OBS_OBJECT_WORK_Delegate3 _ObjObjectViewOutCheck;
    private static AppMain.GSF_TASK_PROCEDURE _objObjectDataReleaseCheck;
    private static AppMain.SimplePool<AppMain.NNS_MATRIX> nnCalcNode_mtx_pool;
    private static bool[] nnInitMaterialMotionObject_bTexOffsetMot;
    private static AppMain.AMS_IPHONE_ACCEL_DATA _am_iphone_accel_data;
    private static bool _am_is_back_key_pressed;
    public static bool back_key_is_pressed;
    private static AppMain.AMS_IPHONE_TP_CTRL_DATA[] _am_iphone_tp_ctrl_data;
    public static Vector2 posVector;
    public static bool[] touchMarked;
    private static Dictionary<int, AppMain.A2S_AMA_NODE> readAMAFile_nodeHash;
    private static Dictionary<int, AppMain.A2S_AMA_ACT> readAMAFile_actHash;
    private static Dictionary<int, AppMain.A2S_AMA_MTN> readAMAFile_mtnHash;
    private static Dictionary<int, AppMain.A2S_AMA_ANM> readAMAFile_anmHash;
    private static Dictionary<int, AppMain.A2S_AMA_ACM> readAMAFile_acmHash;
    private static Dictionary<int, AppMain.A2S_AMA_USR> readAMAFile_usrHash;
    private static Dictionary<int, AppMain.A2S_AMA_HIT> readAMAFile_hitHash;
    private static Dictionary<int, AppMain.A2S_SUB_TRS[]> readAMAFile_subtrsHash;
    private static Dictionary<int, AppMain.A2S_SUB_MTN[]> readAMAFile_submtnHash;
    private static Dictionary<int, AppMain.A2S_SUB_ANM[]> readAMAFile_subanmHash;
    private static Dictionary<int, AppMain.A2S_SUB_MAT[]> readAMAFile_submatHash;
    private static Dictionary<int, AppMain.A2S_SUB_ACM[]> readAMAFile_subacmHash;
    private static Dictionary<int, AppMain.A2S_SUB_USR[]> readAMAFile_subusrHash;
    private static Dictionary<int, AppMain.A2S_SUB_HIT[]> readAMAFile_subhitHash;
    private static Dictionary<int, AppMain.A2S_SUB_KEY[]> readAMAFile_subkeyHash;
    private static char[] readChars_name;
    public static int GMD_MAP_DRAW_BGM_TIMER;
    private static readonly int[] gm_map_prim_draw_tvx_alpha_set_z2;
    private static AppMain.OBS_ACTION3D_NN_WORK gm_map_obj3d;
    private static int gm_map_reg_obj3d_num;
    private static int gm_map_release_obj3d_num;
    private static AppMain.MTS_TASK_TCB gm_map_tcb;
    private static uint gm_map_draw_command_state;
    private static AppMain.AOS_TEXTURE gm_map_texture;
    private static AppMain.AMS_AMB_HEADER gm_map_model;
    private static bool gm_map_tex_load_init;
    private static int gm_map_tex_draw_count;
    private static AppMain.GMS_MAP_PRIM_DRAW_WORK[] gm_map_prim_draw_work;
    private static AppMain.GMS_MAP_PRIM_DRAW_TVX_UV_WORK gm_map_prim_draw_uv_work;
    private static uint[] gm_map_draw_size;
    private static int gm_map_draw_bgm_timer;
    private static uint gm_map_draw_margin_adjust;
    private static short[,] gm_map_block_check;
    private static int[] gm_map_add_tbl_use_no;
    private static AppMain.NNS_MATRIX[] gm_map_use_prim_mtx;
    private static uint gm_map_prim_draw_tvx_color;
    private static int[] gm_map_prim_draw_tvx_alpha_set;
    private static int[] gm_map_addmap_camera_tbl;
    private static float[] gm_map_addmap_pos_z_tbl;
    private static uint[] gm_map_addmap_command_state_tbl;
    private static uint[] gm_map_addmap_command_state_z1_act2_3_z3_act1_3_tbl;
    private static uint[] gm_map_addmap_command_state_zf_tbl;
    private static uint[,] gm_map_set_draw_size;
    private static float gmMapTransX;
    private static AppMain.NNS_VECTOR[] main_camera_pos;
    private static AppMain.NNS_MATRIX gmMapMain_mtx;
    public static int GMD_GMK_SCREW_EVE_FLAG_LEFT;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_breakland_obj_3d_list;
    private static readonly short[] gm_gmk_breakland_col_rect_tbl;
    private static readonly byte[] g_gm_breakland_col;
    private static sbyte[] tbl_breaklandquake;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_animal_obj_3d_list;
    private static readonly uint[][] g_gm_gmk_animal_type_id;
    private static readonly uint[][] g_gm_gmk_animal_obj_id;
    private static readonly AppMain.GMS_GMK_ANIMAL_PARAM[] g_gm_gmk_animal_speed_param;
    private static AppMain.Reference<AppMain.MTS_TASK_TCB> dm_titleop_load_tcb;
    private static AppMain.MTS_TASK_TCB dm_titleop_build_tcb;
    private static AppMain.MTS_TASK_TCB dm_titleop_flush_tcb;
    private static AppMain.MTS_TASK_TCB dm_titleop_mgr_tcb;
    private static bool dm_titleop_build_state;
    private static AppMain.NNS_RGBA_U8 dm_titleop_clear_color;
    private static AppMain.DMS_TITLEOP_ROCK_SETTING[][] dm_titleop_rock_setting;
    private static int[] dm_titleop_rock_setting_num;
    private static AppMain.AMS_FS[] dm_titleop_data;
    private static object[] dm_titleop_mapfar_data;
    private static AppMain.AOS_TEXTURE[] dm_titleop_aos_tex;
    private AppMain.OBS_ACTION3D_NN_WORK[] dm_titleop_obj_3d_list;
    private AppMain.OBS_ACTION3D_NN_WORK[] dm_titleop_water_obj_3d_list;
    private static int dm_titleop_scrl_x_ofst;
    private static AppMain.OBF_DRAW_USER_DT_FUNC _dmTitleOpPreDrawDT;
    private static AppMain.OBF_DRAW_USER_DT_FUNC _dmTitleOpFallShaderPreRenderUserFunc;
    public static int AKD_UTIL_FRAME60_TO_TIME_MAX_FRAME;
    public static string sFile;
    private static readonly AppMain.OBS_LOAD_INITIAL_WORK obj_load_initial_work;
    private static bool obj_load_initial_set_flag;
    private static readonly AppMain.OBS_COLLISION_OBJ[] _obj_collision_tbl;
    private static readonly AppMain.OBS_COLLISION_OBJ[] _obj_collision_tbl_nx;
    private static byte _obj_collision_num;
    private static byte _obj_collision_num_nx;
    private static AppMain.pFunc_Delegate _objGetColDataY;
    private static AppMain.pFunc_Delegate _objGetColDataX;
    private int nngSubMotIdx;
    public static readonly uint NND_DRAWOBJ_SHADER_USER_PROFILE0;
    public static readonly uint NND_DRAWOBJ_SHADER_USER_PROFILE1;
    public static readonly uint NND_DRAWOBJ_SHADER_USER_PROFILE2;
    public static readonly uint NND_DRAWOBJ_SHADER_USER_PROFILE3;
    public static readonly uint NND_DRAWOBJ_SHADER_USER_PROFILE4;
    public static readonly uint NND_DRAWOBJ_SHADER_USER_PROFILE5;
    public static readonly uint NND_DRAWOBJ_SHADER_USER_PROFILE6;
    public static readonly uint NND_DRAWOBJ_SHADER_USER_PROFILE7;
    public static readonly uint NND_DRAWOBJ_SHADER_USER_PROFILE8;
    public static readonly uint NND_DRAWOBJ_SHADER_USER_PROFILE9;
    public static readonly uint NND_DRAWOBJ_SHADER_USER_PROFILE10;
    public static readonly uint NND_DRAWOBJ_SHADER_USER_PROFILE11;
    public static readonly uint NND_DRAWOBJ_SHADER_USER_PROFILE12;
    public static readonly uint NND_DRAWOBJ_SHADER_USER_PROFILE13;
    public static readonly uint NND_DRAWOBJ_SHADER_USER_PROFILE14;
    public static readonly uint NND_DRAWOBJ_SHADER_USER_PROFILE15;
    public static readonly uint NND_DRAWOBJ_SHADER_USER_PROFILE_MASK;
    private static AppMain.NNS_MATERIALCALLBACK_FUNC nngMaterialCallbackFunc;
    private static AppMain.NNS_MATRIX _am_ef_worldViewMtx;
    private static AppMain.NNS_VECTOR _am_ef_camPos;
    private static AppMain.AMS_AME_ECB[] _am_ecb_buf;
    private static AppMain.AMS_AME_ECB[] _am_ecb_ref;
    private static AppMain.AMS_AME_ENTRY[] _am_entry_buf;
    private static AppMain.AMS_AME_ENTRY[] _am_entry_ref;
    private static AppMain.AMS_AME_RUNTIME[] _am_runtime_buf;
    private static AppMain.AMS_AME_RUNTIME[] _am_runtime_ref;
    private static AppMain.AMS_AME_RUNTIME_WORK[] _am_work_ref;
    private static AppMain.AMS_AME_RUNTIME_WORK[] _am_work_buf;
    private static int _am_enable_draw;
    private static float _am_unit_time;
    private static float _am_unit_frame;
    private static AppMain.AMS_AME_ECB _am_ecb_head;
    private static AppMain.AMS_AME_ECB _am_ecb_tail;
    private static int _am_ecb_alloc;
    private static int _am_ecb_free;
    private static int _am_entry_alloc;
    private static int _am_entry_free;
    private static int _am_runtime_alloc;
    private static int _am_runtime_free;
    private static int _am_work_alloc;
    private static int _am_work_free;
    private static AppMain.AMS_FRUSTUM _am_view_frustum;
    private static AppMain.AmeDelegateFunc[] _am_emitter_func;
    private static AppMain.AmeDelegateFunc[] _am_particle_func;
    private static AppMain.AmeFieldFunc[] _am_field_func;
    private static AppMain.NNS_VECTOR4D _amEffectCreate_vec;
    private static AppMain.AMS_AME_CREATE_PARAM _amEffect_create_param;
    private static AppMain.NNS_VECTOR4D _amEffect_position;
    private static AppMain.NNS_VECTOR4D _amEffect_velocity;
    private static AppMain.NNS_VECTOR4D _amEffect_direction;
    private static AppMain.NNS_VECTOR4D _amEffect_vel;
    private static AppMain.NNS_VECTOR4D _amEffect_rot_ax;
    private static AppMain.NNS_MATRIX _amEffect_mtx;
    private static AppMain.NNS_MATRIX _amUpdateCircle_mtx;
    private static AppMain.NNS_VECTOR4D _amDrawLine_offset;
    private static AppMain.NNS_VECTOR4D _amDrawLine_eye;
    private static AppMain.NNS_VECTOR4D _amDrawLine_pos0;
    private static AppMain.NNS_VECTOR4D _amDrawLine_pos1;
    private static AppMain.NNS_VECTOR4D _amDrawLine_vel;
    private static AppMain.NNS_VECTOR4D _amDrawLine_cross;
    private static AppMain.MTS_TASK_TCB gm_ply_efct_trail_sys_tcb;
    private static readonly AppMain.GMS_PLY_EFCT_TRAIL_COLOR gm_ply_efct_trail_color_son;
    private static readonly AppMain.GMS_PLY_EFCT_TRAIL_COLOR gm_ply_efct_trail_color_sson;
    private static readonly AppMain.GMS_PLY_EFCT_TRAIL_SETTING[] gm_ply_efct_trail_setting;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_ss_emerald_obj_3d_list;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_ss_1up_obj_3d_list;
    private static AppMain.GMS_EFFECT_3DES_WORK gm_gmk_ss_emerald_effct;
    private static readonly AppMain.GMS_GMK_PULLEY_MANAGER gm_gmk_pulley_manager;
    private static readonly AppMain.NNS_VECTOR[][] gm_gmk_pulley_pos;
    private static readonly AppMain.NNS_TEXCOORD[][] gm_gmk_pulley_tex;
    public static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_pulley_obj_3d_list;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_presswall_obj_3d_list;
    private static AppMain.GMS_GMK_PWALL_WORK pwall;
    private static readonly int[] wall_vib;
    private static uint[] tbl_gmk_z4PressWall_model;
    private static int[] tbl_gmk_z4PressWall_ofst_z;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_popsteam_obj_3d_list;
    private static readonly short[][] tbl_gm_gmk_upbumper_rect;
    private static ushort[][] tbl_popsteam_effct;
    private static readonly int[][] tbl_popsteam_model_id;
    private static readonly int[] tbl_popsteam_pipe_model_id;
    private static sbyte[][] tbl_psteam_viv;
    private static sbyte[][][] tbl_steam_efct_ofst;
    private static int[][] tbl_popsteam_pipe_off;
    private static int[][] tbl_popsteam_timer_off;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_gmk_item_obj_3d_list;
    private static uint[] gm_gmk_item_matrial_user_data_tbl;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_ene_gardon_obj_3d_list;
    private static AppMain.OBS_ACTION3D_NN_WORK[] gm_ene_buku_obj_3d_list;
    #endregion

    private static uint getRand()
    {
        AppMain.rand_result = AppMain.rand_result % 13U * 330382099U + AppMain.rand_result / 13U;
        return AppMain.rand_result;
    }

    public void EvBuyScreenStart(object arg)
    {
        Upsell.launchUpsellScreen((AppMain.DMS_BUY_SCR_WORK)null);
    }

    public static void MTM_ASSERT(int _e)
    {
    }

    public static void MTM_ASSERT(bool _e)
    {
    }

    public static void MTM_ASSERT(object _e)
    {
    }

    public static void MTM_ASSERT(uint _e)
    {
    }

    public static void UNREFERENCED_PARAMETER(object obj)
    {
    }

    public static int DmBuyScreenGetResult(AppMain.DMS_BUY_SCR_WORK work)
    {
        return work.result[0];
    }

    public static int memcmp(byte[] block1, byte[] block2)
    {
        if (block1.Length != block2.Length)
            return block1.Length - block2.Length;
        int length = block2.Length;
        for (int index = 0; index < length; ++index)
        {
            if ((int)block1[index] != (int)block2[index])
                return (int)block1[index] - (int)block2[index];
        }
        return 0;
    }

    public AppMain(Game game, GraphicsDeviceManager graphics, GraphicsDevice graphicsDevice)
    {
        AppMain.m_game = game;
        AppMain.m_graphics = graphics;
        AppMain.m_graphicsDevice = graphicsDevice;
        AppMain.m_manager = game.Content;
        AppMain._instance = this;
        AppMain.SYS_EVT_DATA[] sysEvtDataArray1 = new AppMain.SYS_EVT_DATA[15];
        sysEvtDataArray1[0] = new AppMain.SYS_EVT_DATA((AppMain.SYS_EVT_DATA._init_func_)null, (AppMain.SYS_EVT_DATA._exit_func_)null, (AppMain.SYS_EVT_DATA._reset_func_)null, (AppMain.SYS_EVT_DATA._init_sys_func_)null, (AppMain.SYS_EVT_DATA._exit_sys_func_)null, new short[8], 0U);
        sysEvtDataArray1[1] = new AppMain.SYS_EVT_DATA(new AppMain.SYS_EVT_DATA._init_func_(AppMain.GsMainSysSystemInitEvent), (AppMain.SYS_EVT_DATA._exit_func_)null, (AppMain.SYS_EVT_DATA._reset_func_)null, (AppMain.SYS_EVT_DATA._init_sys_func_)null, (AppMain.SYS_EVT_DATA._exit_sys_func_)null, new short[8]
        {
      (short) 2,
      (short) 2,
      (short) 3,
      (short) 0,
      (short) 0,
      (short) 0,
      (short) 0,
      (short) 0
        }, 0U);
        AppMain.SYS_EVT_DATA[] sysEvtDataArray2 = sysEvtDataArray1;
        AppMain.SYS_EVT_DATA._init_func_ f1_1 = new AppMain.SYS_EVT_DATA._init_func_(this.DmLogoSegaInit);
        short[] numArray1 = new short[8];
        numArray1[0] = (short)13;
        short[] ar1 = numArray1;
        AppMain.SYS_EVT_DATA sysEvtData1 = new AppMain.SYS_EVT_DATA(f1_1, (AppMain.SYS_EVT_DATA._exit_func_)null, (AppMain.SYS_EVT_DATA._reset_func_)null, (AppMain.SYS_EVT_DATA._init_sys_func_)null, (AppMain.SYS_EVT_DATA._exit_sys_func_)null, ar1, 0U);
        sysEvtDataArray2[2] = sysEvtData1;
        sysEvtDataArray1[3] = new AppMain.SYS_EVT_DATA(new AppMain.SYS_EVT_DATA._init_func_(this.DmTitleStart), (AppMain.SYS_EVT_DATA._exit_func_)null, (AppMain.SYS_EVT_DATA._reset_func_)null, (AppMain.SYS_EVT_DATA._init_sys_func_)null, (AppMain.SYS_EVT_DATA._exit_sys_func_)null, new short[8]
        {
      (short) 6,
      (short) 5,
      (short) 8,
      (short) 7,
      (short) 2,
      (short) 3,
      (short) 0,
      (short) 0
        }, 0U);
        sysEvtDataArray1[4] = new AppMain.SYS_EVT_DATA(new AppMain.SYS_EVT_DATA._init_func_(this.DmMainMenuStart), (AppMain.SYS_EVT_DATA._exit_func_)null, (AppMain.SYS_EVT_DATA._reset_func_)null, (AppMain.SYS_EVT_DATA._init_sys_func_)null, (AppMain.SYS_EVT_DATA._exit_sys_func_)null, new short[8]
        {
      (short) 6,
      (short) 5,
      (short) 8,
      (short) 7,
      (short) 2,
      (short) 3,
      (short) 0,
      (short) 0
        }, 0U);
        sysEvtDataArray1[5] = new AppMain.SYS_EVT_DATA(new AppMain.SYS_EVT_DATA._init_func_(this.DmStgSlctStart), (AppMain.SYS_EVT_DATA._exit_func_)null, (AppMain.SYS_EVT_DATA._reset_func_)null, (AppMain.SYS_EVT_DATA._init_sys_func_)null, (AppMain.SYS_EVT_DATA._exit_sys_func_)null, new short[8]
        {
      (short) 6,
      (short) 11,
      (short) 7,
      (short) 4,
      (short) 3,
      (short) 0,
      (short) 0,
      (short) 0
        }, 0U);
        sysEvtDataArray1[6] = new AppMain.SYS_EVT_DATA(new AppMain.SYS_EVT_DATA._init_func_(this.GmMainInit), (AppMain.SYS_EVT_DATA._exit_func_)null, (AppMain.SYS_EVT_DATA._reset_func_)null, (AppMain.SYS_EVT_DATA._init_sys_func_)null, (AppMain.SYS_EVT_DATA._exit_sys_func_)null, new short[9]
        {
      (short) 5,
      (short) 6,
      (short) 9,
      (short) 11,
      (short) 4,
      (short) 3,
      (short) 14,
      (short) 0,
      (short) 0
        }, 0U);
        AppMain.SYS_EVT_DATA[] sysEvtDataArray3 = sysEvtDataArray1;
        AppMain.SYS_EVT_DATA._init_func_ f1_2 = new AppMain.SYS_EVT_DATA._init_func_(this.DbgDummyInitResult);
        short[] numArray2 = new short[8];
        numArray2[0] = (short)2;
        short[] ar2 = numArray2;
        AppMain.SYS_EVT_DATA sysEvtData2 = new AppMain.SYS_EVT_DATA(f1_2, (AppMain.SYS_EVT_DATA._exit_func_)null, (AppMain.SYS_EVT_DATA._reset_func_)null, (AppMain.SYS_EVT_DATA._init_sys_func_)null, (AppMain.SYS_EVT_DATA._exit_sys_func_)null, ar2, 0U);
        sysEvtDataArray3[7] = sysEvtData2;
        AppMain.SYS_EVT_DATA[] sysEvtDataArray4 = sysEvtDataArray1;
        AppMain.SYS_EVT_DATA._init_func_ f1_3 = new AppMain.SYS_EVT_DATA._init_func_(AppMain.DmOptionStart);
        short[] numArray3 = new short[8];
        numArray3[0] = (short)10;
        numArray3[1] = (short)3;
        short[] ar3 = numArray3;
        AppMain.SYS_EVT_DATA sysEvtData3 = new AppMain.SYS_EVT_DATA(f1_3, (AppMain.SYS_EVT_DATA._exit_func_)null, (AppMain.SYS_EVT_DATA._reset_func_)null, (AppMain.SYS_EVT_DATA._init_sys_func_)null, (AppMain.SYS_EVT_DATA._exit_sys_func_)null, ar3, 0U);
        sysEvtDataArray4[8] = sysEvtData3;
        sysEvtDataArray1[9] = new AppMain.SYS_EVT_DATA(new AppMain.SYS_EVT_DATA._init_func_(this.GmMainInit), (AppMain.SYS_EVT_DATA._exit_func_)null, (AppMain.SYS_EVT_DATA._reset_func_)null, (AppMain.SYS_EVT_DATA._init_sys_func_)null, (AppMain.SYS_EVT_DATA._exit_sys_func_)null, new short[8]
        {
      (short) 10,
      (short) 3,
      (short) 10,
      (short) 10,
      (short) 4,
      (short) 3,
      (short) 10,
      (short) 0
        }, 0U);
        AppMain.SYS_EVT_DATA[] sysEvtDataArray5 = sysEvtDataArray1;
        AppMain.SYS_EVT_DATA._init_func_ f1_4 = new AppMain.SYS_EVT_DATA._init_func_(AppMain.DmStaffRollStart);
        short[] numArray4 = new short[8];
        numArray4[0] = (short)4;
        numArray4[1] = (short)3;
        short[] ar4 = numArray4;
        AppMain.SYS_EVT_DATA sysEvtData4 = new AppMain.SYS_EVT_DATA(f1_4, (AppMain.SYS_EVT_DATA._exit_func_)null, (AppMain.SYS_EVT_DATA._reset_func_)null, (AppMain.SYS_EVT_DATA._init_sys_func_)null, (AppMain.SYS_EVT_DATA._exit_sys_func_)null, ar4, 0U);
        sysEvtDataArray5[10] = sysEvtData4;
        AppMain.SYS_EVT_DATA[] sysEvtDataArray6 = sysEvtDataArray1;
        AppMain.SYS_EVT_DATA._init_func_ f1_5 = new AppMain.SYS_EVT_DATA._init_func_(AppMain.GmSpStageBranchInit);
        short[] numArray5 = new short[8];
        numArray5[0] = (short)6;
        short[] ar5 = numArray5;
        AppMain.SYS_EVT_DATA sysEvtData5 = new AppMain.SYS_EVT_DATA(f1_5, (AppMain.SYS_EVT_DATA._exit_func_)null, (AppMain.SYS_EVT_DATA._reset_func_)null, (AppMain.SYS_EVT_DATA._init_sys_func_)null, (AppMain.SYS_EVT_DATA._exit_sys_func_)null, ar5, 0U);
        sysEvtDataArray6[11] = sysEvtData5;
        AppMain.SYS_EVT_DATA[] sysEvtDataArray7 = sysEvtDataArray1;
        AppMain.SYS_EVT_DATA._init_func_ f1_6 = new AppMain.SYS_EVT_DATA._init_func_(this.EvBuyScreenStart);
        short[] numArray6 = new short[8];
        numArray6[0] = (short)5;
        numArray6[1] = (short)4;
        short[] ar6 = numArray6;
        AppMain.SYS_EVT_DATA sysEvtData6 = new AppMain.SYS_EVT_DATA(f1_6, (AppMain.SYS_EVT_DATA._exit_func_)null, (AppMain.SYS_EVT_DATA._reset_func_)null, (AppMain.SYS_EVT_DATA._init_sys_func_)null, (AppMain.SYS_EVT_DATA._exit_sys_func_)null, ar6, 0U);
        sysEvtDataArray7[12] = sysEvtData6;
        AppMain.SYS_EVT_DATA[] sysEvtDataArray8 = sysEvtDataArray1;
        AppMain.SYS_EVT_DATA._init_func_ f1_7 = new AppMain.SYS_EVT_DATA._init_func_(this.DmLogoSonicInit);
        short[] numArray7 = new short[8];
        numArray7[0] = (short)3;
        short[] ar7 = numArray7;
        AppMain.SYS_EVT_DATA sysEvtData7 = new AppMain.SYS_EVT_DATA(f1_7, (AppMain.SYS_EVT_DATA._exit_func_)null, (AppMain.SYS_EVT_DATA._reset_func_)null, (AppMain.SYS_EVT_DATA._init_sys_func_)null, (AppMain.SYS_EVT_DATA._exit_sys_func_)null, ar7, 0U);
        sysEvtDataArray8[13] = sysEvtData7;
        AppMain.SYS_EVT_DATA[] sysEvtDataArray9 = sysEvtDataArray1;
        AppMain.SYS_EVT_DATA._init_func_ f1_8 = new AppMain.SYS_EVT_DATA._init_func_(this.DmMovieInit);
        short[] numArray8 = new short[8];
        numArray8[0] = (short)12;
        numArray8[1] = (short)4;
        short[] ar8 = numArray8;
        AppMain.SYS_EVT_DATA sysEvtData8 = new AppMain.SYS_EVT_DATA(f1_8, (AppMain.SYS_EVT_DATA._exit_func_)null, (AppMain.SYS_EVT_DATA._reset_func_)null, (AppMain.SYS_EVT_DATA._init_sys_func_)null, (AppMain.SYS_EVT_DATA._exit_sys_func_)null, ar8, 0U);
        sysEvtDataArray9[14] = sysEvtData8;
        AppMain._gs_evt_data = sysEvtDataArray1;
    }

    public int AppInit(string pDocPath)
    {
        // AppMain.store = IsolatedStorageFile.GetUserStoreForApplication();
        AppMain.storePath = pDocPath;
        AppMain.presentationParameters = AppMain.m_graphicsDevice.PresentationParameters;
        this.amIPhoneInitNN(presentationParameters);
        this.init(pDocPath);
        AppMain.nnCalcSinCosTable();
        return 0;
    }

    public int AppMainLoop()
    {
        int num1 = 0;
        int amSampleCount = AppMain._am_sample_count;
        AppMain.AOS_SPRITE_Pool.ReleaseUsedObjects();
        AppMain.objDrawResetCache();
        AppMain.amDrawResetCache();
        AppMain.amFsExecuteBackgroundRead();
        AppMain.amDrawBeginScene();
        if (this.amDrawBegin())
        {
            if (!AppMain._am_sample_is_suspended && AppMain._am_sample_suspended_count > 0)
                --AppMain._am_sample_suspended_count;
            if (AppMain._am_sample_suspended_count <= 0)
            {
                AppMain.GsMainSysSetSuspendedFlag(AppMain._am_sample_end_suspended);
                if (AppMain._am_sample_end_suspended)
                    AppMain._am_sample_end_suspended = false;
                int num2 = amSampleCount - 1;
                if (num2 < 0)
                    num2 = 0;
                for (int index = 0; index < amSampleCount; ++index)
                {
                    AppMain._am_sample_draw_enable = index == num2;
                    if (AppMain.isForeground)
                    {
                        AppMain.amKeyGetData();
                        AoPad.AoPadUpdate();
                    }

                    this.amTpExecute();
                    AppMain.amTaskExecute();
                    AppMain.amDrawCloseDisplayList();
                }
                AppMain.amDrawCloseDisplayList();
                AppMain.amDrawGetDisplayList();
            }
            else
                AppMain._am_sample_end_suspended = true;
            AppMain.amDrawExecRegist();
            AppMain.amDrawExecCommand(16777216U);
            AppMain.amDrawExecute();
            AppMain.amDrawDisplay();
            AppMain.setBackKeyRequest(false);
            OpenGL.glDepthMask(true);
            AppMain.amDrawEnd();
            OpenGL.glFlush();
            XBOXLive.showUpdateMB();
        }
        return num1;
    }

    public static int AppFinish()
    {
        AppMain.finish();
        return 0;
    }

    public void AppSuspend()
    {
    }

    private int init(string pDocPath)
    {
        AppMain.initNN();
        AppMain.nnSetUpMatrixStack(ref AppMain._am_default_stack, 32U);
        AppMain.amTaskInitSystem();
        AppMain.amDrawCreateBuffer(1024, 1024, 3145728);
        AppMain.amDrawInitDisplayList();
        AppMain.amPadInit();
        this.amTpInit();
        AppMain.GsInitUser();
        return 0;
    }

    private void cri_proc(int arg)
    {
        AppMain.AMS_ALARM alarm = (AppMain.AMS_ALARM)null;
        this.amAlarmCreateTimer(alarm);
        this.amAlarmSetTimer(alarm, 16666U);
        while (AppMain.amThreadCheckExit(AppMain._am_cri_thread) == 0)
            this.amAlarmWaitTimer(ref alarm);
        AppMain.amAlarmDelete(alarm);
        AppMain.amThreadQuit(AppMain._am_cri_thread);
    }

    public static void finish()
    {
        AppMain.amDrawExitDisplayList();
        AppMain.amDrawDeleteBuffer();
        AppMain.amPadExit();
        AppMain.amTaskExitSystem();
        AppMain.exitNN();
        AppMain.m_game.Exit();
    }

    public static void initNN()
    {
    }

    public static void exitNN()
    {
        AppMain.amIPhoneExitNN();
    }

    private void GsMemFileInit()
    {
    }

    private void GsMemFileExit()
    {
    }

    private byte[] GsMemFileGetWindowTextureAtypeAmb()
    {
        return AppMain.g_gs_bin_win_a_amb;
    }





    private static void amMemFreeSystem(object obj)
    {
        obj = (object)null;
    }

    private static void amAssert(object p)
    {
    }

    private static void amAssert(bool p)
    {
    }

    private static void amAssert(int p)
    {
    }

    public static void mppAssertNotImpl()
    {
    }

    public static void mppTemporaryDisabledAssertCurrentSession()
    {
    }

    public static void mppSoundNotImplAssert()
    {
    }

    public static void mppTemporaryDisabledAssert()
    {
    }

    public static void mppOpenGLFeatureNotImplAssert()
    {
    }

    private static void NNM_ASSERT(int iCond, string sText)
    {
    }

    private static void NNM_ASSERT(uint iCond, string sText)
    {
    }

    private static void NNM_ASSERT(bool iCond, string sText)
    {
    }

    public static CArray2<float> _SubrtactArray2(CArray2<float> l, CArray2<float> r)
    {
        return CArray2<float>.initializer(l.x - r.x, l.y - r.y);
    }


    public void DbgDummyInitResult(object arg)
    {
    }

    private static int arrayof(Array pArray)
    {
        return pArray.Length;
    }

    public static T[] New<T>(uint n) where T : new()
    {
        return AppMain.New<T>((int)n);
    }

    public static T[][] New<T>(uint m, uint n) where T : new()
    {
        return AppMain.New<T>((int)m, (int)n);
    }

    public static T[] New<T>(int n) where T : new()
    {
        T[] objArray = new T[n];
        if (!typeof(T).IsValueType)
        {
            for (int index = 0; index < n; ++index)
                objArray[index] = new T();
        }
        return objArray;
    }

    public static T[][] New<T>(int m, int n) where T : new()
    {
        bool flag = !typeof(T).IsValueType;
        T[][] objArray = new T[m][];
        for (int index1 = 0; index1 < m; ++index1)
        {
            objArray[index1] = new T[n];
            if (flag)
            {
                for (int index2 = 0; index2 < n; ++index2)
                    objArray[index1][index2] = new T();
            }
        }
        return objArray;
    }

    public static void ClearArray<T>(T[] data) where T : AppMain.IClearable
    {
        int index = 0;
        int length = data.Length;
        AppMain.ClearArray<T>(data, index, length);
    }

    public static void ClearArray<T>(T[] data, int index, int length) where T : AppMain.IClearable
    {
        for (int index1 = index; index1 < length; ++index1)
        {
            if ((object)data[index1] != null)
                data[index1].Clear();
        }
    }

    public static void amSystemLog(string s)
    {
    }

    #region data_types

    public class ACHIEVEMENT_INFO
    {
        public string id;
        public string name;
        public string description;
        public int cost;

        public ACHIEVEMENT_INFO(string id, string name, string desc, int cost)
        {
            this.id = id;
            this.name = name;
            this.description = desc;
            this.cost = cost;
        }
    }

    public enum OBE_BLOCK_COL_ID
    {
        OBD_BLOCK_COL_EMPTY,
        OBD_BLOCK_COL_FILL,
        OBD_BLOCK_COL_FILL_THROUGH,
        OBD_BLOCK_COL_ID_MAX,
    }

    public delegate int _obj_block_collision_func_delegate(AppMain.OBS_COL_CHK_DATA data);

    public class OBS_COL_CHK_DATA : AppMain.IClearable
    {
        public int pos_x;
        public int pos_y;
        public ushort[] dir;
        public uint[] attr;
        public ushort flag;
        public ushort vec;

        public AppMain.OBS_COL_CHK_DATA Assign(AppMain.OBS_COL_CHK_DATA data)
        {
            if (this != data)
            {
                this.pos_x = data.pos_x;
                this.pos_y = data.pos_y;
                this.dir = data.dir;
                this.dir = data.dir;
                this.attr = data.attr;
                this.attr = data.attr;
                this.flag = data.flag;
                this.vec = data.vec;
            }
            return this;
        }

        public void Clear()
        {
            this.pos_x = 0;
            this.pos_y = 0;
            this.dir = (ushort[])null;
            this.attr = (uint[])null;
            this.flag = (ushort)0;
            this.vec = (ushort)0;
        }
    }

    private static class nnnodestatuslist
    {
        public static uint nnsNSFlag = 0;
        public static AppMain.NNS_MATRIX[] nnsMtxPal;
        public static uint[] nnsNodeStatList;
        public static AppMain.NNS_NODE[] nnsNodeList;
    }

    public class NNS_MATRIX : AppMain.IClearable
    {
        public float M00;
        public float M01;
        public float M02;
        public float M03;
        public float M10;
        public float M11;
        public float M12;
        public float M13;
        public float M20;
        public float M21;
        public float M22;
        public float M23;
        public float M30;
        public float M31;
        public float M32;
        public float M33;

        public float M(int row, int col)
        {
            switch (row)
            {
                case 0:
                    switch (col)
                    {
                        case 0:
                            return this.M00;
                        case 1:
                            return this.M01;
                        case 2:
                            return this.M02;
                        default:
                            return this.M03;
                    }
                case 1:
                    switch (col)
                    {
                        case 0:
                            return this.M10;
                        case 1:
                            return this.M11;
                        case 2:
                            return this.M12;
                        default:
                            return this.M13;
                    }
                case 2:
                    switch (col)
                    {
                        case 0:
                            return this.M20;
                        case 1:
                            return this.M21;
                        case 2:
                            return this.M22;
                        default:
                            return this.M23;
                    }
                default:
                    switch (col)
                    {
                        case 0:
                            return this.M30;
                        case 1:
                            return this.M31;
                        case 2:
                            return this.M32;
                        default:
                            return this.M33;
                    }
            }
        }

        public void SetM(int row, int col, float value)
        {
            switch (row)
            {
                case 0:
                    switch (col)
                    {
                        case 0:
                            this.M00 = value;
                            return;
                        case 1:
                            this.M01 = value;
                            return;
                        case 2:
                            this.M02 = value;
                            return;
                        default:
                            this.M03 = value;
                            return;
                    }
                case 1:
                    switch (col)
                    {
                        case 0:
                            this.M10 = value;
                            return;
                        case 1:
                            this.M11 = value;
                            return;
                        case 2:
                            this.M12 = value;
                            return;
                        default:
                            this.M13 = value;
                            return;
                    }
                case 2:
                    switch (col)
                    {
                        case 0:
                            this.M20 = value;
                            return;
                        case 1:
                            this.M21 = value;
                            return;
                        case 2:
                            this.M22 = value;
                            return;
                        default:
                            this.M23 = value;
                            return;
                    }
                default:
                    switch (col)
                    {
                        case 0:
                            this.M30 = value;
                            return;
                        case 1:
                            this.M31 = value;
                            return;
                        case 2:
                            this.M32 = value;
                            return;
                        default:
                            this.M33 = value;
                            return;
                    }
            }
        }

        public void Clear()
        {
            this.M00 = this.M01 = this.M02 = this.M03 = this.M10 = this.M11 = this.M12 = this.M13 = this.M20 = this.M21 = this.M22 = this.M23 = this.M30 = this.M31 = this.M32 = this.M33 = 0.0f;
        }

        public static AppMain.NNS_MATRIX CreateIdentity()
        {
            AppMain.NNS_MATRIX nnsMatrix = AppMain.GlobalPool<AppMain.NNS_MATRIX>.Alloc();
            nnsMatrix.M00 = 1f;
            nnsMatrix.M01 = 0.0f;
            nnsMatrix.M02 = 0.0f;
            nnsMatrix.M03 = 0.0f;
            nnsMatrix.M10 = 0.0f;
            nnsMatrix.M11 = 1f;
            nnsMatrix.M12 = 0.0f;
            nnsMatrix.M13 = 0.0f;
            nnsMatrix.M20 = 0.0f;
            nnsMatrix.M21 = 0.0f;
            nnsMatrix.M22 = 1f;
            nnsMatrix.M23 = 0.0f;
            nnsMatrix.M30 = 0.0f;
            nnsMatrix.M31 = 0.0f;
            nnsMatrix.M32 = 0.0f;
            nnsMatrix.M33 = 1f;
            return nnsMatrix;
        }

        public NNS_MATRIX()
        {
        }

        public NNS_MATRIX(AppMain.NNS_MATRIX matrix)
        {
            this.Assign(matrix);
        }

        public AppMain.NNS_MATRIX Assign(ref AppMain.SNNS_MATRIX matrix)
        {
            this.M00 = matrix.M00;
            this.M01 = matrix.M01;
            this.M02 = matrix.M02;
            this.M03 = matrix.M03;
            this.M10 = matrix.M10;
            this.M11 = matrix.M11;
            this.M12 = matrix.M12;
            this.M13 = matrix.M13;
            this.M20 = matrix.M20;
            this.M21 = matrix.M21;
            this.M22 = matrix.M22;
            this.M23 = matrix.M23;
            this.M30 = matrix.M30;
            this.M31 = matrix.M31;
            this.M32 = matrix.M32;
            this.M33 = matrix.M33;
            return this;
        }

        public AppMain.NNS_MATRIX Assign(AppMain.NNS_MATRIX matrix)
        {
            this.M00 = matrix.M00;
            this.M01 = matrix.M01;
            this.M02 = matrix.M02;
            this.M03 = matrix.M03;
            this.M10 = matrix.M10;
            this.M11 = matrix.M11;
            this.M12 = matrix.M12;
            this.M13 = matrix.M13;
            this.M20 = matrix.M20;
            this.M21 = matrix.M21;
            this.M22 = matrix.M22;
            this.M23 = matrix.M23;
            this.M30 = matrix.M30;
            this.M31 = matrix.M31;
            this.M32 = matrix.M32;
            this.M33 = matrix.M33;
            return this;
        }

        public static explicit operator Matrix(AppMain.NNS_MATRIX m)
        {
            return new Matrix(m.M00, m.M10, m.M20, m.M30, m.M01, m.M11, m.M21, m.M31, m.M02, m.M12, m.M22, m.M32, m.M03, m.M13, m.M23, m.M33);
        }
    }

    public class NNS_NODE
    {
        public readonly AppMain.NNS_VECTOR Translation = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_VECTOR Scaling = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_MATRIX InvInitMtx = AppMain.GlobalPool<AppMain.NNS_MATRIX>.Alloc();
        public readonly AppMain.NNS_VECTOR Center = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public uint fType;
        public short iMatrix;
        public short iParent;
        public short iChild;
        public short iSibling;
        public AppMain.NNS_ROTATE_A32 Rotation;
        public float Radius;
        public uint User;
        public float SIIKBoneLength;
        public float BoundingBoxY;
        public float BoundingBoxZ;

        public float BoundingBoxX
        {
            get
            {
                return this.SIIKBoneLength;
            }
            set
            {
                this.SIIKBoneLength = value;
            }
        }

        public NNS_NODE()
        {
        }

        public NNS_NODE(AppMain.NNS_NODE node)
        {
            this.fType = node.fType;
            this.iMatrix = node.iMatrix;
            this.iParent = node.iParent;
            this.iChild = node.iChild;
            this.iSibling = node.iSibling;
            this.Translation.Assign(node.Translation);
            this.Rotation = node.Rotation;
            this.Scaling.Assign(node.Scaling);
            this.InvInitMtx.Assign(node.InvInitMtx);
            this.Center.Assign(node.Center);
            this.Radius = node.Radius;
            this.User = node.User;
            this.SIIKBoneLength = node.SIIKBoneLength;
            this.BoundingBoxY = node.BoundingBoxY;
            this.BoundingBoxZ = node.BoundingBoxZ;
        }

        public AppMain.NNS_NODE Assign(AppMain.NNS_NODE node)
        {
            if (this != node)
            {
                this.fType = node.fType;
                this.iMatrix = node.iMatrix;
                this.iParent = node.iParent;
                this.iChild = node.iChild;
                this.iSibling = node.iSibling;
                this.Translation.Assign(node.Translation);
                this.Rotation = node.Rotation;
                this.Scaling.Assign(node.Scaling);
                this.InvInitMtx.Assign(node.InvInitMtx);
                this.Center.Assign(node.Center);
                this.Radius = node.Radius;
                this.User = node.User;
                this.SIIKBoneLength = node.SIIKBoneLength;
                this.BoundingBoxY = node.BoundingBoxY;
                this.BoundingBoxZ = node.BoundingBoxZ;
            }
            return this;
        }

        public static AppMain.NNS_NODE Read(BinaryReader reader, long data0Pos)
        {
            return new AppMain.NNS_NODE()
            {
                fType = reader.ReadUInt32(),
                iMatrix = reader.ReadInt16(),
                iParent = reader.ReadInt16(),
                iChild = reader.ReadInt16(),
                iSibling = reader.ReadInt16(),
                Translation = {
          x = reader.ReadSingle(),
          y = reader.ReadSingle(),
          z = reader.ReadSingle()
        },
                Rotation = {
          x = reader.ReadInt32(),
          y = reader.ReadInt32(),
          z = reader.ReadInt32()
        },
                Scaling = {
          x = reader.ReadSingle(),
          y = reader.ReadSingle(),
          z = reader.ReadSingle()
        },
                InvInitMtx = {
          M00 = reader.ReadSingle(),
          M10 = reader.ReadSingle(),
          M20 = reader.ReadSingle(),
          M30 = reader.ReadSingle(),
          M01 = reader.ReadSingle(),
          M11 = reader.ReadSingle(),
          M21 = reader.ReadSingle(),
          M31 = reader.ReadSingle(),
          M02 = reader.ReadSingle(),
          M12 = reader.ReadSingle(),
          M22 = reader.ReadSingle(),
          M32 = reader.ReadSingle(),
          M03 = reader.ReadSingle(),
          M13 = reader.ReadSingle(),
          M23 = reader.ReadSingle(),
          M33 = reader.ReadSingle()
        },
                Center = {
          x = reader.ReadSingle(),
          y = reader.ReadSingle(),
          z = reader.ReadSingle()
        },
                Radius = reader.ReadSingle(),
                User = reader.ReadUInt32(),
                BoundingBoxX = reader.ReadSingle(),
                BoundingBoxY = reader.ReadSingle(),
                BoundingBoxZ = reader.ReadSingle()
            };
        }
    }

    public class NNS_VECTOR : AppMain.IClearable
    {
        public float x;
        public float y;
        public float z;

        public NNS_VECTOR()
        {
        }

        public NNS_VECTOR(float _x, float _y, float _z)
        {
            this.x = _x;
            this.y = _y;
            this.z = _z;
        }

        public AppMain.NNS_VECTOR Assign(AppMain.NNS_VECTOR vec)
        {
            this.x = vec.x;
            this.y = vec.y;
            this.z = vec.z;
            return this;
        }

        public AppMain.NNS_VECTOR Assign(ref AppMain.SNNS_VECTOR vec)
        {
            this.x = vec.x;
            this.y = vec.y;
            this.z = vec.z;
            return this;
        }

        public AppMain.NNS_VECTOR Assign(ref AppMain.SNNS_VECTOR4D vec)
        {
            this.x = vec.x;
            this.y = vec.y;
            this.z = vec.z;
            return this;
        }

        public void Clear()
        {
            this.x = this.y = this.z = 0.0f;
        }

        public static explicit operator OpenGL.glArray4f(AppMain.NNS_VECTOR v)
        {
            return new OpenGL.glArray4f(v.x, v.y, v.z, 0.0f);
        }

        public static explicit operator float[] (AppMain.NNS_VECTOR v)
        {
            return new float[3] { v.x, v.y, v.z };
        }

        internal AppMain.NNS_VECTOR Assign(AppMain.VecFx32 vec)
        {
            this.x = (float)vec.x;
            this.y = (float)vec.y;
            this.z = (float)vec.z;
            return this;
        }

        public static AppMain.NNS_VECTOR Read(BinaryReader reader)
        {
            AppMain.NNS_VECTOR nnsVector = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
            nnsVector.x = reader.ReadSingle();
            nnsVector.y = reader.ReadSingle();
            nnsVector.z = reader.ReadSingle();
            return nnsVector;
        }
    }

    public struct NNS_ROTATE_A32
    {
        public int x;
        public int y;
        public int z;

        public NNS_ROTATE_A32(int x, int y, int z)
        {
            this.x = x;
            this.y = y;
            this.z = z;
        }

        public static explicit operator int[] (AppMain.NNS_ROTATE_A32 rv)
        {
            return new int[3] { rv.x, rv.y, rv.z };
        }

        public static explicit operator AppMain.NNS_ROTATE_A32(int[] array)
        {
            return new AppMain.NNS_ROTATE_A32()
            {
                x = array[0],
                y = array[1],
                z = array[2]
            };
        }
    }

    public class GlobalPool<T> where T : class, AppMain.IClearable, new()
    {
        private static List<T> cache_ = new List<T>();

        public static T Alloc()
        {
            T obj;
            if (AppMain.GlobalPool<T>.cache_.Count > 0)
            {
                int index = AppMain.GlobalPool<T>.cache_.Count - 1;
                obj = AppMain.GlobalPool<T>.cache_[index];
                obj.Clear();
                AppMain.GlobalPool<T>.cache_.RemoveAt(index);
            }
            else
                obj = new T();
            return obj;
        }

        public static void Release(T obj)
        {
            AppMain.GlobalPool<T>.cache_.Add(obj);
        }
    }

    public class NNS_NODENAME
    {
        public int iNode;
        public string Name;

        public NNS_NODENAME()
        {
        }

        public NNS_NODENAME(AppMain.NNS_NODENAME nodeName)
        {
            this.iNode = nodeName.iNode;
            this.Name = nodeName.Name;
        }

        public AppMain.NNS_NODENAME Assign(AppMain.NNS_NODENAME nodeName)
        {
            this.iNode = nodeName.iNode;
            this.Name = nodeName.Name;
            return this;
        }
    }

    public enum NNE_NODENAME_SORTTYPE
    {
        NNE_NODENAME_SORTTYPE_INDEX,
        NNE_NODENAME_SORTTYPE_NAME,
    }

    public class NNS_NODENAMELIST
    {
        public AppMain.NNE_NODENAME_SORTTYPE SortType;
        public int nNode;
        public AppMain.NNS_NODENAME[] pNodeNameList;

        public NNS_NODENAMELIST()
        {
        }

        public NNS_NODENAMELIST(AppMain.NNS_NODENAMELIST nodeNameList)
        {
            this.SortType = nodeNameList.SortType;
            this.nNode = nodeNameList.nNode;
            this.pNodeNameList = nodeNameList.pNodeNameList;
        }

        public AppMain.NNS_NODENAMELIST Assign(AppMain.NNS_NODENAMELIST nodeNameList)
        {
            if (this != nodeNameList)
            {
                this.SortType = nodeNameList.SortType;
                this.nNode = nodeNameList.nNode;
                this.pNodeNameList = nodeNameList.pNodeNameList;
            }
            return this;
        }
    }

    public class NNS_MATERIALNAME
    {
        public int iMaterial;
        public string Name;

        public NNS_MATERIALNAME()
        {
        }

        public NNS_MATERIALNAME(AppMain.NNS_MATERIALNAME materialName)
        {
            this.iMaterial = materialName.iMaterial;
            this.Name = materialName.Name;
        }

        public AppMain.NNS_MATERIALNAME Assign(AppMain.NNS_MATERIALNAME materialName)
        {
            this.iMaterial = materialName.iMaterial;
            this.Name = materialName.Name;
            return this;
        }
    }

    public enum NNE_MATERIALNAME_SORTTYPE
    {
        NNE_MATERIALNAME_SORTTYPE_INDEX,
        NNE_MATERIALNAME_SORTTYPE_NAME,
    }

    public class NNS_MATERIALNAMELIST
    {
        public AppMain.NNE_MATERIALNAME_SORTTYPE SortType;
        public int nMaterial;
        public AppMain.NNS_MATERIALNAME[] pMaterialNameList;

        public NNS_MATERIALNAMELIST()
        {
        }

        public NNS_MATERIALNAMELIST(AppMain.NNS_MATERIALNAMELIST materialNameList)
        {
            this.SortType = materialNameList.SortType;
            this.nMaterial = materialNameList.nMaterial;
            this.pMaterialNameList = materialNameList.pMaterialNameList;
        }

        public AppMain.NNS_MATERIALNAMELIST Assign(AppMain.NNS_MATERIALNAMELIST materialNameList)
        {
            if (this != materialNameList)
            {
                this.SortType = materialNameList.SortType;
                this.nMaterial = materialNameList.nMaterial;
                this.pMaterialNameList = materialNameList.pMaterialNameList;
            }
            return this;
        }
    }

    public class NNS_VTXLISTPTR
    {
        public uint fType;
        public object pVtxList;

        public NNS_VTXLISTPTR()
        {
        }

        public NNS_VTXLISTPTR(AppMain.NNS_VTXLISTPTR vtxListPtr)
        {
            this.fType = vtxListPtr.fType;
            this.pVtxList = vtxListPtr.pVtxList;
        }

        public AppMain.NNS_VTXLISTPTR Assign(AppMain.NNS_VTXLISTPTR vtxListPtr)
        {
            this.fType = vtxListPtr.fType;
            this.pVtxList = vtxListPtr.pVtxList;
            return this;
        }

        public static AppMain.NNS_VTXLISTPTR Read(BinaryReader reader, long data0Pos)
        {
            AppMain.NNS_VTXLISTPTR nnsVtxlistptr = new AppMain.NNS_VTXLISTPTR();
            nnsVtxlistptr.fType = reader.ReadUInt32();
            uint num = reader.ReadUInt32();
            if (num != 0U)
            {
                long position = reader.BaseStream.Position;
                reader.BaseStream.Seek(data0Pos + (long)num, SeekOrigin.Begin);
                nnsVtxlistptr.pVtxList = (object)AppMain.NNS_VTXLIST_GL_DESC.Read(reader, data0Pos);
                reader.BaseStream.Seek(position, SeekOrigin.Begin);
            }
            return nnsVtxlistptr;
        }
    }

    public class NNS_VTXLIST_GL_DESC
    {
        public uint Type;
        public int nVertex;
        public int nArray;
        public AppMain.NNS_VTXARRAY_GL[] pArray;
        public int VertexBufferSize;
        public ByteBuffer pVertexBuffer;
        public int nMatrix;
        public ushort[] pMatrixIndices;
        public uint BufferName;

        public static AppMain.NNS_VTXLIST_GL_DESC Read(BinaryReader reader, long data0Pos)
        {
            AppMain.NNS_VTXLIST_GL_DESC nnsVtxlistGlDesc = new AppMain.NNS_VTXLIST_GL_DESC();
            nnsVtxlistGlDesc.Type = reader.ReadUInt32();
            nnsVtxlistGlDesc.nVertex = reader.ReadInt32();
            nnsVtxlistGlDesc.nArray = reader.ReadInt32();
            uint num1 = reader.ReadUInt32();
            nnsVtxlistGlDesc.VertexBufferSize = reader.ReadInt32();
            uint vertexBufferOffset = reader.ReadUInt32();
            long position1 = reader.BaseStream.Position;
            reader.BaseStream.Seek(data0Pos + (long)vertexBufferOffset, SeekOrigin.Begin);
            byte[] numArray = new byte[nnsVtxlistGlDesc.VertexBufferSize];
            reader.Read(numArray, 0, numArray.Length);
            nnsVtxlistGlDesc.pVertexBuffer = ByteBuffer.Wrap(numArray);
            reader.BaseStream.Seek(position1, SeekOrigin.Begin);
            if (num1 != 0U)
            {
                long position2 = reader.BaseStream.Position;
                reader.BaseStream.Seek(data0Pos + (long)num1, SeekOrigin.Begin);
                nnsVtxlistGlDesc.pArray = new AppMain.NNS_VTXARRAY_GL[nnsVtxlistGlDesc.nArray];
                for (int index = 0; index < nnsVtxlistGlDesc.nArray; ++index)
                    nnsVtxlistGlDesc.pArray[index] = AppMain.NNS_VTXARRAY_GL.Read(reader, nnsVtxlistGlDesc.pVertexBuffer, vertexBufferOffset, nnsVtxlistGlDesc.nVertex);
                reader.BaseStream.Seek(position2, SeekOrigin.Begin);
            }
            nnsVtxlistGlDesc.nMatrix = reader.ReadInt32();
            uint num2 = reader.ReadUInt32();
            if (num2 != 0U)
            {
                long position2 = reader.BaseStream.Position;
                reader.BaseStream.Seek(data0Pos + (long)num2, SeekOrigin.Begin);
                nnsVtxlistGlDesc.pMatrixIndices = new ushort[nnsVtxlistGlDesc.nMatrix];
                for (int index = 0; index < nnsVtxlistGlDesc.nMatrix; ++index)
                    nnsVtxlistGlDesc.pMatrixIndices[index] = reader.ReadUInt16();
                reader.BaseStream.Seek(position2, SeekOrigin.Begin);
            }
            nnsVtxlistGlDesc.BufferName = reader.ReadUInt32();
            return nnsVtxlistGlDesc;
        }

        public AppMain.NNS_VTXLIST_GL_DESC Assign(AppMain.NNS_VTXLIST_GL_DESC desc)
        {
            this.Type = desc.Type;
            this.nVertex = desc.nVertex;
            this.nArray = desc.nArray;
            this.pArray = desc.pArray;
            this.VertexBufferSize = desc.VertexBufferSize;
            this.pVertexBuffer = desc.pVertexBuffer;
            this.nMatrix = desc.nMatrix;
            this.pMatrixIndices = desc.pMatrixIndices;
            this.BufferName = desc.BufferName;
            return this;
        }
    }

    public class NNS_MORPHTARGETPTR
    {
        public int nVtxList;
        public AppMain.NNS_VTXLISTPTR[] pMorphTarget;

        public NNS_MORPHTARGETPTR()
        {
        }

        public NNS_MORPHTARGETPTR(AppMain.NNS_MORPHTARGETPTR morthTargetPtr)
        {
            this.nVtxList = morthTargetPtr.nVtxList;
            this.pMorphTarget = morthTargetPtr.pMorphTarget;
        }

        public AppMain.NNS_MORPHTARGETPTR Assign(AppMain.NNS_MORPHTARGETPTR morthTargetPtr)
        {
            this.nVtxList = morthTargetPtr.nVtxList;
            this.pMorphTarget = morthTargetPtr.pMorphTarget;
            return this;
        }
    }

    public class NNS_MORPHTARGETLIST
    {
        public int nMorphTarget;
        public AppMain.NNS_MORPHTARGETPTR[] pMorphTargetPtrList;

        public NNS_MORPHTARGETLIST()
        {
        }

        public NNS_MORPHTARGETLIST(AppMain.NNS_MORPHTARGETLIST morthTargetList)
        {
            this.nMorphTarget = morthTargetList.nMorphTarget;
            this.pMorphTargetPtrList = morthTargetList.pMorphTargetPtrList;
        }

        public AppMain.NNS_MORPHTARGETLIST Assign(AppMain.NNS_MORPHTARGETLIST morthTargetList)
        {
            this.nMorphTarget = morthTargetList.nMorphTarget;
            this.pMorphTargetPtrList = morthTargetList.pMorphTargetPtrList;
            return this;
        }
    }

    public class NNS_MORPHTARGETNAME
    {
        public int iMorphTarget;
        public string Name;

        public NNS_MORPHTARGETNAME()
        {
        }

        public NNS_MORPHTARGETNAME(AppMain.NNS_MORPHTARGETNAME morthTargetName)
        {
            this.iMorphTarget = morthTargetName.iMorphTarget;
            this.Name = morthTargetName.Name;
        }

        public AppMain.NNS_MORPHTARGETNAME Assign(AppMain.NNS_MORPHTARGETNAME morthTargetName)
        {
            this.iMorphTarget = morthTargetName.iMorphTarget;
            this.Name = morthTargetName.Name;
            return this;
        }
    }

    public enum NNE_MORPHTARGETNAME_SORTTYPE
    {
        NNE_MORPHTARGETNAME_SORTTYPE_INDEX,
        NNE_MORPHTARGETNAME_SORTTYPE_NAME,
    }

    public class NNS_MORPHTARGETNAMELIST
    {
        public AppMain.NNE_MORPHTARGETNAME_SORTTYPE SortType;
        public int nMorphTarget;
        public AppMain.NNS_MORPHTARGETNAME[] pMorphTargetNameList;

        public NNS_MORPHTARGETNAMELIST()
        {
        }

        public NNS_MORPHTARGETNAMELIST(
          AppMain.NNS_MORPHTARGETNAMELIST morthTargetNameList)
        {
            this.SortType = morthTargetNameList.SortType;
            this.nMorphTarget = morthTargetNameList.nMorphTarget;
            this.pMorphTargetNameList = morthTargetNameList.pMorphTargetNameList;
        }

        public AppMain.NNS_MORPHTARGETNAMELIST Assign(
          AppMain.NNS_MORPHTARGETNAMELIST morthTargetNameList)
        {
            this.SortType = morthTargetNameList.SortType;
            this.nMorphTarget = morthTargetNameList.nMorphTarget;
            this.pMorphTargetNameList = morthTargetNameList.pMorphTargetNameList;
            return this;
        }
    }

    public class NNS_PRIMLISTPTR
    {
        public uint fType;
        public object pPrimList;

        public NNS_PRIMLISTPTR()
        {
        }

        public NNS_PRIMLISTPTR(AppMain.NNS_PRIMLISTPTR primListPtr)
        {
            this.fType = primListPtr.fType;
            this.pPrimList = primListPtr.pPrimList;
        }

        public AppMain.NNS_PRIMLISTPTR Assign(AppMain.NNS_PRIMLISTPTR primListPtr)
        {
            this.fType = primListPtr.fType;
            this.pPrimList = primListPtr.pPrimList;
            return this;
        }

        public static AppMain.NNS_PRIMLISTPTR Read(BinaryReader reader, long data0Pos)
        {
            AppMain.NNS_PRIMLISTPTR nnsPrimlistptr = new AppMain.NNS_PRIMLISTPTR();
            nnsPrimlistptr.fType = reader.ReadUInt32();
            uint num = reader.ReadUInt32();
            if (num != 0U)
            {
                long position = reader.BaseStream.Position;
                reader.BaseStream.Seek(data0Pos + (long)num, SeekOrigin.Begin);
                nnsPrimlistptr.pPrimList = (object)AppMain.NNS_PRIMLIST_GL_DESC.Read(reader, data0Pos);
                reader.BaseStream.Seek(position, SeekOrigin.Begin);
            }
            return nnsPrimlistptr;
        }
    }

    public class NNS_PRIMLIST_GL_DESC
    {
        public uint Mode;
        public int[] pCounts;
        public uint DataType;
        public UShortBuffer[] pIndices;
        public int nPrim;
        public int IndexBufferSize;
        public ByteBuffer pIndexBuffer;
        public uint BufferName;

        public static AppMain.NNS_PRIMLIST_GL_DESC Read(BinaryReader reader, long data0Pos)
        {
            AppMain.NNS_PRIMLIST_GL_DESC nnsPrimlistGlDesc = new AppMain.NNS_PRIMLIST_GL_DESC();
            nnsPrimlistGlDesc.Mode = reader.ReadUInt32();
            uint num1 = reader.ReadUInt32();
            long position1 = reader.BaseStream.Position;
            reader.BaseStream.Seek(data0Pos + (long)num1, SeekOrigin.Begin);
            nnsPrimlistGlDesc.pCounts = new int[1];
            nnsPrimlistGlDesc.pCounts[0] = reader.ReadInt32();
            reader.BaseStream.Seek(position1, SeekOrigin.Begin);
            nnsPrimlistGlDesc.DataType = reader.ReadUInt32();
            uint num2 = reader.ReadUInt32();
            nnsPrimlistGlDesc.nPrim = reader.ReadInt32();
            nnsPrimlistGlDesc.IndexBufferSize = reader.ReadInt32();
            uint num3 = reader.ReadUInt32();
            long position2 = reader.BaseStream.Position;
            reader.BaseStream.Seek(data0Pos + (long)num3, SeekOrigin.Begin);
            byte[] numArray = new byte[nnsPrimlistGlDesc.IndexBufferSize];
            reader.Read(numArray, 0, nnsPrimlistGlDesc.IndexBufferSize);
            nnsPrimlistGlDesc.pIndexBuffer = ByteBuffer.Wrap(numArray);
            reader.BaseStream.Seek(position2, SeekOrigin.Begin);
            nnsPrimlistGlDesc.pIndices = new UShortBuffer[nnsPrimlistGlDesc.nPrim];
            long position3 = reader.BaseStream.Position;
            reader.BaseStream.Seek(data0Pos + (long)num2, SeekOrigin.Begin);
            for (int index = 0; index < nnsPrimlistGlDesc.nPrim; ++index)
            {
                uint num4 = reader.ReadUInt32();
                nnsPrimlistGlDesc.pIndices[index] = (nnsPrimlistGlDesc.pIndexBuffer + ((int)num4 - (int)num3)).AsUShortBuffer();
            }
            reader.BaseStream.Seek(position3, SeekOrigin.Begin);
            nnsPrimlistGlDesc.BufferName = reader.ReadUInt32();
            return nnsPrimlistGlDesc;
        }

        public AppMain.NNS_PRIMLIST_GL_DESC Assign(AppMain.NNS_PRIMLIST_GL_DESC desc)
        {
            this.Mode = desc.Mode;
            this.pCounts = desc.pCounts;
            this.DataType = desc.DataType;
            this.pIndices = desc.pIndices;
            this.nPrim = desc.nPrim;
            this.IndexBufferSize = desc.IndexBufferSize;
            this.pIndexBuffer = desc.pIndexBuffer;
            this.BufferName = desc.BufferName;
            return this;
        }
    }

    public class NNS_MESHSET
    {
        public readonly AppMain.NNS_VECTOR Center = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public float Radius;
        public int iNode;
        public int iMatrix;
        public int iMaterial;
        public int iVtxList;
        public int iPrimList;
        public uint Reserved2;
        public uint Reserved1;
        public uint Reserved0;

        public NNS_MESHSET()
        {
        }

        public NNS_MESHSET(AppMain.NNS_MESHSET meshSet)
        {
            this.Center.Assign(meshSet.Center);
            this.Radius = meshSet.Radius;
            this.iNode = meshSet.iNode;
            this.iMatrix = meshSet.iMatrix;
            this.iMaterial = meshSet.iMaterial;
            this.iVtxList = meshSet.iVtxList;
            this.iPrimList = meshSet.iPrimList;
            this.Reserved2 = meshSet.Reserved2;
            this.Reserved1 = meshSet.Reserved1;
            this.Reserved0 = meshSet.Reserved0;
        }

        public AppMain.NNS_MESHSET Assign(AppMain.NNS_MESHSET meshSet)
        {
            if (this != meshSet)
            {
                this.Center.Assign(meshSet.Center);
                this.Radius = meshSet.Radius;
                this.iNode = meshSet.iNode;
                this.iMatrix = meshSet.iMatrix;
                this.iMaterial = meshSet.iMaterial;
                this.iVtxList = meshSet.iVtxList;
                this.iPrimList = meshSet.iPrimList;
                this.Reserved2 = meshSet.Reserved2;
                this.Reserved1 = meshSet.Reserved1;
                this.Reserved0 = meshSet.Reserved0;
            }
            return this;
        }

        public static AppMain.NNS_MESHSET Read(BinaryReader reader)
        {
            return new AppMain.NNS_MESHSET()
            {
                Center = {
          x = reader.ReadSingle(),
          y = reader.ReadSingle(),
          z = reader.ReadSingle()
        },
                Radius = reader.ReadSingle(),
                iNode = reader.ReadInt32(),
                iMatrix = reader.ReadInt32(),
                iMaterial = reader.ReadInt32(),
                iVtxList = reader.ReadInt32(),
                iPrimList = reader.ReadInt32(),
                Reserved2 = reader.ReadUInt32(),
                Reserved1 = reader.ReadUInt32(),
                Reserved0 = reader.ReadUInt32()
            };
        }
    }

    public class NNS_SUBOBJ
    {
        public uint fType;
        public int nMeshset;
        public AppMain.NNS_MESHSET[] pMeshsetList;
        public int nTex;
        public int[] pTexNumList;

        public NNS_SUBOBJ()
        {
        }

        public NNS_SUBOBJ(AppMain.NNS_SUBOBJ subObj)
        {
            this.fType = subObj.fType;
            this.nMeshset = subObj.nMeshset;
            this.pMeshsetList = subObj.pMeshsetList;
            this.nTex = subObj.nTex;
            this.pTexNumList = subObj.pTexNumList;
        }

        public AppMain.NNS_SUBOBJ Assign(AppMain.NNS_SUBOBJ subObj)
        {
            if (this != subObj)
            {
                this.fType = subObj.fType;
                this.nMeshset = subObj.nMeshset;
                this.pMeshsetList = subObj.pMeshsetList;
                this.nTex = subObj.nTex;
                this.pTexNumList = subObj.pTexNumList;
            }
            return this;
        }

        public static AppMain.NNS_SUBOBJ Read(BinaryReader reader, long data0Pos)
        {
            AppMain.NNS_SUBOBJ nnsSubobj = new AppMain.NNS_SUBOBJ();
            nnsSubobj.fType = reader.ReadUInt32();
            nnsSubobj.nMeshset = reader.ReadInt32();
            uint num1 = reader.ReadUInt32();
            if (num1 != 0U)
            {
                nnsSubobj.pMeshsetList = new AppMain.NNS_MESHSET[nnsSubobj.nMeshset];
                long position = reader.BaseStream.Position;
                reader.BaseStream.Seek(data0Pos + (long)num1, SeekOrigin.Begin);
                for (int index = 0; index < nnsSubobj.nMeshset; ++index)
                    nnsSubobj.pMeshsetList[index] = AppMain.NNS_MESHSET.Read(reader);
                reader.BaseStream.Seek(position, SeekOrigin.Begin);
            }
            nnsSubobj.nTex = reader.ReadInt32();
            uint num2 = reader.ReadUInt32();
            if (num2 != 0U)
            {
                nnsSubobj.pTexNumList = new int[nnsSubobj.nTex];
                long position = reader.BaseStream.Position;
                reader.BaseStream.Seek(data0Pos + (long)num2, SeekOrigin.Begin);
                for (int index = 0; index < nnsSubobj.nTex; ++index)
                    nnsSubobj.pTexNumList[index] = reader.ReadInt32();
                reader.BaseStream.Seek(position, SeekOrigin.Begin);
            }
            return nnsSubobj;
        }
    }

    public class NNS_OBJECT
    {
        public readonly AppMain.NNS_VECTOR Center = new AppMain.NNS_VECTOR();
        public float Radius;
        public int nMaterial;
        public AppMain.NNS_MATERIALPTR[] pMatPtrList;
        public int nVtxList;
        public AppMain.NNS_VTXLISTPTR[] pVtxListPtrList;
        public int nPrimList;
        public AppMain.NNS_PRIMLISTPTR[] pPrimListPtrList;
        public int nNode;
        public int MaxNodeDepth;
        public AppMain.NNS_NODE[] pNodeList;
        public int nMtxPal;
        public int nSubobj;
        public AppMain.NNS_SUBOBJ[] pSubobjList;
        public int nTex;
        public uint fType;
        public int Version;
        public float BoundingBoxX;
        public float BoundingBoxY;
        public float BoundingBoxZ;

        public NNS_OBJECT()
        {
        }

        public NNS_OBJECT(AppMain.NNS_OBJECT nnsObject)
        {
            this.Center.Assign(nnsObject.Center);
            this.Radius = nnsObject.Radius;
            this.nMaterial = nnsObject.nMaterial;
            this.pMatPtrList = nnsObject.pMatPtrList;
            this.nVtxList = nnsObject.nVtxList;
            this.pVtxListPtrList = nnsObject.pVtxListPtrList;
            this.nPrimList = nnsObject.nPrimList;
            this.pPrimListPtrList = nnsObject.pPrimListPtrList;
            this.nNode = nnsObject.nNode;
            this.MaxNodeDepth = nnsObject.MaxNodeDepth;
            this.pNodeList = nnsObject.pNodeList;
            this.nMtxPal = nnsObject.nMtxPal;
            this.nSubobj = nnsObject.nSubobj;
            this.pSubobjList = nnsObject.pSubobjList;
            this.nTex = nnsObject.nTex;
            this.fType = nnsObject.fType;
            this.Version = nnsObject.Version;
            this.BoundingBoxX = nnsObject.BoundingBoxX;
            this.BoundingBoxY = nnsObject.BoundingBoxY;
            this.BoundingBoxZ = nnsObject.BoundingBoxZ;
        }

        public AppMain.NNS_OBJECT Assign(AppMain.NNS_OBJECT nnsObject)
        {
            if (this != nnsObject)
            {
                this.Center.Assign(nnsObject.Center);
                this.Radius = nnsObject.Radius;
                this.nMaterial = nnsObject.nMaterial;
                this.pMatPtrList = nnsObject.pMatPtrList;
                this.nVtxList = nnsObject.nVtxList;
                this.pVtxListPtrList = nnsObject.pVtxListPtrList;
                this.nPrimList = nnsObject.nPrimList;
                this.pPrimListPtrList = nnsObject.pPrimListPtrList;
                this.nNode = nnsObject.nNode;
                this.MaxNodeDepth = nnsObject.MaxNodeDepth;
                this.pNodeList = nnsObject.pNodeList;
                this.nMtxPal = nnsObject.nMtxPal;
                this.nSubobj = nnsObject.nSubobj;
                this.pSubobjList = nnsObject.pSubobjList;
                this.nTex = nnsObject.nTex;
                this.fType = nnsObject.fType;
                this.Version = nnsObject.Version;
                this.BoundingBoxX = nnsObject.BoundingBoxX;
                this.BoundingBoxY = nnsObject.BoundingBoxY;
                this.BoundingBoxZ = nnsObject.BoundingBoxZ;
            }
            return this;
        }

        public static AppMain.NNS_OBJECT Read(BinaryReader reader, long data0Pos)
        {
            AppMain.NNS_OBJECT nnsObject = new AppMain.NNS_OBJECT();
            nnsObject.Center.x = reader.ReadSingle();
            nnsObject.Center.y = reader.ReadSingle();
            nnsObject.Center.z = reader.ReadSingle();
            nnsObject.Radius = reader.ReadSingle();
            nnsObject.nMaterial = reader.ReadInt32();
            uint num1 = reader.ReadUInt32();
            if (num1 != 0U)
            {
                bool flag = false;
                nnsObject.pMatPtrList = new AppMain.NNS_MATERIALPTR[nnsObject.nMaterial];
                long position = reader.BaseStream.Position;
                reader.BaseStream.Seek(data0Pos + (long)num1, SeekOrigin.Begin);
                for (int index = 0; index < nnsObject.nMaterial; ++index)
                {
                    bool transparentMaterial;
                    nnsObject.pMatPtrList[index] = AppMain.NNS_MATERIALPTR.Read(reader, data0Pos, out transparentMaterial);
                    flag |= transparentMaterial;
                }
                if (flag)
                {
                    for (int index = 0; index < nnsObject.nMaterial; ++index)
                        ((AppMain.NNS_MATERIAL_GLES11_DESC)nnsObject.pMatPtrList[index].pMaterial).fFlag |= 1U;
                }
                reader.BaseStream.Seek(position, SeekOrigin.Begin);
            }
            nnsObject.nVtxList = reader.ReadInt32();
            uint num2 = reader.ReadUInt32();
            if (num2 != 0U)
            {
                nnsObject.pVtxListPtrList = new AppMain.NNS_VTXLISTPTR[nnsObject.nVtxList];
                long position = reader.BaseStream.Position;
                reader.BaseStream.Seek(data0Pos + (long)num2, SeekOrigin.Begin);
                for (int index = 0; index < nnsObject.nVtxList; ++index)
                    nnsObject.pVtxListPtrList[index] = AppMain.NNS_VTXLISTPTR.Read(reader, data0Pos);
                reader.BaseStream.Seek(position, SeekOrigin.Begin);
            }
            nnsObject.nPrimList = reader.ReadInt32();
            uint num3 = reader.ReadUInt32();
            if (num3 != 0U)
            {
                nnsObject.pPrimListPtrList = new AppMain.NNS_PRIMLISTPTR[nnsObject.nPrimList];
                long position = reader.BaseStream.Position;
                reader.BaseStream.Seek(data0Pos + (long)num3, SeekOrigin.Begin);
                for (int index = 0; index < nnsObject.nPrimList; ++index)
                    nnsObject.pPrimListPtrList[index] = AppMain.NNS_PRIMLISTPTR.Read(reader, data0Pos);
                reader.BaseStream.Seek(position, SeekOrigin.Begin);
            }
            nnsObject.nNode = reader.ReadInt32();
            nnsObject.MaxNodeDepth = reader.ReadInt32();
            uint num4 = reader.ReadUInt32();
            if (num4 != 0U)
            {
                nnsObject.pNodeList = new AppMain.NNS_NODE[nnsObject.nNode];
                long position = reader.BaseStream.Position;
                reader.BaseStream.Seek(data0Pos + (long)num4, SeekOrigin.Begin);
                for (int index = 0; index < nnsObject.nNode; ++index)
                    nnsObject.pNodeList[index] = AppMain.NNS_NODE.Read(reader, data0Pos);
                reader.BaseStream.Seek(position, SeekOrigin.Begin);
            }
            nnsObject.nMtxPal = reader.ReadInt32();
            nnsObject.nSubobj = reader.ReadInt32();
            uint num5 = reader.ReadUInt32();
            if (num5 != 0U)
            {
                nnsObject.pSubobjList = new AppMain.NNS_SUBOBJ[nnsObject.nSubobj];
                long position = reader.BaseStream.Position;
                reader.BaseStream.Seek(data0Pos + (long)num5, SeekOrigin.Begin);
                for (int index = 0; index < nnsObject.nSubobj; ++index)
                    nnsObject.pSubobjList[index] = AppMain.NNS_SUBOBJ.Read(reader, data0Pos);
                reader.BaseStream.Seek(position, SeekOrigin.Begin);
            }
            nnsObject.nTex = reader.ReadInt32();
            nnsObject.fType = reader.ReadUInt32();
            nnsObject.Version = reader.ReadInt32();
            nnsObject.BoundingBoxX = reader.ReadSingle();
            nnsObject.BoundingBoxY = reader.ReadSingle();
            nnsObject.BoundingBoxZ = reader.ReadSingle();
            return nnsObject;
        }
    }

    public class NNS_MATERIALPTR
    {
        public uint fType;
        public object pMaterial;

        public NNS_MATERIALPTR()
        {
        }

        public NNS_MATERIALPTR(AppMain.NNS_MATERIALPTR materialPtr)
        {
            this.fType = materialPtr.fType;
            this.pMaterial = materialPtr.pMaterial;
        }

        public AppMain.NNS_MATERIALPTR Assign(AppMain.NNS_MATERIALPTR materialPtr)
        {
            this.fType = materialPtr.fType;
            this.pMaterial = materialPtr.pMaterial;
            return this;
        }

        public static AppMain.NNS_MATERIALPTR Read(
          BinaryReader reader,
          long data0Pos,
          out bool transparentMaterial)
        {
            transparentMaterial = false;
            AppMain.NNS_MATERIALPTR nnsMaterialptr = new AppMain.NNS_MATERIALPTR();
            nnsMaterialptr.fType = reader.ReadUInt32();
            uint num = reader.ReadUInt32();
            if (num != 0U)
            {
                long position = reader.BaseStream.Position;
                reader.BaseStream.Seek(data0Pos + (long)num, SeekOrigin.Begin);
                nnsMaterialptr.pMaterial = (object)AppMain.NNS_MATERIAL_GLES11_DESC.Read(reader, data0Pos, out transparentMaterial);
                reader.BaseStream.Seek(position, SeekOrigin.Begin);
            }
            return nnsMaterialptr;
        }
    }

    public class NNS_MATERIAL_GLES11_DESC
    {
        public uint fFlag;
        public uint User;
        public AppMain.NNS_MATERIAL_STDSHADER_COLOR pColor;
        public AppMain.NNS_MATERIAL_GLES11_LOGIC pLogic;
        public int nTex;
        public AppMain.NNS_MATERIAL_GLES11_TEXMAP_DESC[] pTexDesc;

        public static AppMain.NNS_MATERIAL_GLES11_DESC Read(
          BinaryReader reader,
          long data0Pos,
          out bool transparentMaterial)
        {
            transparentMaterial = false;
            AppMain.NNS_MATERIAL_GLES11_DESC materialGleS11Desc = new AppMain.NNS_MATERIAL_GLES11_DESC();
            materialGleS11Desc.fFlag = reader.ReadUInt32();
            materialGleS11Desc.User = reader.ReadUInt32();
            uint num1 = reader.ReadUInt32();
            if (num1 != 0U)
            {
                long position = reader.BaseStream.Position;
                reader.BaseStream.Seek(data0Pos + (long)num1, SeekOrigin.Begin);
                materialGleS11Desc.pColor = AppMain.NNS_MATERIAL_STDSHADER_COLOR.Read(reader);
                reader.BaseStream.Seek(position, SeekOrigin.Begin);
                transparentMaterial = 1.0 != (double)materialGleS11Desc.pColor.Diffuse.a;
            }
            uint num2 = reader.ReadUInt32();
            if (num2 != 0U)
            {
                long position = reader.BaseStream.Position;
                reader.BaseStream.Seek(data0Pos + (long)num2, SeekOrigin.Begin);
                materialGleS11Desc.pLogic = AppMain.NNS_MATERIAL_GLES11_LOGIC.Read(reader);
                reader.BaseStream.Seek(position, SeekOrigin.Begin);
            }
            materialGleS11Desc.nTex = reader.ReadInt32();
            uint num3 = reader.ReadUInt32();
            if (num3 != 0U)
            {
                long position = reader.BaseStream.Position;
                reader.BaseStream.Seek(data0Pos + (long)num3, SeekOrigin.Begin);
                materialGleS11Desc.pTexDesc = new AppMain.NNS_MATERIAL_GLES11_TEXMAP_DESC[materialGleS11Desc.nTex];
                for (int index = 0; index < materialGleS11Desc.nTex; ++index)
                    materialGleS11Desc.pTexDesc[index] = AppMain.NNS_MATERIAL_GLES11_TEXMAP_DESC.Read(reader, data0Pos);
                reader.BaseStream.Seek(position, SeekOrigin.Begin);
            }
            return materialGleS11Desc;
        }

        public NNS_MATERIAL_GLES11_DESC()
        {
        }

        public NNS_MATERIAL_GLES11_DESC(AppMain.NNS_MATERIAL_GLES11_DESC desc)
        {
            this.fFlag = desc.fFlag;
            this.User = desc.User;
            this.pColor = desc.pColor;
            this.pLogic = desc.pLogic;
            this.nTex = desc.nTex;
            this.pTexDesc = desc.pTexDesc;
        }

        public AppMain.NNS_MATERIAL_GLES11_DESC Assign(AppMain.NNS_MATERIAL_GLES11_DESC desc)
        {
            this.fFlag = desc.fFlag;
            this.User = desc.User;
            this.pColor = desc.pColor;
            this.pLogic = desc.pLogic;
            this.nTex = desc.nTex;
            this.pTexDesc = desc.pTexDesc;
            return this;
        }
    }

    public class NNS_COMMON_WEIGHT2
    {
        public int Index0;
        public int Index1;
        public float Ratio;
    }

    public class NNS_COMMON_WEIGHT
    {
        public int Index;
        public float Ratio;
    }

    public class NNS_COMMON_PW2
    {
        public readonly AppMain.NNS_VECTOR Pos = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_COMMON_WEIGHT2 Wgt = new AppMain.NNS_COMMON_WEIGHT2();
    }

    public class NNS_COMMON_PW4
    {
        public readonly AppMain.NNS_VECTOR Pos = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_COMMON_WEIGHT[] Wgt = AppMain.New<AppMain.NNS_COMMON_WEIGHT>(4);
    }

    public class NNS_COMMON_PN
    {
        public readonly AppMain.NNS_VECTOR Pos = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_VECTOR Nrm = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
    }

    public class NNS_COMMON_PNW2
    {
        public readonly AppMain.NNS_VECTOR Pos = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_VECTOR Nrm = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_COMMON_WEIGHT2 Wgt = new AppMain.NNS_COMMON_WEIGHT2();
    }

    public class NNS_COMMON_PNW4
    {
        public readonly AppMain.NNS_VECTOR Pos = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_VECTOR Nrm = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_COMMON_WEIGHT[] Wgt = AppMain.New<AppMain.NNS_COMMON_WEIGHT>(4);
    }

    public class NNS_COMMON_TEXCOORD2
    {
        public readonly AppMain.NNS_TEXCOORD[] Tex = AppMain.New<AppMain.NNS_TEXCOORD>(2);
    }

    public struct NNS_TEXCOORD : AppMain.IClearable
    {
        public float u;
        public float v;

        public NNS_TEXCOORD(float u, float v)
        {
            this.u = u;
            this.v = v;
        }

        public void Clear()
        {
            this.u = this.v = 0.0f;
        }
    }

    public class NNS_VTXLIST_COMMON_ARRAY
    {
        public uint fType;
        public int Number;
        public uint Size;
        public object pList;

        public AppMain.NNS_VTXLIST_COMMON_ARRAY Assign(AppMain.NNS_VTXLIST_COMMON_ARRAY array)
        {
            this.fType = array.fType;
            this.Number = array.Number;
            this.Size = array.Size;
            this.pList = array.pList;
            return this;
        }
    }

    public class NNS_VTXLIST_COMMON_DESC
    {
        public readonly AppMain.NNS_VTXLIST_COMMON_ARRAY List0 = new AppMain.NNS_VTXLIST_COMMON_ARRAY();
        public readonly AppMain.NNS_VTXLIST_COMMON_ARRAY List1 = new AppMain.NNS_VTXLIST_COMMON_ARRAY();
        public readonly AppMain.NNS_VTXLIST_COMMON_ARRAY List2 = new AppMain.NNS_VTXLIST_COMMON_ARRAY();
        public readonly AppMain.NNS_VTXLIST_COMMON_ARRAY List3 = new AppMain.NNS_VTXLIST_COMMON_ARRAY();

        public AppMain.NNS_VTXLIST_COMMON_DESC Assign(AppMain.NNS_VTXLIST_COMMON_DESC desc)
        {
            if (this != desc)
            {
                this.List0.Assign(desc.List0);
                this.List1.Assign(desc.List1);
                this.List2.Assign(desc.List2);
                this.List3.Assign(desc.List3);
            }
            return this;
        }
    }

    public class NNS_PRIMLIST_COMMON_TRIANGLE_STRIP
    {
        public uint fType;
        public int nIndexSetSize;
        public int nStrip;
        public ushort[] pLengthList;
        public ushort[] pStripList;

        public AppMain.NNS_PRIMLIST_COMMON_TRIANGLE_STRIP Assign(
          AppMain.NNS_PRIMLIST_COMMON_TRIANGLE_STRIP desc)
        {
            this.fType = desc.fType;
            this.nIndexSetSize = desc.nIndexSetSize;
            this.nStrip = desc.nStrip;
            this.pLengthList = desc.pLengthList;
            this.pStripList = desc.pStripList;
            return this;
        }
    }

    public class NNS_PRIMLIST_COMMON_TRIANGLE_LIST
    {
        public uint fType;
        public int nIndexSetSize;
        public int nTriangle;
        public ushort[] pTriangleList;

        public AppMain.NNS_PRIMLIST_COMMON_TRIANGLE_LIST Assign(
          AppMain.NNS_PRIMLIST_COMMON_TRIANGLE_LIST desc)
        {
            this.fType = desc.fType;
            this.nIndexSetSize = desc.nIndexSetSize;
            this.nTriangle = desc.nTriangle;
            this.pTriangleList = desc.pTriangleList;
            return this;
        }
    }

    public class NNS_PRIMLIST_COMMON_QUAD_LIST
    {
        public uint fType;
        public int nIndexSetSize;
        public int nQuad;
        public ushort[] pQuadList;

        public AppMain.NNS_PRIMLIST_COMMON_QUAD_LIST Assign(
          AppMain.NNS_PRIMLIST_COMMON_QUAD_LIST list)
        {
            this.fType = list.fType;
            this.nIndexSetSize = list.nIndexSetSize;
            this.nQuad = list.nQuad;
            this.pQuadList = list.pQuadList;
            return this;
        }
    }

    public class NNS_PRIMLIST_COMMON_TRIANGLE_QUAD_LIST
    {
        public uint fType;
        public int nIndexSetSize;
        public int nTriangle;
        public ushort[] pTriangleList;
        public int nQuad;
        public ushort[] pQuadList;

        public AppMain.NNS_PRIMLIST_COMMON_TRIANGLE_QUAD_LIST Assign(
          AppMain.NNS_PRIMLIST_COMMON_TRIANGLE_QUAD_LIST list)
        {
            this.fType = list.fType;
            this.nIndexSetSize = list.nIndexSetSize;
            this.nTriangle = list.nTriangle;
            this.pTriangleList = list.pTriangleList;
            this.nQuad = list.nQuad;
            this.pQuadList = list.pQuadList;
            return this;
        }
    }

    public delegate int AMTREffectProc(AppMain.AMS_TRAIL_EFFECT pEffect);

    public class AMS_TRAIL_EFFECT
    {
        public AppMain.AMS_TRAIL_PARAM Work = new AppMain.AMS_TRAIL_PARAM();
        public AppMain.AMS_TRAIL_EFFECT pNext;
        public AppMain.AMS_TRAIL_EFFECT pPrev;
        public DoubleType<AppMain.AMTREffectProc, int> Procedure;
        public DoubleType<AppMain.AMTREffectProc, int> Destractor;
        public float fFrame;
        public float fEndFrame;
        public uint drawState;
        public ushort handleId;
        public short flag;

        public void Clear()
        {
            this.pNext = (AppMain.AMS_TRAIL_EFFECT)null;
            this.pPrev = (AppMain.AMS_TRAIL_EFFECT)null;
            this.Procedure = (DoubleType<AppMain.AMTREffectProc, int>)(AppMain.AMTREffectProc)null;
            this.Destractor = (DoubleType<AppMain.AMTREffectProc, int>)(AppMain.AMTREffectProc)null;
            this.fFrame = this.fEndFrame = 0.0f;
            this.drawState = 0U;
            this.handleId = (ushort)0;
            this.flag = (short)0;
            this.Work.Clear();
        }
    }

    public class AMS_TRAIL_PARAM
    {
        public AppMain.NNS_RGBA startColor;
        public AppMain.NNS_RGBA endColor;
        public AppMain.NNS_RGBA ptclColor;
        public float startSize;
        public float endSize;
        public AppMain.OBS_OBJECT_WORK trail_obj_work;
        public AppMain.NNS_TEXLIST texlist;
        public int texId;
        public float life;
        public float vanish_time;
        public float zBias;
        public float ptclSize;
        public short partsNum;
        public short ptclFlag;
        public short ptclTexId;
        public short blendType;
        public short zTest;
        public short zMask;
        public float time;
        public float vanish_rate;
        public short trailId;
        public short trailPartsId;
        public short trailPartsNum;
        public short state;
        public short list_no;

        public AppMain.VecFx32 trail_pos
        {
            get
            {
                return this.trail_obj_work.pos;
            }
        }

        public void Clear()
        {
            this.startColor.Clear();
            this.endColor.Clear();
            this.ptclColor.Clear();
            this.startSize = this.endSize = 0.0f;
            this.trail_obj_work = (AppMain.OBS_OBJECT_WORK)null;
            this.texlist = (AppMain.NNS_TEXLIST)null;
            this.texId = 0;
            this.life = this.vanish_time = this.zBias = 0.0f;
            this.ptclSize = 0.0f;
            this.partsNum = this.ptclFlag = this.ptclTexId = this.blendType = this.zTest = this.zMask = (short)0;
            this.time = this.vanish_rate = 0.0f;
            this.trailId = this.trailPartsId = this.trailPartsNum = this.state = (short)0;
            this.list_no = (short)0;
        }

        public AppMain.AMS_TRAIL_PARAM Assign(AppMain.AMS_TRAIL_PARAM source)
        {
            if (this == source)
                return this;
            this.startColor = source.startColor;
            this.endColor = source.endColor;
            this.ptclColor = source.ptclColor;
            this.startSize = source.startSize;
            this.endSize = source.endSize;
            this.trail_obj_work = source.trail_obj_work;
            this.texlist = source.texlist;
            this.texId = source.texId;
            this.life = source.life;
            this.vanish_time = source.vanish_time;
            this.zBias = source.zBias;
            this.ptclSize = source.ptclSize;
            this.partsNum = source.partsNum;
            this.ptclFlag = source.ptclFlag;
            this.ptclTexId = source.ptclTexId;
            this.blendType = source.blendType;
            this.zTest = source.zTest;
            this.zMask = source.zMask;
            this.time = source.time;
            this.vanish_rate = source.vanish_rate;
            this.trailId = source.trailId;
            this.trailPartsId = source.trailPartsId;
            this.trailPartsNum = source.trailPartsNum;
            this.state = source.state;
            this.list_no = source.list_no;
            return this;
        }
    }

    public struct NNS_RGBA
    {
        public float r;
        public float g;
        public float b;
        public float a;

        public void Clear()
        {
            this.r = this.g = this.b = this.a = 0.0f;
        }

        public NNS_RGBA(float _r, float _g, float _b, float _a)
        {
            this.r = _r;
            this.g = _g;
            this.b = _b;
            this.a = _a;
        }

        public static explicit operator OpenGL.glArray4f(AppMain.NNS_RGBA c)
        {
            return new OpenGL.glArray4f(c.r, c.g, c.b, c.a);
        }
    }

    public class OBS_OBJECT_WORK : AppMain.IClearable
    {
        public readonly short[] view_out_ofst_plus = new short[4];
        public AppMain.VecU16 dir = new AppMain.VecU16();
        public AppMain.VecFx32 scale = new AppMain.VecFx32();
        public AppMain.VecFx32 pos = new AppMain.VecFx32();
        public AppMain.VecFx32 ofst = new AppMain.VecFx32();
        public AppMain.VecFx32 prev_ofst = new AppMain.VecFx32();
        public AppMain.VecFx32 parent_ofst = new AppMain.VecFx32();
        public AppMain.VecFx32 lock_ofst = new AppMain.VecFx32();
        public AppMain.VecFx32 prev_pos = new AppMain.VecFx32();
        public AppMain.VecFx32 spd = new AppMain.VecFx32();
        public AppMain.VecFx32 spd_add = new AppMain.VecFx32();
        public AppMain.VecFx32 flow = new AppMain.VecFx32();
        public AppMain.VecFx32 move = new AppMain.VecFx32();
        public readonly short[] field_rect = new short[4];
        public AppMain.VecFx32 temp_ofst = new AppMain.VecFx32();
        public AppMain.VecFx32 prev_temp_ofst = new AppMain.VecFx32();
        public AppMain.OBS_OBJECT_WORK prev;
        public AppMain.OBS_OBJECT_WORK next;
        public AppMain.OBS_OBJECT_WORK draw_prev;
        public AppMain.OBS_OBJECT_WORK draw_next;
        public AppMain.MTS_TASK_TCB tcb;
        public int pause_level;
        public ushort obj_type;
        public int vib_timer;
        public int hitstop_timer;
        public int invincible_timer;
        public short view_out_ofst;
        public uint flag;
        public uint move_flag;
        public uint disp_flag;
        public uint gmk_flag;
        public uint sys_flag;
        private object __user_flag;
        private object __user_work;
        public int user_timer;
        public int spd_m;
        public ushort dir_slope;
        public ushort dir_fall;
        public int spd_slope;
        public int spd_slope_max;
        public int spd_fall;
        public int spd_fall_max;
        public int push_max;
        public uint col_flag;
        public uint col_flag_prev;
        public sbyte field_ajst_w_db_f;
        public sbyte field_ajst_w_db_b;
        public sbyte field_ajst_w_dl_f;
        public sbyte field_ajst_w_dl_b;
        public sbyte field_ajst_w_dt_f;
        public sbyte field_ajst_w_dt_b;
        public sbyte field_ajst_w_dr_f;
        public sbyte field_ajst_w_dr_b;
        public sbyte field_ajst_h_db_r;
        public sbyte field_ajst_h_db_l;
        public sbyte field_ajst_h_dl_r;
        public sbyte field_ajst_h_dl_l;
        public sbyte field_ajst_h_dt_r;
        public sbyte field_ajst_h_dt_l;
        public sbyte field_ajst_h_dr_r;
        public sbyte field_ajst_h_dr_l;
        public AppMain.MPP_VOID_OBS_OBJECT_WORK ppFunc;
        public AppMain.MPP_VOID_OBS_OBJECT_WORK ppIn;
        public AppMain.MPP_VOID_OBS_OBJECT_WORK ppOut;
        public AppMain.MPP_VOID_OBS_OBJECT_WORK ppOutSub;
        public AppMain.MPP_VOID_OBS_OBJECT_WORK ppMove;
        public AppMain.OBS_OBJECT_WORK_Delegate2 ppActCall;
        public AppMain.MPP_VOID_OBS_OBJECT_WORK ppRec;
        public AppMain.MPP_VOID_OBS_OBJECT_WORK ppLast;
        public AppMain.MPP_VOID_OBS_OBJECT_WORK ppCol;
        public AppMain.OBS_OBJECT_WORK_Delegate3 ppViewCheck;
        public AppMain.OBS_OBJECT_WORK_Delegate4 ppUserRelease;
        public AppMain.OBS_OBJECT_WORK_Delegate4 ppUserReleaseWait;
        public AppMain.OBS_OBJECT_WORK ride_obj;
        public AppMain.OBS_OBJECT_WORK touch_obj;
        public AppMain.OBS_OBJECT_WORK parent_obj;
        public AppMain.OBS_OBJECT_WORK lock_obj;
        public AppMain.OBS_OBJECT_WORK locker_obj;
        public object ex_work;
        public AppMain.OBS_ACTION3D_NN_WORK obj_3d;
        public AppMain.OBS_ACTION3D_ES_WORK obj_3des;
        public AppMain.OBS_ACTION2D_AMA_WORK obj_2d;
        public AppMain.OBS_COLLISION_WORK col_work;
        public AppMain.OBS_TBL_WORK tbl_work;
        public uint rect_num;
        public AppMain.ArrayPointer<AppMain.OBS_RECT_WORK> rect_work;
        public object holder;
        public object m_primaryHolder;

        public OBS_OBJECT_WORK()
        {
        }

        private OBS_OBJECT_WORK(object _holder)
          : this(_holder, (object)null)
        {
        }

        private OBS_OBJECT_WORK(object _holder, object _primaryHolder)
        {
            this.holder = _holder;
            this.m_primaryHolder = _primaryHolder;
        }

        public static AppMain.OBS_OBJECT_WORK Create()
        {
            return new AppMain.OBS_OBJECT_WORK();
        }

        public static AppMain.OBS_OBJECT_WORK Create(object _holder)
        {
            AppMain.OBS_OBJECT_WORK obsObjectWork = AppMain.OBS_OBJECT_WORK.Create();
            obsObjectWork.holder = _holder;
            obsObjectWork.m_primaryHolder = (object)null;
            return obsObjectWork;
        }

        public static AppMain.OBS_OBJECT_WORK Create(object _holder, object _primaryHolder)
        {
            AppMain.OBS_OBJECT_WORK obsObjectWork = AppMain.OBS_OBJECT_WORK.Create();
            obsObjectWork.holder = _holder;
            obsObjectWork.m_primaryHolder = _primaryHolder;
            return obsObjectWork;
        }

        public static explicit operator AppMain.GMS_GMK_WATER_SLIDER_WORK(
          AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_WATER_SLIDER_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_GMK_UPBUMPER_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_UPBUMPER_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_GMK_STEAMP_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_STEAMP_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_GMK_PWALL_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_PWALL_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_GMK_SEESAWPARTS_WORK(
          AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_SEESAWPARTS_WORK)(AppMain.GMS_EFFECT_3DNN_WORK)p;
        }

        public static explicit operator AppMain.GMS_GMK_PRESSWALL_PARTS(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_PRESSWALL_PARTS)(AppMain.GMS_EFFECT_3DNN_WORK)p;
        }

        public static explicit operator AppMain.GMS_GMK_PWALLCTRL_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_PWALLCTRL_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_GMK_SEESAW_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_SEESAW_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_GMK_SHUTTER_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_SHUTTER_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_GMK_P_STEAM_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_P_STEAM_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_GMK_PISTONROD_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_PISTONROD_WORK)(AppMain.GMS_EFFECT_3DNN_WORK)p;
        }

        public static explicit operator AppMain.GMS_GMK_PISTON_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_PISTON_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_GMK_DRAIN_TANK_OUT_WORK(
          AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_DRAIN_TANK_OUT_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_GMK_BOSS3_PILLAR_WALL_WORK(
          AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_BOSS3_PILLAR_WALL_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_BOSS5_LAND_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_BOSS5_LAND_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_BOSS5_CTPLT_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_BOSS5_CTPLT_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_BOSS5_ROCKET_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_BOSS5_ROCKET_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_BOSS5_MGR_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_BOSS5_MGR_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_BOSS5_BODY_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_BOSS5_BODY_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_BOSS4_BODY_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_BOSS4_BODY_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_BOSS4_CAP_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_BOSS4_CAP_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_BOSS4_CHIBI_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_BOSS4_CHIBI_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_BOSS4_EGG_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_BOSS4_EGG_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_BOSS4_MGR_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_BOSS4_MGR_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_GMK_TRUCK_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_TRUCK_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_BOSS2_BALL_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_BOSS2_BALL_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_BOSS2_EGG_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_BOSS2_EGG_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_BOSS2_BODY_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_BOSS2_BODY_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_BOSS2_MGR_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_BOSS2_MGR_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_BOSS3_EGG_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_BOSS3_EGG_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_BOSS3_BODY_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_BOSS3_BODY_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_BOSS3_MGR_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_BOSS3_MGR_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_ENE_UNIDES_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_ENE_UNIDES_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_ENE_UNIUNI_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_ENE_UNIUNI_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_ENE_BUKU_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_ENE_BUKU_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_ENE_T_STAR_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_ENE_T_STAR_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_ENE_KANI_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_ENE_KANI_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_ENE_KAMA_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_ENE_KAMA_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_ENE_MOGU_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_ENE_MOGU_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_PLAYER_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return p == null ? (AppMain.GMS_PLAYER_WORK)null : (AppMain.GMS_PLAYER_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_GMK_SPCTPLT_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_SPCTPLT_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_GMK_SLOT_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_SLOT_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_GMK_CANNONPARTS_WORK(
          AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_CANNONPARTS_WORK)(AppMain.GMS_EFFECT_3DNN_WORK)p;
        }

        public static explicit operator AppMain.GMS_BOSS5_LDPART_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_BOSS5_LDPART_WORK)(AppMain.GMS_EFFECT_3DNN_WORK)p;
        }

        public static explicit operator AppMain.GMS_GMK_SLOTPARTS_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_SLOTPARTS_WORK)(AppMain.GMS_EFFECT_3DNN_WORK)p;
        }

        public static explicit operator AppMain.GMS_BOSS1_EFF_SHOCKWAVE_SUB_WORK(
          AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_BOSS1_EFF_SHOCKWAVE_SUB_WORK)(AppMain.GMS_EFFECT_3DES_WORK)p;
        }

        public static explicit operator AppMain.GMS_BOSS5_EFCT_GENERAL_WORK(
          AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_BOSS5_EFCT_GENERAL_WORK)(AppMain.GMS_EFFECT_3DES_WORK)p;
        }

        public static explicit operator AppMain.GMS_BOSS4_EFF_COMMON_WORK(
          AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_BOSS4_EFF_COMMON_WORK)(AppMain.GMS_EFFECT_3DES_WORK)p;
        }

        public static explicit operator AppMain.GMS_BOSS1_EFF_SHOCKWAVE_WORK(
          AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_BOSS1_EFF_SHOCKWAVE_WORK)(AppMain.GMS_EFFECT_3DES_WORK)p;
        }

        public static explicit operator AppMain.GMS_GMK_POPSTEAMPARTS_WORK(
          AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_POPSTEAMPARTS_WORK)(AppMain.GMS_EFFECT_COM_WORK)p;
        }

        public static explicit operator AppMain.GMS_BOSS1_FLASH_SCREEN_WORK(
          AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_BOSS1_FLASH_SCREEN_WORK)(AppMain.GMS_EFFECT_COM_WORK)p;
        }

        public static explicit operator AppMain.GMS_BS_CMN_NODE_CTRL_OBJECT(
          AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_BS_CMN_NODE_CTRL_OBJECT)(AppMain.GMS_EFFECT_COM_WORK)p;
        }

        public static explicit operator AppMain.GMS_ENE_HARO_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_ENE_HARO_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_GMK_STOPPER_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_STOPPER_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_BOSS1_CHAIN_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_BOSS1_CHAIN_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_ENE_GARDON_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_ENE_GARDON_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_GMK_BUMPER_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_BUMPER_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_BOSS1_EGG_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_BOSS1_EGG_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_BOSS1_MGR_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_BOSS1_MGR_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_BOSS1_BODY_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_BOSS1_BODY_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_GMK_BOSS3_PILLAR_MANAGER_WORK(
          AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_BOSS3_PILLAR_MANAGER_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_GMK_BLAND_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_BLAND_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_GMK_BWALL_PARTS(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_BWALL_PARTS)(AppMain.GMS_EFFECT_3DNN_WORK)p;
        }

        public static explicit operator AppMain.GMS_GMK_BWALL_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_BWALL_WORK)((AppMain.GMS_ENEMY_3D_WORK)p.m_primaryHolder).holder;
        }

        public static explicit operator AppMain.GMS_GMK_SW_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_SW_WORK)((AppMain.GMS_ENEMY_3D_WORK)p.m_primaryHolder).holder;
        }

        public static explicit operator AppMain.GMS_GMK_PMARKER_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_PMARKER_WORK)(AppMain.GMS_ENEMY_3D_WORK)p.m_primaryHolder;
        }

        public static explicit operator AppMain.GMS_EFFECT_3DNN_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_EFFECT_3DNN_WORK)((AppMain.GMS_EFFECT_COM_WORK)p.holder).holder;
        }

        public static explicit operator AppMain.GMS_GMK_CAM_SCR_LIMIT_WORK(
          AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_CAM_SCR_LIMIT_WORK)p.m_primaryHolder;
        }

        public static explicit operator AppMain.GMS_ENE_STING_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_ENE_STING_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_BOSS5_EGG_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_BOSS5_EGG_WORK)(AppMain.GMS_ENEMY_3D_WORK)p.m_primaryHolder;
        }

        public static explicit operator AppMain.GMS_ENEMY_3D_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_ENEMY_3D_WORK)(AppMain.GMS_ENEMY_COM_WORK)p;
        }

        public static explicit operator AppMain.GMS_DECO_SUBMODEL_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_DECO_SUBMODEL_WORK)(AppMain.GMS_DECO_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_DECO_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_DECO_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_BOSS5_CORE_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_BOSS5_CORE_WORK)(AppMain.GMS_ENEMY_COM_WORK)p;
        }

        public static explicit operator AppMain.GMS_ENEMY_COM_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return p == null ? (AppMain.GMS_ENEMY_COM_WORK)null : (AppMain.GMS_ENEMY_COM_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_SCORE_DISP_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_SCORE_DISP_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_GMK_CANNON_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_CANNON_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_GMK_BOSS3_PILLAR_MAIN_WORK(
          AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_BOSS3_PILLAR_MAIN_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_BOSS5_TURRET_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_BOSS5_TURRET_WORK)((AppMain.GMS_ENEMY_3D_WORK)((AppMain.GMS_ENEMY_COM_WORK)p.holder).holder).holder;
        }

        public static explicit operator AppMain.GMS_ENE_HARI_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_ENE_HARI_WORK)((AppMain.GMS_ENEMY_3D_WORK)((AppMain.GMS_ENEMY_COM_WORK)p.holder).holder).holder;
        }

        public static explicit operator AppMain.GMS_GMK_PULLEY_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_PULLEY_WORK)((AppMain.GMS_ENEMY_3D_WORK)((AppMain.GMS_ENEMY_COM_WORK)p.holder).holder).holder;
        }

        public static explicit operator AppMain.GMS_ENE_MOTORA_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_ENE_MOTORA_WORK)((AppMain.GMS_ENEMY_3D_WORK)((AppMain.GMS_ENEMY_COM_WORK)p.holder).holder).holder;
        }

        public static explicit operator AppMain.GMS_GMK_BOBJ_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_BOBJ_WORK)((AppMain.GMS_ENEMY_3D_WORK)((AppMain.GMS_ENEMY_COM_WORK)p.holder).holder).holder;
        }

        public static explicit operator AppMain.GMS_GMK_BOBJ_PARTS(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_BOBJ_PARTS)((AppMain.GMS_EFFECT_3DNN_WORK)((AppMain.GMS_EFFECT_COM_WORK)p.holder).holder).holder;
        }

        public static explicit operator AppMain.GMS_EFFECT_3DES_WORK(AppMain.OBS_OBJECT_WORK work)
        {
            return (AppMain.GMS_EFFECT_3DES_WORK)(AppMain.GMS_EFFECT_COM_WORK)work.holder;
        }

        public static explicit operator AppMain.DMS_STFRL_BOSS_BODY_WORK(
          AppMain.OBS_OBJECT_WORK work)
        {
            return (AppMain.DMS_STFRL_BOSS_BODY_WORK)work.holder;
        }

        public static explicit operator AppMain.DMS_STFRL_BOSS_EGG_WORK(
          AppMain.OBS_OBJECT_WORK work)
        {
            return (AppMain.DMS_STFRL_BOSS_EGG_WORK)work.holder;
        }

        public static explicit operator AppMain.DMS_STFRL_RING_WORK(AppMain.OBS_OBJECT_WORK work)
        {
            return (AppMain.DMS_STFRL_RING_WORK)work.holder;
        }

        public static explicit operator AppMain.DMS_STFRL_SONIC_WORK(AppMain.OBS_OBJECT_WORK work)
        {
            return (AppMain.DMS_STFRL_SONIC_WORK)work.holder;
        }

        public static explicit operator AppMain.GMS_FADE_OBJ_WORK(AppMain.OBS_OBJECT_WORK work)
        {
            return (AppMain.GMS_FADE_OBJ_WORK)work.holder;
        }

        public static explicit operator AppMain.GMS_SMSG_2D_OBJ_WORK(AppMain.OBS_OBJECT_WORK work)
        {
            return (AppMain.GMS_SMSG_2D_OBJ_WORK)work.holder;
        }

        public static explicit operator AppMain.GMS_GMK_GEAR_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_GEAR_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_GMK_BELTC_WORK(AppMain.OBS_OBJECT_WORK p)
        {
            return (AppMain.GMS_GMK_BELTC_WORK)(AppMain.GMS_ENEMY_3D_WORK)p;
        }

        public static explicit operator AppMain.GMS_GMK_ROCK_FALL_WORK(
          AppMain.OBS_OBJECT_WORK work)
        {
            return (AppMain.GMS_GMK_ROCK_FALL_WORK)((AppMain.GMS_ENEMY_3D_WORK)((AppMain.GMS_ENEMY_COM_WORK)work.holder).holder).holder;
        }

        public static explicit operator AppMain.GMS_GMK_ROCK_FALL_MGR_WORK(
          AppMain.OBS_OBJECT_WORK work)
        {
            return (AppMain.GMS_GMK_ROCK_FALL_MGR_WORK)((AppMain.GMS_ENEMY_3D_WORK)((AppMain.GMS_ENEMY_COM_WORK)work.holder).holder).holder;
        }

        public static explicit operator AppMain.GMS_BOSS5_ALARM_FADE_WORK(
          AppMain.OBS_OBJECT_WORK work)
        {
            return (AppMain.GMS_BOSS5_ALARM_FADE_WORK)(AppMain.GMS_FADE_OBJ_WORK)work.holder;
        }

        public static explicit operator AppMain.GMS_BOSS5_FLASH_SCREEN_WORK(
          AppMain.OBS_OBJECT_WORK work)
        {
            return (AppMain.GMS_BOSS5_FLASH_SCREEN_WORK)(AppMain.GMS_EFFECT_COM_WORK)work.holder;
        }

        public static explicit operator AppMain.GMS_GMK_ROCK_CHASE_WORK(
          AppMain.OBS_OBJECT_WORK work)
        {
            return (AppMain.GMS_GMK_ROCK_CHASE_WORK)((AppMain.GMS_ENEMY_3D_WORK)((AppMain.GMS_ENEMY_COM_WORK)work.holder).holder).holder;
        }

        public static explicit operator AppMain.GMS_GMK_SPEARPARTS_WORK(
          AppMain.OBS_OBJECT_WORK work)
        {
            return (AppMain.GMS_GMK_SPEARPARTS_WORK)((AppMain.GMS_EFFECT_3DNN_WORK)((AppMain.GMS_EFFECT_COM_WORK)work.holder).holder).holder;
        }

        public static explicit operator AppMain.GMS_GMK_SPEAR_WORK(AppMain.OBS_OBJECT_WORK work)
        {
            return (AppMain.GMS_GMK_SPEAR_WORK)((AppMain.GMS_ENEMY_3D_WORK)((AppMain.GMS_ENEMY_COM_WORK)work.holder).holder).holder;
        }

        public static explicit operator AppMain.GMS_GMK_ROCK_WORK(AppMain.OBS_OBJECT_WORK work)
        {
            return (AppMain.GMS_GMK_ROCK_WORK)((AppMain.GMS_ENEMY_3D_WORK)((AppMain.GMS_ENEMY_COM_WORK)work.holder).holder).holder;
        }

        public static explicit operator AppMain.GMS_GMK_SWWALL_WORK(AppMain.OBS_OBJECT_WORK work)
        {
            return (AppMain.GMS_GMK_SWWALL_WORK)((AppMain.GMS_ENEMY_3D_WORK)((AppMain.GMS_ENEMY_COM_WORK)work.holder).holder).holder;
        }

        public void Clear()
        {
            this.prev = this.next = this.draw_prev = this.draw_next = (AppMain.OBS_OBJECT_WORK)null;
            this.tcb = (AppMain.MTS_TASK_TCB)null;
            this.pause_level = 0;
            this.obj_type = (ushort)0;
            this.vib_timer = this.hitstop_timer = this.invincible_timer = 0;
            this.view_out_ofst = (short)0;
            Array.Clear((Array)this.view_out_ofst_plus, 0, this.view_out_ofst_plus.Length);
            this.user_work_OBJECT = (object)null;
            this.user_flag_OBJECT = (object)null;
            this.flag = 0U;
            this.move_flag = 0U;
            this.disp_flag = 0U;
            this.gmk_flag = 0U;
            this.sys_flag = 0U;
            this.user_timer = 0;
            this.dir.Clear();
            this.scale.Clear();
            this.pos.Clear();
            this.ofst.Clear();
            this.prev_ofst.Clear();
            this.parent_ofst.Clear();
            this.lock_obj = (AppMain.OBS_OBJECT_WORK)null;
            this.prev_pos.Clear();
            this.spd.Clear();
            this.spd_add.Clear();
            this.flow.Clear();
            this.move.Clear();
            this.spd_m = 0;
            this.dir_slope = this.dir_fall = (ushort)0;
            this.spd_slope = this.spd_slope_max = this.spd_fall = this.spd_fall_max = this.push_max = 0;
            this.col_flag = this.col_flag_prev = 0U;
            Array.Clear((Array)this.field_rect, 0, this.field_rect.Length);
            this.field_ajst_w_db_f = this.field_ajst_w_db_b = this.field_ajst_w_dl_f = this.field_ajst_w_dl_b = (sbyte)0;
            this.field_ajst_w_dt_f = this.field_ajst_w_dt_b = this.field_ajst_w_dr_f = this.field_ajst_w_dr_b = (sbyte)0;
            this.field_ajst_h_db_r = this.field_ajst_h_db_l = this.field_ajst_h_dl_r = this.field_ajst_h_dl_l = (sbyte)0;
            this.field_ajst_h_dt_r = this.field_ajst_h_dt_l = this.field_ajst_h_dr_r = this.field_ajst_h_dr_l = (sbyte)0;
            this.ppFunc = this.ppIn = this.ppOut = this.ppOutSub = this.ppMove = (AppMain.MPP_VOID_OBS_OBJECT_WORK)null;
            this.ppActCall = (AppMain.OBS_OBJECT_WORK_Delegate2)null;
            this.ppRec = this.ppLast = this.ppCol = (AppMain.MPP_VOID_OBS_OBJECT_WORK)null;
            this.ppViewCheck = (AppMain.OBS_OBJECT_WORK_Delegate3)null;
            this.ppUserRelease = this.ppUserReleaseWait;
            this.ride_obj = this.touch_obj = this.lock_obj = this.locker_obj = (AppMain.OBS_OBJECT_WORK)null;
            this.parent_obj = (AppMain.OBS_OBJECT_WORK)null;
            this.ex_work = (object)null;
            this.obj_3d = (AppMain.OBS_ACTION3D_NN_WORK)null;
            this.obj_3des = (AppMain.OBS_ACTION3D_ES_WORK)null;
            this.obj_2d = (AppMain.OBS_ACTION2D_AMA_WORK)null;
            this.col_work = (AppMain.OBS_COLLISION_WORK)null;
            this.tbl_work = (AppMain.OBS_TBL_WORK)null;
            this.temp_ofst.Clear();
            this.prev_temp_ofst.Clear();
            this.rect_num = 0U;
            this.rect_work = (AppMain.ArrayPointer<AppMain.OBS_RECT_WORK>)(AppMain.OBS_RECT_WORK[])null;
        }

        public uint user_flag
        {
            get
            {
                return this.__user_flag != null ? Convert.ToUInt32(this.__user_flag is ValueType ? this.__user_flag : (object)1) : 0U;
            }
            set
            {
                this.__user_flag = (object)value;
            }
        }

        public uint user_work
        {
            get
            {
                return Convert.ToUInt32(this.__user_work);
            }
            set
            {
                this.__user_work = (object)value;
            }
        }

        public object user_flag_OBJECT
        {
            get
            {
                return this.__user_flag;
            }
            set
            {
                this.__user_flag = value;
            }
        }

        public object user_work_OBJECT
        {
            get
            {
                return this.__user_work;
            }
            set
            {
                this.__user_work = value;
            }
        }

        public AppMain.OBS_OBJECT_WORK Assign(AppMain.OBS_OBJECT_WORK objectWork)
        {
            if (this != objectWork)
            {
                this.prev = objectWork.prev;
                this.next = objectWork.next;
                this.draw_prev = objectWork.draw_prev;
                this.draw_next = objectWork.draw_next;
                this.tcb = objectWork.tcb;
                this.pause_level = objectWork.pause_level;
                this.obj_type = objectWork.obj_type;
                this.vib_timer = objectWork.vib_timer;
                this.hitstop_timer = objectWork.hitstop_timer;
                this.invincible_timer = objectWork.invincible_timer;
                this.view_out_ofst = objectWork.view_out_ofst;
                for (int index = 0; index < this.view_out_ofst_plus.Length; ++index)
                    this.view_out_ofst_plus[index] = objectWork.view_out_ofst_plus[index];
                this.flag = objectWork.flag;
                this.move_flag = objectWork.move_flag;
                this.disp_flag = objectWork.disp_flag;
                this.gmk_flag = objectWork.gmk_flag;
                this.sys_flag = objectWork.sys_flag;
                this.user_flag = objectWork.user_flag;
                this.user_work = objectWork.user_work;
                this.user_timer = objectWork.user_timer;
                this.dir.Assign(objectWork.dir);
                this.scale.Assign(objectWork.scale);
                this.pos.Assign(objectWork.pos);
                this.ofst.Assign(objectWork.ofst);
                this.prev_ofst.Assign(objectWork.prev_ofst);
                this.parent_ofst.Assign(objectWork.parent_ofst);
                this.lock_ofst.Assign(objectWork.lock_ofst);
                this.prev_pos.Assign(objectWork.prev_pos);
                this.spd.Assign(objectWork.spd);
                this.spd_add.Assign(objectWork.spd_add);
                this.flow.Assign(objectWork.flow);
                this.move.Assign(objectWork.move);
                this.spd_m = objectWork.spd_m;
                this.dir_slope = objectWork.dir_slope;
                this.dir_fall = objectWork.dir_fall;
                this.spd_slope = objectWork.spd_slope;
                this.spd_slope_max = objectWork.spd_slope_max;
                this.spd_fall = objectWork.spd_fall;
                this.spd_fall_max = objectWork.spd_fall_max;
                this.push_max = objectWork.push_max;
                this.col_flag = objectWork.col_flag;
                this.col_flag_prev = objectWork.col_flag_prev;
                for (int index = 0; index < this.field_rect.Length; ++index)
                    this.field_rect[index] = objectWork.field_rect[index];
                this.field_ajst_w_db_f = objectWork.field_ajst_w_db_f;
                this.field_ajst_w_db_b = objectWork.field_ajst_w_db_b;
                this.field_ajst_w_dl_f = objectWork.field_ajst_w_dl_f;
                this.field_ajst_w_dl_b = objectWork.field_ajst_w_dl_b;
                this.field_ajst_w_dt_f = objectWork.field_ajst_w_dt_f;
                this.field_ajst_w_dt_b = objectWork.field_ajst_w_dt_b;
                this.field_ajst_w_dr_f = objectWork.field_ajst_w_dr_f;
                this.field_ajst_w_dr_b = objectWork.field_ajst_w_dr_b;
                this.field_ajst_h_db_r = objectWork.field_ajst_h_db_r;
                this.field_ajst_h_db_l = objectWork.field_ajst_h_db_l;
                this.field_ajst_h_dl_r = objectWork.field_ajst_h_dl_r;
                this.field_ajst_h_dl_l = objectWork.field_ajst_h_dl_l;
                this.field_ajst_h_dt_r = objectWork.field_ajst_h_dt_r;
                this.field_ajst_h_dt_l = objectWork.field_ajst_h_dt_l;
                this.field_ajst_h_dr_r = objectWork.field_ajst_h_dr_r;
                this.field_ajst_h_dr_l = objectWork.field_ajst_h_dr_l;
                this.ppFunc = objectWork.ppFunc;
                this.ppIn = objectWork.ppIn;
                this.ppOut = objectWork.ppOut;
                this.ppOutSub = objectWork.ppOutSub;
                this.ppMove = objectWork.ppMove;
                this.ppActCall = objectWork.ppActCall;
                this.ppRec = objectWork.ppRec;
                this.ppLast = objectWork.ppLast;
                this.ppCol = objectWork.ppCol;
                this.ppViewCheck = objectWork.ppViewCheck;
                this.ppUserRelease = objectWork.ppUserRelease;
                this.ppUserReleaseWait = objectWork.ppUserReleaseWait;
                this.ride_obj = objectWork.ride_obj;
                this.touch_obj = objectWork.touch_obj;
                this.parent_obj = objectWork.parent_obj;
                this.lock_obj = objectWork.lock_obj;
                this.locker_obj = objectWork.locker_obj;
                this.ex_work = objectWork.ex_work;
                this.obj_3d = objectWork.obj_3d;
                this.obj_3des = objectWork.obj_3des;
                this.obj_2d = objectWork.obj_2d;
                this.col_work = objectWork.col_work;
                this.tbl_work = objectWork.tbl_work;
                this.temp_ofst.Assign(objectWork.temp_ofst);
                this.prev_temp_ofst.Assign(objectWork.prev_temp_ofst);
                this.rect_num = objectWork.rect_num;
                this.rect_work = objectWork.rect_work;
            }
            return this;
        }
    }

    public class NNS_TEXLIST
    {
        public int nTex;
        public AppMain.NNS_TEXINFO[] pTexInfoList;

        public NNS_TEXLIST()
        {
        }

        public NNS_TEXLIST(AppMain.NNS_TEXLIST pFrom)
        {
            this.nTex = pFrom.nTex;
            this.pTexInfoList = new AppMain.NNS_TEXINFO[this.nTex];
            for (int index = 0; index < this.nTex; ++index)
                this.pTexInfoList[index] = new AppMain.NNS_TEXINFO(pFrom.pTexInfoList[index]);
        }

        public void Clear()
        {
            this.nTex = 0;
            this.pTexInfoList = (AppMain.NNS_TEXINFO[])null;
        }
    }

    public struct VecFx32 : AppMain.IClearable
    {
        public int x;
        public int y;
        public int z;

        public void Clear()
        {
            this.x = this.y = this.z = 0;
        }

        public VecFx32(int _x, int _y, int _z)
        {
            this.x = _x;
            this.y = _y;
            this.z = _z;
        }

        public VecFx32(AppMain.VecFx32 vecFx32)
        {
            this.x = vecFx32.x;
            this.y = vecFx32.y;
            this.z = vecFx32.z;
        }

        public void Assign(AppMain.VecFx32 vecFx32)
        {
            this.x = vecFx32.x;
            this.y = vecFx32.y;
            this.z = vecFx32.z;
        }
    }

    public class AMS_TRAIL_PARTS
    {
        public readonly AppMain.NNS_VECTOR pos = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_VECTOR sub_pos = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_VECTOR dir = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public ushort[] Dummy = new ushort[5];
        public float time;
        public AppMain.AMS_TRAIL_PARTS pNext;
        public AppMain.AMS_TRAIL_PARTS pPrev;
        public uint m_Flag;
        public short partsId;

        public void Clear()
        {
            this.pos.Clear();
            this.sub_pos.Clear();
            this.dir.Clear();
            this.time = 0.0f;
            this.pNext = (AppMain.AMS_TRAIL_PARTS)null;
            this.pPrev = (AppMain.AMS_TRAIL_PARTS)null;
            this.m_Flag = 0U;
            this.partsId = (short)0;
            Array.Clear((Array)this.Dummy, 0, this.Dummy.Length);
        }
    }

    public class AMS_TRAIL_PARTSDATA
    {
        public AppMain.AMS_TRAIL_PARTS[] parts = AppMain.New<AppMain.AMS_TRAIL_PARTS>(64);
        public AppMain.AMS_TRAIL_PARTS trailHead = new AppMain.AMS_TRAIL_PARTS();
        public AppMain.AMS_TRAIL_PARTS trailTail = new AppMain.AMS_TRAIL_PARTS();

        public void Clear()
        {
            foreach (AppMain.AMS_TRAIL_PARTS part in this.parts)
                part.Clear();
            this.trailHead.Clear();
            this.trailTail.Clear();
        }
    }

    public class AMS_TRAIL_INTERFACE
    {
        public AppMain.AMS_TRAIL_PARTSDATA[] trailData = AppMain.New<AppMain.AMS_TRAIL_PARTSDATA>(8);
        public AppMain.AMS_TRAIL_EFFECT[] trailEffect = new AppMain.AMS_TRAIL_EFFECT[8];
        public short trailId;
        public short trailNum;
        public short trailState;
    }

    public class AMTRS_FC_PARAM
    {
        public float[] m_x = new float[4];
        public float[] m_y = new float[4];
        public float[] m_z = new float[4];
        public float[] m_Dx = new float[4];
        public float[] m_Dy = new float[4];
        public float[] m_Dz = new float[4];
        public AppMain.NNS_VECTOR4D m_CalcParam = new AppMain.NNS_VECTOR4D();
        public float m_t;
        public uint m_flag;
    }

    public class NNS_VECTOR4D : AppMain.NNS_VECTOR
    {
        public float w;

        public new void Clear()
        {
            base.Clear();
            this.w = 0.0f;
        }

        public void Assign(AppMain.NNS_VECTOR4D v)
        {
            this.x = v.x;
            this.y = v.y;
            this.z = v.z;
            this.w = v.w;
        }

        public static explicit operator OpenGL.glArray4f(AppMain.NNS_VECTOR4D v)
        {
            return new OpenGL.glArray4f(v.x, v.y, v.z, v.w);
        }

        public static explicit operator float[] (AppMain.NNS_VECTOR4D v)
        {
            return new float[4] { v.x, v.y, v.z, v.w };
        }
    }

    public class GMS_PAUSE_WORK
    {
        public uint flag;
        public AppMain.GMS_PAUSE_WORK._proc_update_ proc_update;
        public uint time_count_flag_save;

        internal void Clear()
        {
            this.flag = 0U;
            this.proc_update = (AppMain.GMS_PAUSE_WORK._proc_update_)null;
            this.time_count_flag_save = 0U;
        }

        public delegate void _proc_update_(AppMain.GMS_PAUSE_WORK work);
    }

    private struct GMS_PAD_VIB_WORK
    {
        public int vib_type;
        public float time;
        public float add_dec_time;
        public float int_vib_time;
        public float int_stop_time;
        public ushort left_vib;
        public ushort right_vib;
        public uint flag;
        public float time_count;
        public float int_count;
        public uint prio;
    }

    public class GMS_GMK_SLOT_REEL_STATUS_WORK
    {
        public short reel;
        public int reel_spd;
        public int reel_acc;
        public int reel_time;
        public int reel_target_pos;
        public int reel_target_mark;
        public int reel_extime;
        public int reel_se;
    }

    private interface IOBS_OBJECT_WORK
    {
        AppMain.OBS_OBJECT_WORK Cast();
    }

    public class GMS_GMK_SLOT_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_GMK_SLOT_REEL_STATUS_WORK[] reel_status = AppMain.New<AppMain.GMS_GMK_SLOT_REEL_STATUS_WORK>(3);
        public readonly short[] prob = new short[5];
        public readonly AppMain.GMS_ENEMY_3D_WORK gmk_work;
        public int current_reel;
        public int slot_id;
        public int timer;
        public int timer_next;
        public int timer_meoshi_wait;
        public int slot_step;
        public int slot_se;
        public int slot_se_timer;
        public int suberi_cnt;
        public int suberi_input;
        public short lotresult;
        public int freestop;
        public int ppos_x;
        public int ppos_y;

        public GMS_GMK_SLOT_WORK()
        {
            this.gmk_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_GMK_SLOT_WORK work)
        {
            return work.gmk_work.ene_com.obj_work;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.gmk_work.ene_com.obj_work;
        }

        public static explicit operator AppMain.GMS_ENEMY_3D_WORK(AppMain.GMS_GMK_SLOT_WORK p)
        {
            return p.gmk_work;
        }
    }

    public class GMS_ENEMY_3D_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.OBS_ACTION3D_NN_WORK obj_3d = new AppMain.OBS_ACTION3D_NN_WORK();
        public readonly AppMain.GMS_ENEMY_COM_WORK ene_com;
        public readonly object holder;

        public GMS_ENEMY_3D_WORK()
        {
            this.ene_com = new AppMain.GMS_ENEMY_COM_WORK((object)this);
        }

        public GMS_ENEMY_3D_WORK(object _holder)
        {
            this.ene_com = new AppMain.GMS_ENEMY_COM_WORK((object)this);
            this.holder = _holder;
        }

        public static explicit operator AppMain.GMS_GMK_GEAR_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_GMK_GEAR_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_GMK_WATER_SLIDER_WORK(
          AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_GMK_WATER_SLIDER_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_GMK_UPBUMPER_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_GMK_UPBUMPER_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_GMK_STEAMP_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_GMK_STEAMP_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_GMK_SEESAW_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_GMK_SEESAW_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_GMK_PWALL_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_GMK_PWALL_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_GMK_PWALLCTRL_WORK(
          AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_GMK_PWALLCTRL_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_GMK_SHUTTER_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_GMK_SHUTTER_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_GMK_P_STEAM_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_GMK_P_STEAM_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_GMK_PISTON_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_GMK_PISTON_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_GMK_DRAIN_TANK_OUT_WORK(
          AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_GMK_DRAIN_TANK_OUT_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_GMK_CANNON_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_GMK_CANNON_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_GMK_BOSS3_PILLAR_MAIN_WORK(
          AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_GMK_BOSS3_PILLAR_MAIN_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_GMK_BOSS3_PILLAR_MANAGER_WORK(
          AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_GMK_BOSS3_PILLAR_MANAGER_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_GMK_BOSS3_PILLAR_WALL_WORK(
          AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_GMK_BOSS3_PILLAR_WALL_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_BOSS5_LAND_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_BOSS5_LAND_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_BOSS5_CTPLT_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_BOSS5_CTPLT_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_BOSS5_TURRET_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_BOSS5_TURRET_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_BOSS5_EGG_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_BOSS5_EGG_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_BOSS5_ROCKET_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_BOSS5_ROCKET_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_BOSS5_MGR_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_BOSS5_MGR_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_BOSS5_BODY_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_BOSS5_BODY_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_BOSS4_CHIBI_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_BOSS4_CHIBI_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_BOSS4_BODY_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_BOSS4_BODY_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_BOSS4_CAP_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_BOSS4_CAP_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_BOSS4_EGG_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_BOSS4_EGG_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_BOSS4_MGR_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_BOSS4_MGR_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_GMK_TRUCK_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_GMK_TRUCK_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_BOSS2_BALL_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_BOSS2_BALL_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_BOSS2_EGG_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_BOSS2_EGG_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_BOSS2_BODY_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_BOSS2_BODY_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_BOSS2_MGR_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_BOSS2_MGR_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_BOSS3_EGG_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_BOSS3_EGG_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_BOSS3_BODY_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_BOSS3_BODY_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_BOSS3_MGR_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_BOSS3_MGR_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_ENE_UNIUNI_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_ENE_UNIUNI_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_ENE_UNIDES_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_ENE_UNIDES_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_ENE_BUKU_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_ENE_BUKU_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_ENE_T_STAR_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_ENE_T_STAR_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_ENE_KANI_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_ENE_KANI_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_ENE_KAMA_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return p == null ? (AppMain.GMS_ENE_KAMA_WORK)null : (AppMain.GMS_ENE_KAMA_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_ENE_MOGU_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_ENE_MOGU_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_GMK_SPCTPLT_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_GMK_SPCTPLT_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_GMK_SLOT_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_GMK_SLOT_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_GMK_STOPPER_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_GMK_STOPPER_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_ENE_HARO_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_ENE_HARO_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_ENE_GARDON_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_ENE_GARDON_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_GMK_BUMPER_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_GMK_BUMPER_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_BOSS1_CHAIN_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_BOSS1_CHAIN_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_BOSS1_MGR_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_BOSS1_MGR_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_BOSS1_EGG_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_BOSS1_EGG_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_BOSS1_BODY_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_BOSS1_BODY_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_GMK_PULLEY_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_GMK_PULLEY_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_ENE_STING_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_ENE_STING_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_GMK_BLAND_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_GMK_BLAND_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_GMK_PMARKER_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_GMK_PMARKER_WORK)p.holder;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_ENEMY_3D_WORK work)
        {
            return work.ene_com.obj_work;
        }

        public static explicit operator AppMain.GMS_GMK_NEEDLE_WORK(
          AppMain.GMS_ENEMY_3D_WORK work)
        {
            return (AppMain.GMS_GMK_NEEDLE_WORK)work.holder;
        }

        public static explicit operator AppMain.GMS_ENE_HARI_WORK(AppMain.GMS_ENEMY_3D_WORK work)
        {
            return (AppMain.GMS_ENE_HARI_WORK)work.holder;
        }

        public static explicit operator AppMain.GMS_ENE_MOTORA_WORK(
          AppMain.GMS_ENEMY_3D_WORK work)
        {
            return (AppMain.GMS_ENE_MOTORA_WORK)work.holder;
        }

        public static explicit operator AppMain.GMS_GMK_BOBJ_WORK(AppMain.GMS_ENEMY_3D_WORK work)
        {
            return (AppMain.GMS_GMK_BOBJ_WORK)work.holder;
        }

        public static explicit operator AppMain.GMS_GMK_BOBJ_PARTS(AppMain.GMS_ENEMY_3D_WORK work)
        {
            return (AppMain.GMS_GMK_BOBJ_PARTS)work.holder;
        }

        public static explicit operator AppMain.GMS_GMK_BELTC_WORK(AppMain.GMS_ENEMY_3D_WORK p)
        {
            return (AppMain.GMS_GMK_BELTC_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_GMK_ROCK_FALL_WORK(
          AppMain.GMS_ENEMY_3D_WORK work)
        {
            return (AppMain.GMS_GMK_ROCK_FALL_WORK)work.holder;
        }

        public static explicit operator AppMain.GMS_GMK_ROCK_FALL_MGR_WORK(
          AppMain.GMS_ENEMY_3D_WORK work)
        {
            return (AppMain.GMS_GMK_ROCK_FALL_MGR_WORK)work.holder;
        }

        public static explicit operator AppMain.GMS_GMK_ROCK_CHASE_WORK(
          AppMain.GMS_ENEMY_3D_WORK work)
        {
            return (AppMain.GMS_GMK_ROCK_CHASE_WORK)work.holder;
        }
    }

    public class GMS_ENEMY_COM_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.OBS_RECT_WORK[] rect_work = AppMain.New<AppMain.OBS_RECT_WORK>(3);
        public readonly AppMain.OBS_COLLISION_WORK col_work = new AppMain.OBS_COLLISION_WORK();
        public AppMain.VecU16 target_dp_dir = new AppMain.VecU16();
        public AppMain.VecFx32 target_dp_pos = new AppMain.VecFx32();
        public readonly AppMain.OBS_OBJECT_WORK obj_work;
        public AppMain.GMS_EVE_RECORD_EVENT eve_rec;
        public byte eve_x;
        public byte vit;
        public int born_pos_x;
        public int born_pos_y;
        public int invincible_timer;
        public uint enemy_flag;
        public ushort act_state;
        public AppMain.OBS_OBJECT_WORK target_obj;
        public int target_dp_dist;
        public readonly object holder;

        public static explicit operator AppMain.GMS_GMK_TRUCK_WORK(AppMain.GMS_ENEMY_COM_WORK p)
        {
            return (AppMain.GMS_GMK_TRUCK_WORK)(AppMain.GMS_ENEMY_3D_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_BOSS5_CORE_WORK(AppMain.GMS_ENEMY_COM_WORK p)
        {
            return (AppMain.GMS_BOSS5_CORE_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_ENEMY_3D_WORK(AppMain.GMS_ENEMY_COM_WORK p)
        {
            return p == null ? (AppMain.GMS_ENEMY_3D_WORK)null : (AppMain.GMS_ENEMY_3D_WORK)p.holder;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_ENEMY_COM_WORK work)
        {
            return work.obj_work;
        }

        public GMS_ENEMY_COM_WORK()
        {
            this.obj_work = AppMain.OBS_OBJECT_WORK.Create((object)this, (object)null);
        }

        public GMS_ENEMY_COM_WORK(object p)
        {
            this.holder = p;
            this.obj_work = AppMain.OBS_OBJECT_WORK.Create((object)this, p);
        }
    }

    public class GMS_GMK_SLOTPARTS_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_EFFECT_3DNN_WORK eff_work;
        public AppMain.GMS_GMK_SLOT_WORK slot_work;
        public int reel_id;
        public float tex_v;

        public GMS_GMK_SLOTPARTS_WORK()
        {
            this.eff_work = new AppMain.GMS_EFFECT_3DNN_WORK((object)this);
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(
          AppMain.GMS_GMK_SLOTPARTS_WORK work)
        {
            return work.eff_work.efct_com.obj_work;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.eff_work.efct_com.obj_work;
        }
    }

    public class GMS_EFFECT_3DNN_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public AppMain.OBS_ACTION3D_NN_WORK obj_3d = new AppMain.OBS_ACTION3D_NN_WORK();
        public AppMain.GMS_EFFECT_COM_WORK efct_com;
        public readonly object holder;

        public GMS_EFFECT_3DNN_WORK()
        {
            this.efct_com = new AppMain.GMS_EFFECT_COM_WORK((object)this);
        }

        public GMS_EFFECT_3DNN_WORK(object _holder)
        {
            this.efct_com = new AppMain.GMS_EFFECT_COM_WORK((object)this);
            this.holder = _holder;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.efct_com.obj_work;
        }

        public static explicit operator AppMain.GMS_GMK_PRESSWALL_PARTS(
          AppMain.GMS_EFFECT_3DNN_WORK work)
        {
            return (AppMain.GMS_GMK_PRESSWALL_PARTS)work.holder;
        }

        public static explicit operator AppMain.GMS_GMK_SEESAWPARTS_WORK(
          AppMain.GMS_EFFECT_3DNN_WORK work)
        {
            return (AppMain.GMS_GMK_SEESAWPARTS_WORK)work.holder;
        }

        public static explicit operator AppMain.GMS_GMK_POPSTEAMPARTS_WORK(
          AppMain.GMS_EFFECT_3DNN_WORK work)
        {
            return (AppMain.GMS_GMK_POPSTEAMPARTS_WORK)work.holder;
        }

        public static explicit operator AppMain.GMS_GMK_PISTONROD_WORK(
          AppMain.GMS_EFFECT_3DNN_WORK work)
        {
            return (AppMain.GMS_GMK_PISTONROD_WORK)work.holder;
        }

        public static explicit operator AppMain.GMS_GMK_CANNONPARTS_WORK(
          AppMain.GMS_EFFECT_3DNN_WORK work)
        {
            return (AppMain.GMS_GMK_CANNONPARTS_WORK)work.holder;
        }

        public static explicit operator AppMain.GMS_BOSS5_LDPART_WORK(
          AppMain.GMS_EFFECT_3DNN_WORK work)
        {
            return (AppMain.GMS_BOSS5_LDPART_WORK)work.holder;
        }

        public static explicit operator AppMain.GMS_GMK_SLOTPARTS_WORK(
          AppMain.GMS_EFFECT_3DNN_WORK work)
        {
            return (AppMain.GMS_GMK_SLOTPARTS_WORK)work.holder;
        }

        public static explicit operator AppMain.GMS_GMK_BWALL_PARTS(
          AppMain.GMS_EFFECT_3DNN_WORK work)
        {
            return (AppMain.GMS_GMK_BWALL_PARTS)work.holder;
        }

        public static explicit operator AppMain.GMS_GMK_BOBJ_PARTS(
          AppMain.GMS_EFFECT_3DNN_WORK work)
        {
            return (AppMain.GMS_GMK_BOBJ_PARTS)work.holder;
        }
    }

    public class GMS_EFFECT_COM_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public AppMain.OBS_RECT_WORK[] rect_work = AppMain.New<AppMain.OBS_RECT_WORK>(2);
        public AppMain.OBS_OBJECT_WORK obj_work;
        public readonly object holder;

        public void Clear()
        {
            this.obj_work.Clear();
            for (int index = 0; index < 2; ++index)
                this.rect_work[index].Clear();
        }

        public static explicit operator AppMain.GMS_BOSS1_FLASH_SCREEN_WORK(
          AppMain.GMS_EFFECT_COM_WORK p)
        {
            return (AppMain.GMS_BOSS1_FLASH_SCREEN_WORK)p.holder;
        }

        public static explicit operator AppMain.GMS_BS_CMN_NODE_CTRL_OBJECT(
          AppMain.GMS_EFFECT_COM_WORK p)
        {
            return (AppMain.GMS_BS_CMN_NODE_CTRL_OBJECT)p.holder;
        }

        public static explicit operator AppMain.GMS_EFFECT_COM_WORK(AppMain.OBS_OBJECT_WORK work)
        {
            return work.holder is AppMain.GMS_EFFECT_COM_WORK ? (AppMain.GMS_EFFECT_COM_WORK)work.holder : ((AppMain.GMS_EFFECT_3DES_WORK)work.holder).efct_com;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_EFFECT_COM_WORK work)
        {
            return work.obj_work;
        }

        public GMS_EFFECT_COM_WORK()
        {
            this.obj_work = AppMain.OBS_OBJECT_WORK.Create((object)this);
        }

        public GMS_EFFECT_COM_WORK(object _holder)
        {
            this.obj_work = AppMain.OBS_OBJECT_WORK.Create((object)this);
            this.holder = _holder;
        }

        public static explicit operator AppMain.GMS_GMK_POPSTEAMPARTS_WORK(
          AppMain.GMS_EFFECT_COM_WORK work)
        {
            return (AppMain.GMS_GMK_POPSTEAMPARTS_WORK)(AppMain.GMS_EFFECT_3DNN_WORK)work.holder;
        }

        public static explicit operator AppMain.GMS_BOSS5_FLASH_SCREEN_WORK(
          AppMain.GMS_EFFECT_COM_WORK work)
        {
            return (AppMain.GMS_BOSS5_FLASH_SCREEN_WORK)work.holder;
        }

        public static explicit operator AppMain.GMS_EFFECT_3DES_WORK(
          AppMain.GMS_EFFECT_COM_WORK work)
        {
            return (AppMain.GMS_EFFECT_3DES_WORK)work.holder;
        }
    }

    public class GMS_GMK_BUMPER_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.OBS_ACTION3D_NN_WORK obj_3d_parts = new AppMain.OBS_ACTION3D_NN_WORK();
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d;
        public AppMain.GSS_SND_SE_HANDLE se_handle;

        public GMS_GMK_BUMPER_WORK()
        {
            this.ene_3d = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d.ene_com.obj_work;
        }
    }

    public class OBS_ACTION3D_NN_WORK
    {
        public readonly object[] mtn = new object[4];
        public readonly AppMain.OBS_DATA_WORK[] mtn_data_work = new AppMain.OBS_DATA_WORK[4];
        public readonly object[] mat_mtn = new object[4];
        public readonly AppMain.OBS_DATA_WORK[] mat_mtn_data_work = new AppMain.OBS_DATA_WORK[4];
        public readonly int[] act_id = new int[2];
        public readonly float[] frame = new float[2];
        public readonly float[] speed = new float[2];
        public readonly AppMain.NNS_MATRIX user_obj_mtx = AppMain.GlobalPool<AppMain.NNS_MATRIX>.Alloc();
        public readonly AppMain.NNS_MATRIX user_obj_mtx_r = AppMain.GlobalPool<AppMain.NNS_MATRIX>.Alloc();
        public readonly AppMain.AMS_DRAWSTATE draw_state = new AppMain.AMS_DRAWSTATE();
        public readonly AppMain.OBS_ACTION3D_MTN_LOAD_SETTING[] mtn_load_setting = new AppMain.OBS_ACTION3D_MTN_LOAD_SETTING[4];
        public readonly AppMain.OBS_ACTION3D_MTN_LOAD_SETTING[] mat_mtn_load_setting = new AppMain.OBS_ACTION3D_MTN_LOAD_SETTING[4];
        public AppMain.NNS_OBJECT _object;
        public AppMain.NNS_TEXLIST texlist;
        public object texlistbuf;
        public AppMain.AMS_MOTION motion;
        public object model;
        public AppMain.OBS_DATA_WORK model_data_work;
        public uint command_state;
        public uint flag;
        public float marge;
        public float per;
        public int mat_act_id;
        public float mat_frame;
        public float mat_speed;
        public float blend_spd;
        public uint sub_obj_type;
        public uint drawflag;
        public uint use_light_flag;
        public AppMain.MPP_VOID_OBJECT_DELEGATE user_func;
        public object user_param;
        public AppMain.MPP_VOID_ARRAYNNSMATRIX_NNSOBJECT_OBJECT mplt_cb_func;
        public object mplt_cb_param;
        public AppMain.mtn_cb_func_delegate mtn_cb_func;
        public object mtn_cb_param;
        public AppMain.MPP_BOOL_NNSDRAWCALLBACKVAL_OBJECT_DELEGATE material_cb_func;
        public object material_cb_param;
        public int reg_index;

        public OBS_ACTION3D_NN_WORK()
        {
            for (int index = 0; index < 4; ++index)
            {
                this.mtn_load_setting[index] = new AppMain.OBS_ACTION3D_MTN_LOAD_SETTING();
                this.mat_mtn_load_setting[index] = new AppMain.OBS_ACTION3D_MTN_LOAD_SETTING();
            }
        }

        public void Clear()
        {
            this._object = (AppMain.NNS_OBJECT)null;
            this.texlist = (AppMain.NNS_TEXLIST)null;
            this.texlistbuf = (object)null;
            this.motion = (AppMain.AMS_MOTION)null;
            this.model = (object)null;
            this.model_data_work = (AppMain.OBS_DATA_WORK)null;
            Array.Clear((Array)this.mtn, 0, this.mtn.Length);
            Array.Clear((Array)this.mtn_data_work, 0, this.mtn_data_work.Length);
            Array.Clear((Array)this.mat_mtn, 0, this.mat_mtn.Length);
            Array.Clear((Array)this.mat_mtn_data_work, 0, this.mat_mtn_data_work.Length);
            this.command_state = 0U;
            this.flag = 0U;
            this.marge = 0.0f;
            this.per = 0.0f;
            Array.Clear((Array)this.act_id, 0, this.act_id.Length);
            Array.Clear((Array)this.frame, 0, this.frame.Length);
            Array.Clear((Array)this.speed, 0, this.speed.Length);
            this.mat_act_id = 0;
            this.mat_frame = 0.0f;
            this.mat_speed = 0.0f;
            this.user_obj_mtx.Clear();
            this.user_obj_mtx_r.Clear();
            this.blend_spd = 0.0f;
            this.sub_obj_type = 0U;
            this.drawflag = 0U;
            this.draw_state.Clear();
            this.use_light_flag = 0U;
            this.user_func = (AppMain.MPP_VOID_OBJECT_DELEGATE)null;
            this.user_param = (object)null;
            this.mplt_cb_func = (AppMain.MPP_VOID_ARRAYNNSMATRIX_NNSOBJECT_OBJECT)null;
            this.mplt_cb_param = (object)null;
            this.mtn_cb_func = (AppMain.mtn_cb_func_delegate)null;
            this.mtn_cb_param = (object)null;
            this.material_cb_func = (AppMain.MPP_BOOL_NNSDRAWCALLBACKVAL_OBJECT_DELEGATE)null;
            this.material_cb_param = (object)null;
            this.reg_index = 0;
            for (int index = 0; index < 4; ++index)
            {
                this.mtn_load_setting[index].Clear();
                this.mat_mtn_load_setting[index].Clear();
            }
        }

        public class CMPLT_Wrapper
        {
            public AppMain.GMS_BS_CMN_CNM_NODE_INFO[] m_pInfos;
            public ushort reg_node_cnt;
        }
    }

    public class GSS_SND_SE_HANDLE : AppMain.IClearable
    {
        public readonly AppMain.GSS_SND_CTRL_PARAM snd_ctrl_param = new AppMain.GSS_SND_CTRL_PARAM();
        public uint flag;
        public AppMain.CriAuPlayer au_player;
        public uint cur_pause_level;

        public void Clear()
        {
            this.flag = 0U;
            this.snd_ctrl_param.Clear();
            this.cur_pause_level = 0U;
            this.au_player.Destroy();
            this.au_player = (AppMain.CriAuPlayer)null;
        }
    }

    public delegate void _sts_proc_();

    public class GMS_EVE_MGR_WORK
    {
        public float[] prev_pos = new float[2];
        public ushort[] map_size = new ushort[2];
        public AppMain._sts_proc_ sts_proc;
        public uint flag;

        public void Clear()
        {
            this.sts_proc = (AppMain._sts_proc_)null;
            this.flag = 0U;
            Array.Clear((Array)this.prev_pos, 0, 2);
            Array.Clear((Array)this.map_size, 0, 2);
        }
    }

    public class GMS_EVE_RECORD_DECORATE
    {
        public byte pos_x;
        public byte pos_y;
        public ushort id;
    }

    public class GMS_EVE_RECORD_RING
    {
        public byte pos_x;
        public byte pos_y;
    }

    public class GMS_EVE_RECORD_EVENT
    {
        public byte[] byte_param = new byte[2];
        public byte pos_x;
        public byte pos_y;
        public ushort id;
        public ushort flag;
        public sbyte left;
        public sbyte top;
        public byte width;
        public byte height;

        public ushort word_param
        {
            get
            {
                return (ushort)((uint)this.byte_param[1] << 8 | (uint)this.byte_param[0]);
            }
            set
            {
                this.byte_param[0] = (byte)((uint)value & (uint)byte.MaxValue);
                this.byte_param[1] = (byte)((int)value >> 8 & (int)byte.MaxValue);
            }
        }
    }

    public class GMS_EVE_DATA_EV_LIST
    {
        public ushort eve_num;
        public AppMain.GMS_EVE_RECORD_EVENT[] eve_rec;
    }

    public class GMS_EVE_DATA_EV_HEADER
    {
        public ushort width;
        public ushort height;
        public uint[] ofst;
        public AppMain.GMS_EVE_DATA_EV_LIST[] ev_list;

        public GMS_EVE_DATA_EV_HEADER()
        {
        }

        public GMS_EVE_DATA_EV_HEADER(AppMain.AmbChunk data)
        {
            using (MemoryStream memoryStream = new MemoryStream(data.array, data.offset, data.array.Length - data.offset))
            {
                using (BinaryReader binaryReader = new BinaryReader((Stream)memoryStream))
                {
                    this.width = binaryReader.ReadUInt16();
                    this.height = binaryReader.ReadUInt16();
                    int n = (int)this.width * (int)this.height;
                    this.ofst = new uint[(int)(uint)n];
                    for (int index = 0; index < n; ++index)
                        this.ofst[index] = binaryReader.ReadUInt32();
                    this.ev_list = AppMain.New<AppMain.GMS_EVE_DATA_EV_LIST>(n);
                    for (int index1 = 0; index1 < n; ++index1)
                    {
                        binaryReader.BaseStream.Seek((long)this.ofst[index1], SeekOrigin.Begin);
                        this.ev_list[index1].eve_num = binaryReader.ReadUInt16();
                        if (this.ev_list[index1].eve_num > (ushort)0)
                        {
                            this.ev_list[index1].eve_rec = AppMain.New<AppMain.GMS_EVE_RECORD_EVENT>((int)this.ev_list[index1].eve_num);
                            for (int index2 = 0; index2 < (int)this.ev_list[index1].eve_num; ++index2)
                            {
                                this.ev_list[index1].eve_rec[index2].pos_x = binaryReader.ReadByte();
                                this.ev_list[index1].eve_rec[index2].pos_y = binaryReader.ReadByte();
                                this.ev_list[index1].eve_rec[index2].id = binaryReader.ReadUInt16();
                                this.ev_list[index1].eve_rec[index2].flag = binaryReader.ReadUInt16();
                                this.ev_list[index1].eve_rec[index2].left = binaryReader.ReadSByte();
                                this.ev_list[index1].eve_rec[index2].top = binaryReader.ReadSByte();
                                this.ev_list[index1].eve_rec[index2].width = binaryReader.ReadByte();
                                this.ev_list[index1].eve_rec[index2].height = binaryReader.ReadByte();
                                this.ev_list[index1].eve_rec[index2].word_param = binaryReader.ReadUInt16();
                            }
                        }
                    }
                }
            }
        }

        public void loadData(byte[] data)
        {
            using (MemoryStream memoryStream = new MemoryStream(data))
            {
                using (BinaryReader binaryReader = new BinaryReader((Stream)memoryStream))
                {
                    this.width = binaryReader.ReadUInt16();
                    this.height = binaryReader.ReadUInt16();
                    int num1 = (int)this.width * (int)this.height;
                    for (int index1 = 0; index1 < num1; ++index1)
                    {
                        this.ev_list[index1].eve_num = binaryReader.ReadUInt16();
                        if (this.ev_list[index1].eve_num > (ushort)0)
                        {
                            for (int index2 = 0; index2 < (int)this.ev_list[index1].eve_num; ++index2)
                            {
                                byte num2 = binaryReader.ReadByte();
                                byte num3 = binaryReader.ReadByte();
                                ushort num4 = binaryReader.ReadUInt16();
                                ushort num5 = binaryReader.ReadUInt16();
                                ushort num6 = binaryReader.ReadUInt16();
                                if (num4 < (ushort)60 || (ushort)300 <= num4 && num4 < (ushort)300 || (ushort)308 <= num4 && num4 < (ushort)335)
                                {
                                    this.ev_list[index1].eve_rec[index2].pos_x = num2;
                                    this.ev_list[index1].eve_rec[index2].pos_y = num3;
                                    this.ev_list[index1].eve_rec[index2].id = num4;
                                    this.ev_list[index1].eve_rec[index2].flag = num5;
                                    this.ev_list[index1].eve_rec[index2].word_param = num6;
                                }
                            }
                        }
                    }
                }
            }
        }

        public byte[] saveData()
        {
            byte[] numArray = (byte[])null;
            using (MemoryStream memoryStream = new MemoryStream())
            {
                using (BinaryWriter binaryWriter = new BinaryWriter((Stream)memoryStream))
                {
                    binaryWriter.Write(this.width);
                    binaryWriter.Write(this.height);
                    int num = (int)this.width * (int)this.height;
                    for (int index1 = 0; index1 < num; ++index1)
                    {
                        binaryWriter.Write(this.ev_list[index1].eve_num);
                        if (this.ev_list[index1].eve_num > (ushort)0)
                        {
                            for (int index2 = 0; index2 < (int)this.ev_list[index1].eve_num; ++index2)
                            {
                                binaryWriter.Write(this.ev_list[index1].eve_rec[index2].pos_x);
                                binaryWriter.Write(this.ev_list[index1].eve_rec[index2].pos_y);
                                binaryWriter.Write(this.ev_list[index1].eve_rec[index2].id);
                                binaryWriter.Write(this.ev_list[index1].eve_rec[index2].flag);
                                binaryWriter.Write(this.ev_list[index1].eve_rec[index2].word_param);
                            }
                        }
                    }
                }
                byte[] array = memoryStream.ToArray();
                int length = array.Length;
                numArray = new byte[length];
                Array.Copy((Array)array, (Array)numArray, length);
            }
            return numArray;
        }

        public void Clear()
        {
            this.width = (ushort)0;
            this.height = (ushort)0;
            this.ofst = (uint[])null;
            this.ev_list = (AppMain.GMS_EVE_DATA_EV_LIST[])null;
        }
    }

    public class AmbChunk
    {
        public AppMain.AMS_AMB_HEADER amb;
        public byte[] array;
        public int offset;
        public int length;

        public AmbChunk()
        {
        }

        public AmbChunk(byte[] array, int offset, int length, AppMain.AMS_AMB_HEADER parent)
        {
            this.array = array;
            this.offset = offset;
            this.length = length;
            this.amb = parent;
        }
    }

    public class GMS_EVE_DATA_RG_LIST
    {
        public ushort ring_num;
        public AppMain.GMS_EVE_RECORD_RING[] ring_data;
    }

    public class GMS_EVE_DATA_RG_HEADER
    {
        public ushort width;
        public ushort height;
        public uint[] ofst;
        public AppMain.GMS_EVE_DATA_RG_LIST[] ring;

        public GMS_EVE_DATA_RG_HEADER()
        {
        }

        public GMS_EVE_DATA_RG_HEADER(AppMain.AmbChunk data)
        {
            using (MemoryStream memoryStream = new MemoryStream(data.array, data.offset, data.array.Length - data.offset))
            {
                using (BinaryReader binaryReader = new BinaryReader((Stream)memoryStream))
                {
                    this.width = binaryReader.ReadUInt16();
                    this.height = binaryReader.ReadUInt16();
                    int n = (int)this.width * (int)this.height;
                    this.ofst = new uint[(int)(uint)n];
                    for (int index = 0; index < n; ++index)
                        this.ofst[index] = binaryReader.ReadUInt32();
                    this.ring = AppMain.New<AppMain.GMS_EVE_DATA_RG_LIST>(n);
                    for (int index1 = 0; index1 < n; ++index1)
                    {
                        binaryReader.BaseStream.Seek((long)this.ofst[index1], SeekOrigin.Begin);
                        this.ring[index1].ring_num = binaryReader.ReadUInt16();
                        if (this.ring[index1].ring_num > (ushort)0)
                        {
                            this.ring[index1].ring_data = AppMain.New<AppMain.GMS_EVE_RECORD_RING>((int)this.ring[index1].ring_num);
                            for (int index2 = 0; index2 < (int)this.ring[index1].ring_num; ++index2)
                            {
                                this.ring[index1].ring_data[index2].pos_x = binaryReader.ReadByte();
                                this.ring[index1].ring_data[index2].pos_y = binaryReader.ReadByte();
                            }
                        }
                    }
                }
            }
        }

        public void loadData(byte[] data)
        {
            using (MemoryStream memoryStream = new MemoryStream(data))
            {
                using (BinaryReader binaryReader = new BinaryReader((Stream)memoryStream))
                {
                    this.width = binaryReader.ReadUInt16();
                    this.height = binaryReader.ReadUInt16();
                    int num = (int)this.width * (int)this.height;
                    for (int index1 = 0; index1 < num; ++index1)
                    {
                        this.ring[index1].ring_num = binaryReader.ReadUInt16();
                        if (this.ring[index1].ring_num > (ushort)0)
                        {
                            for (int index2 = 0; index2 < (int)this.ring[index1].ring_num; ++index2)
                            {
                                this.ring[index1].ring_data[index2].pos_x = binaryReader.ReadByte();
                                this.ring[index1].ring_data[index2].pos_y = binaryReader.ReadByte();
                            }
                        }
                    }
                }
            }
        }

        public byte[] saveData()
        {
            byte[] numArray = (byte[])null;
            using (MemoryStream memoryStream = new MemoryStream())
            {
                using (BinaryWriter binaryWriter = new BinaryWriter((Stream)memoryStream))
                {
                    binaryWriter.Write(this.width);
                    binaryWriter.Write(this.height);
                    int num = (int)this.width * (int)this.height;
                    for (int index1 = 0; index1 < num; ++index1)
                    {
                        binaryWriter.Write(this.ring[index1].ring_num);
                        if (this.ring[index1].ring_num > (ushort)0)
                        {
                            for (int index2 = 0; index2 < (int)this.ring[index1].ring_num; ++index2)
                            {
                                binaryWriter.Write(this.ring[index1].ring_data[index2].pos_x);
                                binaryWriter.Write(this.ring[index1].ring_data[index2].pos_y);
                            }
                        }
                    }
                }
                byte[] array = memoryStream.ToArray();
                int length = array.Length;
                numArray = new byte[length];
                Array.Copy((Array)array, (Array)numArray, length);
            }
            return numArray;
        }

        public void Clear()
        {
            this.width = (ushort)0;
            this.height = (ushort)0;
            this.ofst = (uint[])null;
        }
    }

    public class GMS_EVE_DATA_DC_LIST
    {
        public ushort dec_num;
        public AppMain.GMS_EVE_RECORD_DECORATE[] dec_data;
    }

    public class GMS_EVE_DATA_DC_HEADER
    {
        public ushort width;
        public ushort height;
        public uint[] ofst;
        public AppMain.GMS_EVE_DATA_DC_LIST[] dc_list;

        public GMS_EVE_DATA_DC_HEADER()
        {
        }

        public GMS_EVE_DATA_DC_HEADER(AppMain.AmbChunk data)
        {
            using (MemoryStream memoryStream = new MemoryStream(data.array, data.offset, data.array.Length - data.offset))
            {
                using (BinaryReader binaryReader = new BinaryReader((Stream)memoryStream))
                {
                    this.width = binaryReader.ReadUInt16();
                    this.height = binaryReader.ReadUInt16();
                    int n = (int)this.width * (int)this.height;
                    this.ofst = new uint[(int)(uint)n];
                    for (int index = 0; index < n; ++index)
                        this.ofst[index] = binaryReader.ReadUInt32();
                    this.dc_list = AppMain.New<AppMain.GMS_EVE_DATA_DC_LIST>(n);
                    for (int index1 = 0; index1 < n; ++index1)
                    {
                        binaryReader.BaseStream.Seek((long)this.ofst[index1], SeekOrigin.Begin);
                        this.dc_list[index1].dec_num = binaryReader.ReadUInt16();
                        if (this.dc_list[index1].dec_num > (ushort)0)
                        {
                            this.dc_list[index1].dec_data = AppMain.New<AppMain.GMS_EVE_RECORD_DECORATE>((int)this.dc_list[index1].dec_num);
                            for (int index2 = 0; index2 < (int)this.dc_list[index1].dec_num; ++index2)
                            {
                                this.dc_list[index1].dec_data[index2].pos_x = binaryReader.ReadByte();
                                this.dc_list[index1].dec_data[index2].pos_y = binaryReader.ReadByte();
                                this.dc_list[index1].dec_data[index2].id = binaryReader.ReadUInt16();
                            }
                        }
                    }
                }
            }
        }

        public void loadData(byte[] data)
        {
            using (MemoryStream memoryStream = new MemoryStream(data))
            {
                using (BinaryReader binaryReader = new BinaryReader((Stream)memoryStream))
                {
                    this.width = binaryReader.ReadUInt16();
                    this.height = binaryReader.ReadUInt16();
                    int num = (int)this.width * (int)this.height;
                    for (int index1 = 0; index1 < num; ++index1)
                    {
                        this.dc_list[index1].dec_num = binaryReader.ReadUInt16();
                        if (this.dc_list[index1].dec_num > (ushort)0)
                        {
                            for (int index2 = 0; index2 < (int)this.dc_list[index1].dec_num; ++index2)
                            {
                                this.dc_list[index1].dec_data[index2].pos_x = binaryReader.ReadByte();
                                this.dc_list[index1].dec_data[index2].pos_y = binaryReader.ReadByte();
                                this.dc_list[index1].dec_data[index2].id = binaryReader.ReadUInt16();
                            }
                        }
                    }
                }
            }
        }

        public byte[] saveData()
        {
            byte[] numArray;
            using (MemoryStream memoryStream = new MemoryStream())
            {
                using (BinaryWriter binaryWriter = new BinaryWriter((Stream)memoryStream))
                {
                    binaryWriter.Write(this.width);
                    binaryWriter.Write(this.height);
                    int num = (int)this.width * (int)this.height;
                    for (int index1 = 0; index1 < num; ++index1)
                    {
                        binaryWriter.Write(this.dc_list[index1].dec_num);
                        if (this.dc_list[index1].dec_num > (ushort)0)
                        {
                            for (int index2 = 0; index2 < (int)this.dc_list[index1].dec_num; ++index2)
                            {
                                binaryWriter.Write(this.dc_list[index1].dec_data[index2].pos_x);
                                binaryWriter.Write(this.dc_list[index1].dec_data[index2].pos_y);
                                binaryWriter.Write(this.dc_list[index1].dec_data[index2].id);
                            }
                        }
                    }
                }
                byte[] array = memoryStream.ToArray();
                int length = array.Length;
                numArray = new byte[length];
                Array.Copy((Array)array, (Array)numArray, length);
            }
            return numArray;
        }

        public void Clear()
        {
            this.width = (ushort)0;
            this.height = (ushort)0;
            this.ofst = (uint[])null;
        }
    }

    private delegate void _eve_func_(uint flag, ushort bx, ushort by, int[] r_on, int[] r_off);

    public class OBS_RECT_WORK : AppMain.IClearable
    {
        public readonly AppMain.OBS_RECT rect = new AppMain.OBS_RECT();
        public uint flag;
        public AppMain.OBS_OBJECT_WORK parent_obj;
        public AppMain.OBS_RECT_WORK_Delegate1 ppHit;
        public AppMain.OBS_RECT_WORK_Delegate1 ppDef;
        public AppMain.OBS_RECT_WORK_Delegate2 ppCheck;
        public short hit_power;
        public short def_power;
        public ushort hit_flag;
        public ushort def_flag;
        public byte group_no;
        public byte target_g_flag;
        public uint attr_flag;
        public uint user_data;
        public object pDataWork;

        public void Clear()
        {
            this.rect.Clear();
            this.flag = 0U;
            this.parent_obj = (AppMain.OBS_OBJECT_WORK)null;
            this.ppHit = this.ppDef = (AppMain.OBS_RECT_WORK_Delegate1)null;
            this.ppCheck = (AppMain.OBS_RECT_WORK_Delegate2)null;
            this.hit_power = this.def_power = (short)0;
            this.hit_flag = this.def_flag = (ushort)0;
            this.group_no = this.target_g_flag = (byte)0;
            this.attr_flag = this.user_data = 0U;
            this.pDataWork = (object)null;
        }
    }

    public class OBS_COLLISION_WORK
    {
        public readonly AppMain.OBS_COLLISION_OBJ obj_col = new AppMain.OBS_COLLISION_OBJ();
        public AppMain.OBS_DATA_WORK diff_data_work;
        public AppMain.OBS_DATA_WORK dir_data_work;
        public AppMain.OBS_DATA_WORK attr_data_work;
    }

    public struct VecU16
    {
        public ushort x;
        public ushort y;
        public ushort z;

        public VecU16(ushort _x, ushort _y, ushort _z)
        {
            this.x = _x;
            this.y = _y;
            this.z = _z;
        }

        public VecU16(AppMain.VecU16 vecU16)
        {
            this.x = vecU16.x;
            this.y = vecU16.y;
            this.z = vecU16.z;
        }

        public void Assign(AppMain.VecU16 vecU16)
        {
            this.x = vecU16.x;
            this.y = vecU16.y;
            this.z = vecU16.z;
        }

        public void Clear()
        {
            this.x = this.y = this.z = (ushort)0;
        }
    }

    public class GMS_GMK_TRUCK_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.OBS_ACTION3D_NN_WORK obj_3d_tire = new AppMain.OBS_ACTION3D_NN_WORK();
        public readonly AppMain.NNS_MATRIX tire_pos_f = new AppMain.NNS_MATRIX();
        public readonly AppMain.NNS_MATRIX tire_pos_b = new AppMain.NNS_MATRIX();
        public readonly AppMain.NNS_MATRIX light_pos = new AppMain.NNS_MATRIX();
        public readonly AppMain.NNS_VECTOR trans_r = new AppMain.NNS_VECTOR();
        public readonly AppMain.GMS_ENEMY_3D_WORK gmk_work;
        public AppMain.GMS_GMK_TRUCK_WORK seq;
        public AppMain.GMS_PLAYER_WORK target_player;
        public int tire_spd_for_dir;
        public int tire_dir_spd;
        public ushort tire_dir;
        public ushort slope_z_dir;
        public ushort slope_f_y_dir;
        public ushort slope_f_z_dir;
        public AppMain.GMS_EFFECT_3DES_WORK efct_f_spark;
        public AppMain.GMS_EFFECT_3DES_WORK efct_b_spark;
        public AppMain.GSS_SND_SE_HANDLE h_snd_lorry;

        public GMS_GMK_TRUCK_WORK()
        {
            this.gmk_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_GMK_TRUCK_WORK work)
        {
            return work.gmk_work.ene_com.obj_work;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.gmk_work.ene_com.obj_work;
        }
    }

    public class GMS_BOSS5_CORE_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_COM_WORK ene_com;
        public AppMain.MPP_VOID_GMS_BOSS5_CORE_WORK proc_update;

        public GMS_BOSS5_CORE_WORK()
        {
            this.ene_com = new AppMain.GMS_ENEMY_COM_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_com.obj_work;
        }
    }

    public class GMS_GMK_GEAR_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.OBS_ACTION3D_NN_WORK obj_3d_gear_opt = new AppMain.OBS_ACTION3D_NN_WORK();
        public readonly AppMain.OBS_ACTION3D_NN_WORK obj_3d_gear_opt_ashiba = new AppMain.OBS_ACTION3D_NN_WORK();
        public readonly AppMain.GMS_ENEMY_3D_WORK gmk_work;
        public uint col_type;
        public float dir_speed;
        public float dir_temp;
        public ushort prev_dir;
        public ushort move_draw_dir;
        public ushort old_move_draw_dir;
        public short move_draw_dir_spd;
        public short move_draw_dir_ofst;
        public short move_draw_dir_limit;
        public ushort move_stagger_dir_cnt;
        public ushort move_stagger_step;
        public int move_stagger_dir_spd;
        public int stop_timer;
        public int rect_ret_timer;
        public int move_end_x;
        public int move_end_y;
        public int ret_max_speed;
        public bool vib_end;
        public int open_rot_dist;
        public ushort gear_sw_dir_base;
        public int close_rot_spd;
        public AppMain.OBS_OBJECT_WORK gear_end_obj;
        public AppMain.OBS_OBJECT_WORK move_gear_obj;
        public AppMain.OBS_OBJECT_WORK sw_gear_obj;
        public AppMain.GSS_SND_SE_HANDLE h_snd_gear;

        public GMS_GMK_GEAR_WORK()
        {
            this.gmk_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.gmk_work.ene_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_GMK_GEAR_WORK work)
        {
            return work.gmk_work.ene_com.obj_work;
        }
    }

    public class GMS_GMK_WATER_SLIDER_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.OBS_ACTION3D_NN_WORK obj_3d_parts = new AppMain.OBS_ACTION3D_NN_WORK();
        public readonly AppMain.GMS_ENEMY_3D_WORK gimmick_work;

        public GMS_GMK_WATER_SLIDER_WORK()
        {
            this.gimmick_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.gimmick_work.ene_com.obj_work;
        }
    }

    public class GMS_GMK_UPBUMPER_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK gmk_work = new AppMain.GMS_ENEMY_3D_WORK();
        public int obj_type;
        public short player_spd_keep_timer_mine;

        public GMS_GMK_UPBUMPER_WORK()
        {
            this.gmk_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public static explicit operator AppMain.GMS_ENEMY_3D_WORK(AppMain.GMS_GMK_UPBUMPER_WORK p)
        {
            return p.gmk_work;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.gmk_work.ene_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(
          AppMain.GMS_GMK_UPBUMPER_WORK work)
        {
            return work.gmk_work.ene_com.obj_work;
        }
    }

    public class GMS_GMK_STEAMP_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK gmk_work;
        public int obj_type;
        public int zdepth;
        public AppMain.GMS_PLAYER_WORK ply_work;
        public short timer;
        public byte status;

        public GMS_GMK_STEAMP_WORK()
        {
            this.gmk_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.gmk_work.ene_com.obj_work;
        }
    }

    public class GMS_GMK_SEESAW_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK gmk_work;
        public ushort seesaw_id;
        public short initial_tilt;
        public short tilt;
        public short tilt_d;
        public short tilt_acc;
        public short tilt_timer;
        public short tilt_se_timer;
        public int hold_x;
        public int hold_y;
        public long player_distance;
        public int player_speed;
        public AppMain.GMS_PLAYER_WORK ply_work;

        public GMS_GMK_SEESAW_WORK()
        {
            this.gmk_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.gmk_work.ene_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_GMK_SEESAW_WORK work)
        {
            return work.gmk_work.ene_com.obj_work;
        }

        public static explicit operator AppMain.GMS_ENEMY_3D_WORK(AppMain.GMS_GMK_SEESAW_WORK p)
        {
            return p.gmk_work;
        }
    }

    public class GMS_GMK_PWALL_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK gmk_work;
        public int master_posy;
        public int wall_speed;
        public short wall_vibration;
        public short wall_effect_build_timer;
        public int wall_height;
        public int wall_brake;
        public int wall_timer;
        public bool ply_death;
        public bool stop_wall;
        public AppMain.OBS_OBJECT_WORK efct_obj;
        public AppMain.GSS_SND_SE_HANDLE se_handle;
        public uint mat_timer;
        public uint mat_timer_line;

        public GMS_GMK_PWALL_WORK()
        {
            this.gmk_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public static explicit operator AppMain.GMS_ENEMY_3D_WORK(AppMain.GMS_GMK_PWALL_WORK p)
        {
            return p.gmk_work;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.gmk_work.ene_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_GMK_PWALL_WORK work)
        {
            return work.gmk_work.ene_com.obj_work;
        }
    }

    public class GMS_GMK_PWALLCTRL_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK gmk_work;
        public int line_top;
        public int line_bottom;
        public AppMain.GMS_PLAYER_WORK ply_work;
        public int last_ply_x;
        public int last_ply_y;

        public GMS_GMK_PWALLCTRL_WORK()
        {
            this.gmk_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.gmk_work.ene_com.obj_work;
        }

        public int line_left
        {
            get
            {
                return this.line_top;
            }
            set
            {
                this.line_top = value;
            }
        }

        public int line_right
        {
            get
            {
                return this.line_bottom;
            }
            set
            {
                this.line_bottom = value;
            }
        }
    }

    public class GMS_GMK_SHUTTER_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.OBS_ACTION3D_NN_WORK obj_3d_parts = new AppMain.OBS_ACTION3D_NN_WORK();
        public readonly AppMain.GMS_ENEMY_3D_WORK gimmick_work;
        public AppMain.GMS_EFFECT_3DES_WORK effect_work;

        public GMS_GMK_SHUTTER_WORK()
        {
            this.gimmick_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_GMK_SHUTTER_WORK p)
        {
            return p.gimmick_work.ene_com.obj_work;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.gimmick_work.ene_com.obj_work;
        }
    }

    public class GMS_GMK_P_STEAM_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public AppMain.OBS_OBJECT_WORK[] opt_steam_int = new AppMain.OBS_OBJECT_WORK[3];
        public const int GMD_GMK_PSTEAM_STAT_HIT = 1;
        public const int GMD_GMK_PSTEAM_STAT_TRUE = 2;
        public readonly AppMain.GMS_ENEMY_3D_WORK gmk_work;
        public int obj_type;
        public short timer;
        public ushort steamvect;
        public short steamsize;
        public short steamwait;
        public int steampower;
        public ushort status;
        public AppMain.GMS_PLAYER_WORK ply_work;
        public AppMain.OBS_OBJECT_WORK opt_timer;
        public AppMain.OBS_OBJECT_WORK opt_steam;
        public int pos_x;
        public int pos_y;

        public GMS_GMK_P_STEAM_WORK()
        {
            this.gmk_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.gmk_work.ene_com.obj_work;
        }
    }

    public class GMS_GMK_PISTON_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK gmk_work;
        public uint obj_type;
        public ushort piston_vect;
        public int stroke_spd;
        public int timer_dec;
        public int timer_set_move;
        public int timer_set_wait_upper;
        public int timer_set_wait_lower;
        public bool efct_di;

        public GMS_GMK_PISTON_WORK()
        {
            this.gmk_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.gmk_work.ene_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_GMK_PISTON_WORK work)
        {
            return work.gmk_work.ene_com.obj_work;
        }

        public static explicit operator AppMain.GMS_ENEMY_3D_WORK(AppMain.GMS_GMK_PISTON_WORK p)
        {
            return p.gmk_work;
        }
    }

    public class GMS_GMK_DRAIN_TANK_OUT_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK enemy_work;
        public bool flag_dir_left;
        public int base_pos_x;
        public int base_pos_y;
        public int player_offset_x;
        public int player_offset_y;
        public int camera_roll;
        public int counter_roll_key;

        public GMS_GMK_DRAIN_TANK_OUT_WORK()
        {
            this.enemy_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.enemy_work.ene_com.obj_work;
        }
    }

    public class GMS_GMK_CANNON_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK gmk_work;
        public AppMain.GMS_PLAYER_WORK ply_work;
        public bool hitpass;
        public short shoot_after;
        public short angle_set;
        public short angle_now;
        public int cannon_power;

        public GMS_GMK_CANNON_WORK()
        {
            this.gmk_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public static explicit operator AppMain.GMS_ENEMY_3D_WORK(AppMain.GMS_GMK_CANNON_WORK p)
        {
            return p.gmk_work;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.gmk_work.ene_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_GMK_CANNON_WORK work)
        {
            return work.gmk_work.ene_com.obj_work;
        }
    }

    public class GMS_GMK_BOSS3_PILLAR_MAIN_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.OBS_ACTION3D_NN_WORK[] obj_3d_parts = AppMain.New<AppMain.OBS_ACTION3D_NN_WORK>(8);
        public AppMain.VecFx32 target_pos = new AppMain.VecFx32();
        public AppMain.VecFx32 default_pos = new AppMain.VecFx32();
        public readonly AppMain.GMS_ENEMY_3D_WORK gimmick_work;
        public AppMain.GMS_EFFECT_3DES_WORK effect_work;
        public AppMain.GSS_SND_SE_HANDLE se_handle;

        public GMS_GMK_BOSS3_PILLAR_MAIN_WORK()
        {
            this.gimmick_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(
          AppMain.GMS_GMK_BOSS3_PILLAR_MAIN_WORK p)
        {
            return p.gimmick_work.ene_com.obj_work;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.gimmick_work.ene_com.obj_work;
        }
    }

    public class GMS_GMK_BOSS3_PILLAR_MANAGER_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.OBS_OBJECT_WORK[] obj_work_pillar = new AppMain.OBS_OBJECT_WORK[26];
        public readonly AppMain.OBS_OBJECT_WORK[] obj_work_wall = new AppMain.OBS_OBJECT_WORK[2];
        public readonly AppMain.GMS_ENEMY_3D_WORK gimmick_work;
        public int pattern_no;

        public GMS_GMK_BOSS3_PILLAR_MANAGER_WORK()
        {
            this.gimmick_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.gimmick_work.ene_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(
          AppMain.GMS_GMK_BOSS3_PILLAR_MANAGER_WORK work)
        {
            return work.gimmick_work.ene_com.obj_work;
        }
    }

    public class GMS_GMK_BOSS3_PILLAR_WALL_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.OBS_ACTION3D_NN_WORK[] obj_3d_parts = AppMain.New<AppMain.OBS_ACTION3D_NN_WORK>(2);
        public readonly AppMain.GMS_ENEMY_3D_WORK gimmick_work;
        public AppMain.GMS_EFFECT_3DES_WORK effect_work;
        public AppMain.VecFx32 target_pos;
        public AppMain.VecFx32 default_pos;
        public AppMain.GSS_SND_SE_HANDLE se_handle;

        public GMS_GMK_BOSS3_PILLAR_WALL_WORK()
        {
            this.gimmick_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.gimmick_work.ene_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(
          AppMain.GMS_GMK_BOSS3_PILLAR_WALL_WORK work)
        {
            return work.gimmick_work.ene_com.obj_work;
        }
    }

    public class GMS_BOSS5_LAND_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d;
        public AppMain.MPP_VOID_GMS_BOSS5_LAND_WORK proc_update;
        public AppMain.GMS_BOSS5_MGR_WORK mgr_work;
        public uint flag;
        public uint wait_timer;

        public GMS_BOSS5_LAND_WORK()
        {
            this.ene_3d = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public static explicit operator AppMain.GMS_ENEMY_COM_WORK(AppMain.GMS_BOSS5_LAND_WORK p)
        {
            return p.ene_3d.ene_com;
        }

        public static explicit operator AppMain.GMS_ENEMY_3D_WORK(AppMain.GMS_BOSS5_LAND_WORK p)
        {
            return p.ene_3d;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d.ene_com.obj_work;
        }
    }

    public class GMS_BOSS5_CTPLT_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d;
        public AppMain.MPP_VOID_GMS_BOSS5_CTPLT_WORK proc_update;

        public GMS_BOSS5_CTPLT_WORK()
        {
            this.ene_3d = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public static explicit operator AppMain.GMS_ENEMY_COM_WORK(AppMain.GMS_BOSS5_CTPLT_WORK p)
        {
            return p.ene_3d.ene_com;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d.ene_com.obj_work;
        }
    }

    public class GMS_BOSS5_TURRET_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public AppMain.NNS_QUATERNION disp_quat = new AppMain.NNS_QUATERNION();
        public AppMain.VecFx32 vul_fire_pos = new AppMain.VecFx32();
        public AppMain.VecFx32 vul_bullet_pos = new AppMain.VecFx32();
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d;
        public AppMain.MPP_VOID_GMS_BOSS5_TURRET_WORK proc_update;
        public uint flag;
        public uint wait_timer;
        public int fire_dir_z;
        public int trt_slide_type;
        public float trt_slide_length;
        public int cvr_slide_type;
        public float cvr_slide_ratio;
        public int vul_shot_remain;
        public int vul_burst_timer;
        public int vul_shot_angle;

        public GMS_BOSS5_TURRET_WORK()
        {
            this.ene_3d = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d.ene_com.obj_work;
        }
    }

    public class GMS_BOSS5_EGG_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d;
        public AppMain.MPP_VOID_GMS_BOSS5_EGG_WORK proc_update;
        public uint flag;
        public uint wait_timer;
        public int jump_dest_pos_x;

        public GMS_BOSS5_EGG_WORK()
        {
            this.ene_3d = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d.ene_com.obj_work;
        }
    }

    public class GMS_BOSS5_ROCKET_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public AppMain.VecFx32 launch_pos = new AppMain.VecFx32();
        public AppMain.VecFx32 dest_pos = new AppMain.VecFx32();
        public AppMain.VecFx32 rvs_acc = new AppMain.VecFx32();
        public AppMain.NNS_QUATERNION sct_cur_quat = new AppMain.NNS_QUATERNION();
        public AppMain.NNS_QUATERNION sct_spin_quat = new AppMain.NNS_QUATERNION();
        public readonly AppMain.GMS_BS_CMN_BMCB_MGR bmcb_mgr = new AppMain.GMS_BS_CMN_BMCB_MGR();
        public readonly AppMain.GMS_BS_CMN_SNM_WORK snm_work = new AppMain.GMS_BS_CMN_SNM_WORK();
        public AppMain.VecFx32 pivot_prev_pos = new AppMain.VecFx32();
        public AppMain.NNS_QUATERNION stuck_lerp_src_quat = new AppMain.NNS_QUATERNION();
        public readonly AppMain.GMS_BS_CMN_DELAY_SEARCH_WORK dsearch_work = new AppMain.GMS_BS_CMN_DELAY_SEARCH_WORK();
        public AppMain.VecFx32[] search_hist_buf = AppMain.New<AppMain.VecFx32>(21U);
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d;
        public uint flag;
        public int rkt_type;
        public uint wait_timer;
        public uint hit_count;
        public uint no_hit_timer;
        public uint wfall_atk_toggle_timer;
        public AppMain.MPP_VOID_GMS_BOSS5_ROCKET_WORK proc_update;
        public int move_dir;
        public int acc;
        public int max_spd;
        public int rot_spd;
        public int stuck_dir;
        public float stuck_lean_ratio;
        public float hit_vib_amp_deg;
        public int hit_vib_sin_angle;
        public int pivot_fall_angle;
        public int wobble_sin_param_angle;
        public int arm_snm_id;
        public int drill_snm_reg_id;
        public float stuck_lerp_ratio;
        public float stuck_lerp_ratio_spd;
        public int ply_search_delay;

        public GMS_BOSS5_ROCKET_WORK()
        {
            this.ene_3d = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public static explicit operator AppMain.GMS_ENEMY_COM_WORK(
          AppMain.GMS_BOSS5_ROCKET_WORK p)
        {
            return p.ene_3d.ene_com;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d.ene_com.obj_work;
        }
    }

    public class GMS_BOSS5_MGR_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly short[] save_camera_offset = new short[2];
        public readonly AppMain.GMS_BOSS5_EXPL_WORK small_expl_work = new AppMain.GMS_BOSS5_EXPL_WORK();
        public readonly AppMain.GMS_BOSS5_EXPL_WORK big_expl_work = new AppMain.GMS_BOSS5_EXPL_WORK();
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d;
        public int life;
        public AppMain.MPP_VOID_GMS_BOSS5_MGR_WORK proc_update;
        public uint flag;
        public uint wait_timer;
        public int ply_demo_run_dest_x;
        public int alarm_level;
        public AppMain.GMS_BOSS5_BODY_WORK body_work;

        public GMS_BOSS5_MGR_WORK()
        {
            this.ene_3d = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_BOSS5_MGR_WORK p)
        {
            return p.ene_3d.ene_com.obj_work;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d.ene_com.obj_work;
        }
    }

    public class GMS_BOSS5_BODY_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public AppMain.OBS_RECT_WORK[][] sub_rect_work = AppMain.New<AppMain.OBS_RECT_WORK>(2, 3);
        public readonly AppMain.GMS_BS_CMN_BMCB_MGR bmcb_mgr = new AppMain.GMS_BS_CMN_BMCB_MGR();
        public readonly AppMain.GMS_BS_CMN_SNM_WORK snm_work = new AppMain.GMS_BS_CMN_SNM_WORK();
        public int[][] armpt_snm_reg_ids = AppMain.New<int>(2, 3);
        public int[] leg_snm_reg_ids = AppMain.New<int>(2);
        public int[] groin_snm_reg_ids = AppMain.New<int>(2);
        public int[] nozzle_snm_reg_ids = AppMain.New<int>(2);
        public AppMain.VecFx32 pivot_prev_pos = new AppMain.VecFx32();
        public readonly AppMain.GMS_BS_CMN_CNM_MGR_WORK cnm_mgr_work = new AppMain.GMS_BS_CMN_CNM_MGR_WORK();
        public int[][] arm_cnm_reg_id = AppMain.New<int>(2, 3);
        public int[] scatter_cnm_reg_ids = AppMain.New<int>(22);
        public readonly AppMain.NNS_MATRIX[] rkt_ofst_mtx = AppMain.New<AppMain.NNS_MATRIX>(2);
        public readonly AppMain.NNS_QUATERNION[][] arm_part_rot_quat = AppMain.New<AppMain.NNS_QUATERNION>(2, 3);
        public readonly AppMain.GMS_BOSS5_ARM_ANIM_WORK arm_anim_work = new AppMain.GMS_BOSS5_ARM_ANIM_WORK();
        public AppMain.NNS_QUATERNION cnpy_close_init_quat = new AppMain.NNS_QUATERNION();
        public AppMain.NNS_QUATERNION cnpy_close_dest_quat = new AppMain.NNS_QUATERNION();
        public readonly AppMain.GMS_BS_CMN_DMG_FLICKER_WORK flk_work = new AppMain.GMS_BS_CMN_DMG_FLICKER_WORK();
        public int[] foot_ofst_record_src = new int[2];
        public int[] foot_ofst_record_dest = new int[2];
        public AppMain.VecFx32 grdmv_pivot_pos = new AppMain.VecFx32();
        public readonly AppMain.GMS_BOSS5_GRD_MOVE_WORK grdmv_work = new AppMain.GMS_BOSS5_GRD_MOVE_WORK();
        public readonly AppMain.GMS_BOSS5_1SHOT_TIMER se_timer = new AppMain.GMS_BOSS5_1SHOT_TIMER();
        public readonly AppMain.GMS_BOSS5_1SHOT_TIMER targ_se_timer = new AppMain.GMS_BOSS5_1SHOT_TIMER();
        public readonly AppMain.GMS_BS_CMN_DELAY_SEARCH_WORK dsearch_work = new AppMain.GMS_BS_CMN_DELAY_SEARCH_WORK();
        public AppMain.VecFx32[] search_hist_buf = AppMain.New<AppMain.VecFx32>(11);
        public readonly AppMain.GMS_BOSS5_EXPL_WORK expl_work = new AppMain.GMS_BOSS5_EXPL_WORK();
        public AppMain.OBS_OBJECT_WORK[] parts_objs = new AppMain.OBS_OBJECT_WORK[1];
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d;
        public int state;
        public int prev_state;
        public int sub_seq;
        public int strat_state;
        public AppMain.GMS_BOSS5_MGR_WORK mgr_work;
        public AppMain.MPP_VOID_GMS_BOSS5_BODY_WORK proc_update;
        public uint flag;
        public int whole_act_id;
        public uint wait_timer;
        public uint no_hit_timer;
        public uint fast_move_timer;
        public uint poke_trg_limit_timer;
        public int ground_v_pos;
        public int crash_pos_ofst_x;
        public uint def_rect_req_flag;
        public int body_snm_reg_id;
        public int lfoot_snm_reg_id;
        public int rfoot_snm_reg_id;
        public int pole_snm_reg_id;
        public int pole_cnm_reg_id;
        public int cover_cnm_reg_id;
        public int neck_cnm_reg_id;
        public int head_cnm_reg_id;
        public int arm_poke_anim_phase;
        public float cnpy_close_ratio;
        public float cnpy_close_ratio_spd;
        public int adj_hgap_is_active;
        public int adj_hgap_act_id;
        public int adj_hgap_leg_type;
        public int cur_move_phase_type;
        public int is_move_reverse;
        public int walk_end_monitor_phase_cnt;
        public int is_player_behind;
        public int cur_walk_grnd_phase_cnt;
        public int run_grnd_runtype;
        public uint run_grnd_delay_timer;
        public uint run_grnd_spawn_remain;
        public int cur_run_type;
        public uint se_cnt;
        public AppMain.GSS_SND_SE_HANDLE se_hnd_leakage;
        public float targ_se_cur_interval;
        public int ply_search_delay;
        public int turn_src_dir;
        public int turn_tgt_ofst_dir;
        public float turn_ratio;
        public float bsk_shake_acc_ratio;
        public float bsk_shake_acc_ratio_spd;
        public float bsk_shake_init_spd;
        public uint crash_strike_vib_delay_timer;
        public int crash_strike_vib_phase;
        public float crash_strike_vib_ratio;
        public uint start_rise_vib_int_timer;
        public uint sct_land_vib_timer;
        public AppMain.OBS_OBJECT_WORK part_obj_core;

        public GMS_BOSS5_BODY_WORK()
        {
            this.ene_3d = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public static explicit operator AppMain.GMS_ENEMY_COM_WORK(AppMain.GMS_BOSS5_BODY_WORK p)
        {
            return p.ene_3d.ene_com;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d.ene_com.obj_work;
        }
    }

    public class GMS_BOSS4_CHIBI_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_BOSS4_1SHOT_TIMER timer = new AppMain.GMS_BOSS4_1SHOT_TIMER();
        public readonly AppMain.GMS_BOSS4_EFF_BOMB_WORK bomb = new AppMain.GMS_BOSS4_EFF_BOMB_WORK();
        public readonly AppMain.GMS_BOSS4_FLICKER_WORK flk_work = new AppMain.GMS_BOSS4_FLICKER_WORK();
        public readonly AppMain.GMS_BOSS4_DIRECTION dir = new AppMain.GMS_BOSS4_DIRECTION();
        public readonly AppMain.GMS_BOSS4_NODE_MATRIX node_work = new AppMain.GMS_BOSS4_NODE_MATRIX();
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d;
        public int type;
        public uint flag;
        public int act_id;
        public int cap_no;
        public int wait;
        public int count;
        public int bound;
        public int bnd_xspd;
        public AppMain.GMS_EFFECT_3DES_WORK boost;
        public AppMain.MPP_VOID_GMS_BOSS4_CHIBI_WORK proc_update;

        public GMS_BOSS4_CHIBI_WORK()
        {
            this.ene_3d = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d.ene_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_BOSS4_CHIBI_WORK work)
        {
            return work.ene_3d.ene_com.obj_work;
        }
    }

    public class GMS_BOSS4_BODY_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly uint[] flag = new uint[1];
        public readonly ushort[] reserved = new ushort[1];
        public readonly AppMain.GMS_BOSS4_NODE_MATRIX node_work = new AppMain.GMS_BOSS4_NODE_MATRIX();
        public readonly AppMain.GMS_BS_CMN_CNM_MGR_WORK cnm_mgr_work = new AppMain.GMS_BS_CMN_CNM_MGR_WORK();
        public readonly AppMain.GMS_BS_CMN_DMG_FLICKER_WORK flk_work = new AppMain.GMS_BS_CMN_DMG_FLICKER_WORK();
        public readonly AppMain.GMS_BOSS4_1SHOT_TIMER se_timer = new AppMain.GMS_BOSS4_1SHOT_TIMER();
        public readonly AppMain.GMS_BOSS4_MOVE move_work = new AppMain.GMS_BOSS4_MOVE();
        public readonly AppMain.GMS_BOSS4_DIRECTION dir = new AppMain.GMS_BOSS4_DIRECTION();
        public readonly AppMain.GMS_BOSS4_EFF_BOMB_WORK bomb_work = new AppMain.GMS_BOSS4_EFF_BOMB_WORK();
        public readonly AppMain.GMS_BOSS4_EFF_BOMB_WORK bomb_work2 = new AppMain.GMS_BOSS4_EFF_BOMB_WORK();
        public readonly AppMain.OBS_OBJECT_WORK[] parts_objs = new AppMain.OBS_OBJECT_WORK[2];
        public readonly AppMain.GMS_BOSS4_MTN_SUSPEND_WORK[] mtn_suspend = AppMain.New<AppMain.GMS_BOSS4_MTN_SUSPEND_WORK>(2);
        public readonly AppMain.GMS_BOSS4_NOHIT_TIMER nohit_work = new AppMain.GMS_BOSS4_NOHIT_TIMER();
        public readonly AppMain.GMS_CMN_FLASH_SCR_WORK flash_work = new AppMain.GMS_CMN_FLASH_SCR_WORK();
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d;
        public int state;
        public int prev_state;
        public AppMain.GMS_BOSS4_MGR_WORK mgr_work;
        public AppMain.MPP_VOID_GMS_BOSS4_BODY_WORK proc_update;
        public int whole_act_id;
        public int egg_revert_mtn_id;
        public uint wait_timer;
        public uint wait_timer2;
        public int chaintop_cnm_reg_id;
        public uint se_cnt;
        public int move_time;
        public int move_cnt;
        public int drift_pivot_x;
        public int drift_angle;
        public int drift_ang_spd;
        public int drift_timer;
        public int atk_nml_alt;
        public AppMain.VecFx32 bash_targ_pos;
        public AppMain.VecFx32 bash_ret_pos;
        public AppMain.VecFx32 bash_orig_pos;
        public int bash_homing_deg;
        public int damage_timer;
        public int avoid_timer;
        public int avoid_yspd;

        public GMS_BOSS4_BODY_WORK()
        {
            this.ene_3d = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d.ene_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_BOSS4_BODY_WORK work)
        {
            return work?.ene_3d.ene_com.obj_work;
        }

        public static explicit operator AppMain.GMS_ENEMY_COM_WORK(
          AppMain.GMS_BOSS4_BODY_WORK work)
        {
            return work.ene_3d.ene_com;
        }

        public static explicit operator AppMain.GMS_ENEMY_3D_WORK(
          AppMain.GMS_BOSS4_BODY_WORK work)
        {
            return work.ene_3d;
        }
    }

    public class GMS_BOSS4_CAP_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_BOSS4_1SHOT_TIMER timer = new AppMain.GMS_BOSS4_1SHOT_TIMER();
        public readonly AppMain.GMS_BOSS4_EFF_BOMB_WORK bomb = new AppMain.GMS_BOSS4_EFF_BOMB_WORK();
        public readonly AppMain.GMS_BOSS4_FLICKER_WORK flk_work = new AppMain.GMS_BOSS4_FLICKER_WORK();
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d;
        public int type;
        public uint flag;
        public readonly int egg_act_id;
        public int cap_no;
        public int wait;
        public int chibi_type;
        public AppMain.MPP_VOID_GMS_BOSS4_CAP_WORK proc_update;

        public GMS_BOSS4_CAP_WORK()
        {
            this.ene_3d = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d.ene_com.obj_work;
        }
    }

    public class GMS_BOSS4_EGG_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_BOSS4_DIRECTION dir_work = new AppMain.GMS_BOSS4_DIRECTION();
        public readonly AppMain.GMS_BOSS4_NODE_MATRIX node_work = new AppMain.GMS_BOSS4_NODE_MATRIX();
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d;
        public uint flag;
        public int egg_act_id;
        public AppMain.MPP_VOID_GMS_BOSS4_EGG_WORK proc_update;

        public GMS_BOSS4_EGG_WORK()
        {
            this.ene_3d = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d.ene_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_BOSS4_EGG_WORK work)
        {
            return work.ene_3d.ene_com.obj_work;
        }

        public static explicit operator AppMain.GMS_ENEMY_3D_WORK(AppMain.GMS_BOSS4_EGG_WORK work)
        {
            return work.ene_3d;
        }
    }

    public class GMS_BOSS4_MGR_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d;
        public int life;
        public uint flag;
        public AppMain.GMS_BOSS4_BODY_WORK body_work;
        public int obj_create_cnt;

        public GMS_BOSS4_MGR_WORK()
        {
            this.ene_3d = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d.ene_com.obj_work;
        }
    }

    public class GMS_BOSS2_BALL_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_BS_CMN_DMG_FLICKER_WORK flk_work = new AppMain.GMS_BS_CMN_DMG_FLICKER_WORK();
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d;
        public AppMain.MPP_VOID_GMS_BOSS2_BALL_WORK proc_update;

        public GMS_BOSS2_BALL_WORK()
        {
            this.ene_3d = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_BOSS2_BALL_WORK p)
        {
            return p.ene_3d.ene_com.obj_work;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d.ene_com.obj_work;
        }
    }

    public class GMS_BOSS2_EGG_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d;
        public int egg_action_id;
        public uint flag;
        public AppMain.MPP_VOID_GMS_BOSS2_EGG_WORK proc_update;

        public GMS_BOSS2_EGG_WORK()
        {
            this.ene_3d = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_BOSS2_EGG_WORK p)
        {
            return p.ene_3d.ene_com.obj_work;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d.ene_com.obj_work;
        }
    }

    public class GMS_BOSS2_BODY_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public AppMain.OBS_OBJECT_WORK[] parts_objs = new AppMain.OBS_OBJECT_WORK[2];
        public readonly AppMain.OBS_RECT_WORK rect_work_arm = new AppMain.OBS_RECT_WORK();
        public readonly AppMain.GMS_BS_CMN_BMCB_MGR bmcb_mgr = new AppMain.GMS_BS_CMN_BMCB_MGR();
        public readonly AppMain.GMS_BS_CMN_SNM_WORK snm_work = new AppMain.GMS_BS_CMN_SNM_WORK();
        public int[] snm_reg_id = new int[15];
        public readonly AppMain.GMS_BS_CMN_CNM_MGR_WORK cnm_mgr_work = new AppMain.GMS_BS_CMN_CNM_MGR_WORK();
        public int[] cnm_reg_id = new int[13];
        public readonly AppMain.GMS_BS_CMN_DMG_FLICKER_WORK flk_work = new AppMain.GMS_BS_CMN_DMG_FLICKER_WORK();
        public readonly AppMain.GMS_CMN_FLASH_SCR_WORK flash_work = new AppMain.GMS_CMN_FLASH_SCR_WORK();
        public readonly AppMain.GMS_BOSS2_EFF_BOMB_WORK bomb_work = new AppMain.GMS_BOSS2_EFF_BOMB_WORK();
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d;
        public int state;
        public int prev_state;
        public AppMain.MPP_VOID_GMS_BOSS2_BODY_WORK proc_update;
        public uint flag;
        public int action_id;
        public float offset_arm;
        public int count_release_key;
        public int shake_pos;
        public int shake_speed;
        public uint shake_count;
        public uint counter_pinball;
        public short angle_current;
        public AppMain.VecFx32 start_pos;
        public AppMain.VecFx32 end_pos;
        public float move_counter;
        public float move_frame;
        public short turn_start;
        public int turn_amount;
        public float turn_counter;
        public float turn_frame;
        public uint counter_no_hit;
        public uint counter_invincible;
        public AppMain.GSS_SND_SE_HANDLE se_handle;

        public GMS_BOSS2_BODY_WORK()
        {
            this.ene_3d = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d.ene_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_BOSS2_BODY_WORK work)
        {
            return work.ene_3d.ene_com.obj_work;
        }
    }

    public class GMS_BOSS2_MGR_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d;
        public int life;
        public uint flag;
        public AppMain.GMS_BOSS2_BODY_WORK body_work;
        public int obj_create_count;

        public GMS_BOSS2_MGR_WORK()
        {
            this.ene_3d = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_BOSS2_MGR_WORK p)
        {
            return p.ene_3d.ene_com.obj_work;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d.ene_com.obj_work;
        }
    }

    public class GMS_BOSS3_EGG_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d;
        public int egg_action_id;
        public uint flag;
        public AppMain.GMF_BOSS3_EGG_STATE_FUNC proc_update;

        public GMS_BOSS3_EGG_WORK()
        {
            this.ene_3d = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_BOSS3_EGG_WORK p)
        {
            return p.ene_3d.ene_com.obj_work;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d.ene_com.obj_work;
        }
    }

    public class GMS_BOSS3_BODY_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public AppMain.OBS_OBJECT_WORK[] parts_objs = new AppMain.OBS_OBJECT_WORK[2];
        public AppMain.VecFx32 start_pos = new AppMain.VecFx32();
        public AppMain.VecFx32 end_pos = new AppMain.VecFx32();
        public readonly AppMain.GMS_BS_CMN_BMCB_MGR bmcb_mgr = new AppMain.GMS_BS_CMN_BMCB_MGR();
        public readonly AppMain.GMS_BS_CMN_SNM_WORK snm_work = new AppMain.GMS_BS_CMN_SNM_WORK();
        public int[] snm_reg_id = new int[1];
        public readonly AppMain.GMS_BS_CMN_DMG_FLICKER_WORK flk_work = new AppMain.GMS_BS_CMN_DMG_FLICKER_WORK();
        public readonly AppMain.GMS_CMN_FLASH_SCR_WORK flash_work = new AppMain.GMS_CMN_FLASH_SCR_WORK();
        public readonly AppMain.GMS_BOSS3_EFF_BOMB_WORK bomb_work = new AppMain.GMS_BOSS3_EFF_BOMB_WORK();
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d;
        public int state;
        public int prev_state;
        public AppMain.GMF_BOSS3_BODY_STATE_FUNC proc_update;
        public uint flag;
        public int action_id;
        public int pattern_no;
        public short angle_current;
        public float move_counter;
        public float move_frame;
        public short turn_start;
        public int turn_amount;
        public float turn_counter;
        public float turn_frame;
        public int is_move;
        public uint counter_no_hit;
        public uint counter_invincible;

        public GMS_BOSS3_BODY_WORK()
        {
            this.ene_3d = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_BOSS3_BODY_WORK p)
        {
            return p.ene_3d.ene_com.obj_work;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d.ene_com.obj_work;
        }
    }

    public class GMS_BOSS3_MGR_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d;
        public int life;
        public uint flag;
        public AppMain.GMS_BOSS3_BODY_WORK body_work;
        public int obj_create_count;

        public GMS_BOSS3_MGR_WORK()
        {
            this.ene_3d = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_BOSS3_MGR_WORK p)
        {
            return p.ene_3d.ene_com.obj_work;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d.ene_com.obj_work;
        }
    }

    public class GMS_ENE_UNIUNI_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d_work;
        public int spd_dec;
        public int spd_dec_dist;
        public int rot_x;
        public int rot_y;
        public int rot_z;
        public float len;
        public float len_target;
        public float len_spd;
        public int num;
        public int attack;
        public int timer;

        public GMS_ENE_UNIUNI_WORK()
        {
            this.ene_3d_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d_work.ene_com.obj_work;
        }
    }

    public class GMS_ENE_UNIDES_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d_work;
        public int spd_dec;
        public int spd_dec_dist;
        public int rot_x;
        public int rot_y;
        public int rot_z;
        public float len;
        public int num;
        public int attack_first;
        public int attack;
        public int zoom_now;
        public int stop;
        public int timer;
        public float zoom;

        public GMS_ENE_UNIDES_WORK()
        {
            this.ene_3d_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d_work.ene_com.obj_work;
        }
    }

    public class GMS_ENE_BUKU_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d_work;
        public int spd_dec;
        public int spd_dec_dist;
        public int timer;

        public GMS_ENE_BUKU_WORK()
        {
            this.ene_3d_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d_work.ene_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_ENE_BUKU_WORK work)
        {
            return work.ene_3d_work.ene_com.obj_work;
        }
    }

    public class GMS_ENE_T_STAR_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENE_NODE_MATRIX node_work = new AppMain.GMS_ENE_NODE_MATRIX();
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d_work;
        public int spd_dec;
        public int spd_dec_dist;
        public int timer;
        public float fSpd;
        public ushort rotate;

        public GMS_ENE_T_STAR_WORK()
        {
            this.ene_3d_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d_work.ene_com.obj_work;
        }
    }

    public class GMS_ENE_KANI_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENE_NODE_MATRIX node_work = new AppMain.GMS_ENE_NODE_MATRIX();
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d_work;
        public int spd_dec;
        public int spd_dec_dist;
        public int timer;
        public int spd_x;
        public int ata_futa;
        public int walk_s;

        public GMS_ENE_KANI_WORK()
        {
            this.ene_3d_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d_work.ene_com.obj_work;
        }
    }

    public class GMS_ENE_KAMA_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENE_NODE_MATRIX node_work = new AppMain.GMS_ENE_NODE_MATRIX();
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d_work;
        public int spd_dec;
        public int spd_dec_dist;
        public int hand;
        public int attack;
        public int timer;
        public int rot_z;
        public int rot_z_add;
        public int atk_wait;
        public int walk_s;
        public int ata_futa;
        public AppMain.GMS_ENE_KAMA_FADE_ANIME anime_data;
        public uint anime_pat_no;
        public int anime_frame;

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d_work.ene_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_ENE_KAMA_WORK work)
        {
            return work.ene_3d_work.ene_com.obj_work;
        }

        public GMS_ENE_KAMA_WORK()
        {
            this.ene_3d_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }
    }

    public class GMS_ENE_MOGU_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d_work;
        public int spd_dec;
        public int spd_dec_dist;
        public int wait_time;
        public int jumpdown;
        public uint flag;

        public GMS_ENE_MOGU_WORK()
        {
            this.ene_3d_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d_work.ene_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_ENE_MOGU_WORK work)
        {
            return work.ene_3d_work.ene_com.obj_work;
        }
    }

    public class GMS_GMK_SPCTPLT_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK gmk_work;
        public ushort ctplt_id;
        public ushort ctplt_tilt;
        public int ctplt_return_timer;
        public int ctplt_height;
        public AppMain.GMS_PLAYER_WORK ply_work;
        public AppMain.GSS_SND_SE_HANDLE se_handle;

        public GMS_GMK_SPCTPLT_WORK()
        {
            this.gmk_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public static explicit operator AppMain.GMS_ENEMY_3D_WORK(AppMain.GMS_GMK_SPCTPLT_WORK p)
        {
            return p.gmk_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_GMK_SPCTPLT_WORK work)
        {
            return work.gmk_work.ene_com.obj_work;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.gmk_work.ene_com.obj_work;
        }
    }

    public class GMS_GMK_STOPPER_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK gmk_work;
        public readonly int obj_type;
        public AppMain.GMS_PLAYER_WORK ply_work;
        public short player_pass_timer;
        public int call_slot_id;
        public AppMain.GSS_SND_SE_HANDLE se_handle;

        public GMS_GMK_STOPPER_WORK()
        {
            this.gmk_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_GMK_STOPPER_WORK work)
        {
            return work.gmk_work.ene_com.obj_work;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.gmk_work.ene_com.obj_work;
        }

        public static explicit operator AppMain.GMS_ENEMY_3D_WORK(AppMain.GMS_GMK_STOPPER_WORK p)
        {
            return p.gmk_work;
        }
    }

    public class GMS_ENE_HARO_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public AppMain.VecFx32 vvv = new AppMain.VecFx32();
        public AppMain.VecFx32 vec = new AppMain.VecFx32();
        public readonly AppMain.GMS_ENE_NODE_MATRIX node_work = new AppMain.GMS_ENE_NODE_MATRIX();
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d_work;
        public int spd_dec;
        public int spd_dec_dist;
        public int angle;
        public int angle_add;
        public int spd;
        public int timer;
        public int lighton;
        public int targetAngle;

        public GMS_ENE_HARO_WORK()
        {
            this.ene_3d_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d_work.ene_com.obj_work;
        }
    }

    public class GMS_ENE_GARDON_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d_work;
        public int spd_dec;
        public int spd_dec_dist;
        public int timer;
        public int shield;

        public GMS_ENE_GARDON_WORK()
        {
            this.ene_3d_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d_work.ene_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_ENE_GARDON_WORK work)
        {
            return work.ene_3d_work.ene_com.obj_work;
        }
    }

    public class GMS_BOSS1_CHAIN_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_BS_CMN_BMCB_MGR bmcb_mgr = new AppMain.GMS_BS_CMN_BMCB_MGR();
        public readonly AppMain.GMS_BS_CMN_SNM_WORK snm_work = new AppMain.GMS_BS_CMN_SNM_WORK();
        public readonly int[] sct_snm_reg_ids = new int[9];
        public readonly AppMain.GMS_BS_CMN_CNM_MGR_WORK cnm_mgr_work = new AppMain.GMS_BS_CMN_CNM_MGR_WORK();
        public readonly int[] sct_cnm_reg_ids = new int[9];
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d;
        public AppMain.GMS_BOSS1_MGR_WORK mgr_work;
        public uint flag;
        public AppMain.MPP_VOID_GMS_BOSS1_CHAIN_WORK proc_update;
        public int ball_snm_reg_id;

        public GMS_BOSS1_CHAIN_WORK()
        {
            this.ene_3d = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d.ene_com.obj_work;
        }
    }

    public class GMS_BOSS1_MGR_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d;
        public int life;
        public uint flag;
        public int obj_create_cnt;
        public AppMain.GMS_BOSS1_BODY_WORK body_work;

        public GMS_BOSS1_MGR_WORK()
        {
            this.ene_3d = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d.ene_com.obj_work;
        }
    }

    public class GMS_BOSS1_EGG_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d;
        public AppMain.GMS_BOSS1_MGR_WORK mgr_work;
        public uint flag;
        public int egg_act_id;
        public AppMain.MPP_VOID_GMS_BOSS1_EGG_WORK proc_update;

        public GMS_BOSS1_EGG_WORK()
        {
            this.ene_3d = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d.ene_com.obj_work;
        }
    }

    public class GMS_BOSS1_BODY_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly ushort[] reserved = new ushort[1];
        public readonly AppMain.GMS_BS_CMN_BMCB_MGR bmcb_mgr = new AppMain.GMS_BS_CMN_BMCB_MGR();
        public readonly AppMain.GMS_BS_CMN_SNM_WORK snm_work = new AppMain.GMS_BS_CMN_SNM_WORK();
        public readonly AppMain.GMS_BS_CMN_CNM_MGR_WORK cnm_mgr_work = new AppMain.GMS_BS_CMN_CNM_MGR_WORK();
        public readonly AppMain.GMS_BS_CMN_DMG_FLICKER_WORK flk_work = new AppMain.GMS_BS_CMN_DMG_FLICKER_WORK();
        public readonly AppMain.GMS_BOSS1_1SHOT_TIMER se_timer = new AppMain.GMS_BOSS1_1SHOT_TIMER();
        public readonly AppMain.GMS_BOSS1_EFF_BOMB_WORK bomb_work = new AppMain.GMS_BOSS1_EFF_BOMB_WORK();
        public readonly AppMain.OBS_OBJECT_WORK[] parts_objs = new AppMain.OBS_OBJECT_WORK[3];
        public readonly AppMain.GMS_BOSS1_MTN_SUSPEND_WORK[] mtn_suspend = AppMain.New<AppMain.GMS_BOSS1_MTN_SUSPEND_WORK>(3);
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d;
        public int state;
        public int prev_state;
        public AppMain.GMS_BOSS1_MGR_WORK mgr_work;
        public AppMain.MPP_VOID_GMS_BOSS1_BODY_WORK proc_update;
        public uint flag;
        public int whole_act_id;
        public ushort egg_revert_mtn_id;
        public uint wait_timer;
        public int chain_snm_reg_id;
        public int egg_snm_reg_id;
        public int body_snm_reg_id;
        public int chaintop_snm_reg_id;
        public int chaintop_cnm_reg_id;
        public uint se_cnt;
        public uint no_hit_timer;
        public int move_time;
        public int move_cnt;
        public short cur_angle;
        public short orig_angle;
        public int turn_angle;
        public int turn_amount;
        public int turn_spd;
        public int turn_gen_var;
        public int turn_gen_factor;
        public int drift_pivot_x;
        public int drift_angle;
        public int drift_ang_spd;
        public int drift_timer;
        public int atk_nml_alt;
        public AppMain.VecFx32 bash_targ_pos;
        public AppMain.VecFx32 bash_ret_pos;
        public AppMain.VecFx32 bash_orig_pos;
        public int bash_homing_deg;

        public GMS_BOSS1_BODY_WORK()
        {
            this.ene_3d = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d.ene_com.obj_work;
        }

        public static explicit operator AppMain.GMS_ENEMY_COM_WORK(AppMain.GMS_BOSS1_BODY_WORK p)
        {
            return p.ene_3d.ene_com;
        }
    }

    public class GMS_GMK_PULLEY_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK gmk_work;
        public AppMain.GSS_SND_SE_HANDLE se_handle;
        public AppMain.GMS_EFFECT_3DES_WORK efct_work;

        public GMS_GMK_PULLEY_WORK()
        {
            this.gmk_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.gmk_work.ene_com.obj_work;
        }
    }

    public class GMS_ENE_STING_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.OBS_RECT_WORK search_rect_work = new AppMain.OBS_RECT_WORK();
        public readonly AppMain.NNS_MATRIX jet_r_mtx = AppMain.GlobalPool<AppMain.NNS_MATRIX>.Alloc();
        public readonly AppMain.NNS_MATRIX jet_l_mtx = AppMain.GlobalPool<AppMain.NNS_MATRIX>.Alloc();
        public readonly AppMain.NNS_MATRIX gun_mtx = AppMain.GlobalPool<AppMain.NNS_MATRIX>.Alloc();
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d_work;
        public int spd_dec;
        public int spd_dec_dist;
        public AppMain.GMS_EFFECT_3DES_WORK efct_r_jet;
        public AppMain.GMS_EFFECT_3DES_WORK efct_l_jet;
        public AppMain.GMS_EFFECT_3DES_WORK efct_smoke;
        public int bullet_spd_x;
        public int bullet_spd_y;
        public short bullet_dir;

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d_work.ene_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_ENE_STING_WORK work)
        {
            return work.ene_3d_work.ene_com.obj_work;
        }

        public GMS_ENE_STING_WORK()
        {
            this.ene_3d_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }
    }

    public class GMS_GMK_BLAND_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK gmk_work;
        public int broken_timer;
        public int quake_timer;
        public ushort vect;
        public int colrect_left;
        public int colrect_right;

        public GMS_GMK_BLAND_WORK()
        {
            this.gmk_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public static explicit operator AppMain.GMS_ENEMY_3D_WORK(AppMain.GMS_GMK_BLAND_WORK p)
        {
            return p.gmk_work;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.gmk_work.ene_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_GMK_BLAND_WORK work)
        {
            return work.gmk_work.ene_com.obj_work;
        }
    }

    public class GMS_GMK_PMARKER_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK gmk_work;
        public int markerdist;
        public int markerdistlast;
        public int hitcounter;
        public ushort marker_prty;

        public GMS_GMK_PMARKER_WORK()
        {
            this.gmk_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.gmk_work.ene_com.obj_work;
        }

        public AppMain.OBS_ACTION3D_NN_WORK OBJ_3D
        {
            get
            {
                return this.gmk_work.obj_3d;
            }
        }

        public AppMain.GMS_ENEMY_COM_WORK COMWORK
        {
            get
            {
                return this.gmk_work.ene_com;
            }
        }

        public AppMain.OBS_OBJECT_WORK OBJWORK
        {
            get
            {
                return this.COMWORK.obj_work;
            }
        }
    }

    public class GMS_GMK_NEEDLE_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public AppMain.GMS_ENEMY_3D_WORK gmk_work;
        public int timer;
        public uint state;
        public int scale_timer;
        public uint scale_flag;
        public ushort needle_type;
        public ushort is_first_disp;
        public uint color;

        public GMS_GMK_NEEDLE_WORK()
        {
            this.gmk_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.gmk_work.ene_com.obj_work;
        }
    }

    public class GMS_ENE_HARI_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public AppMain.GMS_ENEMY_3D_WORK ene_3d = new AppMain.GMS_ENEMY_3D_WORK();
        public AppMain.NNS_MATRIX jet_mtx = AppMain.GlobalPool<AppMain.NNS_MATRIX>.Alloc();
        public AppMain.GMS_EFFECT_3DES_WORK efct_jet;

        public GMS_ENE_HARI_WORK()
        {
            this.ene_3d = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d.ene_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_ENE_HARI_WORK work)
        {
            return work.ene_3d.ene_com.obj_work;
        }
    }

    public class GMS_ENE_MOTORA_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public AppMain.GMS_ENEMY_3D_WORK ene_3d_work;
        public int spd_dec;
        public int spd_dec_dist;

        public GMS_ENE_MOTORA_WORK()
        {
            this.ene_3d_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d_work.ene_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_ENE_MOTORA_WORK work)
        {
            return work.ene_3d_work.ene_com.obj_work;
        }
    }

    public class GMS_GMK_BOBJ_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK gmk_work;
        public int zone_type;
        public short breakrect_left;
        public short breakrect_right;
        public short breakrect_top;
        public bool hitpass;
        public short hitcheck;
        public ushort broketype;
        public ushort vect;

        public GMS_GMK_BOBJ_WORK()
        {
            this.gmk_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.gmk_work.ene_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_GMK_BOBJ_WORK work)
        {
            return work.gmk_work.ene_com.obj_work;
        }

        public static explicit operator AppMain.GMS_ENEMY_3D_WORK(AppMain.GMS_GMK_BOBJ_WORK work)
        {
            return work.gmk_work;
        }
    }

    public class GMS_GMK_BOBJ_PARTS : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_EFFECT_3DNN_WORK eff_work;
        public short falltimer;

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.eff_work.efct_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_GMK_BOBJ_PARTS work)
        {
            return work.eff_work.efct_com.obj_work;
        }

        public GMS_GMK_BOBJ_PARTS()
        {
            this.eff_work = new AppMain.GMS_EFFECT_3DNN_WORK((object)this);
        }
    }

    public class GMS_GMK_BELTC_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK gmk_work;
        public bool last_under;
        public ushort vect;
        public short width;
        public int diradd;
        public int rolldir;
        public int speed;
        public int roller;
        public float tex_u;

        public GMS_GMK_BELTC_WORK()
        {
            this.gmk_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.gmk_work.ene_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_GMK_BELTC_WORK work)
        {
            return work.gmk_work.ene_com.obj_work;
        }

        public static explicit operator AppMain.GMS_ENEMY_3D_WORK(AppMain.GMS_GMK_BELTC_WORK work)
        {
            return work.gmk_work;
        }
    }

    public class GMS_GMK_ROCK_FALL_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK enemy_work;
        public AppMain.GMS_EFFECT_3DES_WORK effect_work;
        public int wait_time;
        public ushort roll;
        public ushort roll_d;
        public AppMain.GMS_ENEMY_3D_WORK hook_work;

        public GMS_GMK_ROCK_FALL_WORK()
        {
            this.enemy_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.enemy_work.ene_com.obj_work;
        }
    }

    public class GMS_GMK_ROCK_FALL_MGR_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK enemy_work;
        public int interval;
        public AppMain.GMS_ENEMY_3D_WORK hook_work;

        public GMS_GMK_ROCK_FALL_MGR_WORK()
        {
            this.enemy_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.enemy_work.ene_com.obj_work;
        }
    }

    public class GMS_GMK_ROCK_CHASE_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK enemy_work;
        public AppMain.GMS_EFFECT_3DES_WORK effect_work;
        public int target_bound;
        public int current_bound;
        public int length;
        public int speed;
        public ushort angle_z;
        public ushort reserve;
        public uint dir_type;
        public AppMain.GSS_SND_SE_HANDLE se_handle;
        public bool flag_vib;
        public AppMain.GMS_ENEMY_3D_WORK hook_work;

        public GMS_GMK_ROCK_CHASE_WORK()
        {
            this.enemy_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.enemy_work.ene_com.obj_work;
        }
    }

    public class GMS_EFCT_CMN_CREATE_PARAM
    {
        public readonly AppMain.GMS_EFFECT_CREATE_PARAM create_param;
        public int mdl_ambtex_idx;

        public GMS_EFCT_CMN_CREATE_PARAM()
        {
            this.create_param = new AppMain.GMS_EFFECT_CREATE_PARAM();
        }

        public GMS_EFCT_CMN_CREATE_PARAM(
          AppMain.GMS_EFFECT_CREATE_PARAM create_param,
          int mdl_ambtex_idx)
        {
            this.create_param = new AppMain.GMS_EFFECT_CREATE_PARAM();
            this.create_param.Assign(create_param);
            this.mdl_ambtex_idx = mdl_ambtex_idx;
        }
    }

    public class GMS_EFFECT_CREATE_PARAM
    {
        public int ame_idx;
        public uint pos_type;
        public uint init_flag;
        public readonly AppMain.NNS_VECTOR disp_ofst;
        public AppMain.NNS_ROTATE_A16 disp_rot;
        public float scale;
        public AppMain.MPP_VOID_OBS_OBJECT_WORK main_func;
        public int model_idx;

        public GMS_EFFECT_CREATE_PARAM(
          int ame_idx,
          uint pos_type,
          uint init_flag,
          AppMain.NNS_VECTOR disp_ofst,
          AppMain.NNS_ROTATE_A16 disp_rot,
          float scale,
          AppMain.MPP_VOID_OBS_OBJECT_WORK main_func,
          int model_idx)
        {
            this.ame_idx = ame_idx;
            this.pos_type = pos_type;
            this.init_flag = init_flag;
            this.disp_ofst = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
            this.disp_ofst.Assign(disp_ofst);
            this.disp_rot = disp_rot;
            this.scale = scale;
            this.main_func = main_func;
            this.model_idx = model_idx;
        }

        public GMS_EFFECT_CREATE_PARAM()
        {
            this.disp_ofst = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
            this.disp_rot = new AppMain.NNS_ROTATE_A16();
        }

        public void Assign(AppMain.GMS_EFFECT_CREATE_PARAM param)
        {
            this.ame_idx = param.ame_idx;
            this.pos_type = param.pos_type;
            this.init_flag = param.init_flag;
            this.disp_ofst.Assign(param.disp_ofst);
            this.disp_rot = param.disp_rot;
            this.scale = param.scale;
            this.main_func = param.main_func;
            this.model_idx = param.model_idx;
        }
    }

    public class GMS_BOSS5_EFCT_GENERAL_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.NNS_MATRIX ofst_mtx = new AppMain.NNS_MATRIX();
        public readonly AppMain.GMS_BOSS5_1SHOT_TIMER se_timer = new AppMain.GMS_BOSS5_1SHOT_TIMER();
        public readonly AppMain.GMS_EFFECT_3DES_WORK efct_3des;
        public uint flag;
        public uint user_flag;
        public uint user_work;
        public int ref_node_snm_id;
        public uint timer;
        public float ratio_timer;
        public uint se_cnt;
        public AppMain.GSS_SND_SE_HANDLE se_handle;

        public GMS_BOSS5_EFCT_GENERAL_WORK()
        {
            this.efct_3des = new AppMain.GMS_EFFECT_3DES_WORK((object)this);
        }

        public static explicit operator AppMain.GMS_EFFECT_COM_WORK(
          AppMain.GMS_BOSS5_EFCT_GENERAL_WORK p)
        {
            return p.efct_3des.efct_com;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.efct_3des.efct_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(
          AppMain.GMS_BOSS5_EFCT_GENERAL_WORK work)
        {
            return work.efct_3des.efct_com.obj_work;
        }
    }

    public class GMS_EFFECT_3DES_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_EFFECT_COM_WORK efct_com = new AppMain.GMS_EFFECT_COM_WORK();
        public readonly AppMain.OBS_ACTION3D_ES_WORK obj_3des = new AppMain.OBS_ACTION3D_ES_WORK();
        public uint saved_pos_type;
        public uint saved_init_flag;
        public object m_pHolder;

        public void Clear()
        {
            this.efct_com.Clear();
            this.obj_3des.Clear();
            this.saved_pos_type = 0U;
            this.saved_init_flag = 0U;
        }

        public static explicit operator AppMain.GMS_EFFECT_COM_WORK(
          AppMain.GMS_EFFECT_3DES_WORK work)
        {
            return work.efct_com;
        }

        public static explicit operator AppMain.GMS_BOSS5_EFCT_GENERAL_WORK(
          AppMain.GMS_EFFECT_3DES_WORK work)
        {
            return (AppMain.GMS_BOSS5_EFCT_GENERAL_WORK)work.m_pHolder;
        }

        public static explicit operator AppMain.GMS_BOSS4_EFF_COMMON_WORK(
          AppMain.GMS_EFFECT_3DES_WORK work)
        {
            return (AppMain.GMS_BOSS4_EFF_COMMON_WORK)work.m_pHolder;
        }

        public static explicit operator AppMain.GMS_BOSS1_EFF_SHOCKWAVE_SUB_WORK(
          AppMain.GMS_EFFECT_3DES_WORK work)
        {
            return (AppMain.GMS_BOSS1_EFF_SHOCKWAVE_SUB_WORK)work.m_pHolder;
        }

        public static explicit operator AppMain.GMS_BOSS1_EFF_SHOCKWAVE_WORK(
          AppMain.GMS_EFFECT_3DES_WORK work)
        {
            return (AppMain.GMS_BOSS1_EFF_SHOCKWAVE_WORK)work.m_pHolder;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.efct_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_EFFECT_3DES_WORK work)
        {
            return work.efct_com.obj_work;
        }

        public GMS_EFFECT_3DES_WORK()
        {
            this.efct_com = new AppMain.GMS_EFFECT_COM_WORK((object)this);
        }

        public GMS_EFFECT_3DES_WORK(object pHolder)
          : this()
        {
            this.m_pHolder = pHolder;
        }
    }

    public class GMS_BOSS5_1SHOT_TIMER
    {
        public uint timer;
        public int is_active;
    }

    public class GMS_BOSS5_EFCT_DATA_INFO
    {
        public int use_model;
        public int ame_arc_idx;
        public int ame_dwork_no;
        public int tex_amb_arc_idx;
        public int tex_amb_dwork_no;
        public int tex_list_dwork_no;
        public int model_arc_idx;
        public int model_dwork_no;
        public int object_dwork_no;

        public GMS_BOSS5_EFCT_DATA_INFO(
          int z,
          int a,
          int b,
          int c,
          int d,
          int e,
          int f,
          int g,
          int h)
        {
            this.use_model = z;
            this.ame_arc_idx = a;
            this.ame_dwork_no = b;
            this.tex_amb_arc_idx = c;
            this.tex_amb_dwork_no = d;
            this.tex_list_dwork_no = e;
            this.model_arc_idx = f;
            this.model_dwork_no = g;
            this.object_dwork_no = h;
        }
    }

    public enum OBE_CAMERA_TYPE
    {
        OBE_CAMERA_TYPE_TARGET_ROLL,
        OBE_CAMERA_TYPE_TARGET_UP_TARGET,
        OBE_CAMERA_TYPE_TARGET_UP_VEC,
        OBE_CAMERA_TYPE_MAX,
    }

    public interface IClearable
    {
        void Clear();
    }

    public class OBS_CAMERA : AppMain.IClearable
    {
        public readonly AppMain.NNS_VECTOR disp_pos = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_VECTOR prev_disp_pos = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_VECTOR pos = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_VECTOR prev_pos = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_VECTOR ofst = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_VECTOR disp_ofst = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_VECTOR target_ofst = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_VECTOR play_ofst_max = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_VECTOR allow = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_VECTOR allow_limit = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_VECTOR target_pos = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_VECTOR camup_pos = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_VECTOR spd = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_VECTOR spd_add = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_VECTOR spd_max = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly int[] roll_hist = new int[16];
        public readonly AppMain.NNS_VECTOR work = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly int[] limit = new int[6];
        public readonly AppMain.NNS_MATRIX prj_pers_mtx = AppMain.GlobalPool<AppMain.NNS_MATRIX>.Alloc();
        public readonly AppMain.NNS_MATRIX prj_ortho_mtx = AppMain.GlobalPool<AppMain.NNS_MATRIX>.Alloc();
        public readonly AppMain.NNS_MATRIX view_mtx = AppMain.GlobalPool<AppMain.NNS_MATRIX>.Alloc();
        public readonly AppMain.NNS_VECTOR up_vec = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public int camera_id;
        public AppMain.OBS_OBJECT_WORK target_obj;
        public AppMain.OBS_OBJECT_WORK camup_obj;
        public int roll;
        public ushort roll_ptr;
        public ushort shift;
        public ushort index;
        public uint command_state;
        public AppMain.OBJF_CAMERA_USER_FUNC user_func;
        public object user_work;
        public uint flag;
        public AppMain.OBE_CAMERA_TYPE camera_type;
        public int fovy;
        public float scale;
        public float left;
        public float right;
        public float bottom;
        public float top;
        public float znear;
        public float zfar;
        public float aspect;

        public void Clear()
        {
            this.camera_id = 0;
            this.target_obj = this.camup_obj = (AppMain.OBS_OBJECT_WORK)null;
            this.disp_pos.Clear();
            this.prev_disp_pos.Clear();
            this.pos.Clear();
            this.prev_pos.Clear();
            this.ofst.Clear();
            this.disp_ofst.Clear();
            this.target_ofst.Clear();
            this.play_ofst_max.Clear();
            this.allow.Clear();
            this.allow_limit.Clear();
            this.target_pos.Clear();
            this.camup_pos.Clear();
            this.spd.Clear();
            this.spd_add.Clear();
            this.spd_max.Clear();
            this.roll = 0;
            Array.Clear((Array)this.roll_hist, 0, this.roll_hist.Length);
            this.roll_ptr = (ushort)0;
        }
    }

    public delegate void OBJF_CAMERA_USER_FUNC(AppMain.OBS_CAMERA camera);

    public class OBS_CAMERA_SYS
    {
        public readonly AppMain.OBS_CAMERA[] obj_camera = new AppMain.OBS_CAMERA[8];
        public int camera_num;

        public void Clear()
        {
            Array.Clear((Array)this.obj_camera, 0, this.obj_camera.Length);
            this.camera_num = 0;
        }
    }

    public struct AMS_DRAW_VIDEO
    {
        public float draw_width;
        public float draw_height;
        public float disp_width;
        public float disp_height;
        public bool wide_screen;
        public bool squeeze_screen;
        public float refresh_rate;
        public int video_standard;
        public float width_2d;
        public float height_2d;
        public float draw_aspect;
        public float scale_x_2d;
        public float scale_y_2d;
        public float base_x_2d;
        public float base_y_2d;
    }

    public delegate void _am_draw_command_delegate(AppMain.AMS_COMMAND_HEADER ch, uint n);

    public class AMS_COMMAND_HEADER
    {
        public uint state;
        public int command_id;
        public object param;

        public AMS_COMMAND_HEADER(AppMain.AMS_COMMAND_HEADER pHeader)
        {
            this.Assign(pHeader);
        }

        public AMS_COMMAND_HEADER()
        {
        }

        public void Assign(AppMain.AMS_COMMAND_HEADER pHeader)
        {
            this.state = pHeader.state;
            this.command_id = pHeader.command_id;
            this.param = pHeader.param;
        }
    }

    public delegate void _am_draw_regist_delegate(AppMain.AMS_REGISTLIST l);

    public class AMS_REGISTLIST
    {
        public int command_id;
        public object param;
    }

    public class AMS_DRAWSTATE_DIFFUSE
    {
        public int mode;
        public float r;
        public float g;
        public float b;

        public AMS_DRAWSTATE_DIFFUSE()
        {
        }

        public AMS_DRAWSTATE_DIFFUSE(AppMain.AMS_DRAWSTATE_DIFFUSE drawState)
        {
            this.mode = drawState.mode;
            this.r = drawState.r;
            this.g = drawState.g;
            this.b = drawState.b;
        }

        public AppMain.AMS_DRAWSTATE_DIFFUSE Assign(AppMain.AMS_DRAWSTATE_DIFFUSE drawState)
        {
            this.mode = drawState.mode;
            this.r = drawState.r;
            this.g = drawState.g;
            this.b = drawState.b;
            return this;
        }

        public void Clear()
        {
            this.mode = 0;
            this.r = this.g = this.b = 0.0f;
        }
    }

    public class AMS_DRAWSTATE_AMBIENT
    {
        public int mode;
        public float r;
        public float g;
        public float b;

        public AMS_DRAWSTATE_AMBIENT()
        {
        }

        public AMS_DRAWSTATE_AMBIENT(AppMain.AMS_DRAWSTATE_AMBIENT drawState)
        {
            this.mode = drawState.mode;
            this.r = drawState.r;
            this.g = drawState.g;
            this.b = drawState.b;
        }

        public AppMain.AMS_DRAWSTATE_AMBIENT Assign(AppMain.AMS_DRAWSTATE_AMBIENT drawState)
        {
            this.mode = drawState.mode;
            this.r = drawState.r;
            this.g = drawState.g;
            this.b = drawState.b;
            return this;
        }

        public void Clear()
        {
            this.mode = 0;
            this.r = this.g = this.b = 0.0f;
        }
    }

    public class AMS_DRAWSTATE_ALPHA
    {
        public int mode;
        public float alpha;

        public AMS_DRAWSTATE_ALPHA()
        {
        }

        public AMS_DRAWSTATE_ALPHA(AppMain.AMS_DRAWSTATE_ALPHA drawState)
        {
            this.mode = drawState.mode;
            this.alpha = drawState.alpha;
        }

        public AppMain.AMS_DRAWSTATE_ALPHA Assign(AppMain.AMS_DRAWSTATE_ALPHA drawState)
        {
            this.mode = drawState.mode;
            this.alpha = drawState.alpha;
            return this;
        }

        public void Clear()
        {
            this.mode = 0;
            this.alpha = 0.0f;
        }
    }

    public class AMS_DRAWSTATE_SPECULAR
    {
        public int mode;
        public float r;
        public float g;
        public float b;

        public AMS_DRAWSTATE_SPECULAR()
        {
        }

        public AMS_DRAWSTATE_SPECULAR(AppMain.AMS_DRAWSTATE_SPECULAR drawState)
        {
            this.mode = drawState.mode;
            this.r = drawState.r;
            this.g = drawState.g;
            this.b = drawState.b;
        }

        public AppMain.AMS_DRAWSTATE_SPECULAR Assign(AppMain.AMS_DRAWSTATE_SPECULAR drawState)
        {
            this.mode = drawState.mode;
            this.r = drawState.r;
            this.g = drawState.g;
            this.b = drawState.b;
            return this;
        }

        public void Clear()
        {
            this.mode = 0;
            this.r = this.g = this.b = 0.0f;
        }
    }

    public class AMS_DRAWSTATE_ENVMAP
    {
        public readonly AppMain.NNS_MATRIX texmtx = AppMain.GlobalPool<AppMain.NNS_MATRIX>.Alloc();
        public int texsrc;

        public AMS_DRAWSTATE_ENVMAP()
        {
        }

        public AMS_DRAWSTATE_ENVMAP(AppMain.AMS_DRAWSTATE_ENVMAP drawState)
        {
            this.texsrc = drawState.texsrc;
            this.texmtx.Assign(drawState.texmtx);
        }

        public AppMain.AMS_DRAWSTATE_ENVMAP Assign(AppMain.AMS_DRAWSTATE_ENVMAP drawState)
        {
            if (this != drawState)
            {
                this.texsrc = drawState.texsrc;
                this.texmtx.Assign(drawState.texmtx);
            }
            return this;
        }

        public void Clear()
        {
            this.texsrc = 0;
            this.texmtx.Clear();
        }
    }

    public class AMS_DRAWSTATE_BLEND
    {
        public int mode;

        public AMS_DRAWSTATE_BLEND()
        {
        }

        public AMS_DRAWSTATE_BLEND(AppMain.AMS_DRAWSTATE_BLEND drawState)
        {
            this.mode = drawState.mode;
        }

        public AppMain.AMS_DRAWSTATE_BLEND Assign(AppMain.AMS_DRAWSTATE_BLEND drawState)
        {
            this.mode = drawState.mode;
            return this;
        }

        public void Clear()
        {
            this.mode = 0;
        }
    }

    public class AMS_DRAWSTATE_TEXOFFSET
    {
        public int mode;
        public float u;
        public float v;

        public AMS_DRAWSTATE_TEXOFFSET()
        {
        }

        public AMS_DRAWSTATE_TEXOFFSET(int mode, float u, float v)
        {
            this.mode = mode;
            this.u = u;
            this.v = v;
        }

        public void Assign(AppMain.AMS_DRAWSTATE_TEXOFFSET p)
        {
            this.mode = p.mode;
            this.u = p.u;
            this.v = p.v;
        }

        internal void Clear()
        {
            this.mode = 0;
            this.u = 0.0f;
            this.v = 0.0f;
        }
    }

    public class AMS_DRAWSTATE_FOG
    {
        public int flag;

        public void Clear()
        {
            this.flag = 0;
        }
    }

    public class AMS_DRAWSTATE_FOG_COLOR : AppMain.IClearable
    {
        public float r;
        public float g;
        public float b;

        public AMS_DRAWSTATE_FOG_COLOR()
        {
        }

        public AMS_DRAWSTATE_FOG_COLOR(AppMain.AMS_DRAWSTATE_FOG_COLOR drawState)
        {
            this.r = drawState.r;
            this.g = drawState.g;
            this.b = drawState.b;
        }

        public AppMain.AMS_DRAWSTATE_FOG_COLOR Assign(AppMain.AMS_DRAWSTATE_FOG_COLOR drawState)
        {
            this.r = drawState.r;
            this.g = drawState.g;
            this.b = drawState.b;
            return this;
        }

        public void Clear()
        {
            this.r = this.g = this.b = 0.0f;
        }
    }

    public class AMS_DRAWSTATE_FOG_RANGE
    {
        public float fnear;
        public float ffar;

        public AMS_DRAWSTATE_FOG_RANGE()
        {
        }

        public AMS_DRAWSTATE_FOG_RANGE(AppMain.AMS_DRAWSTATE_FOG_RANGE drawState)
        {
            this.fnear = drawState.fnear;
            this.ffar = drawState.ffar;
        }

        public AppMain.AMS_DRAWSTATE_FOG_RANGE Assign(AppMain.AMS_DRAWSTATE_FOG_RANGE drawState)
        {
            this.fnear = drawState.fnear;
            this.ffar = drawState.ffar;
            return this;
        }

        public void Clear()
        {
            this.fnear = this.ffar = 0.0f;
        }
    }

    public class AMS_DRAWSTATE_Z_MODE
    {
        public uint compare;
        public uint update;
        public int func;

        public AMS_DRAWSTATE_Z_MODE()
        {
        }

        public AMS_DRAWSTATE_Z_MODE(AppMain.AMS_DRAWSTATE_Z_MODE drawState)
        {
            this.compare = drawState.compare;
            this.update = drawState.update;
            this.func = drawState.func;
        }

        public AppMain.AMS_DRAWSTATE_Z_MODE Assign(AppMain.AMS_DRAWSTATE_Z_MODE drawState)
        {
            this.compare = drawState.compare;
            this.update = drawState.update;
            this.func = drawState.func;
            return this;
        }

        public void Clear()
        {
            this.compare = 0U;
            this.update = 0U;
            this.func = 0;
        }
    }

    public class AMS_DRAWSTATE
    {
        public readonly AppMain.AMS_DRAWSTATE_DIFFUSE diffuse = new AppMain.AMS_DRAWSTATE_DIFFUSE();
        public readonly AppMain.AMS_DRAWSTATE_AMBIENT ambient = new AppMain.AMS_DRAWSTATE_AMBIENT();
        public readonly AppMain.AMS_DRAWSTATE_SPECULAR specular = new AppMain.AMS_DRAWSTATE_SPECULAR();
        public readonly AppMain.AMS_DRAWSTATE_ENVMAP envmap = new AppMain.AMS_DRAWSTATE_ENVMAP();
        public readonly AppMain.AMS_DRAWSTATE_ALPHA alpha = new AppMain.AMS_DRAWSTATE_ALPHA();
        public readonly AppMain.AMS_DRAWSTATE_BLEND blend = new AppMain.AMS_DRAWSTATE_BLEND();
        public readonly AppMain.AMS_DRAWSTATE_TEXOFFSET[] texoffset = AppMain.New<AppMain.AMS_DRAWSTATE_TEXOFFSET>(4);
        public readonly AppMain.AMS_DRAWSTATE_FOG fog = new AppMain.AMS_DRAWSTATE_FOG();
        public readonly AppMain.AMS_DRAWSTATE_FOG_COLOR fog_color = new AppMain.AMS_DRAWSTATE_FOG_COLOR();
        public readonly AppMain.AMS_DRAWSTATE_FOG_RANGE fog_range = new AppMain.AMS_DRAWSTATE_FOG_RANGE();
        public readonly AppMain.AMS_DRAWSTATE_Z_MODE zmode = new AppMain.AMS_DRAWSTATE_Z_MODE();
        public uint drawflag;

        public AMS_DRAWSTATE()
        {
        }

        public AMS_DRAWSTATE(AppMain.AMS_DRAWSTATE drawState)
        {
            this.drawflag = drawState.drawflag;
            this.diffuse.Assign(drawState.diffuse);
            this.ambient.Assign(drawState.ambient);
            this.specular.Assign(drawState.specular);
            this.envmap.Assign(drawState.envmap);
            this.alpha.Assign(drawState.alpha);
            this.blend.Assign(drawState.blend);
            for (int index = 0; index < 4; ++index)
                this.texoffset[index].Assign(drawState.texoffset[index]);
            this.fog.flag = drawState.fog.flag;
            this.fog_color.Assign(drawState.fog_color);
            this.fog_range.Assign(drawState.fog_range);
            this.zmode.Assign(drawState.zmode);
        }

        public AppMain.AMS_DRAWSTATE Assign(AppMain.AMS_DRAWSTATE drawState)
        {
            if (this != drawState)
            {
                this.drawflag = drawState.drawflag;
                this.diffuse.Assign(drawState.diffuse);
                this.ambient.Assign(drawState.ambient);
                this.specular.Assign(drawState.specular);
                this.envmap.Assign(drawState.envmap);
                this.alpha.Assign(drawState.alpha);
                this.blend.Assign(drawState.blend);
                for (int index = 0; index < 4; ++index)
                    this.texoffset[index].Assign(drawState.texoffset[index]);
                this.fog.flag = drawState.fog.flag;
                this.fog_color.Assign(drawState.fog_color);
                this.fog_range.Assign(drawState.fog_range);
                this.zmode.Assign(drawState.zmode);
            }
            return this;
        }

        public void Clear()
        {
            this.drawflag = 0U;
            this.diffuse.Clear();
            this.ambient.Clear();
            this.specular.Clear();
            this.envmap.Clear();
            this.alpha.Clear();
            this.blend.Clear();
            for (int index = 0; index < 4; ++index)
                this.texoffset[index].Clear();
            this.fog.Clear();
            this.fog_color.Clear();
            this.fog_range.Clear();
            this.zmode.Clear();
        }
    }

    public class AMS_COMMAND_BUFFER_HEADER
    {
        public readonly uint[] system_flag = new uint[4];
        public readonly uint[] debug_flag = new uint[4];
        public ushort display_flag;
        public ushort regist_flag;
        public float icon_alpha;
    }

    public class AMS_DISPLAYLIST
    {
        public int counter;
        public AppMain.ArrayPointer<object> command_buf;
        public AppMain.ArrayPointer<object> data_buf;
        public int command_buf_size;
        public int data_buf_size;
    }

    public struct ArrayPointer<T>
    {
        public static readonly AppMain.ArrayPointer<T> NULL = new AppMain.ArrayPointer<T>();
        public T[] array;
        public int offset;

        public ArrayPointer(T[] _array)
          : this(_array, 0)
        {
        }

        public ArrayPointer(T[] _array, int _offset)
        {
            this.array = _array;
            this.offset = _offset;
        }

        public static AppMain.ArrayPointer<T> operator ++(AppMain.ArrayPointer<T> _pointer)
        {
            ++_pointer.offset;
            return _pointer;
        }

        public static AppMain.ArrayPointer<T> operator --(AppMain.ArrayPointer<T> _pointer)
        {
            --_pointer.offset;
            return _pointer;
        }

        public static AppMain.ArrayPointer<T> operator +(
          AppMain.ArrayPointer<T> _pointer,
          int _offset)
        {
            _pointer.offset += _offset;
            return _pointer;
        }

        public static AppMain.ArrayPointer<T> operator -(
          AppMain.ArrayPointer<T> _pointer,
          int _offset)
        {
            _pointer.offset -= _offset;
            return _pointer;
        }

        public static bool operator <(
          AppMain.ArrayPointer<T> _pointer1,
          AppMain.ArrayPointer<T> _pointer2)
        {
            if (_pointer1.array != _pointer2.array)
                throw new InvalidOperationException();
            return _pointer1.offset < _pointer2.offset;
        }

        public static bool operator >(
          AppMain.ArrayPointer<T> _pointer1,
          AppMain.ArrayPointer<T> _pointer2)
        {
            if (_pointer1.array != _pointer2.array)
                throw new InvalidOperationException();
            return _pointer1.offset > _pointer2.offset;
        }

        public static bool operator ==(
          AppMain.ArrayPointer<T> _pointer1,
          AppMain.ArrayPointer<T> _pointer2)
        {
            return _pointer1.array == _pointer2.array && _pointer1.offset == _pointer2.offset;
        }

        public static bool operator !=(
          AppMain.ArrayPointer<T> _pointer1,
          AppMain.ArrayPointer<T> _pointer2)
        {
            return _pointer1.array != _pointer2.array || _pointer1.offset != _pointer2.offset;
        }

        public static T operator ~(AppMain.ArrayPointer<T> _pointer)
        {
            return _pointer.array[_pointer.offset];
        }

        public T this[int _index]
        {
            get
            {
                return this.array[this.offset + _index];
            }
        }

        public T[] GetInternalArray()
        {
            return this.array;
        }

        public AppMain.ArrayPointer<T> Clone()
        {
            return new AppMain.ArrayPointer<T>(this.array, this.offset);
        }

        public static implicit operator AppMain.ArrayPointer<T>(T[] _array)
        {
            return new AppMain.ArrayPointer<T>(_array);
        }

        public static implicit operator T(AppMain.ArrayPointer<T> _pointer)
        {
            return _pointer.array[_pointer.offset];
        }

        public T SetPrimitive(T value)
        {
            this.array[this.offset] = value;
            return value;
        }

        public T SetPrimitive(int index, T value)
        {
            this.array[this.offset + index] = value;
            return value;
        }

        public override int GetHashCode()
        {
            return this.array.GetHashCode() ^ this.offset.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            return obj is AppMain.ArrayPointer<T> arrayPointer && arrayPointer.array == this.array && arrayPointer.offset == this.offset;
        }
    }

    public class AMS_DRAW_SORT
    {
        public int key;
        public AppMain.AMS_COMMAND_HEADER command;

        public AppMain.AMS_DRAW_SORT Assign(AppMain.AMS_DRAW_SORT sort)
        {
            this.key = sort.key;
            this.command = sort.command;
            return this;
        }
    }

    public class AMS_DISPLAYLIST_MANAGER
    {
        public readonly AppMain.AMS_DRAW_SORT[] sortlist = AppMain.New<AppMain.AMS_DRAW_SORT>(512);
        public readonly AppMain.AMS_DISPLAYLIST[] displaylist = AppMain.New<AppMain.AMS_DISPLAYLIST>(4);
        public readonly AppMain.AMS_REGISTLIST[] registlist = AppMain.New<AppMain.AMS_REGISTLIST>(256);
        public int write_index;
        public int last_index;
        public int read_index;
        public AppMain.ArrayPointer<object> command_buf_ptr;
        public AppMain.AMS_COMMAND_BUFFER_HEADER write_header;
        public int reg_write_num;
        public AppMain.AMS_COMMAND_BUFFER_HEADER read_header;
        public int sort_num;
        public int regist_num;
        public int reg_write_index;
        public int reg_read_index;
        public int reg_end_index;
    }

    private class AMS_PARAM_MAKE_TASK
    {
        public int prio;
        public AppMain.TaskProc proc;
        public object work_data;
    }

    public delegate void TaskProc(AppMain.AMS_TCB tcb);

    private class AMS_PARAM_DRAW_OBJECT
    {
        public AppMain.NNS_OBJECT _object;
        public AppMain.NNS_MATRIX mtx;
        public AppMain.NNS_TEXLIST texlist;
        public uint sub_obj_type;
        public uint flag;
        public AppMain.NNS_MATERIALCALLBACK_FUNC material_func;
        public float scaleZ;
        public readonly object holder;

        public AMS_PARAM_DRAW_OBJECT()
        {
        }

        public AMS_PARAM_DRAW_OBJECT(object _holder)
        {
            this.holder = _holder;
        }

        public static explicit operator AppMain.OBS_DRAW_PARAM_3DNN_MODEL(
          AppMain.AMS_PARAM_DRAW_OBJECT ob)
        {
            return (AppMain.OBS_DRAW_PARAM_3DNN_MODEL)ob.holder;
        }
    }

    public delegate int NNS_MATERIALCALLBACK_FUNC(AppMain.NNS_DRAWCALLBACK_VAL val);

    private class OBS_DRAW_PARAM_3DNN_MODEL
    {
        public readonly AppMain.NNS_MATRIX mtx = new AppMain.NNS_MATRIX();
        public readonly AppMain.AMS_DRAWSTATE draw_state = new AppMain.AMS_DRAWSTATE();
        public readonly AppMain.AMS_PARAM_DRAW_OBJECT param;
        public AppMain.AMS_DRAWSTATE state;
        public AppMain.MPP_VOID_OBJECT_DELEGATE user_func;
        public object user_param;
        public AppMain.MPP_BOOL_NNSDRAWCALLBACKVAL_OBJECT_DELEGATE material_cb_func;
        public object material_cb_param;
        public uint use_light_flag;

        public OBS_DRAW_PARAM_3DNN_MODEL()
        {
            this.param = new AppMain.AMS_PARAM_DRAW_OBJECT((object)this);
        }
    }

    private class AMS_PARAM_DRAW_OBJECT_MATERIAL : AppMain.AMS_PARAM_DRAW_OBJECT
    {
        public readonly AppMain.NNS_VECTOR scale = new AppMain.NNS_VECTOR();
        public AppMain.NNS_RGBA color;
        public float scroll_u;
        public float scroll_v;
        public int blend;
    }

    private class AMS_PARAM_SORT_DRAW_OBJECT
    {
        public uint drawflag;
        public AppMain.AMS_PARAM_DRAW_OBJECT draw_object;
        public AppMain.NNS_MATRIX[] mtx;
        public uint[] nstat_list;
        public AppMain.AMS_DRAWSTATE draw_state;
    }

    private class AMS_PARAM_DRAW_MOTION
    {
        public AppMain.NNS_OBJECT _object;
        public AppMain.NNS_MATRIX mtx;
        public AppMain.NNS_TEXLIST texlist;
        public uint sub_obj_type;
        public uint flag;
        public AppMain.NNS_MATERIALCALLBACK_FUNC material_func;
        public AppMain.NNS_MOTION motion;
        public float frame;
        public readonly object holder;

        public AMS_PARAM_DRAW_MOTION()
        {
        }

        public AMS_PARAM_DRAW_MOTION(object _holder)
        {
            this.holder = _holder;
        }

        public static explicit operator AppMain.OBS_DRAW_PARAM_3DNN_DRAW_MOTION(
          AppMain.AMS_PARAM_DRAW_MOTION mtn)
        {
            return (AppMain.OBS_DRAW_PARAM_3DNN_DRAW_MOTION)mtn.holder;
        }
    }

    public class NNS_MOTION : AppMain.IClearable
    {
        public uint fType;
        public float StartFrame;
        public float EndFrame;
        public int nSubmotion;
        public AppMain.NNS_SUBMOTION[] pSubmotion;
        public float FrameRate;
        public uint Reserved0;
        public uint Reserved1;

        public NNS_MOTION()
        {
        }

        public NNS_MOTION(AppMain.NNS_MOTION motion)
        {
            this.fType = motion.fType;
            this.StartFrame = motion.StartFrame;
            this.EndFrame = motion.EndFrame;
            this.nSubmotion = motion.nSubmotion;
            this.pSubmotion = motion.pSubmotion;
            this.FrameRate = motion.FrameRate;
            this.Reserved0 = motion.Reserved0;
            this.Reserved1 = motion.Reserved1;
        }

        public AppMain.NNS_MOTION Assign(AppMain.NNS_MOTION motion)
        {
            if (this != motion)
            {
                this.fType = motion.fType;
                this.StartFrame = motion.StartFrame;
                this.EndFrame = motion.EndFrame;
                this.nSubmotion = motion.nSubmotion;
                this.pSubmotion = motion.pSubmotion;
                this.FrameRate = motion.FrameRate;
                this.Reserved0 = motion.Reserved0;
                this.Reserved1 = motion.Reserved1;
            }
            return this;
        }

        public void Clear()
        {
            this.fType = 0U;
            this.StartFrame = 0.0f;
            this.EndFrame = 0.0f;
            this.nSubmotion = 0;
            this.pSubmotion = (AppMain.NNS_SUBMOTION[])null;
            this.FrameRate = 0.0f;
            this.Reserved0 = 0U;
            this.Reserved1 = 0U;
        }

        public static AppMain.NNS_MOTION Read(BinaryReader reader, long data0Pos)
        {
            AppMain.NNS_MOTION nnsMotion = new AppMain.NNS_MOTION();
            nnsMotion.fType = reader.ReadUInt32();
            nnsMotion.StartFrame = reader.ReadSingle();
            nnsMotion.EndFrame = reader.ReadSingle();
            nnsMotion.nSubmotion = reader.ReadInt32();
            uint num = reader.ReadUInt32();
            if (num != 0U)
            {
                long position = reader.BaseStream.Position;
                reader.BaseStream.Seek(data0Pos + (long)num, SeekOrigin.Begin);
                nnsMotion.pSubmotion = new AppMain.NNS_SUBMOTION[nnsMotion.nSubmotion];
                for (int index = 0; index < nnsMotion.nSubmotion; ++index)
                    nnsMotion.pSubmotion[index] = AppMain.NNS_SUBMOTION.Read(reader, nnsMotion.fType & 31U, data0Pos);
                reader.BaseStream.Seek(position, SeekOrigin.Begin);
            }
            nnsMotion.FrameRate = reader.ReadSingle();
            nnsMotion.Reserved0 = reader.ReadUInt32();
            nnsMotion.Reserved1 = reader.ReadUInt32();
            return nnsMotion;
        }
    }

    private class OBS_DRAW_PARAM_3DNN_DRAW_MOTION
    {
        public readonly AppMain.NNS_MATRIX mtx = new AppMain.NNS_MATRIX();
        public readonly AppMain.AMS_DRAWSTATE draw_state = new AppMain.AMS_DRAWSTATE();
        public readonly AppMain.AMS_PARAM_DRAW_MOTION param;
        public AppMain.AMS_DRAWSTATE state;
        public AppMain.MPP_VOID_OBJECT_DELEGATE user_func;
        public object user_param;
        public AppMain.MPP_VOID_ARRAYNNSMATRIX_NNSOBJECT_OBJECT mplt_cb_func;
        public object mplt_cb_param;
        public AppMain.MPP_BOOL_NNSDRAWCALLBACKVAL_OBJECT_DELEGATE material_cb_func;
        public object material_cb_param;
        public uint use_light_flag;

        public OBS_DRAW_PARAM_3DNN_DRAW_MOTION()
        {
            this.param = new AppMain.AMS_PARAM_DRAW_MOTION((object)this);
        }
    }

    private class AMS_PARAM_DRAW_MOTION_TRS : AppMain.IClearable
    {
        public AppMain.NNS_OBJECT _object;
        public AppMain.NNS_MATRIX mtx;
        public AppMain.NNS_TEXLIST texlist;
        public uint sub_obj_type;
        public uint flag;
        public AppMain.NNS_MATERIALCALLBACK_FUNC material_func;
        public AppMain.NNS_MOTION motion;
        public float frame;
        public AppMain.NNS_TRS[] trslist;
        public AppMain.NNS_MOTION mmotion;
        public float mframe;
        public readonly object holder;

        public void Clear()
        {
            this._object = (AppMain.NNS_OBJECT)null;
            this.mtx = (AppMain.NNS_MATRIX)null;
            this.texlist = (AppMain.NNS_TEXLIST)null;
            this.sub_obj_type = 0U;
            this.flag = 0U;
            this.material_func = (AppMain.NNS_MATERIALCALLBACK_FUNC)null;
            this.motion = (AppMain.NNS_MOTION)null;
            this.frame = 0.0f;
            this.trslist = (AppMain.NNS_TRS[])null;
            this.mmotion = (AppMain.NNS_MOTION)null;
            this.mframe = 0.0f;
        }

        public AMS_PARAM_DRAW_MOTION_TRS()
        {
        }

        public AMS_PARAM_DRAW_MOTION_TRS(object _holder)
        {
            this.holder = _holder;
        }

        public static explicit operator AppMain.OBS_DRAW_PARAM_3DNN_MOTION(
          AppMain.AMS_PARAM_DRAW_MOTION_TRS param)
        {
            return (AppMain.OBS_DRAW_PARAM_3DNN_MOTION)param.holder;
        }
    }

    public class NNS_TRS
    {
        public AppMain.NNS_VECTORFAST Translation;
        public AppMain.NNS_QUATERNION Rotation;
        public AppMain.NNS_VECTORFAST Scaling;

        public NNS_TRS()
        {
        }

        public NNS_TRS(AppMain.NNS_TRS trs)
        {
            this.Translation = trs.Translation;
            this.Rotation = trs.Rotation;
            this.Scaling = trs.Scaling;
        }

        public AppMain.NNS_TRS Assign(AppMain.NNS_TRS trs)
        {
            if (this != trs)
            {
                this.Translation = trs.Translation;
                this.Rotation = trs.Rotation;
                this.Scaling = trs.Scaling;
            }
            return this;
        }
    }

    private class OBS_DRAW_PARAM_3DNN_MOTION : AppMain.IClearable
    {
        public readonly AppMain.NNS_MATRIX mtx = new AppMain.NNS_MATRIX();
        public readonly AppMain.AMS_DRAWSTATE draw_state = new AppMain.AMS_DRAWSTATE();
        public readonly AppMain.AMS_PARAM_DRAW_MOTION_TRS param;
        public AppMain.AMS_DRAWSTATE state;
        public AppMain.MPP_VOID_OBJECT_DELEGATE user_func;
        public object user_param;
        public AppMain.MPP_VOID_ARRAYNNSMATRIX_NNSOBJECT_OBJECT mplt_cb_func;
        public object mplt_cb_param;
        public AppMain.MPP_BOOL_NNSDRAWCALLBACKVAL_OBJECT_DELEGATE material_cb_func;
        public object material_cb_param;
        public uint use_light_flag;

        public OBS_DRAW_PARAM_3DNN_MOTION()
        {
            this.param = new AppMain.AMS_PARAM_DRAW_MOTION_TRS((object)this);
        }

        public void Clear()
        {
            AppMain.mppAssertNotImpl();
        }
    }

    public class AMS_PARAM_DRAW_PRIMITIVE : AppMain.IClearable
    {
        public AppMain.NNS_MATRIX mtx;
        public int type;
        public AppMain.NNS_PRIM3D_PCT_ARRAY vtxPCT3D;
        public AppMain.NNS_PRIM3D_PC[] vtxPC3D;
        public AppMain.NNS_PRIM2D_PCT[] vtxPCT2D;
        public AppMain.NNS_PRIM2D_PC[] vtxPC2D;
        private int formatXD;
        public int count;
        public AppMain.NNS_TEXLIST texlist;
        public int texId;
        public int ablend;
        public float sortZ;
        public int bldSrc;
        public int bldDst;
        public int bldMode;
        public short aTest;
        public short zMask;
        public short zTest;
        public short noSort;
        public int uwrap;
        public int vwrap;

        public int format3D
        {
            get
            {
                return this.formatXD;
            }
            set
            {
                this.formatXD = value;
            }
        }

        public int format2D
        {
            get
            {
                return this.formatXD;
            }
            set
            {
                this.formatXD = value;
            }
        }

        public float zOffset
        {
            get
            {
                return this.sortZ;
            }
            set
            {
                this.sortZ = value;
            }
        }

        public void Assign(AppMain.AMS_PARAM_DRAW_PRIMITIVE other)
        {
            this.mtx = other.mtx;
            this.type = other.type;
            this.vtxPCT3D = other.vtxPCT3D;
            this.vtxPC3D = other.vtxPC3D;
            this.vtxPCT2D = other.vtxPCT2D;
            this.vtxPC2D = other.vtxPC2D;
            this.formatXD = other.formatXD;
            this.count = other.count;
            this.texlist = other.texlist;
            this.texId = other.texId;
            this.ablend = other.ablend;
            this.sortZ = other.sortZ;
            this.bldSrc = other.bldSrc;
            this.bldDst = other.bldDst;
            this.bldMode = other.bldMode;
            this.aTest = other.aTest;
            this.zMask = other.zMask;
            this.zTest = other.zTest;
            this.noSort = other.noSort;
            this.uwrap = other.vwrap;
            this.vwrap = other.vwrap;
        }

        public void Clear()
        {
            this.mtx = (AppMain.NNS_MATRIX)null;
            this.type = 0;
            this.vtxPCT3D = (AppMain.NNS_PRIM3D_PCT_ARRAY)null;
            this.vtxPC3D = (AppMain.NNS_PRIM3D_PC[])null;
            this.vtxPCT2D = (AppMain.NNS_PRIM2D_PCT[])null;
            this.vtxPC2D = (AppMain.NNS_PRIM2D_PC[])null;
            this.formatXD = 0;
            this.count = 0;
            this.texlist = (AppMain.NNS_TEXLIST)null;
            this.texId = 0;
            this.ablend = 0;
            this.sortZ = 0.0f;
            this.bldSrc = 0;
            this.bldDst = 0;
            this.bldMode = 0;
            this.aTest = (short)0;
            this.zMask = (short)0;
            this.zTest = (short)0;
            this.noSort = (short)0;
            this.uwrap = 0;
            this.vwrap = 0;
        }
    }

    public class NNS_PRIM3D_PCT_ARRAY
    {
        public AppMain.NNS_PRIM3D_PCT[] buffer;
        public int offset;
    }

    public struct NNS_PRIM3D_PC
    {
        public AppMain.Vector3f Pos;
        public uint Col;
    }

    public class NNS_PRIM2D_PCT : AppMain.NNS_PRIM2D_PC
    {
        public AppMain.NNS_TEXCOORD Tex;

        public static int SizeOf()
        {
            return 20;
        }
    }

    public class NNS_PRIM2D_PC : AppMain.NNS_PRIM2D_P
    {
        public uint Col;

        public override void Clear()
        {
            this.Col = 0U;
            base.Clear();
        }
    }

    public class AMS_PARAM_SET_TEXOFFSET
    {
        public int slot;
        public AppMain.AMS_DRAWSTATE_TEXOFFSET texoffset;
    }

    public class AMS_PARAM_LOAD_TEXTURE
    {
        public AppMain.NNS_TEXINFO pTexInfo;
        public Texture2D tex;
        public ushort minfilter;
        public ushort magfilter;
        public uint globalIndex;
        public uint bank;
        public uint flag;
        public uint size;
        public byte[] buf_delete;
    }

    public class NNS_TEXINFO
    {
        public uint TexName;
        public uint GlobalIndex;
        public uint Bank;
        public uint Flag;

        public NNS_TEXINFO()
        {
        }

        public NNS_TEXINFO(AppMain.NNS_TEXINFO pFrom)
        {
            this.TexName = pFrom.TexName;
            this.GlobalIndex = pFrom.GlobalIndex;
            this.Bank = pFrom.Bank;
            this.Flag = pFrom.Flag;
        }

        public static AppMain.NNS_TEXINFO Read(BinaryReader reader)
        {
            return new AppMain.NNS_TEXINFO()
            {
                TexName = reader.ReadUInt32(),
                GlobalIndex = reader.ReadUInt32(),
                Bank = reader.ReadUInt32(),
                Flag = reader.ReadUInt32()
            };
        }
    }

    public class AMS_PARAM_RELEASE_TEXTURE
    {
        public AppMain.NNS_TEXLIST texlist;
    }

    public class AMS_PARAM_VERTEX_BUFFER_OBJECT
    {
        public AppMain.NNS_OBJECT obj;
        public AppMain.NNS_OBJECT srcobj;
        public uint bindflag;
        public uint drawflag;
    }

    public class AMS_PARAM_DELETE_VERTEX_OBJECT
    {
        public AppMain.NNS_OBJECT obj;
    }

    public struct AMS_PARAM_LOAD_TEXTURE_IMAGE
    {
        public Texture2D texture;
        public int size;
        public short minfilter;
        public short magfilter;
        public short u_wrap;
        public short v_wrap;
    }

    public class AMS_PARAM_RELEASE_TEXTURE_IMAGE
    {
        public Texture2D texture;
    }

    private class __amDrawObject
    {
        public static AppMain.NNS_MATRIX[] plt_mtx;
        public static uint[] nstat;
    }

    private static class gmGmkStopperConstants
    {
        public const int GME_GMK_RECT_DATA_COL_WIDTH = 0;
        public const int GME_GMK_RECT_DATA_COL_HEIGHT = 1;
        public const int GME_GMK_RECT_DATA_COL_OFST_X = 2;
        public const int GME_GMK_RECT_DATA_COL_OFST_Y = 3;
        public const int GME_GMK_RECT_DATA_DEF_LEFT = 4;
        public const int GME_GMK_RECT_DATA_DEF_TOP = 5;
        public const int GME_GMK_RECT_DATA_DEF_RIGHT = 6;
        public const int GME_GMK_RECT_DATA_DEF_BOTTOM = 7;
        public const int GME_GMK_RECT_DATA_MAX = 8;
    }

    public class GMS_PLAYER_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.OBS_ACTION3D_NN_WORK[] obj_3d = new AppMain.OBS_ACTION3D_NN_WORK[4];
        public readonly AppMain.OBS_ACTION3D_NN_WORK[] obj_3d_work = AppMain.New<AppMain.OBS_ACTION3D_NN_WORK>(8);
        public readonly AppMain.OBS_RECT_WORK[] rect_work = AppMain.New<AppMain.OBS_RECT_WORK>(3);
        public readonly AppMain.NNS_MATRIX ex_obj_mtx_r = AppMain.GlobalPool<AppMain.NNS_MATRIX>.Alloc();
        public AppMain.VecFx32 boost_pos1 = new AppMain.VecFx32();
        public AppMain.VecFx32 boost_pos2 = new AppMain.VecFx32();
        public readonly AppMain.NNS_MATRIX truck_mtx_ply_mtn_pos = AppMain.GlobalPool<AppMain.NNS_MATRIX>.Alloc();
        public readonly AppMain.NNS_VECTOR calc_accel = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly ushort[] key_map = new ushort[8];
        public readonly int[] key_repeat_timer = new int[8];
        public readonly AppMain.GMS_PLAYER_PACKET[] player_packet = AppMain.New<AppMain.GMS_PLAYER_PACKET>(4);
        public readonly AppMain.OBS_OBJECT_WORK obj_work;
        public byte char_id;
        public byte player_id;
        public byte ctrl_id;
        public byte camera_no;
        public int spin_state;
        public int act_state;
        public int prev_act_state;
        public int seq_state;
        public int prev_seq_state;
        public int timer;
        public uint player_flag;
        public uint gmk_flag;
        public uint gmk_flag2;
        public int dash_power;
        public int prev_walk_roll_spd_max;
        public AppMain.seq_func_delegate seq_func;
        public AppMain.seq_func_delegate[] seq_init_tbl;
        public AppMain.GMS_PLY_SEQ_STATE_DATA[] seq_state_data_tbl;
        public short spin_se_timer;
        public short spin_back_se_timer;
        public short tension;
        public short over_limit_spd;
        public int no_spddown_timer;
        public int spd_add;
        public int spd_max;
        public int spd_dec;
        public int spd_spin;
        public int spd_add_spin;
        public int spd_max_spin;
        public int spd_dec_spin;
        public int spd_max_boost;
        public int spd_add_nitro;
        public int spd_max_nitro;
        public int spd_dec_nitro;
        public int spd_chk_nitro;
        public int spd_max_add_slope;
        public int spd_jump;
        public int spd_work_max;
        public int spd_jump_add;
        public int spd_jump_max;
        public int spd_jump_dec;
        public int spd_add_spin_pinball;
        public int spd_max_spin_pinball;
        public int spd_dec_spin_pinball;
        public int spd_max_add_slope_spin_pinball;
        public int time_air;
        public int time_damage;
        public int spd1;
        public int spd2;
        public int spd3;
        public int spd4;
        public int spd5;
        public short spd_pool;
        public short ring_num;
        public short ring_stage_num;
        public uint score;
        public int invincible_timer;
        public int genocide_timer;
        public int pressure_timer;
        public int disapprove_item_catch_timer;
        public int water_timer;
        public int no_key_timer;
        public int homing_timer;
        public int hi_speed_timer;
        public int homing_boost_timer;
        public int fall_timer;
        public int no_jump_move_timer;
        public int maxdash_timer;
        public int super_sonic_ring_timer;
        public int camera_stop_timer;
        public int camera_ofst_x;
        public int camera_ofst_y;
        public int camera_ofst_tag_x;
        public int camera_ofst_tag_y;
        public int camera_jump_pos_y;
        public AppMain.OBS_OBJECT_WORK enemy_obj;
        public AppMain.OBS_OBJECT_WORK cursol_enemy_obj;
        public ushort pgm_turn_dir;
        public ushort pgm_turn_spd;
        public ushort[] pgm_turn_dir_tbl;
        public int pgm_turn_tbl_cnt;
        public int pgm_turn_tbl_num;
        public int fall_act_state;
        public int scroll_spd_x;
        public uint score_combo_cnt;
        public AppMain.OBS_OBJECT_WORK gmk_obj;
        public short gmk_camera_ofst_x;
        public short gmk_camera_ofst_y;
        public short gmk_camera_center_ofst_x;
        public short gmk_camera_center_ofst_y;
        public short gmk_camera_gmk_center_ofst_x;
        public short gmk_camera_gmk_center_ofst_y;
        public short gmk_map_limit_left;
        public short gmk_map_limit_right;
        public short gmk_map_limit_top;
        public short gmk_map_limit_bottom;
        public int gmk_work0;
        public int gmk_work1;
        public int gmk_work2;
        public int gmk_work3;
        public object opt_anime;
        public ushort prev_dir_fall;
        public ushort prev_dir_fall2;
        public int dir_fall_fix_timer;
        public int ply_pseudofall_dir;
        public ushort jump_pseudofall_dir;
        public ushort jump_pseudofall_eve_id_set;
        public ushort jump_pseudofall_eve_id_cur;
        public ushort jump_pseudofall_eve_id_wait;
        public int truck_left_flip_timer;
        public AppMain.OBS_OBJECT_WORK truck_obj;
        public ushort truck_prev_dir;
        public ushort truck_prev_dir_fall;
        public ushort truck_stick_prev_dir;
        public AppMain.OBS_OBJECT_WORK efct_spin_jump_blur;
        public AppMain.OBS_OBJECT_WORK efct_spin_dash_blur;
        public AppMain.OBS_OBJECT_WORK efct_spin_dash_cir_blur;
        public AppMain.OBS_OBJECT_WORK efct_spin_start_blur;
        public AppMain.OBS_OBJECT_WORK efct_run_spray;
        public float light_rate;
        public int light_anm_flag;
        public short speed_curse;
        public short prev_speed_curse;
        public int warp_pos_x;
        public int warp_pos_y;
        public byte graind_id;
        public byte graind_prev_ride;
        public short nudge_di_timer;
        public short nudge_timer;
        public int nudge_ofst_x;
        public bool is_nudge;
        public ushort key_on;
        public ushort key_push;
        public ushort key_repeat;
        public ushort key_release;
        public int key_rot_z;
        public int key_walk_rot_z;
        public int prev_key_rot_z;
        public int accel_counter;
        public int dir_vec_add;
        public int control_type;
        public ushort[] jump_rect;
        public ushort[] ssonic_rect;
        public int safe_timer;
        public int safe_jump_timer;
        public int safe_spin_timer;
        public uint net_ref_atk_time;
        public int packet_camera_pos_x;
        public int packet_camera_pos_y;
        public short use_packet_buf_no;
        public GSS_SND_SE_HANDLE spinHandle = GsSoundAllocSeHandle();

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_PLAYER_WORK work)
        {
            return work?.obj_work;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.obj_work;
        }

        public GMS_PLAYER_WORK()
        {
            this.obj_work = AppMain.OBS_OBJECT_WORK.Create((object)this);
        }
    }

    private static class gmGmkSPCtpltConstants
    {
        public const int GME_GMK_RECT_DATA_COL_WIDTH = 0;
        public const int GME_GMK_RECT_DATA_COL_HEIGHT = 1;
        public const int GME_GMK_RECT_DATA_COL_OFST_X = 2;
        public const int GME_GMK_RECT_DATA_COL_OFST_Y = 3;
        public const int GME_GMK_RECT_DATA_DEF_LEFT = 0;
        public const int GME_GMK_RECT_DATA_DEF_TOP = 1;
        public const int GME_GMK_RECT_DATA_DEF_RIGHT = 2;
        public const int GME_GMK_RECT_DATA_DEF_BOTTOM = 3;
        public const int GME_GMK_RECT_DATA_MAX = 4;
    }

    public class GMS_GMK_BOSS5_TRIGGER_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d;

        public GMS_GMK_BOSS5_TRIGGER_WORK()
        {
            this.ene_3d = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d.ene_com.obj_work;
        }
    }

    public class GMS_FADE_OBJ_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.IZS_FADE_WORK fade_work = new AppMain.IZS_FADE_WORK();
        public object m_pHolder;
        public readonly AppMain.OBS_OBJECT_WORK obj_work;

        public GMS_FADE_OBJ_WORK(object _obj)
          : this()
        {
            this.m_pHolder = _obj;
        }

        public GMS_FADE_OBJ_WORK()
        {
            this.obj_work = AppMain.OBS_OBJECT_WORK.Create((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_FADE_OBJ_WORK work)
        {
            return work.obj_work;
        }

        public static explicit operator AppMain.GMS_BOSS5_ALARM_FADE_WORK(
          AppMain.GMS_FADE_OBJ_WORK p)
        {
            return (AppMain.GMS_BOSS5_ALARM_FADE_WORK)p.m_pHolder;
        }
    }

    public class IZS_FADE_WORK
    {
        public readonly AppMain.AMS_PARAM_DRAW_PRIMITIVE prim_param = AppMain.GlobalPool<AppMain.AMS_PARAM_DRAW_PRIMITIVE>.Alloc();
        public readonly AppMain.NNS_PRIM2D_PC[][] vtx = AppMain.New<AppMain.NNS_PRIM2D_PC>(2, 4);
        public readonly AppMain.NNS_MATRIX mtx = AppMain.GlobalPool<AppMain.NNS_MATRIX>.Alloc();
        public AppMain.NNS_RGBA start_col;
        public AppMain.NNS_RGBA end_col;
        public AppMain.NNS_RGBA now_col;
        public float time;
        public float count;
        public float speed;
        public uint flag;
        public uint draw_state;
        public ushort dt_prio;
        public ushort vtx_no;

        public void Clear()
        {
            this.time = this.count = this.speed = 0.0f;
            this.flag = this.draw_state = 0U;
            this.draw_state = (uint)(this.dt_prio = this.vtx_no = (ushort)0);
            this.start_col.Clear();
            this.end_col.Clear();
            this.now_col.Clear();
            this.mtx.Clear();
            this.prim_param.Clear();
            for (int index1 = 0; index1 < 2; ++index1)
            {
                for (int index2 = 0; index2 < 4; ++index2)
                    this.vtx[index1][index2].Clear();
            }
        }
    }

    public class GMS_BOSS5_ALARM_FADE_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_BOSS5_1SHOT_TIMER alert_se_timer = new AppMain.GMS_BOSS5_1SHOT_TIMER();
        public readonly AppMain.GMS_FADE_OBJ_WORK fade_obj;
        public AppMain.GMS_BOSS5_MGR_WORK mgr_work;
        public AppMain.MPP_VOID_GMS_BOSS5_ALARM_FADE_WORK proc_update;
        public int cur_phase;
        public int cur_level;
        public uint wait_timer;
        public int alert_se_ref_level;

        public GMS_BOSS5_ALARM_FADE_WORK()
        {
            this.fade_obj = new AppMain.GMS_FADE_OBJ_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.fade_obj.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(
          AppMain.GMS_BOSS5_ALARM_FADE_WORK work)
        {
            return work.fade_obj.obj_work;
        }
    }

    public class GMS_ENE_NODE_MATRIX
    {
        public char[] _id = new char[8];
        public readonly AppMain.GMS_BS_CMN_BMCB_MGR mtn_mgr = new AppMain.GMS_BS_CMN_BMCB_MGR();
        public readonly AppMain.GMS_BS_CMN_SNM_WORK snm_work = new AppMain.GMS_BS_CMN_SNM_WORK();
        public int[] work = new int[32];
        public int initCount;
        public int useCount;
        public AppMain.OBS_OBJECT_WORK obj_work;
    }

    public class GMS_EFCT_ENE_CREATE_PARAM
    {
        public readonly AppMain.GMS_EFFECT_CREATE_PARAM create_param;
        public int arc_dwork_no;
        public int ambtex_dwork_no;
        public int ame_dwork_no;
        public int ambtex_idx;
        public uint stage_flag;

        public GMS_EFCT_ENE_CREATE_PARAM()
        {
            this.create_param = new AppMain.GMS_EFFECT_CREATE_PARAM();
        }

        public GMS_EFCT_ENE_CREATE_PARAM(
          AppMain.GMS_EFFECT_CREATE_PARAM create_param,
          int arc_dwork_no,
          int ambtex_dwork_no,
          int ame_dwork_no,
          int ambtex_idx,
          uint stage_flag)
        {
            this.create_param = create_param;
            this.arc_dwork_no = arc_dwork_no;
            this.ambtex_dwork_no = ambtex_dwork_no;
            this.ame_dwork_no = ame_dwork_no;
            this.ambtex_idx = ambtex_idx;
            this.stage_flag = stage_flag;
        }
    }

    public class GMS_BOSS4_EFF_BOMB_WORK
    {
        public readonly int[] pos = new int[2];
        public readonly int[] area = new int[2];
        public AppMain.OBS_OBJECT_WORK parent_obj;
        public int bomb_type;
        public uint interval_timer;
        public uint interval_min;
        public uint interval_max;
        public int interval_timer_sound;
    }

    public class GMS_BOSS4_EFF_COMMON_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.NNS_VECTOR ofs = new AppMain.NNS_VECTOR();
        public readonly AppMain.NNS_VECTOR rot = new AppMain.NNS_VECTOR();
        public readonly AppMain.GMS_EFFECT_3DES_WORK eff_3des;
        public AppMain.GMS_BOSS4_NODE_MATRIX node_work;
        public int link;
        public uint[] lookflag;
        public uint lookmask;

        public GMS_BOSS4_EFF_COMMON_WORK()
        {
            this.eff_3des = new AppMain.GMS_EFFECT_3DES_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.eff_3des.efct_com.obj_work;
        }
    }

    public class GMS_BOSS4_NODE_MATRIX
    {
        public string _id = "";
        public readonly AppMain.GMS_BS_CMN_BMCB_MGR mtn_mgr = new AppMain.GMS_BS_CMN_BMCB_MGR();
        public readonly AppMain.GMS_BS_CMN_SNM_WORK snm_work = new AppMain.GMS_BS_CMN_SNM_WORK();
        public readonly int[] work = new int[32];
        public int initCount;
        public int useCount;
        public AppMain.OBS_OBJECT_WORK obj_work;
    }

    public enum DME_LOGO_COM_LOAD_STATE
    {
        DMD_LOGO_COM_LOAD_STATE_LOAD_WAIT,
        DMD_LOGO_COM_LOAD_STATE_LOADING,
        DMD_LOGO_COM_LOAD_STATE_COMPLETE,
        DMD_LOGO_COM_LOAD_STATE_ERROR,
        DMD_LOGO_COM_LOAD_STATE_MAX,
    }

    public delegate void post_func_Delegate(AppMain.DMS_LOGO_COM_LOAD_CONTEXT context);

    public class DMS_LOGO_COM_LOAD_CONTEXT
    {
        public AppMain.DME_LOGO_COM_LOAD_STATE state;
        public int no;
        public AppMain.DMS_LOGO_COM_LOAD_FILE_INFO file_info;
        public string file_path_buf;
        public AppMain.AMS_FS fs_req;
    }

    public class DMS_LOGO_COM_LOAD_FILE_INFO
    {
        public string file_path;
        public AppMain.post_func_Delegate post_func;

        public DMS_LOGO_COM_LOAD_FILE_INFO(string _file_path, AppMain.post_func_Delegate _post_func)
        {
            this.file_path = _file_path;
            this.post_func = _post_func;
        }
    }

    public class DMS_LOGO_COM_LOAD_WORK
    {
        public readonly AppMain.DMS_LOGO_COM_LOAD_CONTEXT[] context = new AppMain.DMS_LOGO_COM_LOAD_CONTEXT[10];
        public AppMain.Reference<AppMain.MTS_TASK_TCB> load_tcb_addr;
        public int context_num;

        public DMS_LOGO_COM_LOAD_WORK()
        {
            for (int index = 0; index < this.context.Length; ++index)
                this.context[index] = new AppMain.DMS_LOGO_COM_LOAD_CONTEXT();
        }
    }

    public class Reference<T>
    {
        private T target_;

        public Reference(T target)
        {
            this.target_ = target;
        }

        public T Target
        {
            get
            {
                return this.target_;
            }
            set
            {
                this.target_ = value;
            }
        }
    }

    public class MTS_TASK_TCB
    {
        public AppMain.AMS_TCB am_tcb;
        public AppMain.GSF_TASK_PROCEDURE proc;
        public AppMain.GSF_TASK_PROCEDURE dest;
        public ushort pause_level;
        public object work;

        public void Clear()
        {
            this.am_tcb = (AppMain.AMS_TCB)null;
            this.proc = (AppMain.GSF_TASK_PROCEDURE)null;
            this.dest = (AppMain.GSF_TASK_PROCEDURE)null;
            this.pause_level = (ushort)0;
            this.work = (object)null;
        }
    }



    private delegate int ObjDiffCollision_pFunc_delegate(
      int i1,
      int i2,
      ushort us,
      ushort[] usa,
      uint[] uia);

    private class _ObjDiffCollision
    {
        public static AppMain.ObjDiffCollision_pFunc_delegate objGetColDataXPtr = new AppMain.ObjDiffCollision_pFunc_delegate(AppMain.objGetColDataX);
        public static AppMain.ObjDiffCollision_pFunc_delegate objGetColDataYPtr = new AppMain.ObjDiffCollision_pFunc_delegate(AppMain.objGetColDataY);
    }

    private class _objGetDiffCharData
    {
        public static byte[] diff_char = new byte[8];
    }

    public struct SNNS_RGB
    {
        public float r;
        public float g;
        public float b;

        public SNNS_RGB(float _r, float _g, float _b)
        {
            this.r = _r;
            this.g = _g;
            this.b = _b;
        }

        public void Assign(AppMain.NNS_RGB rgb)
        {
            this.r = rgb.r;
            this.g = rgb.g;
            this.b = rgb.b;
        }

        public void Clear()
        {
            this.r = this.g = this.b = 0.0f;
        }
    }

    public class NNS_RGB : AppMain.IClearable
    {
        public float r;
        public float g;
        public float b;

        public NNS_RGB()
        {
        }

        public NNS_RGB(float _r, float _g, float _b)
        {
            this.r = _r;
            this.g = _g;
            this.b = _b;
        }

        public AppMain.NNS_RGB Assign(AppMain.NNS_RGB rgb)
        {
            this.r = rgb.r;
            this.g = rgb.g;
            this.b = rgb.b;
            return this;
        }

        public void Clear()
        {
            this.r = this.g = this.b = 0.0f;
        }
    }

    public class NNS_RGB_U8
    {
        public byte r;
        public byte g;
        public byte b;
        public byte a;
    }

    public struct RGBA_U8
    {
        public byte r;
        public byte g;
        public byte b;
        public byte a;

        public static explicit operator Color(AppMain.RGBA_U8 c)
        {
            return new Color((int)c.r, (int)c.g, (int)c.b, (int)c.a);
        }
    }

    public class NNS_RGBA_U8
    {
        public byte r;
        public byte g;
        public byte b;
        public byte a;

        public NNS_RGBA_U8(byte _r, byte _g, byte _b, byte _a)
        {
            this.r = _r;
            this.g = _g;
            this.b = _b;
            this.a = _a;
        }

        public NNS_RGBA_U8()
        {
        }

        public static int SizeOf()
        {
            return 4;
        }
    }

    public class NNS_RGBA_U32
    {
        public byte r;
        public byte g;
        public byte b;
        public byte a;
    }

    public class NNS_ROTATE
    {
        public float x;
        public float y;
        public float z;
    }

    public struct NNS_ROTATE_A16
    {
        public short x;
        public short y;
        public short z;

        public NNS_ROTATE_A16(short x, short y, short z)
        {
            this.x = x;
            this.y = y;
            this.z = z;
        }
    }

    public struct NNS_VECTORFAST
    {
        public float x;
        public float y;
        public float z;
        public float w;

        public NNS_VECTORFAST(AppMain.NNS_VECTORFAST vector)
        {
            this.x = vector.x;
            this.y = vector.y;
            this.z = vector.z;
            this.w = vector.w;
        }

        public void Assign(AppMain.NNS_VECTORFAST vector)
        {
            this.x = vector.x;
            this.y = vector.y;
            this.z = vector.z;
            this.w = vector.w;
        }
    }

    public class NNS_VECTOR_S16
    {
        public short x;
        public short y;
        public short z;
    }

    public class NNS_VECTOR_S8
    {
        public sbyte x;
        public sbyte y;
        public sbyte z;
    }

    public class NNS_VECTOR2D
    {
        public float x;
        public float y;

        public AppMain.NNS_VECTOR2D Assign(AppMain.NNS_VECTOR2D vec)
        {
            this.x = vec.x;
            this.y = vec.y;
            return this;
        }

        public void Clear()
        {
            this.x = this.y = 0.0f;
        }

        public static AppMain.NNS_VECTOR2D Read(BinaryReader reader)
        {
            return new AppMain.NNS_VECTOR2D()
            {
                x = reader.ReadSingle(),
                y = reader.ReadSingle()
            };
        }
    }

    public struct SNNS_VECTOR
    {
        public float x;
        public float y;
        public float z;

        public SNNS_VECTOR(AppMain.NNS_VECTOR vec)
        {
            this.x = vec.x;
            this.y = vec.y;
            this.z = vec.z;
        }

        public void Assign(AppMain.NNS_VECTOR vec)
        {
            this.x = vec.x;
            this.y = vec.y;
            this.z = vec.z;
        }

        public void Assign(ref AppMain.SNNS_VECTOR vec)
        {
            this.x = vec.x;
            this.y = vec.y;
            this.z = vec.z;
        }
    }

    public struct SNNS_VECTOR4D
    {
        public float x;
        public float y;
        public float z;
        public float w;

        public void Assign(ref AppMain.SNNS_VECTOR4D val)
        {
            this.x = val.x;
            this.y = val.y;
            this.z = val.z;
            this.w = val.w;
        }

        public void Clear()
        {
            this.x = this.y = this.z = this.w = 0.0f;
        }
    }

    public struct Vector3f
    {
        public float x;
        public float y;
        public float z;

        public Vector3f(float X, float Y, float Z)
        {
            this.x = X;
            this.y = Y;
            this.z = Z;
        }

        public void Assign(float X, float Y, float Z)
        {
            this.x = X;
            this.y = Y;
            this.z = Z;
        }

        public static explicit operator Vector3(AppMain.Vector3f v)
        {
            return new Vector3(v.x, v.y, v.z);
        }
    }

    public class NNS_TEXCOORD_S16
    {
        public short u;
        public short v;
    }

    public class NNS_TEXCOORD_U16
    {
        public ushort u;
        public ushort v;
    }

    public struct NNS_QUATERNION
    {
        public float x;
        public float y;
        public float z;
        public float w;

        public NNS_QUATERNION(float x, float y, float z, float w)
        {
            this.x = x;
            this.y = y;
            this.z = z;
            this.w = w;
        }

        public void Assign(AppMain.NNS_QUATERNION q)
        {
            this.x = q.x;
            this.y = q.y;
            this.z = q.z;
            this.w = q.w;
        }

        public void Clear()
        {
            this.x = 0.0f;
            this.y = 0.0f;
            this.z = 0.0f;
            this.w = 0.0f;
        }
    }

    public struct SNNS_MATRIX
    {
        public float M00;
        public float M01;
        public float M02;
        public float M03;
        public float M10;
        public float M11;
        public float M12;
        public float M13;
        public float M20;
        public float M21;
        public float M22;
        public float M23;
        public float M30;
        public float M31;
        public float M32;
        public float M33;

        public void Assign(AppMain.NNS_MATRIX matrix)
        {
            this.M00 = matrix.M00;
            this.M01 = matrix.M01;
            this.M02 = matrix.M02;
            this.M03 = matrix.M03;
            this.M10 = matrix.M10;
            this.M11 = matrix.M11;
            this.M12 = matrix.M12;
            this.M13 = matrix.M13;
            this.M20 = matrix.M20;
            this.M21 = matrix.M21;
            this.M22 = matrix.M22;
            this.M23 = matrix.M23;
            this.M30 = matrix.M30;
            this.M31 = matrix.M31;
            this.M32 = matrix.M32;
            this.M33 = matrix.M33;
        }

        public void Assign(ref AppMain.SNNS_MATRIX matrix)
        {
            this.M00 = matrix.M00;
            this.M01 = matrix.M01;
            this.M02 = matrix.M02;
            this.M03 = matrix.M03;
            this.M10 = matrix.M10;
            this.M11 = matrix.M11;
            this.M12 = matrix.M12;
            this.M13 = matrix.M13;
            this.M20 = matrix.M20;
            this.M21 = matrix.M21;
            this.M22 = matrix.M22;
            this.M23 = matrix.M23;
            this.M30 = matrix.M30;
            this.M31 = matrix.M31;
            this.M32 = matrix.M32;
            this.M33 = matrix.M33;
        }
    }

    public class NNS_MATERIAL_COLOR
    {
        public uint fFlag;
        public AppMain.NNS_RGBA Ambient;
        public AppMain.NNS_RGBA Diffuse;
        public AppMain.NNS_RGBA Specular;
        public AppMain.NNS_RGBA Emission;
        public float Shininess;
        public uint VtxColMaterial;

        public NNS_MATERIAL_COLOR()
        {
        }

        public NNS_MATERIAL_COLOR(AppMain.NNS_MATERIAL_COLOR matColor)
        {
            this.fFlag = matColor.fFlag;
            this.Ambient = matColor.Ambient;
            this.Diffuse = matColor.Diffuse;
            this.Specular = matColor.Specular;
            this.Emission = matColor.Emission;
            this.Shininess = matColor.Shininess;
            this.VtxColMaterial = matColor.VtxColMaterial;
        }

        public AppMain.NNS_MATERIAL_COLOR Assign(AppMain.NNS_MATERIAL_COLOR matColor)
        {
            this.fFlag = matColor.fFlag;
            this.Ambient = matColor.Ambient;
            this.Diffuse = matColor.Diffuse;
            this.Specular = matColor.Specular;
            this.Emission = matColor.Emission;
            this.Shininess = matColor.Shininess;
            this.VtxColMaterial = matColor.VtxColMaterial;
            return this;
        }

        public static explicit operator AppMain.NNS_MATERIAL_STDSHADER_COLOR(
          AppMain.NNS_MATERIAL_COLOR color)
        {
            return new AppMain.NNS_MATERIAL_STDSHADER_COLOR()
            {
                Ambient = color.Ambient,
                Diffuse = color.Diffuse,
                Emission = color.Emission,
                fFlag = color.fFlag,
                Shininess = color.Shininess,
                Specular = color.Specular,
                SpecularIntensity = MppBitConverter.UInt32ToSingle(color.VtxColMaterial)
            };
        }
    }

    public class NNS_MATERIAL_STDSHADER_COLOR
    {
        public uint fFlag;
        public AppMain.NNS_RGBA Ambient;
        public AppMain.NNS_RGBA Diffuse;
        public AppMain.NNS_RGBA Specular;
        public AppMain.NNS_RGBA Emission;
        public float Shininess;
        public float SpecularIntensity;

        public static AppMain.NNS_MATERIAL_STDSHADER_COLOR Read(BinaryReader reader)
        {
            return new AppMain.NNS_MATERIAL_STDSHADER_COLOR()
            {
                fFlag = reader.ReadUInt32(),
                Ambient = {
          r = reader.ReadSingle(),
          g = reader.ReadSingle(),
          b = reader.ReadSingle(),
          a = reader.ReadSingle()
        },
                Diffuse = {
          r = reader.ReadSingle(),
          g = reader.ReadSingle(),
          b = reader.ReadSingle(),
          a = reader.ReadSingle()
        },
                Specular = {
          r = reader.ReadSingle(),
          g = reader.ReadSingle(),
          b = reader.ReadSingle(),
          a = reader.ReadSingle()
        },
                Emission = {
          r = reader.ReadSingle(),
          g = reader.ReadSingle(),
          b = reader.ReadSingle(),
          a = reader.ReadSingle()
        },
                Shininess = reader.ReadSingle(),
                SpecularIntensity = reader.ReadSingle()
            };
        }

        public NNS_MATERIAL_STDSHADER_COLOR()
        {
        }

        public NNS_MATERIAL_STDSHADER_COLOR(AppMain.NNS_MATERIAL_STDSHADER_COLOR matColor)
        {
            this.fFlag = matColor.fFlag;
            this.Ambient.r = matColor.Ambient.r;
            this.Ambient.g = matColor.Ambient.g;
            this.Ambient.b = matColor.Ambient.b;
            this.Ambient.a = matColor.Ambient.a;
            this.Diffuse.r = matColor.Diffuse.r;
            this.Diffuse.g = matColor.Diffuse.g;
            this.Diffuse.b = matColor.Diffuse.b;
            this.Diffuse.a = matColor.Diffuse.a;
            this.Specular.r = matColor.Specular.r;
            this.Specular.g = matColor.Specular.g;
            this.Specular.b = matColor.Specular.b;
            this.Specular.a = matColor.Specular.a;
            this.Emission.r = matColor.Emission.r;
            this.Emission.g = matColor.Emission.g;
            this.Emission.b = matColor.Emission.b;
            this.Emission.a = matColor.Emission.a;
            this.Shininess = matColor.Shininess;
            this.SpecularIntensity = matColor.SpecularIntensity;
        }

        public AppMain.NNS_MATERIAL_STDSHADER_COLOR Assign(
          AppMain.NNS_MATERIAL_STDSHADER_COLOR matColor)
        {
            this.fFlag = matColor.fFlag;
            this.Ambient.r = matColor.Ambient.r;
            this.Ambient.g = matColor.Ambient.g;
            this.Ambient.b = matColor.Ambient.b;
            this.Ambient.a = matColor.Ambient.a;
            this.Diffuse.r = matColor.Diffuse.r;
            this.Diffuse.g = matColor.Diffuse.g;
            this.Diffuse.b = matColor.Diffuse.b;
            this.Diffuse.a = matColor.Diffuse.a;
            this.Specular.r = matColor.Specular.r;
            this.Specular.g = matColor.Specular.g;
            this.Specular.b = matColor.Specular.b;
            this.Specular.a = matColor.Specular.a;
            this.Emission.r = matColor.Emission.r;
            this.Emission.g = matColor.Emission.g;
            this.Emission.b = matColor.Emission.b;
            this.Emission.a = matColor.Emission.a;
            this.Shininess = matColor.Shininess;
            this.SpecularIntensity = matColor.SpecularIntensity;
            return this;
        }
    }

    public class NNS_MATERIAL_LOGIC
    {
        public uint fFlag;
        public ushort SrcFactorRGB;
        public ushort DstFactorRGB;
        public ushort SrcFactorA;
        public ushort DstFactorA;
        public AppMain.NNS_RGBA BlendColor;
        public ushort BlendOp;
        public ushort LogicOp;
        public ushort AlphaFunc;
        public ushort DepthFunc;
        public float AlphaRef;

        public AppMain.NNS_MATERIAL_LOGIC Assign(AppMain.NNS_MATERIAL_LOGIC matLogic)
        {
            this.fFlag = matLogic.fFlag;
            this.SrcFactorRGB = matLogic.SrcFactorRGB;
            this.DstFactorRGB = matLogic.DstFactorRGB;
            this.SrcFactorA = matLogic.SrcFactorA;
            this.DstFactorA = matLogic.DstFactorA;
            this.BlendColor = matLogic.BlendColor;
            this.BlendOp = matLogic.BlendOp;
            this.LogicOp = matLogic.LogicOp;
            this.AlphaFunc = matLogic.AlphaFunc;
            this.DepthFunc = matLogic.DepthFunc;
            this.AlphaRef = matLogic.AlphaRef;
            return this;
        }
    }

    public class NNS_TEXTURE_COMBINE
    {
        public ushort CombineRGB;
        public ushort Source0RGB;
        public ushort Operand0RGB;
        public ushort Source1RGB;
        public ushort Operand1RGB;
        public ushort Source2RGB;
        public ushort Operand2RGB;
        public ushort CombineAlpha;
        public ushort Source0Alpha;
        public ushort Operand0Alpha;
        public ushort Source1Alpha;
        public ushort Operand1Alpha;
        public ushort Source2Alpha;
        public ushort Operand2Alpha;

        public AppMain.NNS_TEXTURE_COMBINE Assign(AppMain.NNS_TEXTURE_COMBINE combine)
        {
            this.CombineRGB = combine.CombineRGB;
            this.Source0RGB = combine.Source0RGB;
            this.Operand0RGB = combine.Operand0RGB;
            this.Source1RGB = combine.Source1RGB;
            this.Operand1RGB = combine.Operand1RGB;
            this.Source2RGB = combine.Source2RGB;
            this.Operand2RGB = combine.Operand2RGB;
            this.CombineAlpha = combine.CombineAlpha;
            this.Source0Alpha = combine.Source0Alpha;
            this.Operand0Alpha = combine.Operand0Alpha;
            this.Source1Alpha = combine.Source1Alpha;
            this.Operand1Alpha = combine.Operand1Alpha;
            this.Source2Alpha = combine.Source2Alpha;
            this.Operand2Alpha = combine.Operand2Alpha;
            return this;
        }
    }

    public class NNS_TEXTURE_FILTERMODE
    {
        public ushort MagFilter;
        public ushort MinFilter;
        public float Anisotropy;

        public static AppMain.NNS_TEXTURE_FILTERMODE Read(BinaryReader reader)
        {
            return new AppMain.NNS_TEXTURE_FILTERMODE()
            {
                MagFilter = reader.ReadUInt16(),
                MinFilter = reader.ReadUInt16(),
                Anisotropy = reader.ReadSingle()
            };
        }

        public AppMain.NNS_TEXTURE_FILTERMODE Assign(AppMain.NNS_TEXTURE_FILTERMODE filterMode)
        {
            this.MagFilter = filterMode.MagFilter;
            this.MinFilter = filterMode.MinFilter;
            this.Anisotropy = filterMode.Anisotropy;
            return this;
        }
    }

    public class NNS_TEXTURE_LOD_PARAM
    {
        public int BaseLevel;
        public int MaxLevel;
        public float MinLOD;
        public float MaxLOD;
        public float LODBias;

        public AppMain.NNS_TEXTURE_LOD_PARAM Assign(AppMain.NNS_TEXTURE_LOD_PARAM lodParam)
        {
            this.BaseLevel = lodParam.BaseLevel;
            this.MaxLevel = lodParam.MaxLevel;
            this.MinLOD = lodParam.MinLOD;
            this.MaxLOD = lodParam.MaxLOD;
            this.LODBias = lodParam.LODBias;
            return this;
        }
    }

    public class NNS_MATERIAL_TEXMAP_DESC
    {
        public AppMain.NNS_RGBA? pBorderColor = new AppMain.NNS_RGBA?();
        public uint fType;
        public int iTexIdx;
        public int EnvMode;
        public AppMain.NNS_TEXTURE_COMBINE pCombine;
        public AppMain.NNS_RGBA EnvColor;
        public AppMain.NNS_TEXCOORD Offset;
        public AppMain.NNS_TEXCOORD Scale;
        public int WrapS;
        public int WrapT;
        public AppMain.NNS_TEXTURE_FILTERMODE pFilterMode;
        public AppMain.NNS_TEXTURE_LOD_PARAM pLODParam;
        public object pTexInfo;
        public uint Reserved1;
        public uint Reserved0;

        public void Assign(AppMain.NNS_MATERIAL_TEXMAP_DESC pPtr)
        {
            AppMain.mppAssertNotImpl();
        }

        public NNS_MATERIAL_TEXMAP_DESC()
        {
        }

        public NNS_MATERIAL_TEXMAP_DESC(AppMain.NNS_MATERIAL_TEXMAP_DESC desc)
        {
            this.fType = desc.fType;
            this.iTexIdx = desc.iTexIdx;
            this.EnvMode = desc.EnvMode;
            this.pCombine = desc.pCombine;
            this.EnvColor = desc.EnvColor;
            this.Offset = desc.Offset;
            this.Scale = desc.Scale;
            this.WrapS = desc.WrapS;
            this.WrapT = desc.WrapT;
            this.pBorderColor = desc.pBorderColor;
            this.pFilterMode = desc.pFilterMode;
            this.pLODParam = desc.pLODParam;
            this.pTexInfo = desc.pTexInfo;
            this.Reserved1 = desc.Reserved1;
            this.Reserved0 = desc.Reserved0;
        }
    }

    public class NNS_MATERIAL_DESC
    {
        public uint fFlag;
        public uint User;
        public AppMain.NNS_MATERIAL_COLOR pColor;
        public AppMain.NNS_MATERIAL_COLOR pBackColor;
        public AppMain.NNS_MATERIAL_LOGIC pLogic;
        public int nTex;
        public AppMain.NNS_MATERIAL_TEXMAP_DESC[] pTexDesc;

        public NNS_MATERIAL_DESC()
        {
        }

        public NNS_MATERIAL_DESC(AppMain.NNS_MATERIAL_DESC desc)
        {
            this.fFlag = desc.fFlag;
            this.User = desc.User;
            this.pColor = desc.pColor;
            this.pBackColor = desc.pBackColor;
            this.pLogic = desc.pLogic;
            this.nTex = desc.nTex;
            this.pTexDesc = desc.pTexDesc;
        }

        public AppMain.NNS_MATERIAL_DESC Assign(AppMain.NNS_MATERIAL_DESC desc)
        {
            this.fFlag = desc.fFlag;
            this.User = desc.User;
            this.pColor = desc.pColor;
            this.pBackColor = desc.pBackColor;
            this.pLogic = desc.pLogic;
            this.nTex = desc.nTex;
            this.pTexDesc = desc.pTexDesc;
            return this;
        }
    }

    public class NNS_MATERIAL_STDSHADER_TEXMAP_DESC
    {
        public AppMain.NNS_RGBA? pBorderColor = new AppMain.NNS_RGBA?();
        public uint fType;
        public int iTexIdx;
        public int TexCoord;
        public float Blend;
        public AppMain.NNS_TEXCOORD Offset;
        public AppMain.NNS_TEXCOORD Scale;
        public int WrapS;
        public int WrapT;
        public AppMain.NNS_TEXTURE_FILTERMODE pFilterMode;
        public AppMain.NNS_TEXTURE_LOD_PARAM pLODParam;
        public object pTexInfo;
        public uint Reserved1;
        public uint Reserved0;

        public void Assign(AppMain.NNS_MATERIAL_STDSHADER_TEXMAP_DESC pPtr)
        {
            AppMain.mppAssertNotImpl();
        }

        public NNS_MATERIAL_STDSHADER_TEXMAP_DESC()
        {
        }

        public NNS_MATERIAL_STDSHADER_TEXMAP_DESC(AppMain.NNS_MATERIAL_STDSHADER_TEXMAP_DESC desc)
        {
            this.fType = desc.fType;
            this.iTexIdx = desc.iTexIdx;
            this.TexCoord = desc.TexCoord;
            this.Blend = desc.Blend;
            this.Offset = desc.Offset;
            this.Scale = desc.Scale;
            this.WrapS = desc.WrapS;
            this.WrapT = desc.WrapT;
            this.pBorderColor = desc.pBorderColor;
            this.pFilterMode = desc.pFilterMode;
            this.pLODParam = desc.pLODParam;
            this.pTexInfo = desc.pTexInfo;
            this.Reserved1 = desc.Reserved1;
            this.Reserved0 = desc.Reserved0;
        }
    }

    public class NNS_MATERIAL_STDSHADER_DESC
    {
        public uint fFlag;
        public uint User;
        public AppMain.NNS_MATERIAL_STDSHADER_COLOR pColor;
        public AppMain.NNS_MATERIAL_LOGIC pLogic;
        public uint fTexType;
        public int nTex;
        public AppMain.NNS_MATERIAL_STDSHADER_TEXMAP_DESC[] pTexDesc;

        public NNS_MATERIAL_STDSHADER_DESC()
        {
        }

        public NNS_MATERIAL_STDSHADER_DESC(AppMain.NNS_MATERIAL_STDSHADER_DESC desc)
        {
            this.fFlag = desc.fFlag;
            this.User = desc.User;
            this.pColor = desc.pColor;
            this.pLogic = desc.pLogic;
            this.fTexType = desc.fTexType;
            this.nTex = desc.nTex;
            this.pTexDesc = desc.pTexDesc;
        }

        public AppMain.NNS_MATERIAL_STDSHADER_DESC Assign(
          AppMain.NNS_MATERIAL_STDSHADER_DESC desc)
        {
            this.fFlag = desc.fFlag;
            this.User = desc.User;
            this.pColor = desc.pColor;
            this.pLogic = desc.pLogic;
            this.fTexType = desc.fTexType;
            this.nTex = desc.nTex;
            this.pTexDesc = desc.pTexDesc;
            return this;
        }
    }

    public class NNS_MATERIAL_STDSHADER_DESC_USER_PROFILE : AppMain.NNS_MATERIAL_STDSHADER_DESC
    {
        public uint UserProfile;

        public NNS_MATERIAL_STDSHADER_DESC_USER_PROFILE()
        {
        }

        public NNS_MATERIAL_STDSHADER_DESC_USER_PROFILE(
          AppMain.NNS_MATERIAL_STDSHADER_DESC_USER_PROFILE desc)
          : base((AppMain.NNS_MATERIAL_STDSHADER_DESC)desc)
        {
            this.UserProfile = desc.UserProfile;
        }

        public AppMain.NNS_MATERIAL_STDSHADER_DESC_USER_PROFILE Assign(
          AppMain.NNS_MATERIAL_STDSHADER_DESC_USER_PROFILE desc)
        {
            this.Assign((AppMain.NNS_MATERIAL_STDSHADER_DESC)desc);
            this.UserProfile = desc.UserProfile;
            return this;
        }
    }

    public class NNS_MATERIAL_GLES11_LOGIC
    {
        public uint fFlag;
        public ushort SrcFactor;
        public ushort DstFactor;
        public ushort BlendOp;
        public ushort LogicOp;
        public ushort AlphaFunc;
        public ushort DepthFunc;
        public float AlphaRef;

        public static AppMain.NNS_MATERIAL_GLES11_LOGIC Read(BinaryReader reader)
        {
            return new AppMain.NNS_MATERIAL_GLES11_LOGIC()
            {
                fFlag = reader.ReadUInt32(),
                SrcFactor = reader.ReadUInt16(),
                DstFactor = reader.ReadUInt16(),
                BlendOp = reader.ReadUInt16(),
                LogicOp = reader.ReadUInt16(),
                AlphaFunc = reader.ReadUInt16(),
                DepthFunc = reader.ReadUInt16(),
                AlphaRef = reader.ReadSingle()
            };
        }

        public AppMain.NNS_MATERIAL_GLES11_LOGIC Assign(AppMain.NNS_MATERIAL_GLES11_LOGIC logic)
        {
            this.fFlag = logic.fFlag;
            this.SrcFactor = logic.SrcFactor;
            this.DstFactor = logic.DstFactor;
            this.BlendOp = logic.BlendOp;
            this.LogicOp = logic.LogicOp;
            this.AlphaFunc = logic.AlphaFunc;
            this.DepthFunc = logic.DepthFunc;
            this.AlphaRef = logic.AlphaRef;
            return this;
        }
    }

    public class NNS_TEXTURE_GLES11_COMBINE
    {
        public ushort CombineRGB;
        public ushort Source0RGB;
        public ushort Operand0RGB;
        public ushort Source1RGB;
        public ushort Operand1RGB;
        public ushort Source2RGB;
        public ushort Operand2RGB;
        public ushort CombineAlpha;
        public ushort Source0Alpha;
        public ushort Operand0Alpha;
        public ushort Source1Alpha;
        public ushort Operand1Alpha;
        public ushort Source2Alpha;
        public ushort Operand2Alpha;
        public AppMain.NNS_RGBA EnvColor;

        public static AppMain.NNS_TEXTURE_GLES11_COMBINE Read(BinaryReader reader)
        {
            return new AppMain.NNS_TEXTURE_GLES11_COMBINE()
            {
                CombineRGB = reader.ReadUInt16(),
                Source0RGB = reader.ReadUInt16(),
                Operand0RGB = reader.ReadUInt16(),
                Source1RGB = reader.ReadUInt16(),
                Operand1RGB = reader.ReadUInt16(),
                Source2RGB = reader.ReadUInt16(),
                Operand2RGB = reader.ReadUInt16(),
                CombineAlpha = reader.ReadUInt16(),
                Source0Alpha = reader.ReadUInt16(),
                Operand0Alpha = reader.ReadUInt16(),
                Source1Alpha = reader.ReadUInt16(),
                Operand1Alpha = reader.ReadUInt16(),
                Source2Alpha = reader.ReadUInt16(),
                Operand2Alpha = reader.ReadUInt16(),
                EnvColor = {
          r = reader.ReadSingle(),
          g = reader.ReadSingle(),
          b = reader.ReadSingle(),
          a = reader.ReadSingle()
        }
            };
        }

        public AppMain.NNS_TEXTURE_GLES11_COMBINE Assign(
          AppMain.NNS_TEXTURE_GLES11_COMBINE combine)
        {
            this.CombineRGB = combine.CombineRGB;
            this.Source0RGB = combine.Source0RGB;
            this.Operand0RGB = combine.Operand0RGB;
            this.Source1RGB = combine.Source1RGB;
            this.Operand1RGB = combine.Operand1RGB;
            this.Source2RGB = combine.Source2RGB;
            this.Operand2RGB = combine.Operand2RGB;
            this.CombineAlpha = combine.CombineAlpha;
            this.Source0Alpha = combine.Source0Alpha;
            this.Operand0Alpha = combine.Operand0Alpha;
            this.Source1Alpha = combine.Source1Alpha;
            this.Operand1Alpha = combine.Operand1Alpha;
            this.Source2Alpha = combine.Source2Alpha;
            this.Operand2Alpha = combine.Operand2Alpha;
            this.EnvColor = combine.EnvColor;
            return this;
        }
    }

    public struct NNS_MATERIAL_GLES11_TEXMAP_DESC
    {
        public uint fType;
        public int iTexIdx;
        public int EnvMode;
        public AppMain.NNS_TEXTURE_GLES11_COMBINE pCombine;
        public AppMain.NNS_TEXCOORD Offset;
        public AppMain.NNS_TEXCOORD Scale;
        public int WrapS;
        public int WrapT;
        public AppMain.NNS_TEXTURE_FILTERMODE pFilterMode;
        public float LODBias;
        public object pTexInfo;

        public void Assign(ref AppMain.NNS_MATERIAL_GLES11_TEXMAP_DESC pPtr)
        {
            this.fType = pPtr.fType;
            this.iTexIdx = pPtr.iTexIdx;
            this.EnvMode = pPtr.EnvMode;
            this.pCombine = pPtr.pCombine;
            this.Offset = pPtr.Offset;
            this.Scale = pPtr.Scale;
            this.WrapS = pPtr.WrapS;
            this.WrapT = pPtr.WrapT;
            this.pFilterMode = pPtr.pFilterMode;
            this.LODBias = pPtr.LODBias;
            this.pTexInfo = pPtr.pTexInfo;
        }

        public NNS_MATERIAL_GLES11_TEXMAP_DESC(ref AppMain.NNS_MATERIAL_GLES11_TEXMAP_DESC desc)
        {
            this.fType = desc.fType;
            this.iTexIdx = desc.iTexIdx;
            this.EnvMode = desc.EnvMode;
            this.pCombine = desc.pCombine;
            this.Offset = desc.Offset;
            this.Scale = desc.Scale;
            this.WrapS = desc.WrapS;
            this.WrapT = desc.WrapT;
            this.pFilterMode = desc.pFilterMode;
            this.LODBias = desc.LODBias;
            this.pTexInfo = desc.pTexInfo;
        }

        public static AppMain.NNS_MATERIAL_GLES11_TEXMAP_DESC Read(
          BinaryReader reader,
          long data0Pos)
        {
            AppMain.NNS_MATERIAL_GLES11_TEXMAP_DESC gleS11TexmapDesc = new AppMain.NNS_MATERIAL_GLES11_TEXMAP_DESC();
            gleS11TexmapDesc.fType = reader.ReadUInt32();
            gleS11TexmapDesc.iTexIdx = reader.ReadInt32();
            gleS11TexmapDesc.EnvMode = reader.ReadInt32();
            uint num1 = reader.ReadUInt32();
            if (num1 != 0U)
            {
                long position = reader.BaseStream.Position;
                reader.BaseStream.Seek(data0Pos + (long)num1, SeekOrigin.Begin);
                gleS11TexmapDesc.pCombine = AppMain.NNS_TEXTURE_GLES11_COMBINE.Read(reader);
                reader.BaseStream.Seek(position, SeekOrigin.Begin);
            }
            gleS11TexmapDesc.Offset.u = reader.ReadSingle();
            gleS11TexmapDesc.Offset.v = reader.ReadSingle();
            gleS11TexmapDesc.Scale.u = reader.ReadSingle();
            gleS11TexmapDesc.Scale.v = reader.ReadSingle();
            gleS11TexmapDesc.WrapS = reader.ReadInt32();
            gleS11TexmapDesc.WrapT = reader.ReadInt32();
            uint num2 = reader.ReadUInt32();
            if (num2 != 0U)
            {
                long position = reader.BaseStream.Position;
                reader.BaseStream.Seek(data0Pos + (long)num2, SeekOrigin.Begin);
                gleS11TexmapDesc.pFilterMode = AppMain.NNS_TEXTURE_FILTERMODE.Read(reader);
                reader.BaseStream.Seek(position, SeekOrigin.Begin);
            }
            gleS11TexmapDesc.LODBias = reader.ReadSingle();
            uint num3 = reader.ReadUInt32();
            if (num3 != 0U)
            {
                long position = reader.BaseStream.Position;
                reader.BaseStream.Seek(data0Pos + (long)num3, SeekOrigin.Begin);
                gleS11TexmapDesc.pTexInfo = (object)AppMain.NNS_TEXINFO.Read(reader);
                reader.BaseStream.Seek(position, SeekOrigin.Begin);
            }
            return gleS11TexmapDesc;
        }
    }

    private static class nndrawprim2d
    {
        public static uint nnsAlphaFunc = 516;
        public static float nnsAlphaFuncRef = 0.0f;
        public static uint nnsDepthFunc = 515;
        public static bool nnsDepthMask = true;
        public static int nnsFormat;
    }

    private class _nnDrawPrimitive2DCore
    {
        public static Vector3[] vbuf = new Vector3[6];
        public static AppMain.RGBA_U8[] cbuf = new AppMain.RGBA_U8[6];
    }

    public class NNS_BINCNK_FILEHEADER
    {
        public uint Id;
        public int OfsNextId;
        public int nChunk;
        public int OfsData;
        public int SizeData;
        public int OfsNOF0;
        public int SizeNOF0;
        public int Version;

        public static AppMain.NNS_BINCNK_FILEHEADER Read(BinaryReader reader)
        {
            return new AppMain.NNS_BINCNK_FILEHEADER()
            {
                Id = reader.ReadUInt32(),
                OfsNextId = reader.ReadInt32(),
                nChunk = reader.ReadInt32(),
                OfsData = reader.ReadInt32(),
                SizeData = reader.ReadInt32(),
                OfsNOF0 = reader.ReadInt32(),
                SizeNOF0 = reader.ReadInt32(),
                Version = reader.ReadInt32()
            };
        }
    }

    public class NNS_BINCNK_DATAHEADER
    {
        public uint Id;
        public int OfsNextId;
        public int OfsMainData;
        public int Version;

        public static AppMain.NNS_BINCNK_DATAHEADER Read(BinaryReader reader)
        {
            return new AppMain.NNS_BINCNK_DATAHEADER()
            {
                Id = reader.ReadUInt32(),
                OfsNextId = reader.ReadInt32(),
                OfsMainData = reader.ReadInt32(),
                Version = reader.ReadInt32()
            };
        }
    }

    public class NNS_BINCNK_NOF0HEADER
    {
        public uint Id;
        public int OfsNextId;
        public int nData;
        public int Pad;

        public static AppMain.NNS_BINCNK_NOF0HEADER Read(BinaryReader reader)
        {
            return new AppMain.NNS_BINCNK_NOF0HEADER()
            {
                Id = reader.ReadUInt32(),
                OfsNextId = reader.ReadInt32(),
                nData = reader.ReadInt32(),
                Pad = reader.ReadInt32()
            };
        }
    }

    private class nnmaterialcore
    {
        public static uint nngPreMatFlag = uint.MaxValue;
        public static object nngpPreMatColor = (object)null;
        public static object nngpPreMatLogic = (object)null;
    }

    public struct GMS_PLY_PARAMETER
    {
        public int spd_add;
        public int spd_max;
        public int spd_dec;
        public int spd_spin;
        public int spd_add_spin;
        public int spd_max_spin;
        public int spd_dec_spin;
        public int spd_max_add_slope;
        public short time_air;
        public short time_damage;
        public short pool_max;
        public ushort fall_wait_time;
        public int spd_slope;
        public int spd_slope_max;
        public int spd_slope_spin;
        public int spd_slope_spin_spipe;
        public int spd_slope_spin_pinball;
        public int spd_jump;
        public int spd_fall;
        public int spd_fall_max;
        public int push_max;
        public int spd_jump_add;
        public int spd_jump_max;
        public int spd_jump_dec;
        public int spd_add_spin_pinball;
        public int spd_max_spin_pinball;
        public int spd_dec_spin_pinball;
        public int spd_max_add_slope_spin_pinball;

        public GMS_PLY_PARAMETER(
          int spd_add,
          int spd_max,
          int spd_dec,
          int spd_spin,
          int spd_add_spin,
          int spd_max_spin,
          int spd_dec_spin,
          int spd_max_add_slope,
          short time_air,
          short time_damage,
          short pool_max,
          ushort fall_wait_time,
          int spd_slope,
          int spd_slope_max,
          int spd_slope_spin,
          int spd_slope_spin_spipe,
          int spd_slope_spin_pinball,
          int spd_jump,
          int spd_fall,
          int spd_fall_max,
          int push_max,
          int spd_jump_add,
          int spd_jump_max,
          int spd_jump_dec,
          int spd_add_spin_pinball,
          int spd_max_spin_pinball,
          int spd_dec_spin_pinball,
          int spd_max_add_slope_spin_pinball)
        {
            this.spd_add = spd_add;
            this.spd_max = spd_max;
            this.spd_dec = spd_dec;
            this.spd_spin = spd_spin;
            this.spd_add_spin = spd_add_spin;
            this.spd_max_spin = spd_max_spin;
            this.spd_dec_spin = spd_dec_spin;
            this.spd_max_add_slope = spd_max_add_slope;
            this.time_air = time_air;
            this.time_damage = time_damage;
            this.pool_max = pool_max;
            this.fall_wait_time = fall_wait_time;
            this.spd_slope = spd_slope;
            this.spd_slope_max = spd_slope_max;
            this.spd_slope_spin = spd_slope_spin;
            this.spd_slope_spin_spipe = spd_slope_spin_spipe;
            this.spd_slope_spin_pinball = spd_slope_spin_pinball;
            this.spd_jump = spd_jump;
            this.spd_fall = spd_fall;
            this.spd_fall_max = spd_fall_max;
            this.push_max = push_max;
            this.spd_jump_add = spd_jump_add;
            this.spd_jump_max = spd_jump_max;
            this.spd_jump_dec = spd_jump_dec;
            this.spd_add_spin_pinball = spd_add_spin_pinball;
            this.spd_max_spin_pinball = spd_max_spin_pinball;
            this.spd_dec_spin_pinball = spd_dec_spin_pinball;
            this.spd_max_add_slope_spin_pinball = spd_max_add_slope_spin_pinball;
        }
    }

    public enum GME_MAIN_CAMSCALE_STATE
    {
        GMD_MAIN_CAMSCALE_STATE_NON,
        GMD_MAIN_CAMSCALE_STATE_ZOOM,
        GMD_MAIN_CAMSCALE_STATE_UP,
        GMD_MAIN_CAMSCALE_STATE_MAX,
    }

    public class GMS_MAIN_SYSTEM
    {
        public AppMain.GMS_PLAYER_WORK[] ply_work = new AppMain.GMS_PLAYER_WORK[1];
        public uint[] player_rest_num = new uint[1];
        public readonly AppMain.OBS_DIFF_COLLISION map_fcol = new AppMain.OBS_DIFF_COLLISION();
        public int[] map_size = new int[2];
        public readonly AppMain.NNS_VECTOR def_light_vec = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_VECTOR ply_light_vec = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public uint game_flag;
        public AppMain.MTS_TASK_TCB pre_tcb;
        public AppMain.MTS_TASK_TCB post_tcb;
        public uint game_time;
        public uint sync_time;
        public uint marker_pri;
        public uint time_save;
        public int resume_pos_x;
        public int resume_pos_y;
        public ushort water_level;
        public ushort pseudofall_dir;
        public int die_event_wait_time;
        public AppMain.NNS_RGBA def_light_col;
        public AppMain.NNS_RGBA ply_light_col;
        public uint ply_dmg_count;
        public int boss_load_no;
        public int polar_diff;
        public int polar_now;
        public AppMain.GME_MAIN_CAMSCALE_STATE camscale_state;
        public float camera_scale;

        public void Clear()
        {
            this.game_flag = 0U;
            this.pre_tcb = (AppMain.MTS_TASK_TCB)null;
            this.post_tcb = (AppMain.MTS_TASK_TCB)null;
            this.game_time = 0U;
            this.sync_time = 0U;
            for (int index = 0; index < this.ply_work.Length; ++index)
                this.ply_work[index] = (AppMain.GMS_PLAYER_WORK)null;
            this.marker_pri = 0U;
            this.time_save = 0U;
            this.resume_pos_x = 0;
            this.resume_pos_y = 0;
            for (int index = 0; index < 1; ++index)
                this.player_rest_num[index] = 0U;
            this.map_fcol.Clear();
            for (int index = 0; index < 2; ++index)
                this.map_size[index] = 0;
            this.water_level = (ushort)0;
            this.pseudofall_dir = (ushort)0;
            this.die_event_wait_time = 0;
            this.def_light_vec.Clear();
            this.def_light_col.Clear();
            this.ply_light_vec.Clear();
            this.ply_light_col.Clear();
            this.ply_dmg_count = 0U;
            this.boss_load_no = 0;
            this.polar_diff = 0;
            this.polar_now = 0;
            this.camscale_state = AppMain.GME_MAIN_CAMSCALE_STATE.GMD_MAIN_CAMSCALE_STATE_NON;
            this.camera_scale = 0.0f;
        }
    }

    public class OBS_DIFF_COLLISION
    {
        public readonly AppMain.MP_BLOCK[][] block_map_datap = new AppMain.MP_BLOCK[2][];
        public AppMain.DF_BLOCK[] cl_diff_datap;
        public AppMain.DI_BLOCK[] direc_datap;
        public AppMain.AT_BLOCK[] char_attr_datap;
        public ushort map_block_num_x;
        public ushort map_block_num_y;
        public uint diff_block_num;
        public uint dir_block_num;
        public uint attr_block_num;
        public int left;
        public int top;
        public int right;
        public int bottom;

        internal void Clear()
        {
            this.cl_diff_datap = (AppMain.DF_BLOCK[])null;
            this.direc_datap = (AppMain.DI_BLOCK[])null;
            this.block_map_datap[0] = (AppMain.MP_BLOCK[])null;
            this.block_map_datap[1] = (AppMain.MP_BLOCK[])null;
            this.char_attr_datap = (AppMain.AT_BLOCK[])null;
            this.map_block_num_x = (ushort)0;
            this.map_block_num_y = (ushort)0;
            this.diff_block_num = 0U;
            this.dir_block_num = 0U;
            this.attr_block_num = 0U;
            this.left = 0;
            this.top = 0;
            this.right = 0;
            this.bottom = 0;
        }
    }

    public enum GMD_MAIN_NEXT_EVT
    {
        GMD_MAIN_NEXT_EVT_WORLDMAP,
        GMD_MAIN_NEXT_EVT_MAINGAME,
        GMD_MAIN_NEXT_EVT_ENDING,
        GMD_MAIN_NEXT_EVT_SPSTAGE_BRA,
        GMD_MAIN_NEXT_EVT_MAINMENU,
        GMD_MAIN_NEXT_EVT_TITLE,
        GMD_MAIN_NEXT_EVT_BUYSCREEN,
        GMD_MAIN_NEXT_EVT_MAX,
    }

    public class GMS_MAIN_LOAD_BB_MGR_WORK
    {
        public int boss_type;
        public bool b_end;
    }

    public class GMS_DECO_SUBMODEL_WORK : AppMain.IClearable, AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.OBS_ACTION3D_NN_WORK obj_3d_sub = new AppMain.OBS_ACTION3D_NN_WORK();
        public readonly AppMain.GMS_DECO_WORK deco_work;
        public int sub_model_index;

        public void Clear()
        {
            this.deco_work.Clear();
            this.obj_3d_sub.Clear();
            this.sub_model_index = 0;
        }

        public static explicit operator AppMain.GMS_DECO_WORK(AppMain.GMS_DECO_SUBMODEL_WORK work)
        {
            return work.deco_work;
        }

        public GMS_DECO_SUBMODEL_WORK()
        {
            this.deco_work = new AppMain.GMS_DECO_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.deco_work.obj_work;
        }
    }

    public class GMS_DECO_WORK : AppMain.IClearable, AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.OBS_ACTION3D_NN_WORK obj_3d = new AppMain.OBS_ACTION3D_NN_WORK();
        public readonly AppMain.OBS_RECT_WORK[] rect_work = AppMain.New<AppMain.OBS_RECT_WORK>(1);
        public readonly AppMain.OBS_OBJECT_WORK obj_work;
        public AppMain.GMS_EVE_RECORD_DECORATE event_record;
        public byte event_x;
        public AppMain.AOS_TEXTURE model_tex;
        public int model_index;
        public readonly object holder;

        public static explicit operator AppMain.GMS_DECO_SUBMODEL_WORK(AppMain.GMS_DECO_WORK p)
        {
            return (AppMain.GMS_DECO_SUBMODEL_WORK)p.holder;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_DECO_WORK work)
        {
            return work.obj_work;
        }

        public void Clear()
        {
            this.obj_work.Clear();
            this.obj_3d.Clear();
            AppMain.ClearArray<AppMain.OBS_RECT_WORK>(this.rect_work);
            this.event_record = (AppMain.GMS_EVE_RECORD_DECORATE)null;
            this.event_x = (byte)0;
            this.model_tex = (AppMain.AOS_TEXTURE)null;
            this.model_index = 0;
        }

        public GMS_DECO_WORK()
        {
            this.obj_work = AppMain.OBS_OBJECT_WORK.Create((object)this);
        }

        public GMS_DECO_WORK(object _holder)
        {
            this.holder = _holder;
            this.obj_work = AppMain.OBS_OBJECT_WORK.Create((object)this);
        }
    }

    public class GMS_DECO_FALL_REGISTER : AppMain.IClearable
    {
        public AppMain.VecFx32 vec = new AppMain.VecFx32();
        public uint num;

        public void Clear()
        {
            this.num = 0U;
            this.vec.Clear();
        }
    }

    public class GMS_DECO_FALL_MANAGER : AppMain.IClearable
    {
        public AppMain.GMS_DECO_FALL_REGISTER[] reg = AppMain.New<AppMain.GMS_DECO_FALL_REGISTER>(8);
        public uint dec_id;
        public AppMain.NNS_TEXLIST texlist;
        public ushort all_num;
        public ushort reg_num;
        public float frame;

        public void Clear()
        {
            this.dec_id = 0U;
            this.texlist = (AppMain.NNS_TEXLIST)null;
            this.all_num = this.reg_num = (ushort)0;
            this.frame = 0.0f;
            AppMain.ClearArray<AppMain.GMS_DECO_FALL_REGISTER>(this.reg);
        }
    }

    public class GMS_DECO_PRIM_DRAW_STACK
    {
        public AppMain.AOS_TVX_VERTEX[] vtx;
        public AppMain.VecFx32 pos;
        public float off_y;
        public uint disp_flag;
        public uint vtx_num;
    }

    public struct AOS_TVX_VERTEX
    {
        public float x;
        public float y;
        public float z;
        public uint c;
        public float u;
        public float v;

        public AOS_TVX_VERTEX(byte[] data, int offset)
        {
            this.x = MppBitConverter.ToSingle(data, offset);
            this.y = MppBitConverter.ToSingle(data, offset + 4);
            this.z = MppBitConverter.ToSingle(data, offset + 8);
            this.c = MppBitConverter.ToUInt32(data, offset + 12);
            this.u = MppBitConverter.ToSingle(data, offset + 16);
            this.v = MppBitConverter.ToSingle(data, offset + 20);
        }

        public static uint SizeBytes
        {
            get
            {
                return 32;
            }
        }
    }

    public class GMS_DECO_PRIM_DRAW_WORK
    {
        public readonly AppMain.GMS_DECO_PRIM_DRAW_STACK[] stack = AppMain.New<AppMain.GMS_DECO_PRIM_DRAW_STACK>(128);
        public AppMain.AOS_TEXTURE tex;
        public int tex_id;
        public uint command;
        public ushort all_vtx_num;
        public ushort stack_num;
    }

    public class AOS_TEXTURE : AppMain.IClearable
    {
        public AppMain.NNS_TEXLIST texlist;
        public object texlist_buf;
        public int reg_id;
        public AppMain.AMS_AMB_HEADER amb;
        public AppMain.TXB_HEADER txb;

        public void Clear()
        {
            this.texlist = (AppMain.NNS_TEXLIST)null;
            this.texlist_buf = (object)null;
            this.reg_id = 0;
            this.amb = (AppMain.AMS_AMB_HEADER)null;
            this.txb = (AppMain.TXB_HEADER)null;
        }
    }

    public class GMS_DECO_MGR : AppMain.IClearable
    {
        public int[] common_frame_motion = new int[3];
        public int[] motion_frame_loop = new int[12];
        public AppMain.MTS_TASK_TCB tcb_post;
        public bool flag_render_front;
        public bool flag_render_back;
        public AppMain.AMS_RENDER_TARGET render_target_front;
        public AppMain.AMS_RENDER_TARGET render_target_back;
        public int state_loop;
        public AppMain.GSS_SND_SE_HANDLE se_handle;

        public void Clear()
        {
            this.tcb_post = (AppMain.MTS_TASK_TCB)null;
            this.flag_render_front = this.flag_render_back = false;
            this.render_target_front = this.render_target_back = (AppMain.AMS_RENDER_TARGET)null;
            this.state_loop = 0;
            this.se_handle = (AppMain.GSS_SND_SE_HANDLE)null;
            for (int index = 0; index < this.motion_frame_loop.Length; ++index)
                this.motion_frame_loop[index] = 0;
        }
    }

    public class AMS_RENDER_TARGET
    {
        public uint flag;
        public int surface_num;
        public int width;
        public int height;
        public float aspect;
        public RenderTarget2D target;
    }

    public class GMS_DECO_DATA
    {
        public readonly AppMain.AOS_TEXTURE tvx_tex = new AppMain.AOS_TEXTURE();
        public AppMain.AMS_AMB_HEADER amb_header;
        public AppMain.OBS_ACTION3D_NN_WORK obj_3d_list;
        public AppMain.OBS_ACTION3D_NN_WORK[] obj_3d_list_fall;
        public AppMain.AMS_AMB_HEADER tvx_model;
        public AppMain.TVX_FILE[] tvx_model_data;

        public void Clear()
        {
            this.tvx_tex.Clear();
            this.amb_header = (AppMain.AMS_AMB_HEADER)null;
            this.obj_3d_list = (AppMain.OBS_ACTION3D_NN_WORK)null;
            this.obj_3d_list_fall = (AppMain.OBS_ACTION3D_NN_WORK[])null;
            this.tvx_model = (AppMain.AMS_AMB_HEADER)null;
        }
    }

    public class AMS_AMB_HEADER
    {
        public char[] file_id = new char[4]
        {
      '#',
      'A',
      'M',
      'B'
        };
        public string dir = "";
        public sbyte[] flag;
        public int file_num;
        public string[] files;
        public sbyte[] types;
        public object[] buf;
        public int[] offsets;
        public int[] lengths;
        public byte[] data;
        public AppMain.AMS_AMB_HEADER parent;
    }

    public delegate void GMF_DECO_RECT_FUNC(
      AppMain.OBS_RECT_WORK _obs_rect_work1,
      AppMain.OBS_RECT_WORK _obs_rect_work2);

    private class _gmDecoExecuteDrawPrimitive
    {
        public static AppMain.NNS_PRIM3D_PCT_ARRAY[] v_tbl_array = AppMain.New<AppMain.NNS_PRIM3D_PCT_ARRAY>(16);
        public static AppMain.NNS_PRIM3D_PCT[][] v_tbl = new AppMain.NNS_PRIM3D_PCT[16][];
    }

    public struct NNS_PRIM3D_PCT
    {
        public AppMain.Vector3f Pos;
        public uint Col;
        public AppMain.NNS_TEXCOORD Tex;
    }

    public enum OBD_DRAW_USER_COMMAND_3DNN
    {
        OBD_DRAW_USER_COMMAND_3DNN_MODEL,
        OBD_DRAW_USER_COMMAND_3DNN_MODEL_MATMTN,
        OBD_DRAW_USER_COMMAND_3DNN_MOTION,
        OBD_DRAW_USER_COMMAND_3DNN_MOTION_MATMTN,
        OBD_DRAW_USER_COMMAND_3DNN_SET_CAMERA,
        OBD_DRAW_USER_COMMAND_3DNN_USER_FUNC,
        OBD_DRAW_USER_COMMAND_3DNN_DRAW_MOTION,
        OBD_DRAW_USER_COMMAND_3DNN_DRAW_MOTION_MATMTN,
        OBD_DRAW_USER_COMMAND_3DNN_MAX,
    }

    public enum OBD_DRAW_USER_COMMAND_SORT_3DNN
    {
        OBD_DRAW_USER_COMMAND_SORT_3DNN_MODEL,
        OBD_DRAW_USER_COMMAND_SORT_3DNN_MATMTN,
        OBD_DRAW_USER_COMMAND_SORT_3DNN_MAX,
    }

    public delegate void OBF_DRAW_USER_DT_FUNC(object o);

    public class OBS_DRAW_PARAM_3DNN_USER_FUNC
    {
        public AppMain.OBF_DRAW_USER_DT_FUNC func;
        public object param;
    }

    public delegate void OBF_DRAW_USER_FUNC(object o);

    public delegate void OBF_DRAW_3DNN_MPLT_CB_FUNC(
      ref Matrix mtx_plt,
      AppMain.NNS_OBJECT _object,
      object mplt_cb_param);

    public delegate void OBF_DRAW_3DNN_MOTION_CB_FUNC(
      AppMain.AMS_MOTION motion,
      AppMain.NNS_OBJECT _object,
      object mtn_cb_param);

    public class AMS_MOTION
    {
        public readonly AppMain.AMS_MOTION_FILE[] mtnfile = AppMain.New<AppMain.AMS_MOTION_FILE>(4);
        public readonly AppMain.AMS_MOTION_BUF[] mbuf = AppMain.New<AppMain.AMS_MOTION_BUF>(2);
        public AppMain.NNS_OBJECT _object;
        public int node_num;
        public int motion_num;
        public AppMain.NNS_MOTION[] mtnbuf;
        public AppMain.NNS_TRS[] data;
        public AppMain.ArrayPointer<AppMain.NNS_TRS> mmbuf;
        public AppMain.NNS_OBJECT mmobject;
        public uint mmobj_size;
        public int mmotion_num;
        public AppMain.NNS_MOTION[] mmtn;
        public int mmotion_id;
        public float mmotion_frame;
    }

    public delegate void MPP_VOID_OBJECT_DELEGATE(object o);

    public delegate bool MPP_BOOL_NNSDRAWCALLBACKVAL_OBJECT_DELEGATE(
      AppMain.NNS_DRAWCALLBACK_VAL drawCallback,
      object p);

    public delegate void MPP_VOID_ARRAYNNSMATRIX_NNSOBJECT_OBJECT(
      AppMain.NNS_MATRIX[] m,
      AppMain.NNS_OBJECT nnso,
      object o);

    public delegate void OBS_DRAW_PARAM_3DNN_DRAW_MOTION_FUNC(object pObj);

    private class OBS_DRAW_PARAM_3DNN_SORT_MODEL
    {
        public readonly AppMain.AMS_COMMAND_HEADER cmd_header = new AppMain.AMS_COMMAND_HEADER();
        public readonly AppMain.AMS_PARAM_SORT_DRAW_OBJECT param = new AppMain.AMS_PARAM_SORT_DRAW_OBJECT();
        public readonly AppMain.AMS_DRAWSTATE state = new AppMain.AMS_DRAWSTATE();
        public AppMain.OBF_DRAW_USER_FUNC user_func;
        public object user_param;
        public AppMain.MPP_BOOL_NNSDRAWCALLBACKVAL_OBJECT_DELEGATE material_cb_func;
        public object material_cb_param;
        public uint use_light_flag;
    }

    public class OBS_DRAW_PARAM_3DNN_SET_CAMERA
    {
        public readonly AppMain.NNS_MATRIX prj_mtx = new AppMain.NNS_MATRIX();
        public readonly AppMain.NNS_MATRIX view_mtx = new AppMain.NNS_MATRIX();
        public int proj_type;
    }

    private class OBS_DRAW_PARAM_3DNN_DRAW_PRIMITIVE
    {
        public readonly AppMain.AMS_PARAM_DRAW_PRIMITIVE dat = new AppMain.AMS_PARAM_DRAW_PRIMITIVE();
        public readonly AppMain.NNS_MATRIX mtx = new AppMain.NNS_MATRIX();
        public int light;
        public int cull;

        public OBS_DRAW_PARAM_3DNN_DRAW_PRIMITIVE()
        {
        }

        public OBS_DRAW_PARAM_3DNN_DRAW_PRIMITIVE(AppMain.OBS_DRAW_PARAM_3DNN_DRAW_PRIMITIVE param)
        {
            this.dat.Assign(param.dat);
            this.mtx.Assign(param.mtx);
            this.light = param.light;
            this.cull = param.cull;
        }
    }

    public delegate void MPP_VOID_AMSCOMMANDHEADER_NNFDRAWOBJ(AppMain.AMS_COMMAND_HEADER h, uint o);

    private class _objDraw3DNNModel_DT
    {
        public static AppMain.NNS_MATRIX[] plt_mtx;
        public static uint[] nstat;
    }

    private class _objDraw3DNNMotion_DT
    {
        public static AppMain.NNS_MATRIX[] plt_mtx;
        public static uint[] nstat;
    }

    private class _objDraw3DNNDrawMotion_DT
    {
        public static AppMain.NNS_MATRIX[] plt_mtx;
        public static uint[] nstat;
    }

    public class NNS_DRAWCALLBACK_VAL
    {
        public int iMaterial;
        public int iPrevMaterial;
        public int iVtxList;
        public int iPrevVtxList;
        public int iNode;
        public int iMeshset;
        public int iSubobject;
        public AppMain.NNS_MATERIALPTR pMaterial;
        public AppMain.NNS_VTXLISTPTR pVtxListPtr;
        public AppMain.NNS_OBJECT pObject;
        public AppMain.NNS_MATRIX[] pMatrixPalette;
        public uint[] pNodeStatusList;
        public uint DrawSubobjType;
        public uint DrawFlag;
        public int bModified;
        public int bReDraw;
    }

    public delegate void MPP_VOID_NNSMATRIX_NNSOBJECT_OBJECT(
      ref AppMain.NNS_MATRIX m,
      AppMain.NNS_OBJECT nnso,
      object o);

    public delegate void MPP_VOID_GMS_FIX_PART_WORK(AppMain.GMS_FIX_PART_WORK pPart);

    public class GMS_FIX_PART_WORK
    {
        public readonly object holder;
        public AppMain.GMS_FIX_MGR_WORK parent_mgr;
        public int part_type;
        public uint flag;
        public uint blink_timer;
        public uint blink_on_time;
        public uint blink_off_time;
        public AppMain.MPP_VOID_GMS_FIX_PART_WORK proc_update;
        public AppMain.MPP_VOID_GMS_FIX_PART_WORK proc_disp;

        public GMS_FIX_PART_WORK(object _holder)
        {
            this.holder = _holder;
        }

        public GMS_FIX_PART_WORK()
        {
        }

        public static explicit operator AppMain.GMS_FIX_PART_VIRTUAL_PAD(
          AppMain.GMS_FIX_PART_WORK p)
        {
            return (AppMain.GMS_FIX_PART_VIRTUAL_PAD)p.holder;
        }

        public static explicit operator AppMain.GMS_FIX_PART_SCORE(AppMain.GMS_FIX_PART_WORK p)
        {
            return (AppMain.GMS_FIX_PART_SCORE)p.holder;
        }

        public static explicit operator AppMain.GMS_FIX_PART_TIMER(AppMain.GMS_FIX_PART_WORK p)
        {
            return (AppMain.GMS_FIX_PART_TIMER)p.holder;
        }

        public static explicit operator AppMain.GMS_FIX_PART_RINGCOUNT(
          AppMain.GMS_FIX_PART_WORK p)
        {
            return (AppMain.GMS_FIX_PART_RINGCOUNT)p.holder;
        }

        public static explicit operator AppMain.GMS_FIX_PART_CHALLENGE(
          AppMain.GMS_FIX_PART_WORK p)
        {
            return (AppMain.GMS_FIX_PART_CHALLENGE)p.holder;
        }

        public static explicit operator AppMain.GMS_FIX_MGR_WORK(AppMain.GMS_FIX_PART_WORK p)
        {
            return p.parent_mgr;
        }

        public void Clear()
        {
            this.parent_mgr = (AppMain.GMS_FIX_MGR_WORK)null;
            this.part_type = 0;
            this.flag = 0U;
            this.blink_timer = this.blink_on_time = this.blink_off_time = 0U;
            this.proc_update = this.proc_disp = (AppMain.MPP_VOID_GMS_FIX_PART_WORK)null;
        }
    }

    public delegate void MPP_VOID_OBS_OBJECT_WORK(AppMain.OBS_OBJECT_WORK pPart);

    public delegate void GMF_FIX_PART_INIT_FUNC(AppMain.GMS_FIX_MGR_WORK pArg);

    public class GMS_FIX_MGR_WORK
    {
        public AppMain.GMS_FIX_PART_WORK[] part_work = new AppMain.GMS_FIX_PART_WORK[5];
        public AppMain.GMS_FIX_PART_RINGCOUNT part_ringcount = new AppMain.GMS_FIX_PART_RINGCOUNT();
        public AppMain.GMS_FIX_PART_SCORE part_score = new AppMain.GMS_FIX_PART_SCORE();
        public AppMain.GMS_FIX_PART_TIMER part_timer = new AppMain.GMS_FIX_PART_TIMER();
        public AppMain.GMS_FIX_PART_CHALLENGE part_challenge = new AppMain.GMS_FIX_PART_CHALLENGE();
        public AppMain.GMS_FIX_PART_VIRTUAL_PAD part_virtual_pad = new AppMain.GMS_FIX_PART_VIRTUAL_PAD();
        public uint flag;
        public uint req_flag;
        public AppMain.MPP_VOID_GMS_FIX_PART_WORK proc_update;
        public readonly object holder;

        public GMS_FIX_MGR_WORK()
        {
        }

        public GMS_FIX_MGR_WORK(AppMain.GMS_FIX_PART_WORK holder)
        {
            this.holder = (object)holder;
        }

        public void Clear()
        {
            this.flag = this.req_flag = 0U;
            this.proc_update = (AppMain.MPP_VOID_GMS_FIX_PART_WORK)null;
            Array.Clear((Array)this.part_work, 0, 5);
            this.part_ringcount.Clear();
            this.part_score.Clear();
            this.part_timer.Clear();
            this.part_challenge.Clear();
            this.part_virtual_pad.Clear();
        }

        public static explicit operator AppMain.GMS_FIX_PART_WORK(AppMain.GMS_FIX_MGR_WORK p)
        {
            return (AppMain.GMS_FIX_PART_WORK)p.holder;
        }
    }

    public delegate void MPP_VOID_GMSGAMEDATLOADCONTEXT(AppMain.GMS_GAMEDAT_LOAD_CONTEXT p);

    public class GMS_GAMEDAT_LOAD_CONTEXT
    {
        public AppMain.GME_GAMEDAT_LOAD_STATE state;
        public string file_path;
        public int bb_no;
        public AppMain.AMS_FS fs_req;
        public AppMain.GMS_GAMEDAT_LOAD_DATA load_data;
        public ushort char_id;
        public ushort ply_no;
        public ushort stage_id;
        public ushort data_no;

        internal void Clear()
        {
            this.state = AppMain.GME_GAMEDAT_LOAD_STATE.GMD_GAMEDAT_LOAD_STATE_LOADING;
            this.file_path = "";
            this.bb_no = 0;
            this.fs_req = (AppMain.AMS_FS)null;
            this.load_data = (AppMain.GMS_GAMEDAT_LOAD_DATA)null;
            this.char_id = (ushort)0;
            this.ply_no = (ushort)0;
            this.stage_id = (ushort)0;
            this.data_no = (ushort)0;
        }
    }

    public delegate void MPP_OBJECT_STRING(string p);

    public delegate void MPP_VOID_MOTION_NSSOBJECT_OBJECT(
      AppMain.AMS_MOTION motion,
      AppMain.NNS_OBJECT _object,
      object bmcb_param);

    public delegate void MPP_VOID_GMS_BOSS1_BODY_WORK(AppMain.GMS_BOSS1_BODY_WORK wrk);

    public delegate void MPP_VOID_GMS_BOSS1_EGG_WORK(AppMain.GMS_BOSS1_EGG_WORK wrk);

    public delegate void MPP_VOID_GMS_BOSS1_CHAIN_WORK(AppMain.GMS_BOSS1_CHAIN_WORK wrk);

    public delegate void MPP_VOID_GMS_BOSS2_BODY_WORK(AppMain.GMS_BOSS2_BODY_WORK wrk);

    public delegate void MPP_VOID_GMS_BOSS2_EGG_WORK(AppMain.GMS_BOSS2_EGG_WORK wrk);

    public delegate void MPP_VOID_GMS_BOSS2_BALL_WORK(AppMain.GMS_BOSS2_BALL_WORK wrk);

    public delegate void MPP_VOID_GMS_BOSS4_BODY_WORK(AppMain.GMS_BOSS4_BODY_WORK wrk);

    public delegate void MPP_VOID_GMS_BOSS4_EGG_WORK(AppMain.GMS_BOSS4_EGG_WORK wrk);

    public delegate void MPP_VOID_GMS_BOSS4_CHIBI_WORK(AppMain.GMS_BOSS4_CHIBI_WORK wrk);

    public delegate void MPP_VOID_GMS_BOSS4_CAP_WORK(AppMain.GMS_BOSS4_CAP_WORK wrk);

    public delegate void MPP_VOID_GMS_BOSS5_BODY_WORK(AppMain.GMS_BOSS5_BODY_WORK wrk);

    public delegate void MPP_VOID_GMS_BOSS5_ALARM_FADE_WORK(AppMain.GMS_BOSS5_ALARM_FADE_WORK wrk);

    public delegate void MPP_VOID_GMS_BOSS5_MGR_WORK(AppMain.GMS_BOSS5_MGR_WORK wrk);

    public delegate void MPP_VOID_GMS_BOSS5_CORE_WORK(AppMain.GMS_BOSS5_CORE_WORK wrk);

    public delegate void MPP_VOID_GMS_BOSS5_ROCKET_WORK(AppMain.GMS_BOSS5_ROCKET_WORK wrk);

    public delegate void MPP_VOID_GMS_BOSS5_TURRET_WORK(AppMain.GMS_BOSS5_TURRET_WORK wrk);

    public delegate void MPP_VOID_GMS_BOSS5_EGG_WORK(AppMain.GMS_BOSS5_EGG_WORK wrk);

    public delegate void MPP_VOID_GMS_BOSS5_CTPLT_WORK(AppMain.GMS_BOSS5_CTPLT_WORK wrk);

    public delegate void MPP_VOID_GMS_BOSS5_LAND_WORK(AppMain.GMS_BOSS5_LAND_WORK wrk);

    public delegate void MPP_VOID_GMS_BOSS5_LDPART_WORK(AppMain.GMS_BOSS5_LDPART_WORK wrk);

    public class GMS_BOSS5_LDPART_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.OBS_COLLISION_WORK col_work = new AppMain.OBS_COLLISION_WORK();
        public readonly int[] vib_ofst = new int[2];
        public readonly int[] pivot_parent_ofst = new int[2];
        public AppMain.NNS_QUATERNION rot_diff_quat = new AppMain.NNS_QUATERNION();
        public AppMain.NNS_QUATERNION cur_rot_quat = new AppMain.NNS_QUATERNION();
        public readonly AppMain.GMS_EFFECT_3DNN_WORK efct_3d;
        public AppMain.MPP_VOID_GMS_BOSS5_LDPART_WORK proc_update;
        public int vib_cnt;
        public int part_index;
        public uint wait_timer;
        public uint brk_glass_cnt;

        public GMS_BOSS5_LDPART_WORK()
        {
            this.efct_3d = new AppMain.GMS_EFFECT_3DNN_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.efct_3d.efct_com.obj_work;
        }
    }

    public class NNS_MATCTRL_RGB
    {
        public readonly AppMain.NNS_RGB col = new AppMain.NNS_RGB();
        public int mode;

        public NNS_MATCTRL_RGB()
        {
        }

        public NNS_MATCTRL_RGB(int _mode, float r, float g, float b)
        {
            _mode = this.mode;
            this.col.r = r;
            this.col.b = b;
            this.col.g = g;
        }
    }

    public class NNS_MATCTRL_ALPHA
    {
        public int mode;
        public float alpha;

        public NNS_MATCTRL_ALPHA()
        {
        }

        public NNS_MATCTRL_ALPHA(int _mode, float _alpha)
        {
            this.mode = _mode;
            this.alpha = _alpha;
        }
    }

    public class NNS_MATCTRL_TEXOFFSET
    {
        public AppMain.NNS_TEXCOORD offset = new AppMain.NNS_TEXCOORD();
        public int mode;

        public NNS_MATCTRL_TEXOFFSET()
        {
        }

        public NNS_MATCTRL_TEXOFFSET(int _mode, float _u, float _v)
        {
            this.mode = _mode;
            this.offset.u = _u;
            this.offset.v = _v;
        }
    }

    public class NNS_MATCTRL_ENVTEXMATRIX
    {
        public readonly AppMain.NNS_MATRIX texmtx = AppMain.GlobalPool<AppMain.NNS_MATRIX>.Alloc();
        public int texcoordsrc;

        public NNS_MATCTRL_ENVTEXMATRIX()
        {
        }

        public NNS_MATCTRL_ENVTEXMATRIX(int _texcoordsrc, AppMain.NNS_MATRIX _texmtx)
        {
            this.texcoordsrc = _texcoordsrc;
            this.texmtx.Assign(_texmtx);
        }
    }

    public class NNS_MATCTRL_BLENDMODE
    {
        public int blendmode;

        public NNS_MATCTRL_BLENDMODE()
        {
        }

        public NNS_MATCTRL_BLENDMODE(int _blendmode)
        {
            this.blendmode = _blendmode;
        }
    }

    public class NNS_TEXFILE
    {
        public uint fType;
        public string Filename;
        public ushort MinFilter;
        public ushort MagFilter;
        public uint GlobalIndex;
        public uint Bank;

        public static AppMain.NNS_TEXFILE Read(BinaryReader reader, long data0Pos)
        {
            AppMain.NNS_TEXFILE nnsTexfile = new AppMain.NNS_TEXFILE();
            nnsTexfile.fType = reader.ReadUInt32();
            uint num1 = reader.ReadUInt32();
            nnsTexfile.MinFilter = reader.ReadUInt16();
            nnsTexfile.MagFilter = reader.ReadUInt16();
            nnsTexfile.GlobalIndex = reader.ReadUInt32();
            nnsTexfile.Bank = reader.ReadUInt32();
            if (num1 != 0U)
            {
                long position = reader.BaseStream.Position;
                reader.BaseStream.Seek(data0Pos + (long)num1, SeekOrigin.Begin);
                StringBuilder stringBuilder = new StringBuilder();
                byte num2;
                while ((num2 = reader.ReadByte()) != (byte)0)
                    stringBuilder.Append((char)num2);
                nnsTexfile.Filename = stringBuilder.ToString().ToUpper();
                reader.BaseStream.Seek(position, SeekOrigin.Begin);
            }
            return nnsTexfile;
        }
    }

    public class NNS_TEXFILELIST
    {
        public int nTex;
        public AppMain.NNS_TEXFILE[] pTexFileList;

        public static AppMain.NNS_TEXFILELIST Read(BinaryReader reader, long data0Pos)
        {
            AppMain.NNS_TEXFILELIST nnsTexfilelist = new AppMain.NNS_TEXFILELIST()
            {
                nTex = reader.ReadInt32()
            };
            nnsTexfilelist.pTexFileList = new AppMain.NNS_TEXFILE[nnsTexfilelist.nTex];
            uint num = reader.ReadUInt32();
            reader.BaseStream.Seek(data0Pos + (long)num, SeekOrigin.Begin);
            for (int index = 0; index < nnsTexfilelist.nTex; ++index)
                nnsTexfilelist.pTexFileList[index] = AppMain.NNS_TEXFILE.Read(reader, data0Pos);
            return nnsTexfilelist;
        }
    }

    public class NNS_CAMERA_TARGET_ROLL : AppMain.IClearable
    {
        public readonly AppMain.NNS_VECTOR Position = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_VECTOR Target = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public uint User;
        public int Fovy;
        public float Aspect;
        public float ZNear;
        public float ZFar;
        public int Roll;

        public void Clear()
        {
            this.User = 0U;
            this.Fovy = 0;
            this.Aspect = 0.0f;
            this.ZNear = 0.0f;
            this.ZFar = 0.0f;
            this.Roll = 0;
            this.Position.Clear();
            this.Target.Clear();
        }
    }

    public class NNS_CAMERA_TARGET_UPVECTOR
    {
        public readonly AppMain.NNS_VECTOR Position = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_VECTOR Target = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_VECTOR UpVector = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public uint User;
        public int Fovy;
        public float Aspect;
        public float ZNear;
        public float ZFar;
    }

    public class NNS_CAMERA_TARGET_UPTARGET
    {
        public readonly AppMain.NNS_VECTOR Position = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_VECTOR Target = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_VECTOR UpTarget = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public uint User;
        public int Fovy;
        public float Aspect;
        public float ZNear;
        public float ZFar;
    }

    public class NNS_CAMERA_ROTATION
    {
        public readonly AppMain.NNS_VECTOR Position = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_ROTATE_A32 Rotation = new AppMain.NNS_ROTATE_A32();
        public uint User;
        public int Fovy;
        public float Aspect;
        public float ZNear;
        public float ZFar;
        public readonly int RotType;
    }

    public class NNS_CAMERAPTR
    {
        public uint fType;
        public object pCamera;
    }

    private static class nndrawprim3d
    {
        public static readonly float[] nnsDiffuse = new float[4]
        {
      0.8f,
      0.8f,
      0.8f,
      1f
        };
        public static readonly float[] nnsAmbient = new float[4]
        {
      0.2f,
      0.2f,
      0.2f,
      1f
        };
        public static readonly float[] nnsSpecular = new float[4]
        {
      0.0f,
      0.0f,
      0.0f,
      1f
        };
        public static float nnsShininess = 16f;
        public static readonly float[] nnsEmission = new float[4]
        {
      0.0f,
      0.0f,
      0.0f,
      1f
        };
        public static readonly AppMain.NNS_MATRIX nnsPrim3DMatrix = AppMain.GlobalPool<AppMain.NNS_MATRIX>.Alloc();
        public static uint nnsAlphaFunc = 516;
        public static float nnsAlphaFuncRef = 0.0f;
        public static uint nnsDepthFunc = 515;
        public static bool nnsDepthMask = true;
        public static int nnsFormat;
    }

    private class _nnDrawPrimitive3DCore
    {
        public static AppMain.RGBA_U8[] cbuf = new AppMain.RGBA_U8[6];
        public static AppMain.NNS_PRIM3D_PCT[] prim_d = AppMain.New<AppMain.NNS_PRIM3D_PCT>(2048);
        public static AppMain.RGBA_U8[] prim_c = AppMain.New<AppMain.RGBA_U8>(2048);
        public static AppMain.NNS_PRIM3D_PCT_VertexData vertexData = new AppMain.NNS_PRIM3D_PCT_VertexData();
        public static AppMain.NNS_PRIM3D_PC_VertexData vertexDataPC = new AppMain.NNS_PRIM3D_PC_VertexData();
        public static AppMain.NNS_PRIM3D_PCT_TexCoordData texCoordData = new AppMain.NNS_PRIM3D_PCT_TexCoordData();
        public static AppMain.RGBA_U8_ColorData colorData = new AppMain.RGBA_U8_ColorData();
    }

    public class NNS_PRIM3D_PCT_VertexData : OpenGL.GLVertexData
    {
        protected OpenGL.GLVertexElementType[] compType_ = new OpenGL.GLVertexElementType[1];
        private AppMain.NNS_PRIM3D_PCT[] data_;
        private int startIndex_;

        public NNS_PRIM3D_PCT_VertexData()
        {
        }

        public NNS_PRIM3D_PCT_VertexData(AppMain.NNS_PRIM3D_PCT[] data, int startIndex)
        {
            this.data_ = data;
            this.startIndex_ = startIndex;
        }

        public void Init(AppMain.NNS_PRIM3D_PCT[] data, int startIndex)
        {
            this.data_ = data;
            this.startIndex_ = startIndex;
        }

        public OpenGL.GLVertexElementType[] DataComponents
        {
            get
            {
                return this.compType_;
            }
        }

        public int VertexCount
        {
            get
            {
                return this.data_.Length;
            }
        }

        public void ExtractTo(OpenGL.Vertex[] dst, int count)
        {
            for (int index = 0; index < count; ++index)
            {
                dst[index].Position.X = this.data_[this.startIndex_ + index].Pos.x;
                dst[index].Position.Y = this.data_[this.startIndex_ + index].Pos.y;
                dst[index].Position.Z = this.data_[this.startIndex_ + index].Pos.z;
            }
        }

        public void ExtractTo(OpenGL.VertexPosTexColNorm[] dst, int dstOffset, int count)
        {
            for (int index = 0; index < count; ++index)
            {
                dst[index + dstOffset].Position.X = this.data_[this.startIndex_ + index].Pos.x;
                dst[index + dstOffset].Position.Y = this.data_[this.startIndex_ + index].Pos.y;
                dst[index + dstOffset].Position.Z = this.data_[this.startIndex_ + index].Pos.z;
            }
        }
    }

    public class NNS_PRIM3D_PC_VertexData : OpenGL.GLVertexData
    {
        protected OpenGL.GLVertexElementType[] compType_ = new OpenGL.GLVertexElementType[1];
        private AppMain.NNS_PRIM3D_PC[] data_;
        private int startIndex_;

        public NNS_PRIM3D_PC_VertexData()
        {
        }

        public NNS_PRIM3D_PC_VertexData(AppMain.NNS_PRIM3D_PC[] data, int startIndex)
        {
            this.data_ = data;
            this.startIndex_ = startIndex;
        }

        public void Init(AppMain.NNS_PRIM3D_PC[] data, int startIndex)
        {
            this.data_ = data;
            this.startIndex_ = startIndex;
        }

        public OpenGL.GLVertexElementType[] DataComponents
        {
            get
            {
                return this.compType_;
            }
        }

        public int VertexCount
        {
            get
            {
                return this.data_.Length;
            }
        }

        public void ExtractTo(OpenGL.Vertex[] dst, int count)
        {
            for (int index = 0; index < count; ++index)
                dst[index].Position = (Vector3)this.data_[this.startIndex_ + index].Pos;
        }

        public void ExtractTo(OpenGL.VertexPosTexColNorm[] dst, int dstOffset, int count)
        {
            for (int index = 0; index < count; ++index)
                dst[index + dstOffset].Position = (Vector3)this.data_[this.startIndex_ + index].Pos;
        }
    }

    public class NNS_PRIM3D_PCT_TexCoordData : OpenGL.GLVertexData
    {
        protected OpenGL.GLVertexElementType[] compType_ = new OpenGL.GLVertexElementType[1]
        {
      OpenGL.GLVertexElementType.TextureCoordinate0
        };
        private AppMain.NNS_PRIM3D_PCT[] data_;
        private int startIndex_;

        public NNS_PRIM3D_PCT_TexCoordData()
        {
        }

        public NNS_PRIM3D_PCT_TexCoordData(AppMain.NNS_PRIM3D_PCT[] data, int startIndex)
        {
            this.data_ = data;
            this.startIndex_ = startIndex;
        }

        public void Init(AppMain.NNS_PRIM3D_PCT[] data, int startIndex)
        {
            this.data_ = data;
            this.startIndex_ = startIndex;
        }

        public OpenGL.GLVertexElementType[] DataComponents
        {
            get
            {
                return this.compType_;
            }
        }

        public int VertexCount
        {
            get
            {
                return this.data_.Length;
            }
        }

        public void ExtractTo(OpenGL.Vertex[] dst, int count)
        {
            for (int index = 0; index < count; ++index)
            {
                dst[index].TextureCoordinate.X = this.data_[this.startIndex_ + index].Tex.u;
                dst[index].TextureCoordinate.Y = this.data_[this.startIndex_ + index].Tex.v;
            }
        }

        public void ExtractTo(OpenGL.VertexPosTexColNorm[] dst, int dstOffset, int count)
        {
            for (int index = 0; index < count; ++index)
            {
                dst[index + dstOffset].TextureCoordinate.X = this.data_[this.startIndex_ + index].Tex.u;
                dst[index + dstOffset].TextureCoordinate.Y = this.data_[this.startIndex_ + index].Tex.v;
            }
        }
    }

    public class RGBA_U8_ColorData : OpenGL.GLVertexData
    {
        protected OpenGL.GLVertexElementType[] compType_ = new OpenGL.GLVertexElementType[1]
        {
      OpenGL.GLVertexElementType.Color
        };
        private AppMain.RGBA_U8[] data_;
        private int startIndex_;

        public RGBA_U8_ColorData()
        {
        }

        public RGBA_U8_ColorData(AppMain.RGBA_U8[] data, int startIndex)
        {
            this.data_ = data;
            this.startIndex_ = startIndex;
        }

        public void Init(AppMain.RGBA_U8[] data, int startIndex)
        {
            this.data_ = data;
            this.startIndex_ = startIndex;
        }

        public OpenGL.GLVertexElementType[] DataComponents
        {
            get
            {
                return this.compType_;
            }
        }

        public int VertexCount
        {
            get
            {
                return this.data_.Length;
            }
        }

        public void ExtractTo(OpenGL.Vertex[] dst, int count)
        {
            for (int index = 0; index < count; ++index)
            {
                dst[index].Color.A = this.data_[this.startIndex_ + index].a;
                dst[index].Color.R = this.data_[this.startIndex_ + index].r;
                dst[index].Color.G = this.data_[this.startIndex_ + index].g;
                dst[index].Color.B = this.data_[this.startIndex_ + index].b;
            }
        }

        public void ExtractTo(OpenGL.VertexPosTexColNorm[] dst, int dstOffset, int count)
        {
            for (int index1 = 0; index1 < count; ++index1)
            {
                int index2 = index1 + dstOffset;
                int index3 = this.startIndex_ + index1;
                dst[index2].Color = new Color((int)this.data_[index3].r, (int)this.data_[index3].g, (int)this.data_[index3].b, (int)this.data_[index3].a);
            }
        }
    }

    private class _nnMakeRotateMatrixQuaternion
    {
        public static int[] nxt = new int[3];
        public static float[] q = new float[3];
    }

    public enum GMD_TASK_GROUP_NO
    {
        GMD_TASK_GROUP_NO_PLAYER = 1,
        GMD_TASK_GROUP_NO_START = 1,
        GMD_TASK_GROUP_NO_ENEMY = 2,
        GMD_TASK_GROUP_NO_DECO = 3,
        GMD_TASK_GROUP_NO_OBJSYS = 4,
        GMD_TASK_GROUP_NO_GAMESYS = 5,
        GMD_TASK_GROUP_NO_END = 6,
    }

    public class GmkUpBumperData
    {
        public static readonly short[][] tbl_gm_gmk_upbumper_rect = new short[2][]
        {
      new short[4]{ (short) 0, (short) -8, (short) 8, (short) 0 },
      new short[4]{ (short) -8, (short) -8, (short) 0, (short) 0 }
        };
        public const int GME_GMK_TYPE_UPBUMPER_L = 0;
        public const int GME_GMK_TYPE_UPBUMPER_R = 1;
        public const int GME_GMK_TYPE_MAX = 2;
        public const int GME_GMK_RECT_DATA_COL_WIDTH = 0;
        public const int GME_GMK_RECT_DATA_COL_HEIGHT = 1;
        public const int GME_GMK_RECT_DATA_COL_OFST_X = 2;
        public const int GME_GMK_RECT_DATA_COL_OFST_Y = 3;
        public const int GME_GMK_RECT_DATA_DEF_LEFT = 0;
        public const int GME_GMK_RECT_DATA_DEF_TOP = 1;
        public const int GME_GMK_RECT_DATA_DEF_RIGHT = 2;
        public const int GME_GMK_RECT_DATA_DEF_BOTTOM = 3;
        public const int GME_GMK_RECT_DATA_MAX = 4;
    }

    public class GMS_GMK_UPBUMPER_REBOUND_DATA
    {
        public int act_state;
        public int spd_x;
        public int spd_y;

        public GMS_GMK_UPBUMPER_REBOUND_DATA(int act_state, int spd_x, int spd_y)
        {
            this.act_state = act_state;
            this.spd_x = spd_x;
            this.spd_y = spd_y;
        }
    }

    public class GMS_DECOGLARE_PARAM
    {
        public readonly uint color;
        public float size;
        public float sort_z;
        public int ablend;

        public GMS_DECOGLARE_PARAM(uint rgba, float Size, float Sort, int Ablend)
        {
            this.color = rgba;
            this.size = Size;
            this.sort_z = Sort;
            this.ablend = Ablend;
        }
    }

    public class GMDECO_GLARE_INTERFACE : AppMain.IClearable
    {
        public AppMain.AMS_AMB_HEADER amb_header;
        public AppMain.NNS_TEXFILELIST tex_buf;
        public object texlistbuf;
        public AppMain.NNS_TEXLIST texlist;
        public int texId;
        public int regId;
        public int drawFlag;

        public void Clear()
        {
            this.amb_header = (AppMain.AMS_AMB_HEADER)null;
            this.tex_buf = (AppMain.NNS_TEXFILELIST)null;
            this.texlistbuf = (object)null;
            this.texlist = (AppMain.NNS_TEXLIST)null;
            this.texId = this.regId = this.drawFlag = 0;
        }
    }

    public class GMS_BOSS5_LAND_PLACEMENT_INFO
    {
        public int pos_x;
        public int pos_y;
        public int part_num;
    }

    public abstract class ITaskAsv
    {
        public const uint c_priority_default = 4096;
        public const uint c_user_default = 0;
        public const uint c_attribute_default = 2;
        public const int c_group_default = 0;
        public const uint c_stall_mask_default = 1;
        public const uint c_run_mask_default = 4294967295;

        public abstract void operator_brackets();

        public static implicit operator AppMain.AMS_TCB(AppMain.ITaskAsv task)
        {
            return task.GetTaskTcb();
        }

        public abstract AppMain.AMS_TCB GetTaskTcb();

        public uint GetPriority()
        {
            return this.GetTaskTcb().priority;
        }

        public uint GetUser()
        {
            return this.GetTaskTcb().user_id;
        }

        public uint GetAttribute()
        {
            return this.GetTaskTcb().attribute;
        }

        public int GetGroup()
        {
            return 0;
        }

        public uint GetStallMask()
        {
            return 1;
        }

        public uint GetRunMask()
        {
            return uint.MaxValue;
        }

        public delegate void FProc();
    }

    public class AMS_TCB : AppMain.IClearable
    {
        public readonly AppMain.AMS_TCB_FOOTER footer = new AppMain.AMS_TCB_FOOTER();
        public string name;
        public uint user_id;
        public uint attribute;
        public uint priority;
        public AppMain.TaskProc procedure;
        public int proc_addr;
        public AppMain.TaskProc destructor;
        public AppMain.AMS_TCB prev;
        public AppMain.AMS_TCB next;
        public AppMain.AMS_TASK taskp;
        public int wkbegin;
        public object work;

        public void Clear()
        {
            this.name = string.Empty;
            this.user_id = 0U;
            this.attribute = 0U;
            this.priority = 0U;
            this.procedure = (AppMain.TaskProc)null;
            this.proc_addr = 0;
            this.destructor = (AppMain.TaskProc)null;
            this.prev = (AppMain.AMS_TCB)null;
            this.next = (AppMain.AMS_TCB)null;
            this.taskp = (AppMain.AMS_TASK)null;
            this.footer.wkend = 0;
        }
    }

    public abstract class ITaskLinkAsv : AppMain.ITaskAsv
    {
        private AppMain.AMS_TCB m_task_tcb;

        public void AttachTask()
        {
            this.AttachTask("", 4096U, 0U, 2U, 0, 1U, uint.MaxValue);
        }

        public void AttachTask(string name)
        {
            this.AttachTask(name, 4096U, 0U, 2U, 0, 1U, uint.MaxValue);
        }

        public void AttachTask(string name, uint priority)
        {
            this.AttachTask(name, priority, 0U, 2U, 0, 1U, uint.MaxValue);
        }

        public void AttachTask(string name, uint priority, uint user)
        {
            this.AttachTask(name, priority, user, 2U, 0, 1U, uint.MaxValue);
        }

        public void AttachTask(string name, uint priority, uint user, uint attribute)
        {
            this.AttachTask(name, priority, user, attribute, 0, 1U, uint.MaxValue);
        }

        public void AttachTask(string name, uint priority, uint user, uint attribute, int group)
        {
            this.AttachTask(name, priority, user, attribute, group, 1U, uint.MaxValue);
        }

        public void AttachTask(
          string name,
          uint priority,
          uint user,
          uint attribute,
          int group,
          uint stall_mask)
        {
            this.AttachTask(name, priority, user, attribute, group, stall_mask, uint.MaxValue);
        }

        public void AttachTask(
          string name,
          uint priority,
          uint user,
          uint attribute,
          int group,
          uint stall_mask,
          uint run_mask)
        {
            this.DetachTask();
            this.m_task_tcb = AppMain.amTaskMake(new AppMain.TaskProc(AppMain.ITaskLinkAsv.procedure), new AppMain.TaskProc(AppMain.ITaskLinkAsv.destructor), priority, user, attribute, name, stall_mask, group, run_mask);
            this.m_task_tcb.work = (object)new AppMain.ITaskLinkAsv.SWork();
            ((AppMain.ITaskLinkAsv.SWork)AppMain.amTaskGetWork(this.m_task_tcb)).owner = this;
        }

        public void DetachTask()
        {
            if (this.m_task_tcb == null)
                return;
            AppMain.amTaskSetDestructor(this.m_task_tcb, (AppMain.TaskProc)null);
            AppMain.amTaskDelete(this.m_task_tcb);
            this.TaskDestructor(0);
            this.m_task_tcb = (AppMain.AMS_TCB)null;
        }

        public static AppMain.ITaskLinkAsv CastFromTaskTcb(AppMain.AMS_TCB tcb)
        {
            if (new AppMain.TaskProc(AppMain.ITaskLinkAsv.procedure) == tcb.procedure || new AppMain.TaskProc(AppMain.ITaskLinkAsv.destructor) == tcb.destructor)
            {
                AppMain.ITaskLinkAsv.SWork work = (AppMain.ITaskLinkAsv.SWork)AppMain.amTaskGetWork(tcb);
                if (work.owner != null && work.owner.m_task_tcb == tcb)
                    return work.owner;
            }
            return (AppMain.ITaskLinkAsv)null;
        }

        public override AppMain.AMS_TCB GetTaskTcb()
        {
            return this.m_task_tcb;
        }

        public bool IsTask()
        {
            return null != this.m_task_tcb;
        }

        protected virtual void TaskDestructor(int type)
        {
        }

        private void TcbLinkDestructorCb()
        {
            this.TaskDestructor(1);
            this.m_task_tcb = (AppMain.AMS_TCB)null;
        }

        private static void procedure(AppMain.AMS_TCB tcb)
        {
            ((AppMain.ITaskLinkAsv.SWork)AppMain.amTaskGetWork(tcb)).owner.operator_brackets();
        }

        private static void destructor(AppMain.AMS_TCB tcb)
        {
            ((AppMain.ITaskLinkAsv.SWork)AppMain.amTaskGetWork(tcb)).owner.TcbLinkDestructorCb();
        }

        protected class EDestructorCbType
        {
            public const int DetachTask = 0;
            public const int MtTaskClear = 1;
            public const int Max = 2;
            public const int None = 3;
        }

        private class SWork
        {
            public AppMain.ITaskLinkAsv owner;
        }
    }

    public class CProc
    {
        private AppMain.ITaskAsv.FProc m_proc;
        private object m_it;

        public void operator_brackets()
        {
            if (this.m_it == null || this.IsNoneProc())
                return;
            this.m_proc();
        }

        public bool IsNoneProc()
        {
            return this.m_proc == null;
        }

        public bool IsProc(AppMain.ITaskAsv.FProc proc)
        {
            return this.m_proc == proc;
        }

        public bool IsProc()
        {
            return this.IsNoneProc();
        }

        public AppMain.ITaskAsv.FProc GetProc()
        {
            return this.m_proc;
        }

        public void SetTarget(object it)
        {
            this.m_it = it;
            this.SetProc();
        }

        public void SetTarget()
        {
            this.m_it = (object)null;
            this.SetProc();
        }

        public void SetProc(AppMain.ITaskAsv.FProc proc)
        {
            this.m_proc = proc;
        }

        public void SetProc()
        {
            this.m_proc = (AppMain.ITaskAsv.FProc)null;
        }

        public CProc()
        {
            this.m_it = (object)null;
            this.m_proc = (AppMain.ITaskAsv.FProc)null;
        }

        public CProc(object it)
        {
            this.m_it = it;
            this.m_proc = (AppMain.ITaskAsv.FProc)null;
        }
    }

    public class CProcCount : AppMain.CProc
    {
        private uint m_counter;

        public new void operator_brackets()
        {
            ++this.m_counter;
            base.operator_brackets();
        }

        public uint GetCount()
        {
            return this.m_counter;
        }

        public new void SetProc(AppMain.ITaskAsv.FProc proc)
        {
            this.ResetCounter();
            base.SetProc(proc);
        }

        public new void SetProc()
        {
            this.ResetCounter();
            base.SetProc();
        }

        public CProcCount()
        {
            this.ResetCounter();
        }

        public CProcCount(object it)
          : base(it)
        {
            this.ResetCounter();
        }

        protected void ResetCounter()
        {
            this.m_counter = uint.MaxValue;
        }
    }

    public class ITask
    {
        public static uint c_priority_default = 4096;
        public static uint c_user_default = 0;
        public static uint c_attribute_default = 2;
        public static int c_group_default = 0;
        public static uint c_stall_mask_default = 1;
        public static uint c_run_mask_default = uint.MaxValue;
        private AppMain.IFunctor m_pFunctor;

        public ITask(AppMain.IFunctor pFunctor)
        {
            this.m_pFunctor = pFunctor;
        }

        public virtual void operator_brackets()
        {
            this.m_pFunctor.operator_brackets();
        }

        public virtual AppMain.AMS_TCB GetTaskTcb()
        {
            AppMain.mppAssertNotImpl();
            return (AppMain.AMS_TCB)null;
        }

        public uint GetPriority()
        {
            return this.GetTaskTcb().priority;
        }

        public uint GetUser()
        {
            return this.GetTaskTcb().user_id;
        }

        public uint GetAttribute()
        {
            return this.GetTaskTcb().attribute;
        }

        public int GetGroup()
        {
            return AppMain.ITask.c_group_default;
        }

        public uint GetStallMask()
        {
            return AppMain.ITask.c_stall_mask_default;
        }

        public uint GetRunMask()
        {
            return AppMain.ITask.c_run_mask_default;
        }

        public delegate void FProc();
    }

    public interface IFunctor
    {
        void operator_brackets();
    }

    public class ITaskLink : AppMain.ITask
    {
        private AppMain.AMS_TCB m_task_tcb;

        public void AttachTask(string name)
        {
            this.AttachTask(name, AppMain.ITask.c_priority_default, AppMain.ITask.c_user_default, AppMain.ITask.c_attribute_default, AppMain.ITask.c_group_default, AppMain.ITask.c_stall_mask_default, AppMain.ITask.c_run_mask_default);
        }

        public void AttachTask(string name, uint priority)
        {
            this.AttachTask(name, priority, AppMain.ITask.c_user_default, AppMain.ITask.c_attribute_default, AppMain.ITask.c_group_default, AppMain.ITask.c_stall_mask_default, AppMain.ITask.c_run_mask_default);
        }

        public void AttachTask(string name, uint priority, uint user)
        {
            this.AttachTask(name, priority, user, AppMain.ITask.c_attribute_default, AppMain.ITask.c_group_default, AppMain.ITask.c_stall_mask_default, AppMain.ITask.c_run_mask_default);
        }

        public void AttachTask(string name, uint priority, uint user, uint attribute)
        {
            this.AttachTask(name, priority, user, attribute, AppMain.ITask.c_group_default, AppMain.ITask.c_stall_mask_default, AppMain.ITask.c_run_mask_default);
        }

        public void AttachTask(string name, uint priority, uint user, uint attribute, int group)
        {
            this.AttachTask(name, priority, user, attribute, group, AppMain.ITask.c_stall_mask_default, AppMain.ITask.c_run_mask_default);
        }

        public void AttachTask(
          string name,
          uint priority,
          uint user,
          uint attribute,
          int group,
          uint stall_mask)
        {
            this.AttachTask(name, priority, user, attribute, group, stall_mask, AppMain.ITask.c_run_mask_default);
        }

        public void AttachTask(
          string name,
          uint priority,
          uint user,
          uint attribute,
          int group,
          uint stall_mask,
          uint run_mask)
        {
            this.DetachTask();
            this.m_task_tcb = AppMain.amTaskMake(new AppMain.TaskProc(AppMain.ITaskLink.procedure), new AppMain.TaskProc(AppMain.ITaskLink.destructor), priority, user, attribute, name, stall_mask, group, run_mask);
            this.m_task_tcb.work = (object)new AppMain.ITaskLink.SWork();
            ((AppMain.ITaskLink.SWork)AppMain.amTaskGetWork(this.m_task_tcb)).owner = this;
        }

        public void DetachTask()
        {
            if (this.m_task_tcb == null)
                return;
            AppMain.amTaskSetDestructor(this.m_task_tcb, (AppMain.TaskProc)null);
            AppMain.amTaskDelete(this.m_task_tcb);
            this.TaskDestructor(AppMain.ITaskLink.EDestructorCbType.Type.DetachTask);
            this.m_task_tcb = (AppMain.AMS_TCB)null;
        }

        public static AppMain.ITaskLink CastFromTaskTcb(AppMain.AMS_TCB tcb)
        {
            AppMain.mppAssertNotImpl();
            return (AppMain.ITaskLink)null;
        }

        public override AppMain.AMS_TCB GetTaskTcb()
        {
            return this.m_task_tcb;
        }

        public bool IsTask()
        {
            return this.m_task_tcb != null;
        }

        public ITaskLink(AppMain.IFunctor pFunctor)
          : base(pFunctor)
        {
            this.m_task_tcb = (AppMain.AMS_TCB)null;
        }

        ~ITaskLink()
        {
            this.DetachTask();
        }

        protected virtual void TaskDestructor(AppMain.ITaskLink.EDestructorCbType.Type type)
        {
        }

        private void TcbLinkDestructorCb()
        {
            AppMain.mppAssertNotImpl();
        }

        private static void procedure(AppMain.AMS_TCB tcb)
        {
            ((AppMain.ITaskLink.SWork)AppMain.amTaskGetWork(tcb)).owner.operator_brackets();
        }

        private static void destructor(AppMain.AMS_TCB tcb)
        {
            AppMain.mppAssertNotImpl();
        }

        [StructLayout(LayoutKind.Sequential, Size = 1)]
        protected struct EDestructorCbType
        {
            public enum Type
            {
                DetachTask,
                MtTaskClear,
                Max,
                None,
            }
        }

        private class SWork
        {
            public AppMain.ITaskLink owner;
        }
    }



    public class DMS_BUY_SCR_WORK
    {
        public int[] result = new int[1];
        public object instance;

        internal void Clear()
        {
            this.instance = (object)null;
            this.result[0] = 0;
        }
    }

    public class AOS_ACTION
    {
        public object data;
        public uint flag;
        public uint state;
        public AppMain.AOE_ACT_TYPE type;
        public float frame;
        public AppMain._last_key last_key;
        public AppMain.AOS_ACTION child;
        public AppMain.AOS_ACTION sibling;
        public AppMain.AOS_SPRITE sprite;

        public void Clear()
        {
            this.data = (object)0;
            this.flag = 0U;
            this.state = 0U;
            this.type = AppMain.AOE_ACT_TYPE.AOD_ACT_TYPE_ACTION;
            this.frame = 0.0f;
            this.last_key.Clear();
            this.child = (AppMain.AOS_ACTION)null;
            this.sibling = (AppMain.AOS_ACTION)null;
            this.sprite = (AppMain.AOS_SPRITE)null;
        }
    }

    public struct AOS_ACT_COL : AppMain.IClearable
    {
        public byte a;
        public byte b;
        public byte g;
        public byte r;

        public void Clear()
        {
            this.a = this.b = this.g = this.r = (byte)0;
        }

        public uint c
        {
            get
            {
                return (uint)((int)this.r << 24 | (int)this.g << 16 | (int)this.b << 8) | (uint)this.a;
            }
            set
            {
                uint num = value;
                this.r = (byte)(num >> 24 & (uint)byte.MaxValue);
                this.g = (byte)(num >> 16 & (uint)byte.MaxValue);
                this.b = (byte)(num >> 8 & (uint)byte.MaxValue);
                this.a = (byte)(num & (uint)byte.MaxValue);
            }
        }
    }

    public class AOS_SPRITE
    {
        public readonly AppMain.AOS_ACT_HITP hit = new AppMain.AOS_ACT_HITP();
        public uint flag;
        public uint blend;
        public AppMain.AOS_ACT_COL color;
        public AppMain.AOS_ACT_COL fade;
        public float center_x;
        public float center_y;
        public float prio;
        public AppMain.AOS_ACT_RECT offset;
        public float rotate;
        public AppMain.NNS_TEXLIST texlist;
        public int tex_id;
        public uint clamp;
        public AppMain.AOS_ACT_RECT uv;

        public void Assign(AppMain.AOS_SPRITE from)
        {
            this.flag = from.flag;
            this.blend = from.blend;
            this.color = from.color;
            this.fade = from.fade;
            this.center_x = from.center_x;
            this.center_y = from.center_y;
            this.prio = from.prio;
            this.offset = from.offset;
            this.rotate = from.rotate;
            this.tex_id = from.tex_id;
            this.clamp = from.clamp;
            this.uv = from.uv;
            this.texlist = from.texlist;
            this.hit.Assign(from.hit);
        }

        public void Clear()
        {
            this.flag = 0U;
            this.blend = 0U;
            this.color.Clear();
            this.fade.Clear();
            this.center_x = 0.0f;
            this.center_y = 0.0f;
            this.prio = 0.0f;
            this.offset.Clear();
            this.rotate = 0.0f;
            this.tex_id = 0;
            this.clamp = 0U;
            this.uv.Clear();
            this.texlist = (AppMain.NNS_TEXLIST)null;
            this.hit.Clear();
        }
    }

    public class A2S_AMA_HEADER
    {
        public uint version;
        public uint node_num;
        public uint act_num;
        public int node_tbl_offset;
        public AppMain.A2S_AMA_NODE[] node_tbl;
        public int act_tbl_offset;
        public AppMain.A2S_AMA_ACT[] act_tbl;
        public int node_name_tbl_offset;
        public int act_name_tbl_offset;
    }

    public class AMS_TP_TOUCH_STATUS
    {
        public AppMain.AMS_TP_TOUCH_CORE core = new AppMain.AMS_TP_TOUCH_CORE();
        public ushort[] on = new ushort[2];
        public ushort[] prev = new ushort[2];
        public ushort[] push = new ushort[2];
        public ushort[] pull = new ushort[2];
        public ushort flag;
    }

    public class DF_BLOCK
    {
        public readonly AppMain.DF_BLOCK.DF_CELL[,] df = new AppMain.DF_BLOCK.DF_CELL[8, 8];

        public struct DF_CELL
        {
            public byte[] Data;
            public int Offset;
        }
    }

    public class DI_BLOCK
    {
        public byte[][] di;

        public DI_BLOCK()
        {
            this.di = new byte[8][];
            for (int index = 0; index < 8; ++index)
                this.di[index] = new byte[8];
        }
    }

    public struct MP_BLOCK
    {
        public ushort id;
        public ushort rot;
        public ushort flip_h;
        public ushort flip_v;

        public MP_BLOCK(ushort bitFieldValue)
        {
            this.id = (ushort)((uint)bitFieldValue & 4095U);
            this.rot = (ushort)((int)bitFieldValue >> 12 & 3);
            this.flip_h = (ushort)((int)bitFieldValue >> 14 & 1);
            this.flip_v = (ushort)((int)bitFieldValue >> 15 & 1);
        }
    }

    public class AT_BLOCK
    {
        public byte[][] at;

        public AT_BLOCK()
        {
            this.at = new byte[8][];
            for (int index = 0; index < 8; ++index)
                this.at[index] = new byte[8];
        }
    }

    public class OBS_BLOCK_COLLISION
    {
        public readonly byte[][] pData = new byte[2][];
        public uint width;
        public uint height;
        public int left;
        public int top;
        public int right;
        public int bottom;
    }

    public class NNS_VTXARRAY_GL
    {
        public uint Type;
        public int Size;
        public uint DataType;
        public int Stride;
        public ByteBuffer Pointer;
        public OpenGL.GLVertexData Data;

        public NNS_VTXARRAY_GL()
        {
        }

        public NNS_VTXARRAY_GL(AppMain.NNS_VTXARRAY_GL array)
        {
            this.Type = array.Type;
            this.Size = array.Size;
            this.DataType = array.DataType;
            this.Stride = array.Stride;
            this.Pointer = array.Pointer;
            this.Data = array.Data;
        }

        public static AppMain.NNS_VTXARRAY_GL Read(
          BinaryReader reader,
          ByteBuffer vertexBuffer,
          uint vertexBufferOffset,
          int nVertex)
        {
            AppMain.NNS_VTXARRAY_GL nnsVtxarrayGl = new AppMain.NNS_VTXARRAY_GL();
            nnsVtxarrayGl.Type = reader.ReadUInt32();
            nnsVtxarrayGl.Size = reader.ReadInt32();
            nnsVtxarrayGl.DataType = reader.ReadUInt32();
            nnsVtxarrayGl.Stride = reader.ReadInt32();
            uint num = reader.ReadUInt32();
            if (num != 0U)
                nnsVtxarrayGl.Pointer = vertexBuffer + ((int)num - (int)vertexBufferOffset);
            return nnsVtxarrayGl;
        }
    }

    private class GMS_TVX_DRAW_STACK : AppMain.IClearable
    {
        public AppMain.AOS_TVX_VERTEX[] vtx;
        public AppMain.VecFx32 pos;
        public AppMain.VecFx32 scale;
        public uint disp_flag;
        public uint vtx_num;
        public int rotate_z;
        public AppMain.NNS_TEXCOORD coord;
        public uint color;

        public void Clear()
        {
            this.vtx = (AppMain.AOS_TVX_VERTEX[])null;
            this.pos.Clear();
            this.scale.Clear();
            this.disp_flag = this.vtx_num = 0U;
            this.rotate_z = 0;
            this.coord.Clear();
            this.color = 0U;
        }
    }

    private struct GMS_TVX_EX_WORK
    {
        public int u_wrap;
        public int v_wrap;
        public AppMain.NNS_TEXCOORD coord;
        public uint color;
    }

    private class GMS_TVX_DRAW_WORK : AppMain.IClearable
    {
        public AppMain.GMS_TVX_DRAW_STACK[] stack = AppMain.New<AppMain.GMS_TVX_DRAW_STACK>(AppMain.GMD_TVX_DRAW_STACK_NUM);
        public AppMain.NNS_TEXLIST tex;
        public int tex_id;
        public uint all_vtx_num;
        public uint stack_num;
        public int u_wrap;
        public int v_wrap;

        public void Clear()
        {
            this.tex = (AppMain.NNS_TEXLIST)null;
            this.tex_id = 0;
            this.all_vtx_num = this.stack_num = 0U;
            this.u_wrap = this.v_wrap = 0;
            AppMain.ClearArray<AppMain.GMS_TVX_DRAW_STACK>(this.stack);
        }
    }

    public class GmkSpearData
    {
        public const int GME_GMK_TYPE_SPEAR_U = 0;
        public const int GME_GMK_TYPE_SPEAR_D = 1;
        public const int GME_GMK_TYPE_SPEAR_L = 2;
        public const int GME_GMK_TYPE_SPEAR_R = 3;
        public const int GME_GMK_TYPE_MAX = 4;
        public const int GME_GMK_RECT_DATA_LEFT = 0;
        public const int GME_GMK_RECT_DATA_TOP = 1;
        public const int GME_GMK_RECT_DATA_RIGHT = 2;
        public const int GME_GMK_RECT_DATA_BOTTOM = 3;
        public const int GME_GMK_RECT_DATA_MAX = 4;
    }

    public class GMS_GMK_SPEAR_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK gmk_work;
        public uint obj_type;
        public ushort vect;
        public int stroke_spd;
        public int timer_dec;
        public int timer_set_move;
        public short timer_set_wait_upper;
        public short timer_set_wait_lower;

        public GMS_GMK_SPEAR_WORK()
        {
            this.gmk_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.gmk_work.ene_com.obj_work;
        }
    }

    public class GMS_GMK_SPEARPARTS_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_EFFECT_3DNN_WORK eff_work;
        public uint obj_type;
        public int fulcrum;
        public int connect;
        public AppMain.OBS_OBJECT_WORK parent_connect;
        public uint connect_type;

        public GMS_GMK_SPEARPARTS_WORK()
        {
            this.eff_work = new AppMain.GMS_EFFECT_3DNN_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.eff_work.efct_com.obj_work;
        }
    }

    public enum GME_GAMEDAT_LOAD_PROGRESS
    {
        GMD_GAMEDAT_LOAD_PROGRESS_NOLOAD,
        GMD_GAMEDAT_LOAD_PROGRESS_LOADING,
        GMD_GAMEDAT_LOAD_PROGRESS_LOADFINISH,
        GMD_GAMEDAT_LOAD_PROGRESS_COMPLETE,
        GMD_GAMEDAT_LOAD_PROGRESS_MAX,
    }

    public enum GME_GAMEDAT_ATTRSET
    {
        GMD_GAMEDAT_ATTRSET_AT,
        GMD_GAMEDAT_ATTRSET_DF,
        GMD_GAMEDAT_ATTRSET_DI,
        GMD_GAMEDAT_ATTRSET_MAX,
    }

    public class GMS_GAMEDAT_LOAD_DATA
    {
        public string path;
        public AppMain.GMS_GAMEDAT_LOAD_DATA._alloc_ alloc;
        public AppMain.GMS_GAMEDAT_LOAD_DATA._proc_pre_ proc_pre;
        public AppMain.GMS_GAMEDAT_LOAD_DATA._proc_post_ proc_post;
        public int user_data;

        public GMS_GAMEDAT_LOAD_DATA(
          string _path,
          AppMain.GMS_GAMEDAT_LOAD_DATA._alloc_ _alloc,
          AppMain.GMS_GAMEDAT_LOAD_DATA._proc_pre_ _proc_pre,
          AppMain.GMS_GAMEDAT_LOAD_DATA._proc_post_ _proc_post,
          int udata)
        {
            this.path = _path;
            this.alloc = _alloc;
            this.proc_pre = _proc_pre;
            this.proc_post = _proc_post;
            this.user_data = udata;
        }

        public delegate object _alloc_(string s);

        public delegate void _proc_pre_(AppMain.GMS_GAMEDAT_LOAD_CONTEXT contex);

        public delegate void _proc_post_(AppMain.GMS_GAMEDAT_LOAD_CONTEXT contex);
    }

    public class GMS_GAMEDAT_LOAD_INFO
    {
        public AppMain.GMS_GAMEDAT_LOAD_DATA[] data_tbl;
        public int num;

        public GMS_GAMEDAT_LOAD_INFO(AppMain.GMS_GAMEDAT_LOAD_DATA[] _tbl, int _num)
        {
            this.data_tbl = _tbl;
            this.num = _num;
        }
    }

    public enum GME_GAMEDAT_LOAD_STATE
    {
        GMD_GAMEDAT_LOAD_STATE_LOADING,
        GMD_GAMEDAT_LOAD_STATE_LOADFINISH,
        GMD_GAMEDAT_LOAD_STATE_COMPLETE,
        GMD_GAMEDAT_LOAD_STATE_ERROR,
        GMD_GAMEDAT_LOAD_STATE_MAX,
    }

    public class GMS_GAMEDAT_LOAD_WORK
    {
        public AppMain.GMS_GAMEDAT_LOAD_CONTEXT[] context = AppMain.New<AppMain.GMS_GAMEDAT_LOAD_CONTEXT>(AppMain.GMD_GAMEDAT_LOAD_CONTEXT_MAX);
        public ushort[] char_id = new ushort[1];
        public int context_num;
        public int proc_type;
        public bool load_finish;
        public bool post_finish;
        public ushort stage_id;

        internal void Clear()
        {
            for (int index = 0; index < this.context.Length; ++index)
                this.context[index].Clear();
            this.proc_type = 0;
            this.load_finish = false;
            this.post_finish = false;
            this.stage_id = (ushort)0;
            for (int index = 0; index < this.char_id.Length; ++index)
                this.char_id[index] = (ushort)0;
        }
    }

    public class GMS_BOSS4_DIRECTION
    {
        public int direction;
        public short cur_angle;
        public short orig_angle;
        public int turn_angle;
        public int turn_amount;
        public int turn_spd;
        public int turn_gen_var;
        public int turn_gen_factor;
    }

    public class DMS_STFRL_SONIC_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.OBS_OBJECT_WORK obj_work;
        public short timer;
        public ushort flag;
        public float alpha;
        public float alpha_spd;

        public DMS_STFRL_SONIC_WORK()
        {
            this.obj_work = AppMain.OBS_OBJECT_WORK.Create((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.DMS_STFRL_SONIC_WORK work)
        {
            return work.obj_work;
        }
    }

    public class DMS_STFRL_BOSS_BODY_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_BS_CMN_BMCB_MGR bmcb_mgr = new AppMain.GMS_BS_CMN_BMCB_MGR();
        public readonly AppMain.GMS_BS_CMN_SNM_WORK snm_work = new AppMain.GMS_BS_CMN_SNM_WORK();
        public readonly AppMain.OBS_OBJECT_WORK obj_work;
        public int egg_snm_reg_id;
        public int body_snm_reg_id;
        public uint flag;
        public int timer;

        public DMS_STFRL_BOSS_BODY_WORK()
        {
            this.obj_work = AppMain.OBS_OBJECT_WORK.Create((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(
          AppMain.DMS_STFRL_BOSS_BODY_WORK work)
        {
            return work.obj_work;
        }
    }

    public class GMS_BS_CMN_BMCB_MGR : AppMain.IClearable
    {
        public readonly AppMain.GMS_BS_CMN_BMCB_LINK bmcb_head = new AppMain.GMS_BS_CMN_BMCB_LINK();
        public readonly AppMain.GMS_BS_CMN_BMCB_LINK bmcb_tail = new AppMain.GMS_BS_CMN_BMCB_LINK();

        public void Clear()
        {
            this.bmcb_head.Clear();
            this.bmcb_tail.Clear();
        }
    }

    public class GMS_BS_CMN_SNM_WORK
    {
        public readonly AppMain.GMS_BS_CMN_BMCB_LINK bmcb_link = new AppMain.GMS_BS_CMN_BMCB_LINK();
        public uint[] reserved = new uint[3];
        public ushort reg_node_cnt;
        public ushort reg_node_max;
        public AppMain.GMS_BS_CMN_SNM_NODE_INFO[] node_info_list;
    }

    public class DMS_STFRL_BOSS_EGG_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.OBS_OBJECT_WORK obj_work;
        public uint flag;
        public int timer;

        public DMS_STFRL_BOSS_EGG_WORK()
        {
            this.obj_work = AppMain.OBS_OBJECT_WORK.Create((object)this);
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(
          AppMain.DMS_STFRL_BOSS_EGG_WORK work)
        {
            return work.obj_work;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.obj_work;
        }
    }

    public class DMS_STFRL_RING_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.VecFx32[] pos = new AppMain.VecFx32[6];
        public readonly int[] spd_x = new int[6];
        public readonly int[] spd_y = new int[6];
        public readonly AppMain.OBS_OBJECT_WORK obj_work;
        public AppMain.VecFx32 start_pos;
        public AppMain.VecFx32 scale;
        public AppMain.DMS_STFRL_RING_WORK._proc_efct_ proc_efct;
        public int efct_start_time;
        public int timer;
        public int efct_timer;
        public uint flag;
        public float alpha;
        public float alpha_spd;
        public int disp_ring_pos_no;
        public int disp_efct_pos_no;

        public DMS_STFRL_RING_WORK()
        {
            this.obj_work = AppMain.OBS_OBJECT_WORK.Create((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.DMS_STFRL_RING_WORK work)
        {
            return work.obj_work;
        }

        public delegate void _proc_efct_(AppMain.OBS_OBJECT_WORK work);
    }

    private enum DME_FILESLCT_NEXT_EVT
    {
        DME_FILESLCT_NEXT_EVT_MAINGAME,
        DME_FILESLCT_NEXT_EVT_OPTION,
        DME_FILESLCT_NEXT_EVT_MAINMENU,
        DME_FILESLCT_NEXT_EVT_TITLE,
        DME_FILESLCT_NEXT_EVT_MAX,
    }

    private enum DME_FILESLCT_DATA_TYPE
    {
        DME_FILESLCT_DATA_TYPE_CMN_DATA,
        DME_FILESLCT_DATA_TYPE_LANG_DATA,
        DME_FILESLCT_DATA_TYPE_MAX,
        DME_FILESLCT_DATA_TYPE_NONE,
    }

    private enum DME_FILESLCT_WIN
    {
        DME_FILESLCT_WIN_IS_DEL_FILE,
        DME_FILESLCT_WIN_DELETING_FILE,
        DME_FILESLCT_WIN_NUM,
        DME_FILESLCT_WIN_NONE,
    }

    private enum DME_FILESLCT_SAVE_FILE
    {
        DME_FILESLCT_SAVE_FILE_1,
        DME_FILESLCT_SAVE_FILE_2,
        DME_FILESLCT_SAVE_FILE_3,
        DME_FILESLCT_SAVE_FILE_4,
        DME_FILESLCT_SAVE_FILE_5,
        DME_FILESLCT_SAVE_FILE_6,
        DME_FILESLCT_SAVE_FILE_NUM,
        DME_FILESLCT_SAVE_FILE_NONE,
    }

    private enum DME_FILESLCT_ACT
    {
        ACT_BACK_BG = 0,
        ACT_ARROW_UP = 1,
        ACT_ARROW_DOWN = 2,
        ACT_UP_HIDE_BG = 3,
        ACT_DOWN_HIDE_BG = 4,
        ACT_TEX_DEL = 5,
        ACT_TEX_EXP1 = 6,
        ACT_TEX_EXP2 = 7,
        ACT_FILE_TAB1 = 8,
        ACT_TAB_ALL_SRC = 8,
        ACT_FILE_SCR_BASE = 9,
        ACT_FILE_TAB_NUM = 10, // 0x0000000A
        ACT_FILE_TAB_EMER = 11, // 0x0000000B
        ACT_FILE_SCR = 12, // 0x0000000C
        ACT_FILE_TIME_H_1 = 13, // 0x0000000D
        ACT_FILE_TIME_H_2 = 14, // 0x0000000E
        ACT_FILE_TIME_COLON = 15, // 0x0000000F
        ACT_FILE_TIME_M_1 = 16, // 0x00000010
        ACT_FILE_TIME_M_2 = 17, // 0x00000011
        ACT_FILE_ICON_EMER1 = 18, // 0x00000012
        ACT_FILE_ICON_EMER2 = 19, // 0x00000013
        ACT_FILE_ICON_EMER3 = 20, // 0x00000014
        ACT_FILE_ICON_EMER4 = 21, // 0x00000015
        ACT_FILE_ICON_EMER5 = 22, // 0x00000016
        ACT_FILE_ICON_EMER6 = 23, // 0x00000017
        ACT_FILE_ICON_EMER7 = 24, // 0x00000018
        ACT_FILE_TEX_ALPHA1 = 25, // 0x00000019
        ACT_FILE_TEX_ALPHA2 = 26, // 0x0000001A
        ACT_FILE_TEX_ALPHA3 = 27, // 0x0000001B
        ACT_FILE_TEX_ALPHA4 = 28, // 0x0000001C
        ACT_FILE_TEX_ALPHA5 = 29, // 0x0000001D
        ACT_FILE_TEX_ALPHA6 = 30, // 0x0000001E
        ACT_FILE_TEX_ALPHA7 = 31, // 0x0000001F
        ACT_FILE_TEX_ALPHA8 = 32, // 0x00000020
        ACT_FILE_TEX_ALPHA9 = 33, // 0x00000021
        ACT_FILE_TEX_ALPHA10 = 34, // 0x00000022
        ACT_FILE_TAB3_B = 35, // 0x00000023
        ACT_FILE_TAB3_A = 36, // 0x00000024
        ACT_FILE_TAB3_C = 37, // 0x00000025
        ACT_TAB_ALL_DST = 37, // 0x00000025
        ACT_FILE_TAB4_B = 38, // 0x00000026
        ACT_NONE = 38, // 0x00000026
        ACT_FILE_TAB4_A = 39, // 0x00000027
        ACT_FILE_TAB4_C = 40, // 0x00000028
        ACT_FILE_YEAR1 = 41, // 0x00000029
        ACT_FILE_YEAR2 = 42, // 0x0000002A
        ACT_FILE_YEAR3 = 43, // 0x0000002B
        ACT_FILE_YEAR4 = 44, // 0x0000002C
        ACT_FILE_SLASH1 = 45, // 0x0000002D
        ACT_FILE_MON1 = 46, // 0x0000002E
        ACT_FILE_MON2 = 47, // 0x0000002F
        ACT_FILE_SLASH2 = 48, // 0x00000030
        ACT_FILE_DAY1 = 49, // 0x00000031
        ACT_FILE_DAY2 = 50, // 0x00000032
        ACT_FILE_YEAR1_US = 51, // 0x00000033
        ACT_FILE_YEAR2_US = 52, // 0x00000034
        ACT_FILE_YEAR3_US = 53, // 0x00000035
        ACT_FILE_YEAR4_US = 54, // 0x00000036
        ACT_FILE_SLASH1_US = 55, // 0x00000037
        ACT_FILE_MON1_US = 56, // 0x00000038
        ACT_FILE_MON2_US = 57, // 0x00000039
        ACT_FILE_SLASH2_US = 58, // 0x0000003A
        ACT_FILE_DAY1_US = 59, // 0x0000003B
        ACT_FILE_DAY2_US = 60, // 0x0000003C
        ACT_FILE_YEAR1_EU = 61, // 0x0000003D
        ACT_FILE_YEAR2_EU = 62, // 0x0000003E
        ACT_FILE_YEAR3_EU = 63, // 0x0000003F
        ACT_FILE_YEAR4_EU = 64, // 0x00000040
        ACT_FILE_SLASH1_EU = 65, // 0x00000041
        ACT_FILE_MON1_EU = 66, // 0x00000042
        ACT_FILE_MON2_EU = 67, // 0x00000043
        ACT_FILE_SLASH2_EU = 68, // 0x00000044
        ACT_FILE_DAY1_EU = 69, // 0x00000045
        ACT_FILE_DAY2_EU = 70, // 0x00000046
        ACT_FILE_TEX_NAME = 71, // 0x00000047
        ACT_FILE_TEX_NEWGAME = 72, // 0x00000048
        ACT_WIN_TEX_BACK = 73, // 0x00000049
        ACT_WIN_TEX_MSG = 74, // 0x0000004A
        ACT_FILESLCT_BACK_BTN = 75, // 0x0000004B
        ACT_BTN_CANCEL = 76, // 0x0000004C
        ACT_DEL_BTN = 77, // 0x0000004D
        ACT_OBI_C = 78, // 0x0000004E
        ACT_OBI_L = 79, // 0x0000004F
        ACT_OBI_R = 80, // 0x00000050
        ACT_OBI_R2 = 81, // 0x00000051
        ACT_WIN_LINE = 82, // 0x00000052
        ACT_TEX_WINTITLE = 83, // 0x00000053
        ACT_TEX_YES = 84, // 0x00000054
        ACT_TEX_NO = 85, // 0x00000055
        ACT_TEX_BACK = 86, // 0x00000056
        ACT_TEX_FIX_BACK = 87, // 0x00000057
        ACT_NUM = 88, // 0x00000058
    }

    public class NNS_SUBMOTION
    {
        public uint fType;
        public uint fIPType;
        public int Id;
        public float StartFrame;
        public float EndFrame;
        public float StartKeyFrame;
        public float EndKeyFrame;
        public int nKeyFrame;
        public int KeySize;
        public object pKeyList;

        public short Id0
        {
            get
            {
                return (short)(this.Id & (int)ushort.MaxValue);
            }
            set
            {
                this.Id = this.Id & -65536 | (int)value & (int)ushort.MaxValue;
            }
        }

        public short Id1
        {
            get
            {
                return (short)(this.Id >> 16 & (int)ushort.MaxValue);
            }
            set
            {
                this.Id = this.Id & (int)ushort.MaxValue | (int)value << 16;
            }
        }

        public NNS_SUBMOTION()
        {
        }

        public NNS_SUBMOTION(AppMain.NNS_SUBMOTION subMotion)
        {
            this.fType = subMotion.fType;
            this.fIPType = subMotion.fIPType;
            this.Id = subMotion.Id;
            this.StartFrame = subMotion.StartFrame;
            this.EndFrame = subMotion.EndFrame;
            this.StartKeyFrame = subMotion.StartKeyFrame;
            this.EndKeyFrame = subMotion.EndKeyFrame;
            this.nKeyFrame = subMotion.nKeyFrame;
            this.KeySize = subMotion.KeySize;
            this.pKeyList = subMotion.pKeyList;
        }

        public AppMain.NNS_SUBMOTION Assign(AppMain.NNS_SUBMOTION subMotion)
        {
            if (this != subMotion)
            {
                this.fType = subMotion.fType;
                this.fIPType = subMotion.fIPType;
                this.Id = subMotion.Id;
                this.StartFrame = subMotion.StartFrame;
                this.EndFrame = subMotion.EndFrame;
                this.StartKeyFrame = subMotion.StartKeyFrame;
                this.EndKeyFrame = subMotion.EndKeyFrame;
                this.nKeyFrame = subMotion.nKeyFrame;
                this.KeySize = subMotion.KeySize;
                this.pKeyList = subMotion.pKeyList;
            }
            return this;
        }

        public static AppMain.NNS_SUBMOTION Read(
          BinaryReader reader,
          uint motionType,
          long data0Pos)
        {
            AppMain.NNS_SUBMOTION submotion = new AppMain.NNS_SUBMOTION();
            submotion.fType = reader.ReadUInt32();
            submotion.fIPType = reader.ReadUInt32();
            submotion.Id = reader.ReadInt32();
            submotion.StartFrame = reader.ReadSingle();
            submotion.EndFrame = reader.ReadSingle();
            submotion.StartKeyFrame = reader.ReadSingle();
            submotion.EndKeyFrame = reader.ReadSingle();
            submotion.nKeyFrame = reader.ReadInt32();
            submotion.KeySize = reader.ReadInt32();
            uint num = reader.ReadUInt32();
            if (num != 0U)
            {
                long position = reader.BaseStream.Position;
                reader.BaseStream.Seek(data0Pos + (long)num, SeekOrigin.Begin);
                switch (motionType)
                {
                    case 1:
                        AppMain.NNS_SUBMOTION.ReadNodeMotionKeyFrames(reader, submotion);
                        break;
                    case 2:
                        AppMain.NNS_SUBMOTION.ReadCameraMotionKeyFrames(reader, submotion);
                        break;
                    case 4:
                        AppMain.NNS_SUBMOTION.ReadLightMotionKeyFrames(reader, submotion);
                        break;
                    case 8:
                        AppMain.NNS_SUBMOTION.ReadMorthMotionKeyFrames(reader, submotion);
                        break;
                    case 16:
                        AppMain.NNS_SUBMOTION.ReadMaterialMotionKeyFrames(reader, submotion);
                        break;
                }
                reader.BaseStream.Seek(position, SeekOrigin.Begin);
            }
            return submotion;
        }

        private static void ReadNodeMotionKeyFrames(
          BinaryReader reader,
          AppMain.NNS_SUBMOTION submotion)
        {
            uint num1 = submotion.fType & 3U;
            int fType = (int)submotion.fType;
            uint num2 = submotion.fType & 4294967040U;
            uint num3 = submotion.fIPType & 3703U;
            if (((int)num2 & 1792) != 0)
            {
                if (1U == num1)
                {
                    switch (num3)
                    {
                        case 1:
                        case 16:
                            throw new NotImplementedException("Investigation needed");
                        default:
                            submotion.pKeyList = (object)AppMain.NNS_MOTION_KEY_Class1.Read(reader, submotion.nKeyFrame);
                            break;
                    }
                }
                else
                {
                    if (2U == num1)
                        throw new NotImplementedException("Investigation needed");
                    throw new NotImplementedException("Investigation needed");
                }
            }
            else if (((int)num2 & 30720) != 0)
            {
                if (1U == num1)
                {
                    submotion.pKeyList = (object)AppMain.NNS_MOTION_KEY_Class13.Read(reader, submotion.nKeyFrame);
                }
                else if (2U != num1)
                    throw new NotImplementedException("Investigation needed");
                else if (num3 == 1U)
                    throw new NotImplementedException("Investigation needed");
                else if (num3 == 512)
                {
                    submotion.pKeyList = (object)AppMain.NNS_MOTION_KEY_Class16.Read(reader, submotion.nKeyFrame);
                }
                else
                    submotion.pKeyList = (object)AppMain.NNS_MOTION_KEY_Class14.Read(reader, submotion.nKeyFrame);

                Console.WriteLine("{0}, {1}, {2}", num1, submotion.KeySize, num3);
            }
            else if (((int)num2 & 229376) != 0)
            {
                if (1U == num1)
                {
                    switch (num3)
                    {
                        case 1:
                        case 16:
                            throw new NotImplementedException("Investigation needed");
                        default:
                            submotion.pKeyList = (object)AppMain.NNS_MOTION_KEY_Class1.Read(reader, submotion.nKeyFrame);
                            break;
                    }
                }
                else
                {
                    if (2U == num1)
                        throw new NotImplementedException("Investigation needed");
                    throw new NotImplementedException("Investigation needed");
                }
            }
            else
            {
                if (((int)num2 & 786432) != 0)
                {
                    if (1U == num1)
                        throw new NotImplementedException("Investigation needed");
                    if (2U == num1)
                        throw new NotImplementedException("Investigation needed");
                    throw new NotImplementedException("Investigation needed");
                }
                if (((int)num2 & 1048576) == 0)
                    throw new NotImplementedException("Investigation needed");
                if (1U == num1)
                {
                    submotion.pKeyList = (object)AppMain.NNS_MOTION_KEY_Class11.Read(reader, submotion.nKeyFrame);
                }
                else
                {
                    if (2U != num1)
                        throw new NotImplementedException("Investigation needed");
                    if (submotion.KeySize != 8)
                        throw new NotImplementedException("Investigation needed");
                    submotion.pKeyList = (object)AppMain.NNS_MOTION_KEY_Class16.Read(reader, submotion.nKeyFrame);
                }
            }
        }

        private static void ReadCameraMotionKeyFrames(
          BinaryReader reader,
          AppMain.NNS_SUBMOTION submotion)
        {
            int fType1 = (int)submotion.fType;
            int fType2 = (int)submotion.fType;
            int fType3 = (int)submotion.fType;
            int fIpType = (int)submotion.fIPType;
            throw new NotImplementedException();
        }

        private static void ReadLightMotionKeyFrames(
          BinaryReader reader,
          AppMain.NNS_SUBMOTION submotion)
        {
            int fType1 = (int)submotion.fType;
            int fType2 = (int)submotion.fType;
            int fType3 = (int)submotion.fType;
            int fIpType = (int)submotion.fIPType;
            throw new NotImplementedException();
        }

        private static void ReadMorthMotionKeyFrames(
          BinaryReader reader,
          AppMain.NNS_SUBMOTION submotion)
        {
            int fType1 = (int)submotion.fType;
            int fType2 = (int)submotion.fType;
            int fType3 = (int)submotion.fType;
            int fIpType = (int)submotion.fIPType;
            throw new NotImplementedException();
        }

        private static void ReadMaterialMotionKeyFrames(
          BinaryReader reader,
          AppMain.NNS_SUBMOTION submotion)
        {
            int fType1 = (int)submotion.fType;
            int fType2 = (int)submotion.fType;
            uint num1 = submotion.fType & 4294967040U;
            uint num2 = submotion.fIPType & 3703U;
            if (((int)num1 & 256) != 0)
                throw new NotImplementedException("Investigation needed");
            if (((int)num1 & 3584) != 0)
            {
                switch (num2)
                {
                    case 1:
                    case 16:
                    label_8:
                        throw new NotImplementedException("Investigation needed");
                    default:
                        switch (submotion.KeySize)
                        {
                            case 8:
                                submotion.pKeyList = (object)AppMain.NNS_MOTION_KEY_Class1.Read(reader, submotion.nKeyFrame);
                                return;
                            case 16:
                                submotion.pKeyList = (object)AppMain.NNS_MOTION_KEY_Class5.Read(reader, submotion.nKeyFrame);
                                return;
                            default:
                                goto label_8;
                        }
                }
            }
            else
            {
                if (((int)num1 & 4096) != 0)
                    throw new NotImplementedException("Investigation needed");
                if (((int)num1 & 57344) != 0)
                {
                    switch (num2)
                    {
                        case 1:
                        case 16:
                            throw new NotImplementedException("Investigation needed");
                        default:
                            submotion.pKeyList = (object)AppMain.NNS_MOTION_KEY_Class5.Read(reader, submotion.nKeyFrame);
                            break;
                    }
                }
                else
                {
                    if (((int)num1 & 65536) != 0)
                        throw new NotImplementedException("Investigation needed");
                    if (((int)num1 & 131072) != 0)
                        throw new NotImplementedException("Investigation needed");
                    if (((int)num1 & 1835008) != 0)
                    {
                        switch (num2)
                        {
                            case 1:
                            case 16:
                                throw new NotImplementedException("Investigation needed");
                            default:
                                submotion.pKeyList = (object)AppMain.NNS_MOTION_KEY_Class5.Read(reader, submotion.nKeyFrame);
                                break;
                        }
                    }
                    else
                    {
                        if (((int)num1 & 2097152) != 0)
                            throw new NotImplementedException("Investigation needed");
                        if (((int)num1 & 4194304) != 0)
                        {
                            switch (num2)
                            {
                                case 1:
                                    break;
                                case 16:
                                    break;
                                default:
                                    if (submotion.KeySize != 8)
                                        break;
                                    submotion.pKeyList = (object)AppMain.NNS_MOTION_KEY_Class1.Read(reader, submotion.nKeyFrame);
                                    break;
                            }
                        }
                        else if (((int)num1 & 25165824) != 0)
                        {
                            switch (num2)
                            {
                                case 1:
                                    throw new NotImplementedException("Investigation needed");
                                case 16:
                                    submotion.pKeyList = (object)AppMain.NNS_MOTION_KEY_Class2.Read(reader, submotion.nKeyFrame);
                                    break;
                                default:
                                    submotion.pKeyList = (object)AppMain.NNS_MOTION_KEY_Class1.Read(reader, submotion.nKeyFrame);
                                    break;
                            }
                        }
                        else
                        {
                            if (((int)num1 & 33554432) != 0)
                                throw new NotImplementedException("Investigation needed");
                            throw new NotImplementedException("Investigation needed");
                        }
                    }
                }
            }
        }
    }

    public struct NNS_MOTION_KEY_Class1
    {
        public float Frame;
        public float Value;

        public NNS_MOTION_KEY_Class1(AppMain.NNS_MOTION_KEY_Class1 motionKey)
        {
            this.Frame = motionKey.Frame;
            this.Value = motionKey.Value;
        }

        public AppMain.NNS_MOTION_KEY_Class1 Assign(AppMain.NNS_MOTION_KEY_Class1 motionKey)
        {
            this.Frame = motionKey.Frame;
            this.Value = motionKey.Value;
            return this;
        }

        public static AppMain.NNS_MOTION_KEY_Class1 Read(BinaryReader reader)
        {
            return new AppMain.NNS_MOTION_KEY_Class1()
            {
                Frame = reader.ReadSingle(),
                Value = reader.ReadSingle()
            };
        }

        public static AppMain.NNS_MOTION_KEY_Class1[] Read(BinaryReader reader, int count)
        {
            AppMain.NNS_MOTION_KEY_Class1[] nnsMotionKeyClass1Array = new AppMain.NNS_MOTION_KEY_Class1[count];
            for (int index = 0; index < count; ++index)
                nnsMotionKeyClass1Array[index] = AppMain.NNS_MOTION_KEY_Class1.Read(reader);
            return nnsMotionKeyClass1Array;
        }
    }

    public struct NNS_MOTION_KEY_Class14
    {
        public short Frame;
        public short Value;

        public static AppMain.NNS_MOTION_KEY_Class14 Read(BinaryReader reader)
        {
            return new AppMain.NNS_MOTION_KEY_Class14()
            {
                Frame = reader.ReadInt16(),
                Value = reader.ReadInt16()
            };
        }

        public static AppMain.NNS_MOTION_KEY_Class14[] Read(BinaryReader reader, int count)
        {
            AppMain.NNS_MOTION_KEY_Class14[] motionKeyClass14Array = new AppMain.NNS_MOTION_KEY_Class14[count];
            for (int index = 0; index < count; ++index)
                motionKeyClass14Array[index] = AppMain.NNS_MOTION_KEY_Class14.Read(reader);
            return motionKeyClass14Array;
        }
    }

    public class NNS_MOTION_KEY_Class11
    {
        public float Frame;
        public int Value;

        public NNS_MOTION_KEY_Class11()
        {
        }

        public NNS_MOTION_KEY_Class11(AppMain.NNS_MOTION_KEY_Class11 motionKey)
        {
            this.Frame = motionKey.Frame;
            this.Value = motionKey.Value;
        }

        public AppMain.NNS_MOTION_KEY_Class11 Assign(AppMain.NNS_MOTION_KEY_Class11 motionKey)
        {
            if (this != motionKey)
            {
                this.Frame = motionKey.Frame;
                this.Value = motionKey.Value;
            }
            return this;
        }

        public static AppMain.NNS_MOTION_KEY_Class11 Read(BinaryReader reader)
        {
            return new AppMain.NNS_MOTION_KEY_Class11()
            {
                Frame = reader.ReadSingle(),
                Value = reader.ReadInt32()
            };
        }

        public static AppMain.NNS_MOTION_KEY_Class11[] Read(BinaryReader reader, int count)
        {
            AppMain.NNS_MOTION_KEY_Class11[] motionKeyClass11Array = new AppMain.NNS_MOTION_KEY_Class11[count];
            for (int index = 0; index < count; ++index)
                motionKeyClass11Array[index] = AppMain.NNS_MOTION_KEY_Class11.Read(reader);
            return motionKeyClass11Array;
        }
    }

    public class NNS_MOTION_KEY_Class16
    {
        public short Frame;
        public AppMain.NNS_ROTATE_A16 Value;

        public NNS_MOTION_KEY_Class16()
        {
        }

        public NNS_MOTION_KEY_Class16(AppMain.NNS_MOTION_KEY_Class16 motionKey)
        {
            this.Frame = motionKey.Frame;
            this.Value = motionKey.Value;
        }

        public AppMain.NNS_MOTION_KEY_Class16 Assign(AppMain.NNS_MOTION_KEY_Class16 motionKey)
        {
            if (this != motionKey)
            {
                this.Frame = motionKey.Frame;
                this.Value = motionKey.Value;
            }
            return this;
        }

        public static AppMain.NNS_MOTION_KEY_Class16 Read(BinaryReader reader)
        {
            return new AppMain.NNS_MOTION_KEY_Class16()
            {
                Frame = reader.ReadInt16(),
                Value = {
                  x = reader.ReadInt16(),
                  y = reader.ReadInt16(),
                  z = reader.ReadInt16()
                }
            };
        }

        public static AppMain.NNS_MOTION_KEY_Class16[] Read(BinaryReader reader, int count)
        {
            AppMain.NNS_MOTION_KEY_Class16[] motionKeyClass16Array = new AppMain.NNS_MOTION_KEY_Class16[count];
            for (int index = 0; index < count; ++index)
                motionKeyClass16Array[index] = AppMain.NNS_MOTION_KEY_Class16.Read(reader);
            return motionKeyClass16Array;
        }
    }

    public class NNS_MOTION_KEY_Class5
    {
        public readonly AppMain.NNS_VECTOR Value = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public float Frame;

        public NNS_MOTION_KEY_Class5()
        {
        }

        public NNS_MOTION_KEY_Class5(AppMain.NNS_MOTION_KEY_Class5 motionKey)
        {
            this.Frame = motionKey.Frame;
            this.Value.Assign(motionKey.Value);
        }

        public AppMain.NNS_MOTION_KEY_Class5 Assign(AppMain.NNS_MOTION_KEY_Class5 motionKey)
        {
            if (this != motionKey)
            {
                this.Frame = motionKey.Frame;
                this.Value.Assign(motionKey.Value);
            }
            return this;
        }

        public static AppMain.NNS_MOTION_KEY_Class5 Read(BinaryReader reader)
        {
            AppMain.NNS_MOTION_KEY_Class5 nnsMotionKeyClass5 = new AppMain.NNS_MOTION_KEY_Class5();
            nnsMotionKeyClass5.Frame = reader.ReadSingle();
            nnsMotionKeyClass5.Value.Assign(AppMain.NNS_VECTOR.Read(reader));
            return nnsMotionKeyClass5;
        }

        public static AppMain.NNS_MOTION_KEY_Class5[] Read(BinaryReader reader, int count)
        {
            AppMain.NNS_MOTION_KEY_Class5[] nnsMotionKeyClass5Array = new AppMain.NNS_MOTION_KEY_Class5[count];
            for (int index = 0; index < count; ++index)
                nnsMotionKeyClass5Array[index] = AppMain.NNS_MOTION_KEY_Class5.Read(reader);
            return nnsMotionKeyClass5Array;
        }
    }

    public class NNS_MOTION_KEY_Class2
    {
        public readonly AppMain.NNS_MOTION_BEZIER_HANDLE Bhandle = new AppMain.NNS_MOTION_BEZIER_HANDLE();
        public float Frame;
        public float Value;

        public NNS_MOTION_KEY_Class2()
        {
        }

        public NNS_MOTION_KEY_Class2(AppMain.NNS_MOTION_KEY_Class2 motionKey)
        {
            this.Frame = motionKey.Frame;
            this.Value = motionKey.Value;
            this.Bhandle.Assign(motionKey.Bhandle);
        }

        public AppMain.NNS_MOTION_KEY_Class2 Assign(AppMain.NNS_MOTION_KEY_Class2 motionKey)
        {
            if (this != motionKey)
            {
                this.Frame = motionKey.Frame;
                this.Value = motionKey.Value;
                this.Bhandle.Assign(motionKey.Bhandle);
            }
            return this;
        }

        public static AppMain.NNS_MOTION_KEY_Class2 Read(BinaryReader reader)
        {
            AppMain.NNS_MOTION_KEY_Class2 nnsMotionKeyClass2 = new AppMain.NNS_MOTION_KEY_Class2();
            nnsMotionKeyClass2.Frame = reader.ReadSingle();
            nnsMotionKeyClass2.Value = reader.ReadSingle();
            nnsMotionKeyClass2.Bhandle.Assign(AppMain.NNS_MOTION_BEZIER_HANDLE.Read(reader));
            return nnsMotionKeyClass2;
        }

        public static AppMain.NNS_MOTION_KEY_Class2[] Read(BinaryReader reader, int count)
        {
            AppMain.NNS_MOTION_KEY_Class2[] nnsMotionKeyClass2Array = new AppMain.NNS_MOTION_KEY_Class2[count];
            for (int index = 0; index < count; ++index)
                nnsMotionKeyClass2Array[index] = AppMain.NNS_MOTION_KEY_Class2.Read(reader);
            return nnsMotionKeyClass2Array;
        }
    }

    public class NNS_MOTION_BEZIER_HANDLE
    {
        public readonly AppMain.NNS_VECTOR2D In = new AppMain.NNS_VECTOR2D();
        public readonly AppMain.NNS_VECTOR2D Out = new AppMain.NNS_VECTOR2D();

        public NNS_MOTION_BEZIER_HANDLE()
        {
        }

        public NNS_MOTION_BEZIER_HANDLE(AppMain.NNS_MOTION_BEZIER_HANDLE bezierHandle)
        {
            this.In.Assign(bezierHandle.In);
            this.Out.Assign(bezierHandle.Out);
        }

        public AppMain.NNS_MOTION_BEZIER_HANDLE Assign(
          AppMain.NNS_MOTION_BEZIER_HANDLE bezierHandle)
        {
            if (this != bezierHandle)
            {
                this.In.Assign(bezierHandle.In);
                this.Out.Assign(bezierHandle.Out);
            }
            return this;
        }

        public static AppMain.NNS_MOTION_BEZIER_HANDLE Read(BinaryReader reader)
        {
            AppMain.NNS_MOTION_BEZIER_HANDLE motionBezierHandle = new AppMain.NNS_MOTION_BEZIER_HANDLE();
            motionBezierHandle.In.Assign(AppMain.NNS_VECTOR2D.Read(reader));
            motionBezierHandle.Out.Assign(AppMain.NNS_VECTOR2D.Read(reader));
            return motionBezierHandle;
        }
    }

    public class NNS_MOTION_SI_SPLINE_HANDLE
    {
        public float In;
        public float Out;

        public NNS_MOTION_SI_SPLINE_HANDLE()
        {
        }

        public NNS_MOTION_SI_SPLINE_HANDLE(AppMain.NNS_MOTION_SI_SPLINE_HANDLE splineHandle)
        {
            this.In = splineHandle.In;
            this.Out = splineHandle.Out;
        }

        public AppMain.NNS_MOTION_SI_SPLINE_HANDLE Assign(
          AppMain.NNS_MOTION_SI_SPLINE_HANDLE splineHandle)
        {
            if (this != splineHandle)
            {
                this.In = splineHandle.In;
                this.Out = splineHandle.Out;
            }
            return this;
        }

        public static AppMain.NNS_MOTION_SI_SPLINE_HANDLE Read(BinaryReader reader)
        {
            return new AppMain.NNS_MOTION_SI_SPLINE_HANDLE()
            {
                In = reader.ReadSingle(),
                Out = reader.ReadSingle()
            };
        }
    }

    public class NNS_MOTION_KEY_Class3
    {
        public readonly AppMain.NNS_MOTION_SI_SPLINE_HANDLE Shandle = new AppMain.NNS_MOTION_SI_SPLINE_HANDLE();
        public float Frame;
        public float Value;

        public NNS_MOTION_KEY_Class3()
        {
        }

        public NNS_MOTION_KEY_Class3(AppMain.NNS_MOTION_KEY_Class3 motionKey)
        {
            this.Frame = motionKey.Frame;
            this.Value = motionKey.Value;
            this.Shandle.Assign(motionKey.Shandle);
        }

        public AppMain.NNS_MOTION_KEY_Class3 Assign(AppMain.NNS_MOTION_KEY_Class3 motionKey)
        {
            if (this != motionKey)
            {
                this.Frame = motionKey.Frame;
                this.Value = motionKey.Value;
                this.Shandle.Assign(motionKey.Shandle);
            }
            return this;
        }

        public static AppMain.NNS_MOTION_KEY_Class3 Read(BinaryReader reader)
        {
            AppMain.NNS_MOTION_KEY_Class3 nnsMotionKeyClass3 = new AppMain.NNS_MOTION_KEY_Class3();
            nnsMotionKeyClass3.Frame = reader.ReadSingle();
            nnsMotionKeyClass3.Value = reader.ReadSingle();
            nnsMotionKeyClass3.Shandle.Assign(AppMain.NNS_MOTION_SI_SPLINE_HANDLE.Read(reader));
            return nnsMotionKeyClass3;
        }
    }

    public class NNS_MOTION_KEY_Class4
    {
        public float Frame;
        public AppMain.NNS_TEXCOORD Value;

        public NNS_MOTION_KEY_Class4()
        {
        }

        public NNS_MOTION_KEY_Class4(AppMain.NNS_MOTION_KEY_Class4 motionKey)
        {
            this.Frame = motionKey.Frame;
            this.Value = motionKey.Value;
        }

        public AppMain.NNS_MOTION_KEY_Class4 Assign(AppMain.NNS_MOTION_KEY_Class4 motionKey)
        {
            if (this != motionKey)
            {
                this.Frame = motionKey.Frame;
                this.Value = motionKey.Value;
            }
            return this;
        }
    }

    public class NNS_MOTION_KEY_Class6
    {
        public readonly AppMain.NNS_RGB Value = new AppMain.NNS_RGB();
        public float Frame;

        public NNS_MOTION_KEY_Class6()
        {
        }

        public NNS_MOTION_KEY_Class6(AppMain.NNS_MOTION_KEY_Class6 motionKey)
        {
            this.Frame = motionKey.Frame;
            this.Value.Assign(motionKey.Value);
        }

        public AppMain.NNS_MOTION_KEY_Class6 Assign(AppMain.NNS_MOTION_KEY_Class6 motionKey)
        {
            if (this != motionKey)
            {
                this.Frame = motionKey.Frame;
                this.Value.Assign(motionKey.Value);
            }
            return this;
        }
    }

    public class NNS_MOTION_KEY_Class7
    {
        public float Frame;
        public AppMain.NNS_QUATERNION Value;

        public NNS_MOTION_KEY_Class7()
        {
        }

        public NNS_MOTION_KEY_Class7(AppMain.NNS_MOTION_KEY_Class7 motionKey)
        {
            this.Frame = motionKey.Frame;
            this.Value = motionKey.Value;
        }

        public AppMain.NNS_MOTION_KEY_Class7 Assign(AppMain.NNS_MOTION_KEY_Class7 motionKey)
        {
            if (this != motionKey)
            {
                this.Frame = motionKey.Frame;
                this.Value = motionKey.Value;
            }
            return this;
        }
    }

    public class NNS_MOTION_KEY_Class8
    {
        public float Frame;
        public int Value;

        public NNS_MOTION_KEY_Class8()
        {
        }

        public NNS_MOTION_KEY_Class8(AppMain.NNS_MOTION_KEY_Class8 motionKey)
        {
            this.Frame = motionKey.Frame;
            this.Value = motionKey.Value;
        }

        public AppMain.NNS_MOTION_KEY_Class8 Assign(AppMain.NNS_MOTION_KEY_Class8 motionKey)
        {
            if (this != motionKey)
            {
                this.Frame = motionKey.Frame;
                this.Value = motionKey.Value;
            }
            return this;
        }
    }

    public class NNS_MOTION_KEY_Class9
    {
        public readonly AppMain.NNS_MOTION_BEZIER_HANDLE Bhandle = new AppMain.NNS_MOTION_BEZIER_HANDLE();
        public float Frame;
        public int Value;

        public NNS_MOTION_KEY_Class9()
        {
        }

        public NNS_MOTION_KEY_Class9(AppMain.NNS_MOTION_KEY_Class9 motionKey)
        {
            this.Frame = motionKey.Frame;
            this.Value = motionKey.Value;
            this.Bhandle.Assign(motionKey.Bhandle);
        }

        public AppMain.NNS_MOTION_KEY_Class9 Assign(AppMain.NNS_MOTION_KEY_Class9 motionKey)
        {
            if (this != motionKey)
            {
                this.Frame = motionKey.Frame;
                this.Value = motionKey.Value;
                this.Bhandle.Assign(motionKey.Bhandle);
            }
            return this;
        }
    }

    public class NNS_MOTION_KEY_Class10
    {
        public readonly AppMain.NNS_MOTION_SI_SPLINE_HANDLE Shandle = new AppMain.NNS_MOTION_SI_SPLINE_HANDLE();
        public float Frame;
        public int Value;

        public NNS_MOTION_KEY_Class10()
        {
        }

        public NNS_MOTION_KEY_Class10(AppMain.NNS_MOTION_KEY_Class10 motionKey)
        {
            this.Frame = motionKey.Frame;
            this.Value = motionKey.Value;
            this.Shandle.Assign(motionKey.Shandle);
        }

        public AppMain.NNS_MOTION_KEY_Class10 Assign(AppMain.NNS_MOTION_KEY_Class10 motionKey)
        {
            if (this != motionKey)
            {
                this.Frame = motionKey.Frame;
                this.Value = motionKey.Value;
                this.Shandle.Assign(motionKey.Shandle);
            }
            return this;
        }
    }

    public class NNS_MOTION_KEY_Class12
    {
        public float Frame;
        public uint Value;

        public NNS_MOTION_KEY_Class12()
        {
        }

        public NNS_MOTION_KEY_Class12(AppMain.NNS_MOTION_KEY_Class12 motionKey)
        {
            this.Frame = motionKey.Frame;
            this.Value = motionKey.Value;
        }

        public AppMain.NNS_MOTION_KEY_Class12 Assign(AppMain.NNS_MOTION_KEY_Class12 motionKey)
        {
            if (this != motionKey)
            {
                this.Frame = motionKey.Frame;
                this.Value = motionKey.Value;
            }
            return this;
        }
    }

    public class NNS_MOTION_KEY_Class13
    {
        public float Frame;
        public AppMain.NNS_ROTATE_A32 Value;

        public NNS_MOTION_KEY_Class13()
        {
        }

        public NNS_MOTION_KEY_Class13(AppMain.NNS_MOTION_KEY_Class13 motionKey)
        {
            this.Frame = motionKey.Frame;
            this.Value = motionKey.Value;
        }

        public AppMain.NNS_MOTION_KEY_Class13 Assign(AppMain.NNS_MOTION_KEY_Class13 motionKey)
        {
            if (this != motionKey)
            {
                this.Frame = motionKey.Frame;
                this.Value = motionKey.Value;
            }
            return this;
        }

        public static AppMain.NNS_MOTION_KEY_Class13 Read(BinaryReader reader)
        {
            AppMain.NNS_MOTION_KEY_Class13 motion = new AppMain.NNS_MOTION_KEY_Class13();
            motion.Frame = reader.ReadSingle();
            motion.Value = new NNS_ROTATE_A32
            {
                x = reader.ReadInt32(),
                y = reader.ReadInt32(),
                z = reader.ReadInt32()
            };

            return motion;
        }

        public static AppMain.NNS_MOTION_KEY_Class13[] Read(BinaryReader reader, int count)
        {
            AppMain.NNS_MOTION_KEY_Class13[] motionArray = new AppMain.NNS_MOTION_KEY_Class13[count];
            for (int index = 0; index < count; ++index)
                motionArray[index] = AppMain.NNS_MOTION_KEY_Class13.Read(reader);
            return motionArray;
        }
    }

    public class NNS_MOTION_KEY_Class15
    {
        public readonly AppMain.NNS_MOTION_SI_SPLINE_HANDLE Shandle = new AppMain.NNS_MOTION_SI_SPLINE_HANDLE();
        public short Frame;
        public short Value;

        public NNS_MOTION_KEY_Class15()
        {
        }

        public NNS_MOTION_KEY_Class15(AppMain.NNS_MOTION_KEY_Class15 motionKey)
        {
            this.Frame = motionKey.Frame;
            this.Value = motionKey.Value;
            this.Shandle.Assign(motionKey.Shandle);
        }

        public AppMain.NNS_MOTION_KEY_Class15 Assign(AppMain.NNS_MOTION_KEY_Class15 motionKey)
        {
            if (this != motionKey)
            {
                this.Frame = motionKey.Frame;
                this.Value = motionKey.Value;
                this.Shandle.Assign(motionKey.Shandle);
            }
            return this;
        }
    }

    public class NNS_LIGHT_STANDARD_GL
    {
        public readonly AppMain.NNS_VECTOR4D Position = new AppMain.NNS_VECTOR4D();
        public readonly AppMain.NNS_VECTOR SpotDirection = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public uint User;
        public AppMain.NNS_RGBA Ambient;
        public AppMain.NNS_RGBA Diffuse;
        public AppMain.NNS_RGBA Specular;
        public float SpotExponent;
        public float SpotCutoff;
        public float ConstantAttenuation;
        public float LinearAttenuation;
        public float QuadraticAttenuation;
    }

    public struct NNS_LIGHT_PARALLEL
    {
        private AppMain.NNS_LIGHT_TARGET_DIRECTIONAL data_;

        public NNS_LIGHT_PARALLEL(AppMain.NNS_LIGHT_TARGET_DIRECTIONAL data)
        {
            this.data_ = data;
        }

        public uint User
        {
            get
            {
                return this.data_.User;
            }
            set
            {
                this.data_.User = value;
            }
        }

        public AppMain.NNS_RGBA Color
        {
            get
            {
                return this.data_.Color;
            }
            set
            {
                this.data_.Color = value;
            }
        }

        public float Intensity
        {
            get
            {
                return this.data_.Intensity;
            }
            set
            {
                this.data_.Intensity = value;
            }
        }

        public AppMain.NNS_VECTOR Direction
        {
            get
            {
                return this.data_.Position;
            }
            set
            {
                this.data_.Position.Assign(value);
            }
        }
    }

    public class NNS_LIGHT_TARGET_DIRECTIONAL
    {
        public readonly AppMain.NNS_VECTOR Position = new AppMain.NNS_VECTOR();
        public readonly AppMain.NNS_VECTOR Target = new AppMain.NNS_VECTOR();
        public uint User;
        public AppMain.NNS_RGBA Color;
        public float Intensity;
        public float InnerRange;
        public float OuterRange;
        public float FallOffStart;
        public float FallOffEnd;
        public float dummy;

        public static explicit operator AppMain.NNS_LIGHT_PARALLEL(
          AppMain.NNS_LIGHT_TARGET_DIRECTIONAL light)
        {
            return new AppMain.NNS_LIGHT_PARALLEL(light);
        }

        public static explicit operator AppMain.NNS_LIGHT_POINT(
          AppMain.NNS_LIGHT_TARGET_DIRECTIONAL light)
        {
            return new AppMain.NNS_LIGHT_POINT(light);
        }

        public static explicit operator AppMain.NNS_LIGHT_TARGET_SPOT(
          AppMain.NNS_LIGHT_TARGET_DIRECTIONAL light)
        {
            return new AppMain.NNS_LIGHT_TARGET_SPOT(light);
        }

        public static explicit operator AppMain.NNS_LIGHT_ROTATION_SPOT(
          AppMain.NNS_LIGHT_TARGET_DIRECTIONAL light)
        {
            return new AppMain.NNS_LIGHT_ROTATION_SPOT(light);
        }
    }

    public struct NNS_LIGHT_POINT
    {
        private AppMain.NNS_LIGHT_TARGET_DIRECTIONAL data_;

        public NNS_LIGHT_POINT(AppMain.NNS_LIGHT_TARGET_DIRECTIONAL data)
        {
            this.data_ = data;
        }

        public uint User
        {
            get
            {
                return this.data_.User;
            }
            set
            {
                this.data_.User = value;
            }
        }

        public AppMain.NNS_RGBA Color
        {
            get
            {
                return this.data_.Color;
            }
            set
            {
                this.data_.Color = value;
            }
        }

        public float Intensity
        {
            get
            {
                return this.data_.Intensity;
            }
            set
            {
                this.data_.Intensity = value;
            }
        }

        public AppMain.NNS_VECTOR Position
        {
            get
            {
                return this.data_.Position;
            }
            set
            {
                this.data_.Position.Assign(value);
            }
        }

        public float FallOffStart
        {
            get
            {
                return this.data_.Target.x;
            }
            set
            {
                this.data_.Target.x = value;
            }
        }

        public float FallOffEnd
        {
            get
            {
                return this.data_.Target.y;
            }
            set
            {
                this.data_.Target.y = value;
            }
        }
    }

    public struct NNS_LIGHT_TARGET_SPOT
    {
        private AppMain.NNS_LIGHT_TARGET_DIRECTIONAL data_;

        public NNS_LIGHT_TARGET_SPOT(AppMain.NNS_LIGHT_TARGET_DIRECTIONAL data)
        {
            this.data_ = data;
        }

        public uint User
        {
            get
            {
                return this.data_.User;
            }
            set
            {
                this.data_.User = value;
            }
        }

        public AppMain.NNS_RGBA Color
        {
            get
            {
                return this.data_.Color;
            }
            set
            {
                this.data_.Color = value;
            }
        }

        public float Intensity
        {
            get
            {
                return this.data_.Intensity;
            }
            set
            {
                this.data_.Intensity = value;
            }
        }

        public AppMain.NNS_VECTOR Position
        {
            get
            {
                return this.data_.Position;
            }
            set
            {
                this.data_.Position.Assign(value);
            }
        }

        public AppMain.NNS_VECTOR Target
        {
            get
            {
                return this.data_.Target;
            }
            set
            {
                this.data_.Target.Assign(value);
            }
        }

        public int InnerAngle
        {
            get
            {
                return MppBitConverter.SingleToInt32(this.data_.InnerRange);
            }
            set
            {
                this.data_.InnerRange = MppBitConverter.Int32ToSingle(value);
            }
        }

        public int OuterAngle
        {
            get
            {
                return MppBitConverter.SingleToInt32(this.data_.OuterRange);
            }
            set
            {
                this.data_.OuterRange = MppBitConverter.Int32ToSingle(value);
            }
        }

        public float FallOffStart
        {
            get
            {
                return this.data_.FallOffStart;
            }
            set
            {
                this.data_.FallOffStart = value;
            }
        }

        public float FallOffEnd
        {
            get
            {
                return this.data_.FallOffEnd;
            }
            set
            {
                this.data_.FallOffEnd = value;
            }
        }
    }

    public struct NNS_LIGHT_ROTATION_SPOT
    {
        private AppMain.NNS_LIGHT_TARGET_DIRECTIONAL data_;

        public NNS_LIGHT_ROTATION_SPOT(AppMain.NNS_LIGHT_TARGET_DIRECTIONAL data)
        {
            this.data_ = data;
        }

        public uint User
        {
            get
            {
                return this.data_.User;
            }
            set
            {
                this.data_.User = value;
            }
        }

        public AppMain.NNS_RGBA Color
        {
            get
            {
                return this.data_.Color;
            }
            set
            {
                this.data_.Color = value;
            }
        }

        public float Intensity
        {
            get
            {
                return this.data_.Intensity;
            }
            set
            {
                this.data_.Intensity = value;
            }
        }

        public AppMain.NNS_VECTOR Position
        {
            get
            {
                return this.data_.Position;
            }
            set
            {
                this.data_.Position.Assign(value);
            }
        }

        public int RotType
        {
            get
            {
                return MppBitConverter.SingleToInt32(this.data_.Target.x);
            }
            set
            {
                this.data_.Target.x = MppBitConverter.Int32ToSingle(value);
            }
        }

        public AppMain.NNS_ROTATE_A32 Rotation
        {
            get
            {
                return new AppMain.NNS_ROTATE_A32()
                {
                    x = MppBitConverter.SingleToInt32(this.data_.Target.y),
                    y = MppBitConverter.SingleToInt32(this.data_.Target.z),
                    z = MppBitConverter.SingleToInt32(this.data_.InnerRange)
                };
            }
            set
            {
                this.data_.Target.y = MppBitConverter.Int32ToSingle(value.x);
                this.data_.Target.z = MppBitConverter.Int32ToSingle(value.y);
                this.data_.InnerRange = MppBitConverter.Int32ToSingle(value.z);
            }
        }

        public int InnerAngle
        {
            get
            {
                return MppBitConverter.SingleToInt32(this.data_.OuterRange);
            }
            set
            {
                this.data_.OuterRange = MppBitConverter.Int32ToSingle(value);
            }
        }

        public int OuterAngle
        {
            get
            {
                return MppBitConverter.SingleToInt32(this.data_.FallOffStart);
            }
            set
            {
                this.data_.FallOffStart = MppBitConverter.Int32ToSingle(value);
            }
        }

        public float FallOffStart
        {
            get
            {
                return this.data_.FallOffEnd;
            }
            set
            {
                this.data_.FallOffEnd = value;
            }
        }

        public float FallOffEnd
        {
            get
            {
                return this.data_.dummy;
            }
            set
            {
                this.data_.dummy = value;
            }
        }
    }

    public struct NNS_LIGHT_ROTATION_DIRECTIONAL
    {
        private AppMain.NNS_LIGHT_TARGET_DIRECTIONAL data_;

        public NNS_LIGHT_ROTATION_DIRECTIONAL(AppMain.NNS_LIGHT_TARGET_DIRECTIONAL data)
        {
            this.data_ = data;
        }

        public uint User
        {
            get
            {
                return this.data_.User;
            }
            set
            {
                this.data_.User = value;
            }
        }

        public AppMain.NNS_RGBA Color
        {
            get
            {
                return this.data_.Color;
            }
            set
            {
                this.data_.Color = value;
            }
        }

        public float Intensity
        {
            get
            {
                return this.data_.Intensity;
            }
            set
            {
                this.data_.Intensity = value;
            }
        }

        public AppMain.NNS_VECTOR Position
        {
            get
            {
                return this.data_.Position;
            }
            set
            {
                this.data_.Position.Assign(value);
            }
        }

        public int RotType
        {
            get
            {
                return MppBitConverter.SingleToInt32(this.data_.Target.x);
            }
            set
            {
                this.data_.Target.x = MppBitConverter.Int32ToSingle(value);
            }
        }

        public AppMain.NNS_ROTATE_A32 Rotation
        {
            get
            {
                return new AppMain.NNS_ROTATE_A32()
                {
                    x = MppBitConverter.SingleToInt32(this.data_.Target.y),
                    y = MppBitConverter.SingleToInt32(this.data_.Target.z),
                    z = MppBitConverter.SingleToInt32(this.data_.InnerRange)
                };
            }
            set
            {
                this.data_.Target.y = MppBitConverter.Int32ToSingle(value.x);
                this.data_.Target.z = MppBitConverter.Int32ToSingle(value.y);
                this.data_.InnerRange = MppBitConverter.Int32ToSingle(value.z);
            }
        }

        public float InnerRange
        {
            get
            {
                return this.data_.OuterRange;
            }
            set
            {
                this.data_.OuterRange = value;
            }
        }

        public float OuterRange
        {
            get
            {
                return this.data_.FallOffStart;
            }
            set
            {
                this.data_.FallOffStart = value;
            }
        }

        public float FallOffStart
        {
            get
            {
                return this.data_.FallOffEnd;
            }
            set
            {
                this.data_.FallOffEnd = value;
            }
        }

        public float FallOffEnd
        {
            get
            {
                return this.data_.dummy;
            }
            set
            {
                this.data_.dummy = value;
            }
        }
    }

    public class NNS_LIGHTPTR
    {
        public uint fType;
        public object pLight;

        public NNS_LIGHTPTR()
        {
        }

        public NNS_LIGHTPTR(AppMain.NNS_LIGHTPTR lightPtr)
        {
            this.fType = lightPtr.fType;
            this.pLight = lightPtr.pLight;
        }

        public AppMain.NNS_LIGHTPTR Assign(AppMain.NNS_LIGHTPTR lightPtr)
        {
            this.fType = lightPtr.fType;
            this.pLight = lightPtr.pLight;
            return this;
        }
    }

    public class AMS_TIMER
    {
        public ulong count_start;
        public ulong count_end;
        public int delete_flag;
        public float count_freq;
        public float frame;
        public float msec;
        public float usec;
    }

    public class AMS_ALARM
    {
        public int delete_flag;
        public uint alarm_id;
        public uint timer_id;
        public AppMain.AMS_TIMER timer;
        public ulong count_end;
        public ulong count_interval;
    }

    public delegate void pfnGMS_GMK_TRUCK_WORK(
      AppMain.GMS_GMK_TRUCK_WORK a,
      AppMain.GMS_PLAYER_WORK b);

    public delegate void GMS_GMK_CAM_SCR_LIMIT_SETTING_func(AppMain.GMS_GMK_CAM_SCR_LIMIT_WORK p);

    public class GMS_GMK_CAM_SCR_LIMIT_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_GMK_CAM_SCR_LIMIT_SETTING limit_setting = new AppMain.GMS_GMK_CAM_SCR_LIMIT_SETTING();
        public readonly AppMain.GMS_ENEMY_COM_WORK gmk_work;

        public GMS_GMK_CAM_SCR_LIMIT_WORK()
        {
            this.gmk_work = new AppMain.GMS_ENEMY_COM_WORK((object)this);
        }

        public static explicit operator AppMain.GMS_ENEMY_COM_WORK(
          AppMain.GMS_GMK_CAM_SCR_LIMIT_WORK work)
        {
            return work.gmk_work;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.gmk_work.obj_work;
        }
    }

    public class GMS_GMK_CAM_SCR_LIMIT_SETTING
    {
        public int[] limit_rect = new int[4];
        public uint flag;
        public AppMain.GMS_GMK_CAM_SCR_LIMIT_SETTING_func func;
    }

    public class GMS_FIX_PART_VIRTUAL_PAD
    {
        public AppMain.GMS_COCKPIT_2D_WORK[] sub_parts = new AppMain.GMS_COCKPIT_2D_WORK[4];
        public float[] pause_icon_frame = new float[2];
        public AppMain.GMS_FIX_PART_WORK part_work;

        public GMS_FIX_PART_VIRTUAL_PAD()
        {
            this.part_work = new AppMain.GMS_FIX_PART_WORK((object)this);
        }

        public static explicit operator AppMain.GMS_FIX_PART_WORK(
          AppMain.GMS_FIX_PART_VIRTUAL_PAD p)
        {
            return p.part_work;
        }

        public void Clear()
        {
            this.part_work.Clear();
            this.pause_icon_frame[0] = this.pause_icon_frame[1] = 0.0f;
            Array.Clear((Array)this.sub_parts, 0, this.sub_parts.Length);
        }
    }

    public class GMS_FIX_PART_SCORE
    {
        public AppMain.GMS_COCKPIT_2D_WORK[] sub_parts = new AppMain.GMS_COCKPIT_2D_WORK[10];
        public int[] digit_list = new int[9];
        public readonly AppMain.GMS_FIX_PART_WORK part_work;

        public GMS_FIX_PART_SCORE()
        {
            this.part_work = new AppMain.GMS_FIX_PART_WORK((object)this);
        }

        public void Clear()
        {
            this.part_work.Clear();
            Array.Clear((Array)this.sub_parts, 0, this.sub_parts.Length);
            Array.Clear((Array)this.digit_list, 0, this.digit_list.Length);
        }

        public static explicit operator AppMain.GMS_FIX_PART_WORK(
          AppMain.GMS_FIX_PART_SCORE pScore)
        {
            return pScore.part_work;
        }
    }

    public class GMS_FIX_PART_TIMER
    {
        public AppMain.GMS_COCKPIT_2D_WORK[] sub_parts = new AppMain.GMS_COCKPIT_2D_WORK[8];
        public int[] digit_list = new int[5];
        public ushort[] reserved = new ushort[1];
        public readonly AppMain.GMS_FIX_PART_WORK part_work;
        public uint flag;
        public float digit_frame_ofst;
        public float deco_char_frame_ofst;
        public ushort cur_sec;
        public float fade_ratio;
        public float scale_ratio;
        public uint flash_act_phase;

        public GMS_FIX_PART_TIMER()
        {
            this.part_work = new AppMain.GMS_FIX_PART_WORK((object)this);
        }

        public static explicit operator AppMain.GMS_FIX_PART_WORK(AppMain.GMS_FIX_PART_TIMER p)
        {
            return p.part_work;
        }

        public void Clear()
        {
            this.part_work.Clear();
            Array.Clear((Array)this.sub_parts, 0, this.sub_parts.Length);
            this.flag = 0U;
            Array.Clear((Array)this.digit_list, 0, this.digit_list.Length);
            this.digit_frame_ofst = this.deco_char_frame_ofst = 0.0f;
            this.cur_sec = (ushort)0;
            this.reserved[0] = (ushort)0;
            this.fade_ratio = this.scale_ratio = 0.0f;
            this.flash_act_phase = 0U;
        }
    }

    public class GMS_FIX_PART_RINGCOUNT
    {
        public AppMain.GMS_COCKPIT_2D_WORK[] sub_parts = new AppMain.GMS_COCKPIT_2D_WORK[4];
        public int[] digit_list = new int[3];
        public readonly AppMain.GMS_FIX_PART_WORK part_work;

        public static explicit operator AppMain.GMS_FIX_PART_WORK(
          AppMain.GMS_FIX_PART_RINGCOUNT pObj)
        {
            return pObj.part_work;
        }

        public GMS_FIX_PART_RINGCOUNT()
        {
            this.part_work = new AppMain.GMS_FIX_PART_WORK((object)this);
        }

        public void Clear()
        {
            this.part_work.Clear();
            Array.Clear((Array)this.sub_parts, 0, this.sub_parts.Length);
            Array.Clear((Array)this.digit_list, 0, this.digit_list.Length);
        }
    }

    public class GMS_FIX_PART_CHALLENGE
    {
        public AppMain.GMS_COCKPIT_2D_WORK[] sub_parts = new AppMain.GMS_COCKPIT_2D_WORK[5];
        public int[] digit_list = new int[3];
        public AppMain.GMS_FIX_PART_WORK part_work;

        public GMS_FIX_PART_CHALLENGE()
        {
            this.part_work = new AppMain.GMS_FIX_PART_WORK((object)this);
        }

        public static explicit operator AppMain.GMS_FIX_PART_WORK(
          AppMain.GMS_FIX_PART_CHALLENGE p)
        {
            return p.part_work;
        }

        public void Clear()
        {
            this.part_work.Clear();
            Array.Clear((Array)this.sub_parts, 0, this.sub_parts.Length);
            Array.Clear((Array)this.digit_list, 0, this.digit_list.Length);
        }
    }

    public class GMS_COCKPIT_2D_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.OBS_ACTION2D_AMA_WORK obj_2d = new AppMain.OBS_ACTION2D_AMA_WORK();
        public readonly AppMain.GMS_COCKPIT_COM_WORK cpit_com;

        public GMS_COCKPIT_2D_WORK()
        {
            this.cpit_com = new AppMain.GMS_COCKPIT_COM_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.cpit_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_COCKPIT_2D_WORK work)
        {
            return work.cpit_com.obj_work;
        }

        public static explicit operator AppMain.GMS_COCKPIT_2D_WORK(AppMain.OBS_OBJECT_WORK work)
        {
            return (AppMain.GMS_COCKPIT_2D_WORK)((AppMain.GMS_COCKPIT_COM_WORK)work.holder).holder;
        }
    }

    private class gmFixVirtualPadOutClassGMD_FIX_MGR_FLAG_HIDE_VIRTUAL_PAD_PART_SUPER_SONIC
    {
        public static void OutFunc(AppMain.OBS_OBJECT_WORK obj_work)
        {
            if (AppMain.gm_fix_tcb == null || (512 & (int)((AppMain.GMS_FIX_MGR_WORK)AppMain.gm_fix_tcb.work).flag) != 0)
                return;
            AppMain.ObjDrawActionSummary(obj_work);
        }
    }

    private class gmFixVirtualPadOutClassGMD_FIX_MGR_FLAG_HIDE_VIRTUAL_PAD_PART_PAUSE
    {
        public static void OutFunc(AppMain.OBS_OBJECT_WORK obj_work)
        {
            if (AppMain.gm_fix_tcb == null || (1024 & (int)((AppMain.GMS_FIX_MGR_WORK)AppMain.gm_fix_tcb.work).flag) != 0)
                return;
            AppMain.ObjDrawActionSummary(obj_work);
        }
    }

    private class gmFixVirtualPadOutClassGMD_FIX_MGR_FLAG_HIDE_VIRTUAL_PAD_PART_ACTION
    {
        public static void OutFunc(AppMain.OBS_OBJECT_WORK obj_work)
        {
            if (AppMain.gm_fix_tcb == null || (2048 & (int)((AppMain.GMS_FIX_MGR_WORK)AppMain.gm_fix_tcb.work).flag) != 0)
                return;
            AppMain.ObjDrawActionSummary(obj_work);
        }
    }

    private class gmFixVirtualPadOutClassGMD_FIX_MGR_FLAG_HIDE_VIRTUAL_PAD_PART_MOVE_PAD
    {
        public static void OutFunc(AppMain.OBS_OBJECT_WORK obj_work)
        {
            if (AppMain.gm_fix_tcb == null || (4096 & (int)((AppMain.GMS_FIX_MGR_WORK)AppMain.gm_fix_tcb.work).flag) != 0)
                return;
            AppMain.ObjDrawActionSummary(obj_work);
        }
    }

    private struct SKeyToFrame
    {
        public int key;
        public float frame;
    }

    public class GMS_BOSS4_FLICKER_WORK
    {
        public readonly AppMain.NNS_RGB color = new AppMain.NNS_RGB();
        public readonly uint[] reserved = new uint[3];
        public bool is_active;
        public uint cycles;
        public uint interval_timer;
        public int cur_angle;
        public int add_timer;
        public float radius;
        public uint interval_flk;

        public void Clear()
        {
            this.is_active = false;
            this.cycles = 0U;
            this.interval_timer = 0U;
            this.cur_angle = 0;
            this.add_timer = 0;
            this.radius = 0.0f;
            this.interval_flk = 0U;
            this.color.Clear();
            Array.Clear((Array)this.reserved, 0, this.reserved.Length);
        }
    }

    public class GMS_BOSS4_MOVE
    {
        public AppMain.VecFx32 pos;
        public AppMain.VecFx32 start;
        public AppMain.VecFx32 end;
        public int now_count;
        public int max_count;
        public int type;
    }

    public class GMS_BOSS4_1SHOT_TIMER
    {
        public uint timer;
        public bool is_active;
    }

    public class GMS_BOSS4_NOHIT_TIMER
    {
        public uint timer;
        public AppMain.GMS_ENEMY_COM_WORK ene_com;
    }

    public class GMS_PLY_SEQ_STATE_DATA
    {
        public uint check_attr;
        public uint accept_attr;

        public GMS_PLY_SEQ_STATE_DATA(uint check_attr, uint accept_attr)
        {
            this.check_attr = check_attr;
            this.accept_attr = accept_attr;
        }
    }

    public class GMS_GMK_SWWALL_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.OBS_ACTION3D_NN_WORK[] obj_3d_opt = AppMain.New<AppMain.OBS_ACTION3D_NN_WORK>(2);
        public byte[] col_dir_buf = new byte[128];
        public readonly AppMain.GMS_ENEMY_3D_WORK gmk_work;
        public uint id;
        public int wall_size;
        public int wall_draw_size;
        public ushort wall_type;
        public ushort gear_dir;
        public ushort gear_base_dir;
        public AppMain.VecFx32 gear_pos;
        public AppMain.VecFx32 gearbase_pos;
        public int wall_spd;
        public AppMain.GSS_SND_SE_HANDLE h_snd;

        public GMS_GMK_SWWALL_WORK()
        {
            this.gmk_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_GMK_SWWALL_WORK work)
        {
            return work.gmk_work.ene_com.obj_work;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.gmk_work.ene_com.obj_work;
        }
    }

    public class GMS_GMK_SW_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public AppMain.OBS_ACTION3D_NN_WORK obj_3d_base = new AppMain.OBS_ACTION3D_NN_WORK();
        public AppMain.GMS_ENEMY_3D_WORK gmk_work;
        public int top_pos_y;
        public uint id;
        public int time;

        public GMS_GMK_SW_WORK()
        {
            this.gmk_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_GMK_SW_WORK work)
        {
            return work.gmk_work.ene_com.obj_work;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.gmk_work.ene_com.obj_work;
        }
    }

    private class GMS_GMK_SW_STATE_WORK : AppMain.IClearable
    {
        public bool sw;
        public int time;
        public bool gear;
        public int per;

        public void Clear()
        {
            this.sw = this.gear = false;
            this.time = this.per = 0;
        }
    }

    public class DMS_LOGO_SEGA_OBJ_3DNN_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.OBS_ACTION3D_NN_WORK obj_3d = new AppMain.OBS_ACTION3D_NN_WORK();
        public readonly AppMain.OBS_DATA_WORK data_work = new AppMain.OBS_DATA_WORK();
        public readonly AppMain.OBS_OBJECT_WORK obj_work;

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(
          AppMain.DMS_LOGO_SEGA_OBJ_3DNN_WORK work)
        {
            return work.obj_work;
        }

        public static explicit operator AppMain.DMS_LOGO_SEGA_OBJ_3DNN_WORK(
          AppMain.OBS_OBJECT_WORK work)
        {
            return (AppMain.DMS_LOGO_SEGA_OBJ_3DNN_WORK)work.holder;
        }

        public DMS_LOGO_SEGA_OBJ_3DNN_WORK()
        {
            this.obj_work = AppMain.OBS_OBJECT_WORK.Create((object)this);
        }
    }

    public class OBS_DATA_WORK
    {
        public object pData;
        public ushort num;

        public OBS_DATA_WORK()
        {
        }

        public OBS_DATA_WORK(object pData, ushort num)
        {
            this.pData = pData;
            this.num = num;
        }
    }

    public class DMS_LOGO_SEGA_OBJ_ES_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.OBS_ACTION3D_ES_WORK obj_3des = new AppMain.OBS_ACTION3D_ES_WORK();
        public readonly AppMain.OBS_DATA_WORK data_work_texamb = new AppMain.OBS_DATA_WORK();
        public readonly AppMain.OBS_DATA_WORK data_work_texlist = new AppMain.OBS_DATA_WORK();
        public readonly AppMain.OBS_DATA_WORK data_work_model = new AppMain.OBS_DATA_WORK();
        public readonly AppMain.OBS_OBJECT_WORK obj_work;

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.obj_work;
        }

        public static explicit operator AppMain.DMS_LOGO_SEGA_OBJ_ES_WORK(
          AppMain.OBS_OBJECT_WORK work)
        {
            return (AppMain.DMS_LOGO_SEGA_OBJ_ES_WORK)work.holder;
        }

        public DMS_LOGO_SEGA_OBJ_ES_WORK()
        {
            this.obj_work = AppMain.OBS_OBJECT_WORK.Create((object)this);
        }
    }

    public class OBS_ACTION3D_ES_WORK
    {
        public AppMain.VecU16 disp_rot = new AppMain.VecU16();
        public readonly AppMain.NNS_VECTOR4D disp_ofst = new AppMain.NNS_VECTOR4D();
        public readonly AppMain.NNS_VECTOR4D dup_draw_ofst = new AppMain.NNS_VECTOR4D();
        public AppMain.NNS_QUATERNION user_dir_quat = new AppMain.NNS_QUATERNION();
        public AppMain.AMS_AME_ECB ecb;
        public AppMain.NNS_TEXLIST texlist;
        public object texlistbuf;
        public AppMain.OBS_DATA_WORK texlist_data_work;
        public AppMain.NNS_OBJECT _object;
        public AppMain.OBS_DATA_WORK object_data_work;
        public object eff;
        public AppMain.OBS_DATA_WORK eff_data_work;
        public object ambtex;
        public AppMain.OBS_DATA_WORK ambtex_data_work;
        public object model;
        public AppMain.OBS_DATA_WORK model_data_work;
        public uint flag;
        public uint command_state;
        public int user_attr;
        public int tex_reg_index;
        public int model_reg_index;
        public float speed;

        public void Clear()
        {
            this.ecb = (AppMain.AMS_AME_ECB)null;
            this.texlist = (AppMain.NNS_TEXLIST)null;
            this.texlistbuf = (object)null;
            this.texlist_data_work = (AppMain.OBS_DATA_WORK)null;
            this._object = (AppMain.NNS_OBJECT)null;
            this.object_data_work = (AppMain.OBS_DATA_WORK)null;
            this.eff = (object)null;
            this.eff_data_work = (AppMain.OBS_DATA_WORK)null;
            this.ambtex = (object)null;
            this.ambtex_data_work = (AppMain.OBS_DATA_WORK)null;
            this.model = (object)null;
            this.model_data_work = (AppMain.OBS_DATA_WORK)null;
            this.flag = 0U;
            this.command_state = 0U;
            this.disp_rot.Clear();
            this.disp_ofst.Clear();
            this.dup_draw_ofst.Clear();
            this.user_dir_quat.Clear();
            this.user_attr = 0;
            this.tex_reg_index = 0;
            this.model_reg_index = 0;
            this.speed = 0.0f;
        }
    }

    public delegate void DMS_LOGO_SEGA_WORK_Delegate(AppMain.DMS_LOGO_SEGA_WORK work);

    public class DMS_LOGO_SEGA_WORK
    {
        public AppMain.AOS_ACTION[] act = new AppMain.AOS_ACTION[8];
        public uint flag;
        public int timer;
        public AppMain.DMS_LOGO_SEGA_WORK_Delegate func;
        public AppMain.OBS_OBJECT_WORK ply_obj;
        public AppMain.OBS_OBJECT_WORK efct_obj;
        public AppMain.GSS_SND_SE_HANDLE h_se;
    }

    public class AOS_STORAGE
    {
        public bool initialized;
        public int state;
        public int error;
        public bool save_success;
        public byte[] save_buf;
        public uint save_size;
        public bool load_success;
        public byte[] load_buf;
        public uint load_size;
        public bool del_success;
        public AppMain.AMS_TCB tcb;
        internal Sonic4Save save;

        public AOS_STORAGE(bool init, int state, int error)
        {
            this.initialized = init;
            this.state = state;
            this.error = error;
        }
    }

    private static class nndrawcircumsphere
    {
        public static readonly AppMain.NNS_RGBA[] nnsMsstCircumCol = new AppMain.NNS_RGBA[8]
        {
      new AppMain.NNS_RGBA(0.0f, 1f, 0.0f, 0.3f),
      new AppMain.NNS_RGBA(1f, 0.0f, 1f, 0.3f),
      new AppMain.NNS_RGBA(1f, 1f, 0.0f, 0.3f),
      new AppMain.NNS_RGBA(1f, 1f, 1f, 0.3f),
      new AppMain.NNS_RGBA(0.0f, 1f, 1f, 0.3f),
      new AppMain.NNS_RGBA(1f, 0.0f, 0.0f, 0.3f),
      new AppMain.NNS_RGBA(0.0f, 0.0f, 0.0f, 0.3f),
      new AppMain.NNS_RGBA()
        };
        public static int nnsSubMotIdx;
        public static AppMain.NNS_MATRIX nnsBaseMtx;
        public static AppMain.NNS_OBJECT nnsObj;
        public static AppMain.NNS_NODE nnsNodeList;
        public static AppMain.NNS_MATRIXSTACK nnsMstk;
        public static AppMain.NNS_MOTION nnsMot;
        public static AppMain.NNS_TRS nnsTrsList;
        public static float nnsFrame;
        public static uint nnsDrawCsFlag;
    }

    public class NNS_MATRIXSTACK
    {
        private readonly AppMain.NNS_MATRIX identity = AppMain.NNS_MATRIX.CreateIdentity();
        private List<AppMain.NNS_MATRIX> stack;
        private AppMain.NNS_MATRIX invert;

        public NNS_MATRIXSTACK(uint uiSize)
        {
            this.stack = new List<AppMain.NNS_MATRIX>((int)uiSize);
        }

        public NNS_MATRIXSTACK()
        {
            this.stack = new List<AppMain.NNS_MATRIX>(16);
        }

        public void push(AppMain.NNS_MATRIX matrix)
        {
            this.invert = (AppMain.NNS_MATRIX)null;
            this.stack.Add(matrix);
        }

        public AppMain.NNS_MATRIX pop()
        {
            this.invert = (AppMain.NNS_MATRIX)null;
            int index = this.stack.Count - 1;
            AppMain.NNS_MATRIX nnsMatrix = this.stack[index];
            this.stack.RemoveAt(index);
            return nnsMatrix;
        }

        public AppMain.NNS_MATRIX get()
        {
            return this.stack.Count == 0 ? this.identity : this.stack[this.stack.Count - 1];
        }

        public void set(AppMain.NNS_MATRIX mtx)
        {
            if (this.stack.Count > 0)
                this.stack[this.stack.Count - 1] = mtx;
            else
                this.push(mtx);
        }

        public void clear()
        {
            this.stack.Clear();
        }

        public AppMain.NNS_MATRIX getInvert()
        {
            if (this.invert == null)
            {
                AppMain.NNS_MATRIX src = this.get();
                this.invert = AppMain.GlobalPool<AppMain.NNS_MATRIX>.Alloc();
                AppMain.nnInvertMatrix(this.invert, src);
            }
            return this.invert;
        }
    }

    private static class nncalctrsmotion
    {
        public static readonly AppMain.NNS_MATRIX nnsBaseMtx = new AppMain.NNS_MATRIX();
        public static float nnsRootScale = 1f;
        public static AppMain.NNS_OBJECT nnsObj;
        public static AppMain.NNS_MATRIX[] nnsMtxPal;
        public static uint[] nnsNodeStatList;
        public static uint nnsNSFlag;
        public static AppMain.NNS_NODE[] nnsNodeList;
        public static AppMain.NNS_TRS[] nnsTrsList;
        public static AppMain.NNS_MATRIXSTACK nnsMstk;
        public static AppMain.NNS_MOTION nnsMot0;
        public static AppMain.NNS_MOTION nnsMot1;
        public static float nnsFrame0;
        public static float nnsFrame1;
        public static float nnsRatio;
        public static int nnsSubMotIdx0;
        public static int nnsSubMotIdx1;
    }

    private enum NNE_TEXTURETYPE_GL
    {
        NNE_TEXTURETYPE_NORMAL,
        NNE_TEXTURETYPE_BASE,
        NNE_TEXTURETYPE_DECAL,
        NNE_TEXTURETYPE_DECAL2,
        NNE_TEXTURETYPE_DECAL3,
        NNE_TEXTURETYPE_SPECULAR,
        NNE_TEXTURETYPE_SHININESS,
        NNE_TEXTURETYPE_ENVMASK,
        NNE_TEXTURETYPE_MODULATE,
        NNE_TEXTURETYPE_ADD,
        NNE_TEXTURETYPE_OPACITY,
        NNE_TEXTURETYPE_USER1,
        NNE_TEXTURETYPE_USER2,
        NNE_TEXTURETYPE_USER3,
        NNE_TEXTURETYPE_USER4,
        NNE_TEXTURETYPE_USER5,
        NNE_TEXTURETYPE_USER6,
        NNE_TEXTURETYPE_USER7,
        NNE_TEXTURETYPE_USER8,
        NNE_TEXTURETYPE_DUALPARABOLOID,
        NNE_TEXTURETYPE_MAX,
    }

    private enum NNE_SHADOWMAP
    {
        NNE_SHADOWMAP_1,
        NNE_SHADOWMAP_2,
        NNE_SHADOWMAP_MAX,
    }

    private enum NNE_USER_SAMPLER
    {
        NNE_USER_SAMPLER_2D_1,
        NNE_USER_SAMPLER_2D_2,
        NNE_USER_SAMPLER_3D_1,
        NNE_USER_SAMPLER_3D_2,
        NNE_USER_SAMPLER_CUBE_1,
        NNE_USER_SAMPLER_CUBE_2,
        NNE_USER_SAMPLER_MAX,
    }

    private struct NNS_MATCTRL_TEXLODBIAS
    {
        private int mode;
        private float bias;
    }

    private class NNS_MATCTRL_SHADOWMAP
    {
        private uint texname;
        private AppMain.NNS_MATRIX mtx;
        private AppMain.NNS_RGB col;
    }

    private struct NNS_MATCTRL_USERSAMPLER
    {
        private uint texname;
    }

    public class GMS_SOUND_1SHOT_JINGLE_WORK
    {
        public int bgm_fade_in_frame;

        internal void Clear()
        {
            this.bgm_fade_in_frame = 0;
        }
    }

    public class GMS_SOUND_BGM_FADE_WORK
    {
        public float start_vol;
        public float end_vol;
        public float fade_spd;
        public float now_vol;
        public int frame;
        public AppMain.GSS_SND_SCB snd_scb;
        public AppMain.GMS_SOUND_BGM_FADE_WORK next;
        public AppMain.GMS_SOUND_BGM_FADE_WORK prev;
    }

    public class GMS_SOUND_BGM_FADE_MGR_WORK
    {
        public int num;
        public AppMain.GMS_SOUND_BGM_FADE_WORK head;
        public AppMain.GMS_SOUND_BGM_FADE_WORK tail;

        internal void Clear()
        {
            this.num = 0;
            this.head = (AppMain.GMS_SOUND_BGM_FADE_WORK)null;
            this.tail = (AppMain.GMS_SOUND_BGM_FADE_WORK)null;
        }
    }

    public class GMS_SOUND_BGM_WIN_BOSS_MGR_WORK
    {
        public int timer;

        internal void Clear()
        {
            this.timer = 0;
        }
    }

    public class GMS_SCORE_DISP_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_EFFECT_3DES_WORK[] efct_work = new AppMain.GMS_EFFECT_3DES_WORK[5];
        public readonly AppMain.OBS_OBJECT_WORK obj_work;
        public int vib_level;
        public int scale;
        public AppMain.VecFx32 base_pos;
        public int rise_dist;
        public int rise_spd;
        public int rise_dec;
        public int vib_timer;
        public int timer;

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_SCORE_DISP_WORK work)
        {
            return work.obj_work;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.obj_work;
        }

        public GMS_SCORE_DISP_WORK()
        {
            this.obj_work = AppMain.OBS_OBJECT_WORK.Create((object)this);
        }
    }

    public class GMS_GMK_ROCK_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK enemy_work;
        public AppMain.GMS_EFFECT_3DES_WORK effect_work;
        public AppMain.GSS_SND_SE_HANDLE se_handle;
        public int vib_timer;

        public GMS_GMK_ROCK_WORK()
        {
            this.enemy_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.enemy_work.ene_com.obj_work;
        }
    }

    public static class gmGmkBreakObjConstants
    {
        public const int GME_GMK_RECT_DATA_COL_WIDTH = 0;
        public const int GME_GMK_RECT_DATA_COL_HEIGHT = 1;
        public const int GME_GMK_RECT_DATA_COL_OFST_X = 2;
        public const int GME_GMK_RECT_DATA_COL_OFST_Y = 3;
        public const int GME_GMK_RECT_DATA_DEF_LEFT = 4;
        public const int GME_GMK_RECT_DATA_DEF_TOP = 5;
        public const int GME_GMK_RECT_DATA_DEF_RIGHT = 6;
        public const int GME_GMK_RECT_DATA_DEF_BOTTOM = 7;
        public const int GME_GMK_RECT_DATA_MAX = 8;
    }

    private struct tag_GMS_GMK_BOBJ_PARTS_PARAM_TABLE
    {
        public ushort[][] Params;
        public ushort num;
    }

    public enum GME_GAME_DBUILD_MDL_STATE
    {
        GME_GAME_DBUILD_MDL_STATE_REG_WAIT,
        GME_GAME_DBUILD_MDL_STATE_BUILD_WAIT,
        GME_GAME_DBUILD_MDL_STATE_REG_FLUSH_WAIT,
        GME_GAME_DBUILD_MDL_STATE_FLUSH_WAIT,
        GME_GAME_DBUILD_MDL_STATE_MAX,
    }

    public class GMS_GDBUILD_BUILD_MDL_WORK : AppMain.IClearable
    {
        public AppMain.GME_GAME_DBUILD_MDL_STATE build_state;
        public AppMain.OBS_ACTION3D_NN_WORK[] obj_3d_list;
        public int num;
        public int reg_num;
        public AppMain.AMS_AMB_HEADER mdl_amb;
        public AppMain.AMS_AMB_HEADER tex_amb;
        public uint draw_flag;
        public AppMain.TXB_HEADER txb;

        public void Clear()
        {
            this.build_state = AppMain.GME_GAME_DBUILD_MDL_STATE.GME_GAME_DBUILD_MDL_STATE_REG_WAIT;
            this.obj_3d_list = (AppMain.OBS_ACTION3D_NN_WORK[])null;
            this.num = this.reg_num = 0;
            this.mdl_amb = this.tex_amb = (AppMain.AMS_AMB_HEADER)null;
            this.draw_flag = 0U;
            this.txb = (AppMain.TXB_HEADER)null;
        }
    }

    public class TXB_HEADER
    {
        public byte[] file_id = new byte[4];
        public AppMain.TXB_TEXFILELIST texfilelist = new AppMain.TXB_TEXFILELIST();
        public byte[] pad = new byte[8];
        public int texfilelist_offset;
    }

    public delegate void gamedat_build_area_func();

    public class GMS_ENE_KAMA_FADE_ANIME_PAT
    {
        public readonly AppMain.NNS_RGB col;
        public float intensity;
        public int frame;

        public GMS_ENE_KAMA_FADE_ANIME_PAT()
        {
            this.col = new AppMain.NNS_RGB();
        }

        public GMS_ENE_KAMA_FADE_ANIME_PAT(AppMain.NNS_RGB c, float inten, int fr)
        {
            this.col = c;
            this.intensity = inten;
            this.frame = fr;
        }
    }

    public class GMS_ENE_KAMA_FADE_ANIME
    {
        public uint pat_num;
        public AppMain.GMS_ENE_KAMA_FADE_ANIME_PAT[] anime_pat;

        public GMS_ENE_KAMA_FADE_ANIME(uint num, AppMain.GMS_ENE_KAMA_FADE_ANIME_PAT[] pat)
        {
            this.pat_num = num;
            this.anime_pat = pat;
        }
    }

    public class GMS_EFCT_BOSS_CMN_CREATE_PARAM
    {
        public readonly AppMain.GMS_EFFECT_CREATE_PARAM create_param;
        public int mdl_ambtex_idx;

        public GMS_EFCT_BOSS_CMN_CREATE_PARAM()
        {
            this.create_param = new AppMain.GMS_EFFECT_CREATE_PARAM();
        }

        public GMS_EFCT_BOSS_CMN_CREATE_PARAM(
          AppMain.GMS_EFFECT_CREATE_PARAM create_param,
          int mdl_ambtex_idx)
        {
            this.create_param = create_param;
            this.mdl_ambtex_idx = mdl_ambtex_idx;
        }
    }

    public class GMS_EFCT_BOSS_SINGLE_BUILD_WORK
    {
        public int tex_reg_id;
        public int model_reg_id;
        public AppMain.OBS_DATA_WORK ambtex_dwork;
        public AppMain.OBS_DATA_WORK texlist_dwork;
        public AppMain.OBS_DATA_WORK model_dwork;
        public AppMain.OBS_DATA_WORK object_dwork;
    }

    private enum DME_SAVE_ACT
    {
        ACT_WIN_LINE,
        ACT_TEX_WINTITLE,
        ACT_TEX_MSG1,
        ACT_TEX_MSG2,
        ACT_TEX_MSG3,
        ACT_TEX_OK,
        ACT_NUM,
        ACT_NONE,
    }

    public delegate void _saveproc_input_update(AppMain.DMS_SAVE_MAIN_WORK work);

    public class DMS_SAVE_MAIN_WORK
    {
        public readonly AppMain.AMS_FS[] arc_cmn_amb_fs = new AppMain.AMS_FS[2];
        public readonly AppMain.AMS_AMB_HEADER[] arc_cmn_amb = new AppMain.AMS_AMB_HEADER[2];
        public readonly AppMain.A2S_AMA_HEADER[] cmn_ama = new AppMain.A2S_AMA_HEADER[2];
        public readonly AppMain.AMS_AMB_HEADER[] cmn_amb = new AppMain.AMS_AMB_HEADER[2];
        public readonly AppMain.AOS_TEXTURE[] cmn_tex = AppMain.New<AppMain.AOS_TEXTURE>(2);
        public readonly AppMain.AOS_ACTION[] act = new AppMain.AOS_ACTION[6];
        public readonly float[][] win_act_pos = AppMain.New<float>(5, 2);
        public readonly float[] win_size_rate = new float[2];
        public AppMain._saveproc_input_update proc_input;
        public AppMain._saveproc_input_update proc_menu_update;
        public AppMain._saveproc_draw proc_draw;
        public uint flag;
        public uint announce_flag;
        public uint disp_flag;
        public int state;
        public int timer;
        public int win_timer;
        public int win_mode;
        public int win_cur_slct;
        public uint draw_state;
        public AppMain.GSS_SND_SCB bgm_scb;
    }

    public delegate void _saveproc_draw();

    public class DMS_SAVE_MGR
    {
        public AppMain.MTS_TASK_TCB tcb;

        internal void Clear()
        {
            this.tcb = (AppMain.MTS_TASK_TCB)null;
        }
    }

    public class DMS_LOGO_SONIC_WORK
    {
        public AppMain.AOS_ACTION[] act = new AppMain.AOS_ACTION[2];
        public uint flag;
        public int timer;
        public AppMain.DMS_LOGO_SONIC_WORK._func_ func;

        public delegate void _func_(AppMain.DMS_LOGO_SONIC_WORK work);
    }

    private enum DME_LOADING_DATA_TYPE
    {
        DME_LOADING_DATA_TYPE_CMN_DATA,
        DME_LOADING_DATA_TYPE_MAX,
        DME_LOADING_DATA_TYPE_NONE,
    }

    private enum DME_LOADING_ACT
    {
        ACT_BG_WHITE,
        ACT_BG_BOTTOM,
        ACT_OBI,
        ACT_RUN,
        ACT_PERIOD1,
        ACT_PERIOD2,
        ACT_PERIOD3,
        ACT_TEXT_LOAD,
        ACT_NUM,
        ACT_NONE,
    }

    public class DMS_LOADING_MAIN_WORK
    {
        public AppMain.AOS_ACTION[] act = new AppMain.AOS_ACTION[8];
        public AppMain.AMS_FS arc_amb;
        public byte[] ama;
        public byte[] amb;
        public AppMain.AOS_TEXTURE tex;
        public AppMain.DMS_LOADING_MAIN_WORK._proc_update_ proc_update;
        public AppMain.DMS_LOADING_MAIN_WORK._proc_draw_ proc_draw;
        public float timer;
        public uint flag;
        public float efct_timer;
        public float sonic_set_frame;
        public float sonic_pos_x;
        public float sonic_move_spd;
        public bool is_maingame_load;
        public bool is_play_maingame;
        public uint draw_state;
        public int lang_id;

        public delegate void _proc_update_(AppMain.DMS_LOADING_MAIN_WORK work);

        public delegate void _proc_draw_(AppMain.DMS_LOADING_MAIN_WORK work);
    }

    public class DMS_LOADING_MGR
    {
        public AppMain.MTS_TASK_TCB tcb;
    }

    public delegate void GSF_INIT_FUNC();

    public class GSS_INIT_WORK
    {
        public int count;
        public AppMain.AMS_FS fs;
        public AppMain.GSS_INIT_WORK.ProcDelegate proc;

        public delegate void ProcDelegate(AppMain.GSS_INIT_WORK work);
    }

    public class Vector3_VertexData : OpenGL.GLVertexData
    {
        protected OpenGL.GLVertexElementType[] compType_ = new OpenGL.GLVertexElementType[1];
        private Vector3[] data_;

        public Vector3_VertexData(Vector3[] data)
        {
            this.data_ = data;
        }

        public OpenGL.GLVertexElementType[] DataComponents
        {
            get
            {
                return this.compType_;
            }
        }

        public int VertexCount
        {
            get
            {
                return this.data_.Length;
            }
        }

        public void ExtractTo(OpenGL.Vertex[] dst, int count)
        {
            for (int index = 0; index < count; ++index)
                dst[index].Position = this.data_[index];
        }

        public void ExtractTo(OpenGL.VertexPosTexColNorm[] dst, int dstOffset, int count)
        {
            for (int index = 0; index < count; ++index)
                dst[index + dstOffset].Position = this.data_[index];
        }
    }

    public class GLVertexBuffer_ : OpenGL.GLVertexData
    {
        private OpenGL.GLVertexElementType[] elementTypes_;
        private AppMain.NNS_VTXARRAY_GL posArray_;
        private AppMain.NNS_VTXARRAY_GL normArray_;
        private AppMain.NNS_VTXARRAY_GL colArray_;
        private AppMain.NNS_VTXARRAY_GL texCoord0Array_;
        private AppMain.NNS_VTXARRAY_GL texCoord1Array_;
        private AppMain.NNS_VTXARRAY_GL blWeightArray_;
        private AppMain.NNS_VTXARRAY_GL blIndexArray_;
        private AppMain.NNS_VTXLIST_GL_DESC pVtxDesc_;

        public GLVertexBuffer_(AppMain.NNS_VTXLIST_GL_DESC pVtxDesc)
        {
            this.pVtxDesc_ = pVtxDesc;
            this.elementTypes_ = new OpenGL.GLVertexElementType[this.pVtxDesc_.nArray];
            for (int index = 0; index < this.pVtxDesc_.nArray; ++index)
            {
                uint type = this.pVtxDesc_.pArray[index].Type;
                if (type <= 8U)
                {
                    switch ((int)type - 1)
                    {
                        case 0:
                            this.posArray_ = this.pVtxDesc_.pArray[index];
                            this.elementTypes_[index] = OpenGL.GLVertexElementType.Position;
                            continue;
                        case 1:
                            this.blWeightArray_ = this.pVtxDesc_.pArray[index];
                            this.elementTypes_[index] = OpenGL.GLVertexElementType.BlendWeight;
                            continue;
                        case 2:
                            continue;
                        case 3:
                            this.blIndexArray_ = this.pVtxDesc_.pArray[index];
                            this.elementTypes_[index] = OpenGL.GLVertexElementType.BlendIndex;
                            continue;
                        default:
                            if (type == 8U)
                            {
                                this.normArray_ = this.pVtxDesc_.pArray[index];
                                this.elementTypes_[index] = OpenGL.GLVertexElementType.Normal;
                                continue;
                            }
                            continue;
                    }
                }
                else if (type != 16U)
                {
                    if (type != 256U)
                    {
                        if (type == 512U)
                        {
                            this.texCoord1Array_ = this.pVtxDesc_.pArray[index];
                            this.elementTypes_[index] = OpenGL.GLVertexElementType.TextureCoordinate1;
                        }
                    }
                    else
                    {
                        this.texCoord0Array_ = this.pVtxDesc_.pArray[index];
                        this.elementTypes_[index] = OpenGL.GLVertexElementType.TextureCoordinate0;
                    }
                }
                else
                {
                    this.colArray_ = this.pVtxDesc_.pArray[index];
                    this.elementTypes_[index] = OpenGL.GLVertexElementType.Color;
                }
            }
        }

        public OpenGL.GLVertexElementType[] DataComponents
        {
            get
            {
                return this.elementTypes_;
            }
        }

        public int VertexCount
        {
            get
            {
                return this.pVtxDesc_.nVertex;
            }
        }

        public void ExtractTo(OpenGL.Vertex[] dst, int count)
        {
            int getOffset1 = 0;
            int getOffset2 = 0;
            int index1 = 0;
            int getOffset3 = 0;
            int getOffset4 = 0;
            int getOffset5 = 0;
            int index2 = 0;
            for (int index3 = 0; index3 < count; ++index3)
            {
                float x1 = this.posArray_.Pointer.GetFloat(getOffset1);
                float y1 = this.posArray_.Pointer.GetFloat(getOffset1 + 4);
                float z1 = this.posArray_.Pointer.GetFloat(getOffset1 + 8);
                dst[index3].Position = new Vector3(x1, y1, z1);
                getOffset1 += this.posArray_.Stride;
                if (this.normArray_ != null)
                {
                    float x2 = this.normArray_.Pointer.GetFloat(getOffset2);
                    float y2 = this.normArray_.Pointer.GetFloat(getOffset2 + 4);
                    float z2 = this.normArray_.Pointer.GetFloat(getOffset2 + 8);
                    dst[index3].Normal = new Vector3(x2, y2, z2);
                    getOffset2 += this.normArray_.Stride;
                }
                if (this.colArray_ != null)
                {
                    byte num1 = this.colArray_.Pointer[index1];
                    byte num2 = this.colArray_.Pointer[index1 + 1];
                    byte num3 = this.colArray_.Pointer[index1 + 2];
                    byte num4 = this.colArray_.Pointer[index1 + 3];
                    dst[index3].Color = new Color((int)num1, (int)num2, (int)num3, (int)num4);
                    index1 += this.colArray_.Stride;
                }
                else
                    dst[index3].Color = Color.White;
                if (this.texCoord0Array_ != null)
                {
                    float x2 = this.texCoord0Array_.Pointer.GetFloat(getOffset3);
                    float y2 = this.texCoord0Array_.Pointer.GetFloat(getOffset3 + 4);
                    dst[index3].TextureCoordinate = new Vector2(x2, y2);
                    getOffset3 += this.texCoord0Array_.Stride;
                }
                if (this.texCoord1Array_ != null)
                {
                    float x2 = this.texCoord1Array_.Pointer.GetFloat(getOffset4);
                    float y2 = this.texCoord1Array_.Pointer.GetFloat(getOffset4 + 4);
                    dst[index3].TextureCoordinate2 = new Vector2(x2, y2);
                    getOffset4 += this.texCoord1Array_.Stride;
                }
                else
                    dst[index3].TextureCoordinate2 = Vector2.Zero;
                if (this.blWeightArray_ != null)
                {
                    float x2 = this.blWeightArray_.Pointer.GetFloat(getOffset5);
                    float y2 = this.blWeightArray_.Size > 1 ? this.blWeightArray_.Pointer.GetFloat(getOffset5 + 4) : 0.0f;
                    float z2 = this.blWeightArray_.Size > 2 ? this.blWeightArray_.Pointer.GetFloat(getOffset5 + 8) : 0.0f;
                    float w = this.blWeightArray_.Size > 3 ? this.blWeightArray_.Pointer.GetFloat(getOffset5 + 12) : 0.0f;
                    dst[index3].BlendWeight = new Vector4(x2, y2, z2, w);
                    getOffset5 += this.blWeightArray_.Stride;
                }
                else
                    dst[index3].BlendWeight = Vector4.UnitX;
                if (this.blIndexArray_ != null)
                {
                    byte num1 = this.blIndexArray_.Pointer[index2];
                    byte num2 = this.blIndexArray_.Size > 1 ? this.blIndexArray_.Pointer[index2 + 1] : (byte)0;
                    byte num3 = this.blIndexArray_.Size > 2 ? this.blIndexArray_.Pointer[index2 + 2] : (byte)0;
                    byte num4 = this.blIndexArray_.Size > 3 ? this.blIndexArray_.Pointer[index2 + 3] : (byte)0;
                    dst[index3].BlendIndices = new Byte4((float)num1, (float)num2, (float)num3, (float)num4);
                    index2 += this.blIndexArray_.Stride;
                }
                else
                    dst[index3].BlendIndices = new Byte4();
            }
        }

        public void ExtractTo(OpenGL.VertexPosTexColNorm[] dst, int dstOffset, int count)
        {
            throw new NotImplementedException();
        }
    }

    public class MatrixPool
    {
        private List<AppMain.NNS_MATRIX> cache_;

        public MatrixPool()
        {
            this.cache_ = new List<AppMain.NNS_MATRIX>();
        }

        public AppMain.NNS_MATRIX Alloc()
        {
            AppMain.NNS_MATRIX nnsMatrix;
            if (this.cache_.Count > 0)
            {
                int index = this.cache_.Count - 1;
                nnsMatrix = this.cache_[index];
                this.cache_.RemoveAt(index);
            }
            else
                nnsMatrix = new AppMain.NNS_MATRIX();
            return nnsMatrix;
        }

        public void Release(AppMain.NNS_MATRIX obj)
        {
            this.cache_.Add(obj);
        }
    }

    private class NNS_GL_LIGHT_DATA
    {
        public AppMain.NNS_RGBA Ambient = new AppMain.NNS_RGBA();
        public AppMain.NNS_RGBA Diffuse = new AppMain.NNS_RGBA();
        public AppMain.NNS_RGBA Specular = new AppMain.NNS_RGBA();
        public AppMain.NNS_VECTOR Direction = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public AppMain.NNS_VECTOR4D Position = new AppMain.NNS_VECTOR4D();
        public AppMain.NNS_VECTOR Target = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public int bEnable;
        public uint fType;
        public float Intensity;
        public int RotType;
        public AppMain.NNS_ROTATE_A32 Rotation;
        public int InnerAngle;
        public int OuterAngle;
        public float InnerRange;
        public float OuterRange;
        public float FallOffStart;
        public float FallOffEnd;
        public float SpotExponent;
        public float SpotCutoff;
        public float ConstantAttenuation;
        public float LinearAttenuation;
        public float QuadraticAttenuation;
    }

    private class NNS_GL_LIGHT
    {
        public AppMain.NNS_RGBA AmbientColor = new AppMain.NNS_RGBA();
        public AppMain.NNS_GL_LIGHT_DATA[] LightData = AppMain.New<AppMain.NNS_GL_LIGHT_DATA>(AppMain.NNE_LIGHT_MAX);
    }

    private class nnlight
    {
        public static AppMain.NNS_MATRIX nngLightMtx = AppMain.GlobalPool<AppMain.NNS_MATRIX>.Alloc();
        public static AppMain.NNS_GL_LIGHT nngLight = new AppMain.NNS_GL_LIGHT();
        public static float[] nngPointLightFallOffEnd = new float[4];
        public static float[] nngPointLightFallOffScale = new float[4];
        public static float[] nngSpotLightFallOffEnd = new float[4];
        public static float[] nngSpotLightFallOffScale = new float[4];
        public static float[] nngSpotLightAngleScale = new float[4];
        public static int nngNumParallelLight;
        public static int nngNumPointLight;
        public static int nngNumSpotLight;
    }

    public class AMS_TP_TOUCH_CORE
    {
        public ushort[] sampling_buf = new ushort[2];
        public byte sampling_num;
        public byte sampling_flag;
    }

    public class AMS_TASK
    {
        public readonly AppMain.AMS_TCB tcb_head = new AppMain.AMS_TCB();
        public readonly AppMain.AMS_TCB tcb_tail = new AppMain.AMS_TCB();
        public int tcb_max;
        public int tcb_work_size;
    }

    public class AMS_TCB_FOOTER
    {
        public int wkend;
        public uint cpu_cnt;
        public uint cpu_cnt_max;
    }

    public class AMS_TASKLIST_OWNER
    {
        public uint uflag;
        public string name;
    }

    public class AMS_TCB_REPORT
    {
        public string name;
        public float frame_start;
        public float frame_end;
        public AppMain.AMS_TCB_REPORT next;
        public int reserved;
    }

    public class AMS_TCB_THREAD
    {
        public readonly AppMain.AMS_THREAD thread = new AppMain.AMS_THREAD();
        public readonly AppMain.AMS_ALARM alarm_wakeup = new AppMain.AMS_ALARM();
        public int id;
        public AppMain.AMS_TASK taskp;
        public AppMain.AMS_TCB tcbp;
        public Thread thread_id;
        public AppMain.NNS_MATRIXSTACK matrix_stack;
        public byte[] matrix_stack_buf;
    }

    public class AMS_THREAD
    {
        public AppMain.AMS_ALARM alarm_exit = new AppMain.AMS_ALARM();
        public object mutex = new object();
        public Thread thread_id;
        public int handle;
    }

    private struct AMS_TASK_THREAD_MAP_HEADER
    {
        private int thread_num;
        private float x0;
        private float x1;
        private float y0;
        private float dy;
        private float ny;
    }

    private struct AMS_TASK_THREAD_MAP_THREAD
    {
        private int thread_tcb_num;
    }

    private struct AMS_TASK_THREAD_MAP_TCB
    {
        private float frame_start;
        private float frame_end;
    }

    public delegate void FsBackgroundReadComplete(AppMain.AMS_FS fs);

    public class GMS_SMSG_2D_OBJ_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.OBS_ACTION2D_AMA_WORK obj_2d = new AppMain.OBS_ACTION2D_AMA_WORK();
        public readonly AppMain.OBS_OBJECT_WORK obj_work;

        public GMS_SMSG_2D_OBJ_WORK()
        {
            this.obj_work = AppMain.OBS_OBJECT_WORK.Create((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.obj_work;
        }
    }

    public class OBS_ACTION2D_AMA_WORK : AppMain.IClearable
    {
        public readonly AppMain.AOS_TEXTURE ao_tex = new AppMain.AOS_TEXTURE();
        public uint flag;
        public AppMain.AOS_ACTION act;
        public AppMain.NNS_TEXLIST texlist;
        public AppMain.A2S_AMA_HEADER ama;
        public AppMain.OBS_DATA_WORK ama_data_work;
        public uint act_id;
        public float frame;
        public float speed;
        public int type_node;
        public AppMain.AOS_ACT_COL color;
        public AppMain.AOS_ACT_COL fade;

        public void Clear()
        {
            this.flag = 0U;
            this.act = (AppMain.AOS_ACTION)null;
            this.ao_tex.Clear();
            this.texlist = (AppMain.NNS_TEXLIST)null;
            this.ama = (AppMain.A2S_AMA_HEADER)null;
            this.ama_data_work = (AppMain.OBS_DATA_WORK)null;
            this.act_id = 0U;
            this.frame = 0.0f;
            this.speed = 0.0f;
            this.type_node = 0;
            this.color.Clear();
            this.fade.Clear();
        }
    }

    public delegate void pfnGMS_SMSG_MGR_WORK(AppMain.GMS_SMSG_MGR_WORK p);

    public class GMS_SMSG_MGR_WORK : AppMain.IClearable
    {
        public AppMain.GMS_SMSG_2D_OBJ_WORK[] ama_2d_work = new AppMain.GMS_SMSG_2D_OBJ_WORK[AppMain.GMD_SMSG_AMA_ACT_MAX];
        public AppMain.GMS_SMSG_2D_OBJ_WORK[] ama_2d_work_act = new AppMain.GMS_SMSG_2D_OBJ_WORK[AppMain.GMD_SMSG_AMA_ACT_ACTION_MAX];
        public uint flag;
        public int timer;
        public int msg_type;
        public AppMain.pfnGMS_SMSG_MGR_WORK func;
        public float win_per;

        public void Clear()
        {
            this.flag = 0U;
            this.timer = 0;
            this.msg_type = 0;
            this.func = (AppMain.pfnGMS_SMSG_MGR_WORK)null;
            Array.Clear((Array)this.ama_2d_work, 0, this.ama_2d_work.Length);
            Array.Clear((Array)this.ama_2d_work_act, 0, this.ama_2d_work_act.Length);
        }
    }

    public class GMS_OBJECT_WORK_ATK
    {
        public readonly AppMain.OBS_OBJECT_WORK obj = AppMain.OBS_OBJECT_WORK.Create();
        public readonly AppMain.OBS_RECT_WORK[] rect_work = new AppMain.OBS_RECT_WORK[2];

        public GMS_OBJECT_WORK_ATK()
        {
            this.rect_work[0] = new AppMain.OBS_RECT_WORK();
            this.rect_work[1] = new AppMain.OBS_RECT_WORK();
        }
    }

    public class GMS_PLAYER_PACKET
    {
        public AppMain.VecFx32 pos = new AppMain.VecFx32();
        public ushort disp_flag;
        public short anime_speed;
        public byte act_state;
        public byte dir_x;
        public byte dir_y;
        public byte dir_z;
        public uint move_flag;
        public uint player_flag;
        public uint gmk_flag;
        public short move_x;
        public short move_y;
        public int camera_pos_x;
        public int camera_pos_y;
        public uint time;
    }

    public delegate void seq_func_delegate(AppMain.GMS_PLAYER_WORK ply_work);

    public class GMS_PLAYER_RESET_ACT_WORK
    {
        public readonly float[] frame = new float[2];
        public float blend_spd;
        public float marge;
        public uint obj_3d_flag;
    }

    public delegate void _GMS_OVER_MGR_WORK_UD_(AppMain.GMS_OVER_MGR_WORK _gms_over_mgr_work);

    public class GMS_OVER_MGR_WORK
    {
        public readonly AppMain.GMS_COCKPIT_2D_WORK[] string_sub_parts = new AppMain.GMS_COCKPIT_2D_WORK[4];
        public readonly AppMain.GMS_COCKPIT_2D_WORK[] fadeout_sub_parts = new AppMain.GMS_COCKPIT_2D_WORK[2];
        public AppMain._GMS_OVER_MGR_WORK_UD_ proc_update;
        public AppMain._GMS_OVER_MGR_WORK_UD_ proc_disp;
        public uint wait_timer;

        internal void Clear()
        {
            this.proc_update = (AppMain._GMS_OVER_MGR_WORK_UD_)null;
            this.proc_disp = (AppMain._GMS_OVER_MGR_WORK_UD_)null;
            this.wait_timer = 0U;
            Array.Clear((Array)this.string_sub_parts, 0, this.string_sub_parts.Length);
            Array.Clear((Array)this.fadeout_sub_parts, 0, this.fadeout_sub_parts.Length);
        }
    }

    public class GMS_BOSS5_GRD_MOVE_WORK
    {
        public int cur_diff_x;
        public int prev_diff_x;
        public int ref_snm_reg_id;
        public int is_first_updated;
    }

    public class GMS_BOSS5_ARM_ANIM_WORK
    {
        public AppMain.NNS_QUATERNION[] start_quat = AppMain.New<AppMain.NNS_QUATERNION>(3);
        public AppMain.NNS_QUATERNION[] end_quat = AppMain.New<AppMain.NNS_QUATERNION>(3);
        public int is_anim;
        public uint anim_wait_timer;
        public float cur_rate;
        public float rate_add;
    }

    public class GMS_BOSS5_EXPL_WORK
    {
        public int[] ofst_pos = new int[2];
        public int[] area = new int[2];
        public AppMain.OBS_OBJECT_WORK parent_obj;
        public int expl_type;
        public uint interval_timer;
        public uint interval_min;
        public uint interval_max;
        public float se_frequency;
        public float se_freq_cnt;
    }

    public class GMS_BS_CMN_CNM_MGR_WORK
    {
        public ushort reg_node_cnt;
        public ushort reg_node_max;
        public AppMain.GMS_BS_CMN_CNM_NODE_INFO[] node_info_list;
    }

    public class GMS_BS_CMN_DMG_FLICKER_WORK : AppMain.IClearable
    {
        public int is_active;
        public uint cycles;
        public uint interval_timer;
        public int cur_angle;
        public float radius;

        public void Clear()
        {
            this.is_active = 0;
            this.cycles = this.interval_timer = 0U;
            this.cur_angle = 0;
            this.radius = 0.0f;
        }
    }

    public class GMS_BS_CMN_DELAY_SEARCH_WORK
    {
        public AppMain.VecFx32[] pos_hist_buf;
        public int cur_point;
        public int hist_num;
        public AppMain.OBS_OBJECT_WORK targ_obj;
        public int record_cnt;
    }

    public class GMS_BOSS5_FLASH_SCREEN_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_CMN_FLASH_SCR_WORK flash_work = new AppMain.GMS_CMN_FLASH_SCR_WORK();
        public readonly AppMain.GMS_EFFECT_COM_WORK efct_com;

        public GMS_BOSS5_FLASH_SCREEN_WORK()
        {
            this.efct_com = new AppMain.GMS_EFFECT_COM_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.efct_com.Cast();
        }
    }

    public class GMS_CMN_FLASH_SCR_WORK : AppMain.IClearable
    {
        public AppMain.GMS_FADE_OBJ_WORK fade_obj_work;
        public uint active_flag;
        public float duration_frame;
        public float fi_frame;
        public float duration_timer;

        public void Clear()
        {
            this.fade_obj_work = (AppMain.GMS_FADE_OBJ_WORK)null;
            this.active_flag = 0U;
            this.duration_frame = this.fi_frame = this.duration_timer = 0.0f;
        }
    }

    public class GMS_BOSS5_SCT_PART_NDC_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public AppMain.NNS_QUATERNION spin_quat = new AppMain.NNS_QUATERNION();
        public readonly AppMain.GMS_BS_CMN_NODE_CTRL_OBJECT ndc_obj;

        public GMS_BOSS5_SCT_PART_NDC_WORK()
        {
            this.ndc_obj = new AppMain.GMS_BS_CMN_NODE_CTRL_OBJECT((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ndc_obj.Cast();
        }
    }

    public class GMS_BS_CMN_NODE_CTRL_OBJECT : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.NNS_VECTOR user_ofst = new AppMain.NNS_VECTOR();
        public readonly AppMain.NNS_MATRIX w_mtx = AppMain.GlobalPool<AppMain.NNS_MATRIX>.Alloc();
        public object m_pHolder;
        public readonly AppMain.GMS_EFFECT_COM_WORK efct_com;
        public AppMain.GMS_BS_CMN_CNM_MGR_WORK cnm_mgr_work;
        public int cnm_reg_id;
        public AppMain.GMS_BS_CMN_SNM_WORK snm_work;
        public int snm_reg_id;
        public AppMain.NNS_QUATERNION user_quat;
        public uint user_timer;
        public int is_enable;
        public AppMain.MPP_VOID_OBS_OBJECT_WORK proc_update;

        public GMS_BS_CMN_NODE_CTRL_OBJECT()
        {
            this.efct_com = new AppMain.GMS_EFFECT_COM_WORK((object)this);
        }

        public GMS_BS_CMN_NODE_CTRL_OBJECT(object holder)
        {
            this.efct_com = new AppMain.GMS_EFFECT_COM_WORK((object)this);
            this.m_pHolder = holder;
        }

        public static explicit operator AppMain.GMS_BOSS5_SCT_PART_NDC_WORK(
          AppMain.GMS_BS_CMN_NODE_CTRL_OBJECT p)
        {
            return (AppMain.GMS_BOSS5_SCT_PART_NDC_WORK)p.m_pHolder;
        }

        public static explicit operator AppMain.GMS_BOSS2_EFFECT_SCATTER_WORK(
          AppMain.GMS_BS_CMN_NODE_CTRL_OBJECT p)
        {
            return (AppMain.GMS_BOSS2_EFFECT_SCATTER_WORK)p.m_pHolder;
        }

        public static explicit operator AppMain.GMS_BOSS1_EFF_SCT_PART_NDC_WORK(
          AppMain.GMS_BS_CMN_NODE_CTRL_OBJECT p)
        {
            return (AppMain.GMS_BOSS1_EFF_SCT_PART_NDC_WORK)p.m_pHolder;
        }

        public static explicit operator AppMain.GMS_EFFECT_COM_WORK(
          AppMain.GMS_BS_CMN_NODE_CTRL_OBJECT p)
        {
            return (AppMain.GMS_EFFECT_COM_WORK)p.efct_com.obj_work;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.efct_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(
          AppMain.GMS_BS_CMN_NODE_CTRL_OBJECT work)
        {
            return work.efct_com.obj_work;
        }
    }

    public class GMS_BOSS5_ALARM_FADE_INFO
    {
        public uint fo_frame;
        public uint on_frame;
        public uint fi_frame;
        public uint off_frame;

        public GMS_BOSS5_ALARM_FADE_INFO(uint a, uint b, uint c, uint d)
        {
            this.fo_frame = a;
            this.on_frame = b;
            this.fi_frame = c;
            this.off_frame = d;
        }
    }

    public class GMS_BOSS5_SCT_PART_INFO
    {
        public int cnm_mode;
        public int is_local_coord;
        public int is_inherit_scale;

        public GMS_BOSS5_SCT_PART_INFO(int a, int b, int c)
        {
            this.cnm_mode = a;
            this.is_local_coord = b;
            this.is_inherit_scale = c;
        }
    }

    public class GMS_BOSS5_SCT_NDC_INFO
    {
        public int part_idx;
        public uint delay_time;

        public GMS_BOSS5_SCT_NDC_INFO(int a, uint b)
        {
            this.part_idx = a;
            this.delay_time = b;
        }
    }

    public class GMS_BOSS5_PART_ACT_INFO
    {
        public ushort act_id;
        public byte is_maintain;
        public byte is_repeat;
        public float mtn_spd;
        public int is_blend;
        public float blend_spd;
        public int is_merge_manual;

        public GMS_BOSS5_PART_ACT_INFO()
        {
            this.act_id = (ushort)0;
            this.is_maintain = this.is_repeat = (byte)0;
            this.mtn_spd = this.blend_spd = 0.0f;
            this.is_blend = this.is_merge_manual = 0;
        }

        public GMS_BOSS5_PART_ACT_INFO(
          ushort actId,
          byte isMantain,
          byte isRepeat,
          float mspd,
          int blend,
          float bspd,
          int merge)
        {
            this.act_id = actId;
            this.is_maintain = isMantain;
            this.is_repeat = isRepeat;
            this.mtn_spd = mspd;
            this.is_blend = blend;
            this.blend_spd = bspd;
            this.is_merge_manual = merge;
        }
    }

    public class GMS_BOSS5_MOVE_INFO
    {
        public float switching_frame;
        public int move_phase_type;

        public GMS_BOSS5_MOVE_INFO(float a, int b)
        {
            this.switching_frame = a;
            this.move_phase_type = b;
        }
    }

    public class GMD_BOSS5_WALK_GROUND_TIMING_INFO
    {
        public float grounding_frame;
        public int leg_type;

        public GMD_BOSS5_WALK_GROUND_TIMING_INFO(float a, int b)
        {
            this.grounding_frame = a;
            this.leg_type = b;
        }
    }

    public class GMS_BOSS5_ARM_PART_ANIM_INFO
    {
        public readonly AppMain.NNS_ROTATE_A32 start_rot = new AppMain.NNS_ROTATE_A32();
        public readonly AppMain.NNS_ROTATE_A32 end_rot = new AppMain.NNS_ROTATE_A32();
        public int is_anim;

        public GMS_BOSS5_ARM_PART_ANIM_INFO()
        {
        }

        public GMS_BOSS5_ARM_PART_ANIM_INFO(
          int anim,
          AppMain.NNS_ROTATE_A32 rot,
          AppMain.NNS_ROTATE_A32 erot)
        {
            this.is_anim = anim;
            this.start_rot = rot;
            this.end_rot = erot;
        }
    }

    public class GMS_BOSS5_ARM_ANIM_INFO
    {
        public AppMain.GMS_BOSS5_ARM_PART_ANIM_INFO[] part_anim_info = AppMain.New<AppMain.GMS_BOSS5_ARM_PART_ANIM_INFO>(3);
        public uint wait_time;
        public float slerp_inc_rate;

        public GMS_BOSS5_ARM_ANIM_INFO()
        {
        }

        public GMS_BOSS5_ARM_ANIM_INFO(
          uint wait,
          float sincrate,
          AppMain.GMS_BOSS5_ARM_PART_ANIM_INFO[] part)
        {
            this.wait_time = wait;
            this.slerp_inc_rate = sincrate;
            this.part_anim_info = part;
        }
    }

    public class GMS_BOSS5_RECTPOINT_SETTING_INFO
    {
        public short[][] rect_size = AppMain.New<short>(3, 4);
        public uint enable_bit_flag;

        public GMS_BOSS5_RECTPOINT_SETTING_INFO()
        {
        }

        public GMS_BOSS5_RECTPOINT_SETTING_INFO(uint bitFlag, short[][] rectsize)
        {
            this.enable_bit_flag = bitFlag;
            this.rect_size = rectsize;
        }
    }

    public class GMS_BOSS5_BODY_RECT_SETTING_INFO
    {
        public AppMain.GMS_BOSS5_RECTPOINT_SETTING_INFO[] point_setting_info = AppMain.New<AppMain.GMS_BOSS5_RECTPOINT_SETTING_INFO>(3);
        public int is_invincible;
        public int is_leakage;

        public GMS_BOSS5_BODY_RECT_SETTING_INFO(
          int invis,
          int leakage,
          AppMain.GMS_BOSS5_RECTPOINT_SETTING_INFO[] info)
        {
            this.is_invincible = invis;
            this.is_leakage = leakage;
            this.point_setting_info = info;
        }
    }

    public class GMS_BOSS5_BODY_STATE_ENTER_INFO
    {
        public AppMain.MPP_VOID_GMS_BOSS5_BODY_WORK enter_func;
        public int is_wrapped;

        public GMS_BOSS5_BODY_STATE_ENTER_INFO(AppMain.MPP_VOID_GMS_BOSS5_BODY_WORK ef, int wrp)
        {
            this.enter_func = ef;
            this.is_wrapped = wrp;
        }
    }

    public class GMS_BOSS5_BODY_SUBSEQ_ENTER_INFO
    {
        public AppMain.MPP_VOID_GMS_BOSS5_BODY_WORK enter_func;
        public int super_state;

        public GMS_BOSS5_BODY_SUBSEQ_ENTER_INFO(AppMain.MPP_VOID_GMS_BOSS5_BODY_WORK a, int b)
        {
            this.enter_func = a;
            this.super_state = b;
        }
    }

    public class GMS_BOSS5_STRAT_PROB_INFO
    {
        public int strat_state;
        public int probability;
        public int is_rkt;

        public GMS_BOSS5_STRAT_PROB_INFO(int a, int b, int c)
        {
            this.strat_state = a;
            this.probability = b;
            this.is_rkt = c;
        }
    }

    public class VecFx16
    {
        public short x;
        public short y;
        public short z;

        public VecFx16()
          : this((short)0, (short)0, (short)0)
        {
        }

        public VecFx16(short _x, short _y, short _z)
        {
            this.x = _x;
            this.y = _y;
            this.z = _z;
        }

        public VecFx16(AppMain.VecFx16 vecFx16)
        {
            this.x = vecFx16.x;
            this.y = vecFx16.y;
            this.z = vecFx16.z;
        }

        public AppMain.VecFx16 Assign(AppMain.VecFx16 vecFx16)
        {
            if (this != vecFx16)
            {
                this.x = vecFx16.x;
                this.y = vecFx16.y;
                this.z = vecFx16.z;
            }
            return this;
        }
    }

    private enum DME_TITLE_DATA_TYPE
    {
        DME_TITLE_DATA_TYPE_CMN_DATA,
        DME_TITLE_DATA_TYPE_LANG_DATA,
        DME_TITLE_DATA_TYPE_MAX,
        DME_TITLE_DATA_TYPE_NONE,
    }

    private enum DME_TITLE_NEXT_EVT
    {
        DME_TITLE_NEXT_EVT_MAINGAME_1_1,
        DME_TITLE_NEXT_EVT_STAGESELECT,
        DME_TITLE_NEXT_EVT_OPTION,
        DME_TITLE_NEXT_EVT_RANKING,
        DME_TITLE_NEXT_EVT_LOGO,
        DME_TITLE_NEXT_EVT_TITLE,
        DME_TITLE_NEXT_EVT_MAX,
        DME_TITLE_NEXT_EVT_NONE,
    }

    private enum DME_TITLE_MENU_TYPE
    {
        DME_TITLE_MENU_TYPE_START,
        DME_TITLE_MENU_TYPE_TUDUKI,
        DME_TITLE_MENU_TYPE_OPTION,
        DME_TITLE_MENU_TYPE_ACHIEVEMENTS,
        DME_TITLE_MENU_TYPE_LEADERBOARDS,
        DME_TITLE_MENU_TYPE_NUM,
        DME_TITLE_MENU_TYPE_NONE,
    }

    private enum DME_TITLE_WIN_TYPE
    {
        DME_TITLE_WIN_TYPE_DEL_DATA1,
        DME_TITLE_WIN_TYPE_DEL_DATA2,
        DME_TITLE_WIN_TYPE_DEL_DATA3,
        DME_TITLE_WIN_TYPE_DEL_DATA4,
        DME_TITLE_WIN_TYPE_DEL_DATA5,
        DME_TITLE_WIN_TYPE_MAX,
        DME_TITLE_WIN_TYPE_NONE,
    }

    private enum DME_TITLE_ACT
    {
        ACT_BTN_L = 0,
        ACT_BTN_C = 1,
        ACT_BTN_R = 2,
        ACT_BTN_L2 = 3,
        ACT_BTN_C2 = 4,
        ACT_BTN_R2 = 5,
        ACT_BTN_L3 = 6,
        ACT_BTN_C3 = 7,
        ACT_BTN_R3 = 8,
        ACT_BTN_L4 = 9,
        ACT_BTN_C4 = 10, // 0x0000000A
        ACT_BTN_R4 = 11, // 0x0000000B
        ACT_BTN_L5 = 12, // 0x0000000C
        ACT_BTN_C5 = 13, // 0x0000000D
        ACT_BTN_R5 = 14, // 0x0000000E
        ACT_BACK_BTN_L = 15, // 0x0000000F
        ACT_BACK_BTN_R = 16, // 0x00000010
        ACT_GAME_BTN_L = 17, // 0x00000011
        ACT_GAME_BTN_R = 18, // 0x00000012
        ACT_LANG = 19, // 0x00000013
        ACT_TEX_START = 19, // 0x00000013
        ACT_NONE = 20, // 0x00000014
        ACT_TEX_GAME = 20, // 0x00000014
        ACT_TEX_TUDUKI = 21, // 0x00000015
        ACT_TEX_OPTION = 22, // 0x00000016
        ACT_TEX_KANZENBAN = 23, // 0x00000017
        ACT_TEX_ACHIEVEMENTS = 24, // 0x00000018
        ACT_TEX_LEADERBOARDS = 25, // 0x00000019
        ACT_TEX_TOP_BACK = 26, // 0x0000001A
        ACT_TEX_TOP_GAME = 27, // 0x0000001B
        ACT_WIN_TEX_MSG1 = 28, // 0x0000001C
        ACT_WIN_TEX_MSG2 = 29, // 0x0000001D
        ACT_BTN_CANCEL = 30, // 0x0000001E
        ACT_BTN_X = 31, // 0x0000001F
        ACT_WIN_NO_BTN_L = 32, // 0x00000020
        ACT_WIN_NO_BTN_C = 33, // 0x00000021
        ACT_WIN_NO_BTN_R = 34, // 0x00000022
        ACT_WIN_YES_BTN_L = 35, // 0x00000023
        ACT_WIN_YES_BTN_C = 36, // 0x00000024
        ACT_WIN_YES_BTN_R = 37, // 0x00000025
        ACT_TEX_YES = 38, // 0x00000026
        ACT_TEX_NO = 39, // 0x00000027
        ACT_TEX_BACK = 40, // 0x00000028
        ACT_NUM = 41, // 0x00000029
    }

    public class DMS_TITLE_MAIN_WORK
    {
        public readonly AppMain.AMS_FS[] arc_cmn_amb_fs = new AppMain.AMS_FS[4];
        public readonly AppMain.AMS_AMB_HEADER[] arc_cmn_amb = new AppMain.AMS_AMB_HEADER[4];
        public readonly AppMain.A2S_AMA_HEADER[] cmn_ama = new AppMain.A2S_AMA_HEADER[4];
        public readonly AppMain.AMS_AMB_HEADER[] cmn_amb = new AppMain.AMS_AMB_HEADER[4];
        public readonly AppMain.AOS_TEXTURE[] cmn_tex = AppMain.New<AppMain.AOS_TEXTURE>(4);
        public readonly AppMain.DMS_BUY_SCR_WORK buy_scr_work = new AppMain.DMS_BUY_SCR_WORK();
        public readonly AppMain.AMS_FS[] arc_amb_fs = new AppMain.AMS_FS[2];
        public readonly AppMain.AMS_FS[] file_arc_amb_fs = new AppMain.AMS_FS[2];
        public readonly AppMain.AMS_FS[] user_arc_amb_fs = new AppMain.AMS_FS[2];
        public readonly AppMain.AMS_AMB_HEADER[] arc_amb = new AppMain.AMS_AMB_HEADER[2];
        public readonly AppMain.AMS_AMB_HEADER[] file_arc_amb = new AppMain.AMS_AMB_HEADER[2];
        public readonly AppMain.AMS_AMB_HEADER[] user_arc_amb = new AppMain.AMS_AMB_HEADER[2];
        public readonly AppMain.A2S_AMA_HEADER[] ama = new AppMain.A2S_AMA_HEADER[2];
        public readonly AppMain.AMS_AMB_HEADER[] amb = new AppMain.AMS_AMB_HEADER[2];
        public readonly AppMain.AOS_TEXTURE[] tex = AppMain.New<AppMain.AOS_TEXTURE>(2);
        public readonly AppMain.AOS_TEXTURE win_tex = new AppMain.AOS_TEXTURE();
        public readonly AppMain.AOS_ACTION[] act = new AppMain.AOS_ACTION[41];
        public readonly float[] decide_menu_frm = new float[5];
        public readonly float[] mmenu_win_size_rate = new float[2];
        public readonly float[] win_size_rate = new float[2];
        public readonly CTrgAoAction[] trg_slct = AppMain.New<CTrgAoAction>(5);
        public readonly CTrgAoAction[] trg_answer = AppMain.New<CTrgAoAction>(2);
        public readonly CTrgAoAction trg_return = new CTrgAoAction();
        public readonly CTrgAoAction trg_game = new CTrgAoAction();
        public AppMain.AMS_FS cmn_win_amb_fs;
        public AppMain.AMS_FS win_amb_fs;
        public AppMain.AMS_AMB_HEADER cmn_win_amb;
        public AppMain.AMS_AMB_HEADER win_amb;
        public AppMain.DMS_TITLE_MAIN_WORK._proc_ proc_input;
        public AppMain.DMS_TITLE_MAIN_WORK._proc_ proc_update;
        public AppMain.DMS_TITLE_MAIN_WORK._proc_ proc_win_input;
        public AppMain.DMS_TITLE_MAIN_WORK._proc_ proc_win_update;
        public AppMain.DMS_TITLE_MAIN_WORK._proc_ proc_draw;
        public float timer;
        public float disp_timer;
        public float win_timer;
        public float mmenu_win_timer;
        public uint flag;
        public int disp_change_time;
        public uint announce_flag;
        public int win_mode;
        public int cur_slct_menu;
        public int prev_slct_menu;
        public int win_cur_slct;
        public int next_evt;
        public bool is_init_play;
        public bool is_jp_region;
        public bool is_no_save_data;
        public float cur_crsr_pos_y;
        public float src_crsr_pos_y;
        public float dst_crsr_pos_y;
        public int slct_menu_num;
        public uint disp_flag;
        public uint flag_prev;

        public delegate void _proc_(AppMain.DMS_TITLE_MAIN_WORK work);
    }

    [StructLayout(LayoutKind.Sequential, Size = 1)]
    public struct CLocalBtnBase_EBtn
    {
        public enum Type
        {
            Left,
            Center,
            Right,
            Max,
            None,
        }
    }

    [StructLayout(LayoutKind.Sequential, Size = 1)]
    public struct CLocalBtnBase_EType
    {
        public enum Type
        {
            Dark,
            Normal,
            Max,
            None,
        }
    }

    [StructLayout(LayoutKind.Sequential, Size = 1)]
    public struct CLocalBtnBase_EAct
    {
        public enum Type
        {
            Game,
            Tuduki,
            Option,
            Achievements,
            Leaderboards,
            Max,
            None,
        }
    }

    public class DMS_SND_BGM_PLAYER_MAIN_WORK
    {
        public AppMain.DMS_SND_BGM_PLAYER_MAIN_WORK._proc_ proc_update;
        public uint flag;
        public int end_timer;

        public delegate void _proc_(AppMain.DMS_SND_BGM_PLAYER_MAIN_WORK work);
    }

    public class DMS_OPT_MAIN_WORK
    {
        public AppMain.AMS_FS[] arc_cmn_amb_fs = new AppMain.AMS_FS[5];
        public AppMain.AMS_AMB_HEADER[] arc_cmn_amb = new AppMain.AMS_AMB_HEADER[5];
        public AppMain.A2S_AMA_HEADER[] cmn_ama = new AppMain.A2S_AMA_HEADER[5];
        public AppMain.AMS_AMB_HEADER[] cmn_amb = new AppMain.AMS_AMB_HEADER[5];
        public AppMain.AMS_FS[] arc_amb_fs = new AppMain.AMS_FS[2];
        public AppMain.AMS_FS[] user_arc_amb_fs = new AppMain.AMS_FS[2];
        public AppMain.AMS_FS[] manual_arc_amb_fs = new AppMain.AMS_FS[2];
        public AppMain.AMS_AMB_HEADER[] arc_amb = new AppMain.AMS_AMB_HEADER[2];
        public AppMain.AMS_AMB_HEADER[] user_arc_amb = new AppMain.AMS_AMB_HEADER[2];
        public AppMain.AMS_AMB_HEADER[] manual_arc_amb = new AppMain.AMS_AMB_HEADER[2];
        public AppMain.A2S_AMA_HEADER[] ama = new AppMain.A2S_AMA_HEADER[2];
        public AppMain.AMS_AMB_HEADER[] amb = new AppMain.AMS_AMB_HEADER[2];
        public AppMain.AOS_TEXTURE win_tex = new AppMain.AOS_TEXTURE();
        public AppMain.AOS_ACTION[] act = new AppMain.AOS_ACTION[102];
        public float[] push_efct_timer = new float[4];
        public int[] volume_data = new int[2];
        public CTrgAoAction[] trg_se_btn = new CTrgAoAction[2];
        public CTrgAoAction[] trg_ctrl_btn = new CTrgAoAction[2];
        public CTrgAoAction[] ctrl_win_trg_btn = new CTrgAoAction[2];
        public float[] ctrl_tab_pos_x = new float[2];
        public float[] ctrl_tab_pos_y = new float[2];
        public float[][] ctrl_move_src = AppMain.New<float>(2, 2);
        public float[][] ctrl_move_dest = AppMain.New<float>(2, 2);
        public float[] obi_tex_pos = new float[2];
        public float[] win_size_rate = new float[2];
        public AppMain.AOS_ACT_COL decide_menu_col = new AppMain.AOS_ACT_COL();
        public AppMain.AOS_ACT_COL vol_icon_col = new AppMain.AOS_ACT_COL();
        public AppMain.AOS_ACT_COL win_col = new AppMain.AOS_ACT_COL();
        public AppMain.AOS_TEXTURE[] cmn_tex;
        public AppMain.AMS_FS[] win_amb_fs;
        public AppMain.AMS_AMB_HEADER[] win_amb;
        public AppMain.AOS_TEXTURE[] tex;
        public AppMain.AOS_ACTION bg_icon_node;
        public AppMain.DMS_OPT_MAIN_WORK._proc_input_ proc_input;
        public AppMain.DMS_OPT_MAIN_WORK._proc_update_ proc_update;
        public AppMain.DMS_OPT_MAIN_WORK._proc_draw_ proc_draw;
        public AppMain.DMS_OPT_MAIN_WORK._proc_menu_draw_ proc_menu_draw;
        public float frm_update_time;
        public float timer;
        public float efct_timer;
        public float win_timer;
        public float vib_timer;
        public uint flag;
        public int state;
        public uint disp_flag;
        public int next_evt;
        public int prev_evt;
        public CTrgAoAction[] trg_slct;
        public CTrgAoAction trg_return;
        public int ctrl_mode;
        public int prev_ctrl_mode;
        public int set_vbrt;
        public CTrgAoAction[] trg_bgm_btn;
        public CTrgRect trg_bgm_slider;
        public CTrgRect trg_se_slider;
        public float ctrl_win_window_prgrs;
        public int cur_slct_top;
        public int cur_slct_set;
        public float top_crsr_pos_y;
        public float src_crsr_pos_y;
        public float dst_crsr_pos_y;
        public float obi_pos_y;
        public float set_icon_dir;
        public float set_icon_shdw_dir;
        public uint draw_state;
        public int nrml_disp_type;
        public int prev_nrml_disp_type;
        public bool is_jp_region;
        public AppMain.GSS_SND_SCB bgm_scb;
        public AppMain.GSS_SND_SE_HANDLE se_handle;

        public DMS_OPT_MAIN_WORK()
        {
            this.cmn_tex = AppMain.New<AppMain.AOS_TEXTURE>(5);
            this.tex = AppMain.New<AppMain.AOS_TEXTURE>(2);
            this.trg_slct = AppMain.New<CTrgAoAction>(4);
            this.trg_bgm_btn = AppMain.New<CTrgAoAction>(2);
            this.trg_se_btn = AppMain.New<CTrgAoAction>(2);
            this.trg_ctrl_btn = AppMain.New<CTrgAoAction>(2);
            this.ctrl_win_trg_btn = AppMain.New<CTrgAoAction>(2);
            this.trg_bgm_slider = new CTrgRect();
            this.trg_se_slider = new CTrgRect();
            this.trg_return = new CTrgAoAction();
        }

        public delegate void _proc_input_(AppMain.DMS_OPT_MAIN_WORK work);

        public delegate void _proc_update_(AppMain.DMS_OPT_MAIN_WORK work);

        public delegate void _proc_draw_(AppMain.DMS_OPT_MAIN_WORK work);

        public delegate void _proc_menu_draw_(AppMain.DMS_OPT_MAIN_WORK work);
    }

    public class DMS_OPT_MGR
    {
        public AppMain.MTS_TASK_TCB tcb;

        public void Clear()
        {
            this.tcb = (AppMain.MTS_TASK_TCB)null;
        }
    }

    private struct SResetLocalTable
    {
        public int act_idx;
        public int act_id;
        public int ama_idx;

        public SResetLocalTable(int a, int b, int c)
        {
            this.act_idx = a;
            this.act_id = b;
            this.ama_idx = c;
        }
    }

    private enum GSE_EVT_ID
    {
        GSD_EVT_ID_NOP,
        GSD_EVT_ID_SYS_INIT,
        GSD_EVT_ID_LOGO_SEGA,
        GSD_EVT_ID_TITLE,
        GSD_EVT_ID_MAINMENU,
        GSD_EVT_ID_MAP,
        GSD_EVT_ID_MAINGAME,
        GSD_EVT_ID_RANKING,
        GSD_EVT_ID_OPTION,
        GSD_EVT_ID_ENDING,
        GSD_EVT_ID_STAFFROLL,
        GSD_EVT_ID_SPSTAGE_BRANCH,
        GSD_EVT_ID_BUYSCREEN,
        GSD_EVT_ID_LOGO_SONIC,
        GSD_EVT_ID_MOVIE,
        GSD_EVT_ID_NUM,
    }

    public enum GSE_MAIN_STAGE_TYPE
    {
        GSD_MAIN_STAGE_TYPE_ACT,
        GSD_MAIN_STAGE_TYPE_BOSS,
        GSD_MAIN_STAGE_TYPE_SS,
        GSD_MAIN_STAGE_TYPE_MAX,
    }

    public class GSS_MAIN_SYS_INFO
    {
        public readonly int[] char_id = new int[1];
        public readonly SSave Save = new SSave();
        public uint main_flag;
        public uint game_flag;
        public uint sys_flag;
        public float sys_disp_width;
        public float sys_disp_height;
        public int level;
        public int game_mode;
        public ushort stage_id;
        public uint clear_ring;
        public uint clear_score;
        public int clear_time;
        public uint rest_player_num;
        public float se_volume;
        public float bgm_volume;
        public uint ene_kill_count;
        public uint final_clear_count;
        public uint is_save_run;
        public ushort prev_stage_id;
        public bool is_spe_clear;
        public bool is_first_play;

        public void Clear()
        {
            this.main_flag = 0U;
            this.game_flag = 0U;
            this.sys_flag = 0U;
            this.sys_disp_width = 0.0f;
            this.sys_disp_height = 0.0f;
            this.char_id[0] = 0;
            this.clear_ring = 0U;
            this.clear_score = 0U;
            this.clear_time = 0;
            this.rest_player_num = 0U;
            this.se_volume = 0.0f;
            this.bgm_volume = 0.0f;
            this.ene_kill_count = 0U;
            this.final_clear_count = 0U;
            this.is_save_run = 0U;
            this.Save.Init();
            this.prev_stage_id = (ushort)0;
            this.is_spe_clear = false;
            this.is_first_play = false;
        }
    }

    private enum NNE_FOG_MODEL
    {
        NNE_FOG_NONE,
        NNE_FOG_LINEAR,
        NNE_FOG_EXP,
        NNE_FOG_EXP2,
    }

    private enum NNE_ATTEN_FUNC
    {
        NNE_ATTEN_CONSTANT,
        NNE_ATTEN_INVLINEAR,
        NNE_ATTEN_INVQUADRATIC,
    }

    public struct NNS_SHADER_CONFIG
    {
        private int bNormalizeVertexNormal;
        private int bRescaleVertexNormal;
        private int nMaxParallelLight;
        private int nMaxPointLight;
        private int nMaxSpotLight;
        private int bLightAmbient;
        private AppMain.NNE_ATTEN_FUNC PointLightDistAtten;
        private AppMain.NNE_ATTEN_FUNC SpotLightDistAtten;
        private AppMain.NNE_FOG_MODEL FogModel;
        private int bDistanceFog;
        private int bFragmentFog;
        private uint nUserUniform;
        private int bHalfFloat;
        private int bNoScaleEnvelope;
        private int bVertexSpecular;
        private int bCalcBinormal;
    }

    public class NNS_SHADER_PROFILE
    {
        private int[] TexCoord = AppMain.New<int>(8);
        private int bLighting;
        private int bSpecular;
        private int bTwoSidedLighting;
        private int nFragParallelLight;
        private int nFragPointLight;
        private int NormalMapType;
        private int bBaseMap;
        private int nDecalMap;
        private int bSpecularMap;
        private int bShininessMap;
        private int bDualParaboloidMap;
        private int bEnvMaskMap;
        private int bModulateMap;
        private int bAddMap;
        private int bOpacityMap;
        private int bUser1Map;
        private int bUser2Map;
        private int bUser3Map;
        private int bUser4Map;
        private int bUser5Map;
        private int bUser6Map;
        private int bUser7Map;
        private int bUser8Map;
        private int nShadowMap;
        private int bUserSampler2D1;
        private int bUserSampler2D2;
        private int bUserSampler3D1;
        private int bUserSampler3D2;
        private int bUserSamplerCube1;
        private int bUserSamplerCube2;
        private uint UserProfile;
        private uint UserProfileDrawobj;
        private int nVertexMatrixIndex;
    }

    private class NNS_SHADER_NAME
    {
        private ulong low;
        private ulong high;
    }

    private enum NNE_SHADERTYPE
    {
        NNE_SHADERTYPE_NONE,
        NNE_SHADERTYPE_GLSL,
        NNE_SHADERTYPE_VP_FP,
    }

    private class NNS_COMPILED_SHADER_PROFILE
    {
        private AppMain.NNE_SHADERTYPE ShaderType;
        private uint ProgramObject;
        private uint VertexProgram;
        private uint FragmentProgram;
    }

    public class GMS_START_DEMO_DATA : AppMain.IClearable
    {
        public readonly AppMain.AOS_TEXTURE[] aos_texture = AppMain.New<AppMain.AOS_TEXTURE>(2);
        public readonly object[] demo_amb = new object[2];
        public bool flag_regist;

        public void Clear()
        {
            Array.Clear((Array)this.demo_amb, 0, this.demo_amb.Length);
            AppMain.ClearArray<AppMain.AOS_TEXTURE>(this.aos_texture);
            this.flag_regist = false;
        }
    }

    public class GMS_START_DEMO_WORK
    {
        public AppMain.GMS_COCKPIT_2D_WORK[] action_obj_work_cmn = new AppMain.GMS_COCKPIT_2D_WORK[4];
        public AppMain.GMS_COCKPIT_2D_WORK[] action_obj_work_zone = new AppMain.GMS_COCKPIT_2D_WORK[1];
        public AppMain.GMS_COCKPIT_2D_WORK[] action_obj_work_act = new AppMain.GMS_COCKPIT_2D_WORK[2];
        public uint counter;
        public uint flag;
        public AppMain.GMS_COCKPIT_2D_WORK action_obj_work_message;
        public AppMain.GMS_START_DEMO_WORK._update_ update;

        public delegate void _update_(AppMain.GMS_START_DEMO_WORK cont);
    }

    public class GMS_START_DEMO_MGR : AppMain.IClearable
    {
        public AppMain.MTS_TASK_TCB main_tcb;

        public void Clear()
        {
            this.main_tcb = (AppMain.MTS_TASK_TCB)null;
        }
    }

    public class GMS_SPL_STG_WORK
    {
        public readonly AppMain.NNS_VECTOR light_vec = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public uint counter;
        public uint flag;
        public int roll;
        public int roll_spd;
        public ushort get_ring;
    }

    public delegate void _ring_work_func_delegate_(AppMain.GMS_RING_WORK gms_ring_work);

    public class GMS_RING_WORK : AppMain.IClearable
    {
        public AppMain.VecFx32 pos = new AppMain.VecFx32();
        public AppMain.VecFx32 scale = new AppMain.VecFx32();
        public int spd_x;
        public int spd_y;
        public short timer;
        public ushort flag;
        public AppMain.GMS_EVE_RECORD_RING eve_rec;
        public AppMain.GMS_RING_WORK pre_ring;
        public AppMain.GMS_RING_WORK post_ring;
        public AppMain.OBS_OBJECT_WORK duct_obj;

        public void Clear()
        {
            this.pos.Clear();
            this.scale.Clear();
            this.spd_x = 0;
            this.spd_y = 0;
            this.timer = (short)0;
            this.flag = (ushort)0;
            this.eve_rec = (AppMain.GMS_EVE_RECORD_RING)null;
            this.pre_ring = (AppMain.GMS_RING_WORK)null;
            this.post_ring = (AppMain.GMS_RING_WORK)null;
            this.duct_obj = (AppMain.OBS_OBJECT_WORK)null;
        }
    }

    public delegate ushort _rec_func_(AppMain.OBS_RECT obs_rect1, AppMain.OBS_RECT obs_rect2);

    public class OBS_RECT : AppMain.IClearable
    {
        public AppMain.VecFx32 pos = new AppMain.VecFx32();
        public short left;
        public short top;
        public short back;
        public short right;
        public short bottom;
        public short front;

        public void Clear()
        {
            this.left = this.top = this.back = (short)0;
            this.right = (short)0;
            this.width = (ushort)0;
            this.height = (ushort)0;
            this.bottom = (short)0;
            this.height = (ushort)0;
            this.front = (short)0;
            this.depth = (short)0;
        }

        public ushort width
        {
            get
            {
                return (ushort)this.right;
            }
            set
            {
                this.right = (short)value;
            }
        }

        public ushort height
        {
            get
            {
                return (ushort)this.bottom;
            }
            set
            {
                this.bottom = (short)value;
            }
        }

        public short depth
        {
            get
            {
                return this.front;
            }
            set
            {
                this.front = value;
            }
        }
    }

    public class GMS_RING_SYS_WORK : AppMain.IClearable
    {
        public byte[] damage_num = new byte[1];
        public AppMain.GMS_RING_WORK[] ring_list = new AppMain.GMS_RING_WORK[96];
        public AppMain.GMS_RING_WORK[] ring_list_buf = AppMain.New<AppMain.GMS_RING_WORK>(96);
        public AppMain.VecFx32[] draw_ring_pos = AppMain.New<AppMain.VecFx32>(96);
        public AppMain.GSS_SND_SE_HANDLE[] h_snd_ring = new AppMain.GSS_SND_SE_HANDLE[8];
        public uint flag;
        public AppMain._ring_work_func_delegate_ ring_draw_func;
        public AppMain._rec_func_ rec_func;
        public AppMain._ring_work_func_delegate_ col_func;
        public ushort dir;
        public byte player_num;
        public short ref_spd_base;
        public AppMain.GMS_RING_WORK ring_list_start;
        public AppMain.GMS_RING_WORK ring_list_end;
        public AppMain.GMS_RING_WORK twinkle_list_start;
        public AppMain.GMS_RING_WORK twinkle_list_end;
        public AppMain.GMS_RING_WORK damage_ring_list_start;
        public AppMain.GMS_RING_WORK damage_ring_list_end;
        public AppMain.GMS_RING_WORK slot_ring_list_start;
        public AppMain.GMS_RING_WORK slot_ring_list_end;
        public int ring_list_cnt;
        public int wait_slot_ring_num;
        public ushort slot_ring_create_dir;
        public AppMain.OBS_OBJECT_WORK slot_target_obj;
        public int slot_ring_timer;
        public ushort draw_ring_count;
        public ushort draw_ring_uv_frame;
        public int ring_se_cnt;
        public uint color;
        public int se_wait;

        public void Clear()
        {
            this.flag = 0U;
            this.ring_draw_func = (AppMain._ring_work_func_delegate_)null;
            this.rec_func = (AppMain._rec_func_)null;
            this.col_func = (AppMain._ring_work_func_delegate_)null;
            this.dir = (ushort)0;
            Array.Clear((Array)this.damage_num, 0, 1);
            this.player_num = (byte)0;
            this.ref_spd_base = (short)0;
            this.ring_list_start = (AppMain.GMS_RING_WORK)null;
            this.ring_list_end = (AppMain.GMS_RING_WORK)null;
            this.twinkle_list_start = (AppMain.GMS_RING_WORK)null;
            this.twinkle_list_end = (AppMain.GMS_RING_WORK)null;
            this.damage_ring_list_start = (AppMain.GMS_RING_WORK)null;
            this.damage_ring_list_end = (AppMain.GMS_RING_WORK)null;
            this.slot_ring_list_start = (AppMain.GMS_RING_WORK)null;
            this.slot_ring_list_end = (AppMain.GMS_RING_WORK)null;
            this.ring_list_cnt = 0;
            Array.Clear((Array)this.ring_list, 0, 96);
            AppMain.ClearArray<AppMain.GMS_RING_WORK>(this.ring_list_buf);
            this.wait_slot_ring_num = 0;
            this.slot_ring_create_dir = (ushort)0;
            this.slot_target_obj = (AppMain.OBS_OBJECT_WORK)null;
            this.slot_ring_timer = 0;
            this.draw_ring_count = (ushort)0;
            this.draw_ring_uv_frame = (ushort)0;
            AppMain.ClearArray<AppMain.VecFx32>(this.draw_ring_pos);
            Array.Clear((Array)this.h_snd_ring, 0, 2);
            this.ring_se_cnt = 0;
            this.color = 0U;
            this.se_wait = 0;
        }
    }

    public class GMS_GMK_SS_SQR_MAT_CB_PARAM
    {
        public uint draw_id;
    }

    public class GMS_GMK_BOSS5_LAND_PLACE_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK ene_3d;

        public GMS_GMK_BOSS5_LAND_PLACE_WORK()
        {
            this.ene_3d = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ene_3d.ene_com.obj_work;
        }
    }

    private class GMS_CLRDM_MAIN_WORK
    {
        public readonly AppMain.AMS_FS[] ama_fs = new AppMain.AMS_FS[2];
        public readonly AppMain.AMS_FS[] amb_fs = new AppMain.AMS_FS[2];
        public readonly AppMain.A2S_AMA_HEADER[] ama = new AppMain.A2S_AMA_HEADER[2];
        public readonly AppMain.AMS_AMB_HEADER[] amb = new AppMain.AMS_AMB_HEADER[2];
        public readonly AppMain.AOS_TEXTURE[] tex = AppMain.New<AppMain.AOS_TEXTURE>(2);
        public readonly AppMain.GMS_COCKPIT_2D_WORK[] tex_up_act = new AppMain.GMS_COCKPIT_2D_WORK[5];
        public readonly AppMain.GMS_COCKPIT_2D_WORK[] time_num_act = new AppMain.GMS_COCKPIT_2D_WORK[5];
        public readonly AppMain.GMS_COCKPIT_2D_WORK[] ring_num_act = new AppMain.GMS_COCKPIT_2D_WORK[5];
        public readonly AppMain.GMS_COCKPIT_2D_WORK[] total_num_act = new AppMain.GMS_COCKPIT_2D_WORK[9];
        public readonly AppMain.GMS_COCKPIT_2D_WORK[] line_act = new AppMain.GMS_COCKPIT_2D_WORK[3];
        public readonly AppMain.GMS_COCKPIT_2D_WORK[] record_time_num_act = new AppMain.GMS_COCKPIT_2D_WORK[7];
        public readonly CTrgAoAction trg_retry = new CTrgAoAction();
        public readonly AppMain.GMS_COCKPIT_2D_WORK[] btn_retry = new AppMain.GMS_COCKPIT_2D_WORK[3];
        public readonly CTrgAoAction trg_back = new CTrgAoAction();
        public readonly AppMain.GMS_COCKPIT_2D_WORK[] btn_back = new AppMain.GMS_COCKPIT_2D_WORK[3];
        public readonly AppMain.GMS_COCKPIT_2D_WORK[] tex_spst_up_act = new AppMain.GMS_COCKPIT_2D_WORK[3];
        public readonly AppMain.GMS_COCKPIT_2D_WORK[] spst_num_act = new AppMain.GMS_COCKPIT_2D_WORK[7];
        public readonly AppMain.GMS_COCKPIT_2D_WORK[] icon_emer_up_act = new AppMain.GMS_COCKPIT_2D_WORK[7];
        public readonly AppMain.GMS_COCKPIT_2D_WORK[] icon_emer_down_act = new AppMain.GMS_COCKPIT_2D_WORK[7];
        public readonly uint[] time_score = new uint[2];
        public readonly uint[] ring_score = new uint[2];
        public readonly uint[] total_score = new uint[2];
        public AppMain.GMS_COCKPIT_2D_WORK tex_time_act;
        public AppMain.GMS_COCKPIT_2D_WORK tex_ring_act;
        public AppMain.GMS_COCKPIT_2D_WORK tex_total_act;
        public AppMain.GMS_COCKPIT_2D_WORK sonic_icon_act;
        public AppMain.GMS_COCKPIT_2D_WORK sonic_icon_act2;
        public AppMain.GMS_COCKPIT_2D_WORK tex_big_time_act;
        public AppMain.GMS_COCKPIT_2D_WORK time_sonic_icon_act;
        public AppMain.GMS_COCKPIT_2D_WORK tex_new_record_act;
        public AppMain.GMS_COCKPIT_2D_WORK tex_retry_act;
        public AppMain.GMS_COCKPIT_2D_WORK tex_back_slct_act;
        public AppMain.GMS_COCKPIT_2D_WORK bg_retry;
        public AppMain.GMS_COCKPIT_2D_WORK icon_emer_light_act;
        public AppMain.GMS_COCKPIT_2D_WORK tex_extend_act;
        public AppMain.GMS_CLRDM_MAIN_WORK._WorkDelegate proc_input;
        public AppMain.GMS_CLRDM_MAIN_WORK._WorkDelegate proc_update;
        public AppMain.GMS_CLRDM_MAIN_WORK._WorkDelegate proc_calc_score;
        public uint clear_time;
        public ushort time_min;
        public ushort time_sec;
        public ushort time_msec;
        public float timer;
        public float flash_timer;
        public uint flag;
        public int idle_time;
        public int count;
        public int game_mode;
        public bool is_clear_spe_stg;
        public bool is_full_eme;
        public bool is_get_eme;
        public int has_eme_num;
        public int get_eme_no;
        public bool is_first_spe_clear;
        public int next_evt;
        public uint cur_retry_slct;
        public ushort stage_id;
        public ushort prev_spe_stage_id;
        public bool nodisp_check;

        public delegate void _WorkDelegate(AppMain.GMS_CLRDM_MAIN_WORK pArg);
    }

    private class GMS_CLRDM_MGR
    {
        public AppMain.MTS_TASK_TCB tcb;

        public void Clear()
        {
            this.tcb = (AppMain.MTS_TASK_TCB)null;
        }
    }

    public class GMS_BOSS5_TURRET_SEQ_VUL_SHOT_INFO
    {
        public int life_threshold;
        public uint wait_time;
        public int shot_num;

        public GMS_BOSS5_TURRET_SEQ_VUL_SHOT_INFO(int a, uint b, int c)
        {
            this.life_threshold = a;
            this.wait_time = b;
            this.shot_num = c;
        }
    }

    private static class gmBoss4ChibiGetAttackTypeStatics
    {
        public static int _index = 0;
        public static readonly int[] life2_tbl = new int[20]
        {
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      1,
      0,
      0
        };
        public static readonly int[] life1_tbl = new int[20]
        {
      0,
      1,
      0,
      1,
      0,
      2,
      1,
      2,
      1,
      2,
      0,
      1,
      2,
      1,
      0,
      2,
      1,
      0,
      1,
      2
        };
        public static readonly int[] life3_tbl_f = new int[20]
        {
      0,
      0,
      3,
      0,
      0,
      0,
      0,
      3,
      0,
      0,
      0,
      0,
      3,
      0,
      0,
      0,
      0,
      3,
      0,
      0
        };
        public static readonly int[] life2_tbl_f = new int[20]
        {
      0,
      0,
      3,
      0,
      1,
      0,
      0,
      3,
      0,
      1,
      0,
      0,
      3,
      0,
      1,
      0,
      1,
      3,
      0,
      0
        };
        public static readonly int[] life1_tbl_f = new int[20]
        {
      0,
      1,
      3,
      1,
      0,
      2,
      1,
      0,
      1,
      2,
      3,
      1,
      0,
      1,
      3,
      2,
      1,
      3,
      1,
      2
        };
    }

    private static class gmBoss4ChibiGetThrowTypeStatics
    {
        public static int _index = 0;
        public static readonly int[] _tbl = new int[20]
        {
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0
        };
    }

    public class GMS_BOSS4_PART_ACT_INFO
    {
        public ushort act_id;
        public byte is_maintain;
        public byte is_repeat;
        public float mtn_spd;
        public int is_blend;
        public float blend_spd;
        public bool is_merge_manual;

        public GMS_BOSS4_PART_ACT_INFO()
        {
        }

        public GMS_BOSS4_PART_ACT_INFO(
          int _act_id,
          bool _is_maintain,
          bool _is_repeat,
          float _mtn_spd,
          bool _is_blend,
          float _blend_spd,
          bool _is_merge_manual)
        {
            this.act_id = (ushort)_act_id;
            this.is_maintain = _is_maintain ? (byte)1 : (byte)0;
            this.is_repeat = _is_repeat ? (byte)1 : (byte)0;
            this.mtn_spd = _mtn_spd;
            this.is_blend = _is_blend ? 1 : 0;
            this.blend_spd = _blend_spd;
            this.is_merge_manual = _is_merge_manual;
        }
    }

    public class GMS_BOSS4_MTN_SUSPEND_WORK
    {
        public bool is_suspended;
        public uint suspend_timer;
    }

    private static class gmBoss4MgrMainStatics
    {
        public static float xold;
    }

    private static class gmCameraForceScrollFuncStatics
    {
        public static float ofst;
        public static int _damage_cnt;
    }

    public delegate void OBS_RECT_WORK_Delegate1(
      AppMain.OBS_RECT_WORK rectWork1,
      AppMain.OBS_RECT_WORK rectWork2);

    public delegate uint OBS_RECT_WORK_Delegate2(
      AppMain.OBS_RECT_WORK rectWork1,
      AppMain.OBS_RECT_WORK rectWork2);

    public class AMS_RENDER_MANAGER
    {
        public AppMain.AMS_RENDER_TARGET targetp;
        public AppMain.AMS_RENDER_TARGET target_now;
    }

    public class AMS_PAD_DATA : AppMain.IClearable
    {
        public readonly int[] keep_time = new int[0];
        public readonly int[] last_time = new int[0];
        public readonly int[] keep_atime = new int[0];
        public readonly int[] last_atime = new int[0];
        public uint state;
        public ushort direct;
        public ushort stand;
        public ushort release;
        public ushort repeat;
        public short timer_lv;
        public short timer_btn;
        public short alx;
        public short aly;
        public short arx;
        public short ary;
        public short al2;
        public short ar2;
        public ushort adirect;
        public ushort astand;
        public ushort arelease;
        public ushort arepeat;
        public short sensor_x;
        public short sensor_y;
        public short sensor_z;
        public short sensor_g;
        public int rot_x;
        public int rot_y;
        public int rot_z;
        public short point_flag;
        public short point_x;
        public short point_y;
        public float point_z;
        public int vib_flag;

        public void Clear()
        {
            this.state = 0U;
            this.direct = this.stand = this.release = this.repeat = (ushort)0;
            this.timer_lv = this.timer_btn = (short)0;
            this.alx = this.aly = this.arx = this.ary = this.al2 = this.ar2 = (short)0;
            this.adirect = this.astand = this.arelease = this.arepeat = (ushort)0;
            this.sensor_x = this.sensor_y = this.sensor_z = this.sensor_g = this.point_flag = this.point_x = this.point_y = (short)0;
            this.rot_x = this.rot_y = this.rot_z = this.vib_flag = 0;
            this.point_z = 0.0f;
            Array.Clear((Array)this.keep_time, 0, this.keep_time.Length);
            Array.Clear((Array)this.last_time, 0, this.last_time.Length);
            Array.Clear((Array)this.keep_atime, 0, this.keep_atime.Length);
            Array.Clear((Array)this.last_atime, 0, this.last_atime.Length);
        }
    }

    public delegate bool HGF_TROPHY_ACQUIRE_CHECK_FUNC();

    public class HGS_TROPHY_CHECK_INFO
    {
        public int trophy_type;
        public uint trophy_id;
        public AppMain.HGF_TROPHY_ACQUIRE_CHECK_FUNC acquire_check_func;

        public HGS_TROPHY_CHECK_INFO(
          int trophy,
          uint trophy_id,
          AppMain.HGF_TROPHY_ACQUIRE_CHECK_FUNC acquire_check_func)
        {
            this.trophy_type = trophy;
            this.trophy_id = trophy_id;
            this.acquire_check_func = acquire_check_func;
        }

        public HGS_TROPHY_CHECK_INFO()
        {
        }
    }

    public class HGS_TROPHY_CHECK_TIMING_INFO
    {
        public AppMain.HGS_TROPHY_CHECK_INFO[] check_info_tbl;
        public int num;

        public HGS_TROPHY_CHECK_TIMING_INFO(AppMain.HGS_TROPHY_CHECK_INFO[] tbl, int num)
        {
            this.check_info_tbl = tbl;
            this.num = num;
        }

        public HGS_TROPHY_CHECK_TIMING_INFO()
        {
        }
    }

    private struct GMS_GMK_CAPSULE_ANIMAL_SET_PARAM
    {
        public short ofs_x;
        public short ofs_y;
        public short ofs_z;
        public byte type;
        public byte vec;
        public ushort time;

        public GMS_GMK_CAPSULE_ANIMAL_SET_PARAM(
          short ofx,
          short ofy,
          short ofz,
          byte tp,
          byte vc,
          ushort tm)
        {
            this.ofs_x = ofx;
            this.ofs_y = ofy;
            this.ofs_z = ofz;
            this.type = tp;
            this.vec = vc;
            this.time = tm;
        }
    }

    private class GMS_CAMERA_WORK
    {
        public int flag;
        public int timer;
        public int offset;
        public float scale_now;
        public float scale_target;
        public float scale_spd;
    }

    private class GMS_BOSS5_RKT_SEQ_WAITFALL_INFO
    {
        public readonly int[] probability = new int[3];
        public readonly uint[] frame = new uint[3];
        public int life_threshold;

        public GMS_BOSS5_RKT_SEQ_WAITFALL_INFO(int life, int[] prob, uint[] fr)
        {
            this.life_threshold = life;
            this.probability = prob;
            this.frame = fr;
        }
    }

    public class GMS_BOSS3_PART_ACT_INFO
    {
        public ushort mtn_id;
        public byte is_maintain;
        public byte is_repeat;
        public float mtn_spd;
        public int is_blend;
        public float blend_spd;
        public int is_merge_manual;

        public GMS_BOSS3_PART_ACT_INFO(
          ushort id,
          byte mntain,
          byte isrep,
          float spd,
          int blnd,
          float bspd,
          int mergeman)
        {
            this.mtn_id = id;
            this.is_maintain = mntain;
            this.is_repeat = isrep;
            this.mtn_spd = spd;
            this.is_blend = blnd;
            this.blend_spd = bspd;
            this.is_merge_manual = mergeman;
        }
    }

    public delegate void GMF_BOSS3_BODY_STATE_FUNC(AppMain.GMS_BOSS3_BODY_WORK body_work);

    public delegate void GMF_BOSS3_EGG_STATE_FUNC(AppMain.GMS_BOSS3_EGG_WORK egg_work);

    public class GMS_BOSS3_EFF_BOMB_WORK
    {
        public int[] pos = new int[2];
        public int[] area = new int[2];
        public AppMain.OBS_OBJECT_WORK parent_obj;
        public uint interval_timer;
        public uint interval_min;
        public uint interval_max;
    }

    private static class nncalcmatrixpalettemotion
    {
        public static float nnsRootScale = 1f;
        public static int nnsSubMotIdx;
        public static AppMain.NNS_MATRIX nnsBaseMtx;
        public static AppMain.NNS_MATRIX[] nnsMtxPal;
        public static uint[] nnsNodeStatList;
        public static uint nnsNSFlag;
        public static AppMain.NNS_OBJECT nnsObj;
        public static AppMain.NNS_NODE[] nnsNodeList;
        public static AppMain.NNS_MATRIXSTACK nnsMstk;
        public static AppMain.NNS_MOTION nnsMot;
        public static float nnsFrame;
    }

    private class _nnCalcMotionRotate
    {
        public static int[] arv = new int[3];
        public static short[] arsv = new short[3];
    }

    public enum AME_AME_NODE_TYPE : ushort
    {
        AME_AME_CLASS_ID_MASK = 255, // 0x00FF
        AME_AME_NODE_TYPE_EMITTER = 256, // 0x0100
        AME_AME_NODE_TYPE_OMNI = 256, // 0x0100
        AME_AME_NODE_TYPE_DIRECTIONAL = 257, // 0x0101
        AME_AME_NODE_TYPE_SURFACE = 258, // 0x0102
        AME_AME_NODE_TYPE_CIRCLE = 259, // 0x0103
        AME_AME_NODE_TYPE_USER_EMITTER = 264, // 0x0108
        AME_AME_NODE_TYPE_PARTICLE = 512, // 0x0200
        AME_AME_NODE_TYPE_SIMPLE_SPRITE = 512, // 0x0200
        AME_AME_NODE_TYPE_SPRITE = 513, // 0x0201
        AME_AME_NODE_TYPE_LINE = 514, // 0x0202
        AME_AME_NODE_TYPE_PLANE = 515, // 0x0203
        AME_AME_NODE_TYPE_MODEL = 516, // 0x0204
        AME_AME_NODE_TYPE_USER_PARTICLE = 520, // 0x0208
        AME_AME_NODE_TYPE_FIELD = 768, // 0x0300
        AME_AME_NODE_TYPE_GRAVITY = 768, // 0x0300
        AME_AME_NODE_TYPE_UNIFORM = 769, // 0x0301
        AME_AME_NODE_TYPE_RADIAL = 770, // 0x0302
        AME_AME_NODE_TYPE_VORTEX = 771, // 0x0303
        AME_AME_NODE_TYPE_DRAG = 772, // 0x0304
        AME_AME_NODE_TYPE_NOISE = 773, // 0x0305
        AME_AME_NODE_TYPE_USER_FIELD = 776, // 0x0308
        AME_AME_SUPER_CLASS_ID_MASK = 65280, // 0xFF00
    }

    public enum AME_AME_BLEND_MODE
    {
        AME_AME_ALPHA_NORMAL,
        AME_AME_ALPHA_ADD,
        AME_AME_ALPHA_SUB,
        AME_AME_ALPHA_SUB1,
    }

    public class AMS_AME_BOUNDING
    {
        public readonly AppMain.NNS_VECTOR4D center = AppMain.GlobalPool<AppMain.NNS_VECTOR4D>.Alloc();
        public float radius;
        public float radius2;

        public AppMain.AMS_AME_BOUNDING Assign(AppMain.AMS_AME_BOUNDING bound)
        {
            this.center.Assign(bound.center);
            this.radius = bound.radius;
            this.radius2 = bound.radius2;
            return this;
        }

        public void Clear()
        {
            this.center.Clear();
            this.radius = 0.0f;
            this.radius2 = 0.0f;
        }
    }

    public class AMS_AME_NODE
    {
        public readonly char[] name = new char[12];
        public short id;
        public short type;
        public uint flag;
        public int child_offset;
        public AppMain.AMS_AME_NODE child;
        public int sibling_offset;
        public AppMain.AMS_AME_NODE sibling;
        public int parent_offset;
        public AppMain.AMS_AME_NODE parent;
    }

    public class AMS_AME_NODE_TR_ROT : AppMain.AMS_AME_NODE
    {
        public readonly AppMain.NNS_VECTOR4D translate = AppMain.GlobalPool<AppMain.NNS_VECTOR4D>.Alloc();
        public AppMain.NNS_QUATERNION rotate;
    }

    public struct AMS_AME_TEX_ANIM_KEY
    {
        public float time;
        public float l;
        public float t;
        public float r;
        public float b;
    }

    public class AMS_AME_TEX_ANIM
    {
        public float time;
        public int key_num;
        public AppMain.AMS_AME_TEX_ANIM_KEY[] key_buf;
    }

    public class AMS_AME_NODE_OMNI : AppMain.AMS_AME_NODE_TR_ROT
    {
        public float inheritance_rate;
        public float life;
        public float start_time;
        public float offset;
        public float offset_chaos;
        public float speed;
        public float speed_chaos;
        public float max_count;
        public float frequency;
    }

    public class AMS_AME_NODE_DIRECTIONAL : AppMain.AMS_AME_NODE_OMNI
    {
        public float spread;
        public float spread_variation;
    }

    public class AMS_AME_NODE_SURFACE : AppMain.AMS_AME_NODE_OMNI
    {
        public float width;
        public float width_variation;
        public float height;
        public float height_variation;
    }

    public class AMS_AME_NODE_CIRCLE : AppMain.AMS_AME_NODE_OMNI
    {
        public float spread;
        public float spread_variation;
        public float radius;
        public float radius_variation;
    }

    public class AMS_AME_NODE_SPRITE : AppMain.AMS_AME_NODE_TR_ROT
    {
        public float z_bias;
        public float inheritance_rate;
        public float life;
        public float start_time;
        public float size;
        public float size_chaos;
        public float scale_x_start;
        public float scale_x_end;
        public float scale_y_start;
        public float scale_y_end;
        public float twist_angle;
        public float twist_angle_chaos;
        public float twist_angle_speed;
        public AppMain.AMS_RGBA8888 color_start;
        public AppMain.AMS_RGBA8888 color_end;
        public int blend;
        public short texture_slot;
        public short texture_id;
        public float cropping_l;
        public float cropping_t;
        public float cropping_r;
        public float cropping_b;
        public float scroll_u;
        public float scroll_v;
        public AppMain.AMS_AME_TEX_ANIM tex_anim;
    }

    [StructLayout(LayoutKind.Explicit)]
    public struct AMS_RGBA8888
    {
        [FieldOffset(0)]
        public byte r;
        [FieldOffset(1)]
        public byte g;
        [FieldOffset(2)]
        public byte b;
        [FieldOffset(3)]
        public byte a;
        [FieldOffset(0)]
        public uint color;
    }

    public class AMS_AME_NODE_LINE : AppMain.AMS_AME_NODE_TR_ROT
    {
        public float z_bias;
        public float inheritance_rate;
        public float life;
        public float start_time;
        public float length_start;
        public float length_end;
        public float inside_width_start;
        public float inside_width_end;
        public float outside_width_start;
        public float outside_width_end;
        public AppMain.AMS_RGBA8888 inside_color_start;
        public AppMain.AMS_RGBA8888 inside_color_end;
        public AppMain.AMS_RGBA8888 outside_color_start;
        public AppMain.AMS_RGBA8888 outside_color_end;
        public int blend;
        public short texture_slot;
        public short texture_id;
        public float cropping_l;
        public float cropping_t;
        public float cropping_r;
        public float cropping_b;
        public float scroll_u;
        public float scroll_v;
        public AppMain.AMS_AME_TEX_ANIM tex_anim;
    }

    public class AMS_AME_NODE_PLANE : AppMain.AMS_AME_NODE_TR_ROT
    {
        public readonly AppMain.NNS_VECTOR4D rotate_axis = AppMain.GlobalPool<AppMain.NNS_VECTOR4D>.Alloc();
        public float z_bias;
        public float inheritance_rate;
        public float life;
        public float start_time;
        public float size;
        public float size_chaos;
        public float scale_x_start;
        public float scale_x_end;
        public float scale_y_start;
        public float scale_y_end;
        public AppMain.AMS_RGBA8888 color_start;
        public AppMain.AMS_RGBA8888 color_end;
        public int blend;
        public short texture_slot;
        public short texture_id;
        public float cropping_l;
        public float cropping_t;
        public float cropping_r;
        public float cropping_b;
        public float scroll_u;
        public float scroll_v;
        public AppMain.AMS_AME_TEX_ANIM tex_anim;
    }

    public class AMS_AME_NODE_MODEL : AppMain.AMS_AME_NODE_TR_ROT
    {
        public readonly AppMain.NNS_VECTOR4D rotate_axis = AppMain.GlobalPool<AppMain.NNS_VECTOR4D>.Alloc();
        public readonly AppMain.NNS_VECTOR4D scale_start = AppMain.GlobalPool<AppMain.NNS_VECTOR4D>.Alloc();
        public readonly AppMain.NNS_VECTOR4D scale_end = AppMain.GlobalPool<AppMain.NNS_VECTOR4D>.Alloc();
        public char[] model_name = new char[8];
        public float z_bias;
        public float inheritance_rate;
        public float life;
        public float start_time;
        public int lod;
        public AppMain.AMS_RGBA8888 color_start;
        public AppMain.AMS_RGBA8888 color_end;
        public int blend;
        public float scroll_u;
        public float scroll_v;
    }

    public class AMS_AME_NODE_GRAVITY : AppMain.AMS_AME_NODE
    {
        public readonly AppMain.NNS_VECTOR4D direction = AppMain.GlobalPool<AppMain.NNS_VECTOR4D>.Alloc();
        public float magnitude;
    }

    public class AMS_AME_NODE_UNIFORM : AppMain.AMS_AME_NODE
    {
        public readonly AppMain.NNS_VECTOR4D direction = AppMain.GlobalPool<AppMain.NNS_VECTOR4D>.Alloc();
        public float magnitude;
    }

    public class AMS_AME_NODE_RADIAL : AppMain.AMS_AME_NODE
    {
        public readonly AppMain.NNS_VECTOR4D position = AppMain.GlobalPool<AppMain.NNS_VECTOR4D>.Alloc();
        public float magnitude;
        public float attenuation;
    }

    public class AMS_AME_NODE_VORTEX : AppMain.AMS_AME_NODE
    {
        public readonly AppMain.NNS_VECTOR4D position = AppMain.GlobalPool<AppMain.NNS_VECTOR4D>.Alloc();
        public readonly AppMain.NNS_VECTOR4D axis = AppMain.GlobalPool<AppMain.NNS_VECTOR4D>.Alloc();
    }

    public class AMS_AME_NODE_DRAG : AppMain.AMS_AME_NODE
    {
        public readonly AppMain.NNS_VECTOR4D position = AppMain.GlobalPool<AppMain.NNS_VECTOR4D>.Alloc();
        public float magnitude;
    }

    public class AMS_AME_NODE_NOISE : AppMain.AMS_AME_NODE
    {
        public readonly AppMain.NNS_VECTOR4D axis = AppMain.GlobalPool<AppMain.NNS_VECTOR4D>.Alloc();
        public float magnitude;
    }

    public class AMS_AME_HEADER
    {
        public byte[] file_id = new byte[4];
        public readonly AppMain.AMS_AME_BOUNDING bounding = new AppMain.AMS_AME_BOUNDING();
        public int file_version;
        public int node_num;
        public uint node_ofst;
        public AppMain.AMS_AME_NODE[] node;
    }

    public class AME_HEADER : AppMain.AMS_AME_HEADER
    {
    }

    public class NNS_PRIM2D_P
    {
        public readonly AppMain.NNS_VECTOR2D Pos = new AppMain.NNS_VECTOR2D();

        public virtual void Clear()
        {
            this.Pos.Clear();
        }
    }

    public class IZS_FADE_DT_WORK
    {
        public uint draw_state;
        public uint drawflag;
    }

    private enum tag_IZE_FADE_SET_TYPE
    {
        IZE_FADE_SET_TYPE_NORMAL,
        IZE_FADE_SET_TYPE_TAKEOEVER,
        IZE_FADE_SET_TYPE_MAX,
    }

    public class GMS_WATER_SURFACE_DATA
    {
        public AppMain.AMS_AMB_HEADER amb_header;
        public bool flag_load_object;

        internal void Clear()
        {
            this.amb_header = (AppMain.AMS_AMB_HEADER)null;
            this.flag_load_object = false;
        }
    }

    public class GMS_WATER_SURFACE_INFO
    {
        public float now_water_level;
        public float next_water_level;
        public ushort water_time;
        public ushort water_counter;
        public bool flag_draw;
        public bool flag_enable_ref;
    }

    public class GMS_WATER_SURFACE_MGR
    {
        public AppMain.MTS_TASK_TCB tcb_water;
        public AppMain.AMS_RENDER_TARGET render_target;

        internal void Clear()
        {
            this.tcb_water = (AppMain.MTS_TASK_TCB)null;
            this.render_target = (AppMain.AMS_RENDER_TARGET)null;
        }
    }

    public class DMAP_WATER_OBJ
    {
        public AppMain.AMS_MOTION motion;
        public AppMain.NNS_OBJECT _object;
        public AppMain.NNS_TEXLIST texlist;
        public object texlistbuf;
        public float frame;
    }

    public class DMAP_PARAM_WATER
    {
        public float[] frame = new float[2];
        public float draw_u;
        public float draw_v;
        public float scale;
        public float pos_x;
        public float pos_y;
        public float pos_dy;
        public float repeat_u;
        public float repeat_v;
        public int rot_z;
        public uint color;
    }

    public class DMAP_WATER
    {
        public readonly AppMain.DMAP_WATER_OBJ[] _object = AppMain.New<AppMain.DMAP_WATER_OBJ>(2);
        public readonly AppMain.AOS_TEXTURE tex_color = new AppMain.AOS_TEXTURE();
        public AppMain.AMS_AMB_HEADER amb_object;
        public AppMain.AMS_AMB_HEADER amb_texture;
        public int regist_index;
        public float draw_u;
        public float draw_v;
        public float scale;
        public float ofst_u;
        public float ofst_v;
        public float repeat_u;
        public float repeat_v;
        public float speed_u;
        public float speed_v;
        public float speed_surface;
        public float pos_x;
        public float pos_y;
        public float pos_dy;
        public int rot_z;
        public uint color;
        public float repeat_pos_x;
        public AppMain.DMAP_PARAM_WATER draw_param;
    }

    private enum GMD_MAP_FAR_OBJ_INDEX
    {
        GMD_MAP_FAR_OBJ_INDEX_ZONE_1_SEA = 0,
        GMD_MAP_FAR_OBJ_INDEX_ZONE_2DBG = 0,
        GMD_MAP_FAR_OBJ_INDEX_ZONE_3_ISEKI = 0,
        GMD_MAP_FAR_OBJ_INDEX_ZONE_4_DUMMY = 0,
        GMD_MAP_FAR_OBJ_INDEX_ZONE_FINAL_SPACE = 0,
        GMD_MAP_FAR_OBJ_INDEX_ZONE_SS_KALEIDO = 0,
        GMD_MAP_FAR_OBJ_INDEX_ZONE_1_SKY = 1,
        GMD_MAP_FAR_OBJ_INDEX_ZONE_2_WHEEL = 1,
        GMD_MAP_FAR_OBJ_INDEX_ZONE_3_MAX = 1,
        GMD_MAP_FAR_OBJ_INDEX_ZONE_4_MAX = 1,
        GMD_MAP_FAR_OBJ_INDEX_ZONE_FINAL_MAX = 1,
        GMD_MAP_FAR_OBJ_INDEX_ZONE_SS_MAX = 1,
        GMD_MAP_FAR_OBJ_INDEX_ZONE_1_ROCKA = 2,
        GMD_MAP_FAR_OBJ_INDEX_ZONE_2_SLIGHT = 2,
        GMD_MAP_FAR_OBJ_INDEX_ZONE_1_ROCKB = 3,
        GMD_MAP_FAR_OBJ_INDEX_ZONE_2_MAX = 3,
        GMD_MAP_FAR_OBJ_INDEX_ZONE_1_ROCKC = 4,
        GMD_MAP_FAR_OBJ_INDEX_ZONE_1_2DBG = 5,
        GMD_MAP_FAR_OBJ_INDEX_ZONE_1_MAX = 6,
    }

    public class GMS_MAP_FAR_OBJ_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.OBS_ACTION3D_NN_WORK obj_3d = new AppMain.OBS_ACTION3D_NN_WORK();
        public readonly AppMain.OBS_OBJECT_WORK obj_work;
        public readonly object holder;

        public static explicit operator AppMain.GMS_MAP_FAR_OBJ_WORK(AppMain.OBS_OBJECT_WORK ob)
        {
            return (AppMain.GMS_MAP_FAR_OBJ_WORK)ob.holder;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_MAP_FAR_OBJ_WORK work)
        {
            return work.obj_work;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.obj_work;
        }

        public GMS_MAP_FAR_OBJ_WORK()
        {
            this.obj_work = AppMain.OBS_OBJECT_WORK.Create((object)this);
        }
    }

    public class GMS_MAP_FAR_SCROLL
    {
        public int pos;
        public int width;
        public int loop_num;

        public GMS_MAP_FAR_SCROLL(int _pos, int _width, int _loop_num)
        {
            this.pos = _pos;
            this.width = _width;
            this.loop_num = _loop_num;
        }
    }

    public class GMS_MAP_FAR_CAMERA
    {
        public int camera_id;
        public int camera_type;
        public float camera_speed_x;
        public float camera_speed_y;

        internal void Clear()
        {
            this.camera_id = 0;
            this.camera_type = 0;
            this.camera_speed_x = 0.0f;
            this.camera_speed_y = 0.0f;
        }
    }

    public class GMS_MAP_FAR_DATA
    {
        public readonly AppMain.OBS_OBJECT_WORK[] obj_work = new AppMain.OBS_OBJECT_WORK[16];
        public readonly AppMain.NNS_VECTOR pos = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public AppMain.AMS_AMB_HEADER amb_header;
        public AppMain.OBS_ACTION3D_NN_WORK[] obj_3d_list;
        public AppMain.OBS_ACTION3D_NN_WORK[] obj_3d_list_render;
        public AppMain.OBS_ACTION3D_NN_WORK nn_work;
        public int nn_work_num;
        public int nn_regist_num;
        public AppMain.MP_HEADER mp_header;
        public AppMain.MD_HEADER md_header;
        public float degSky;
        public float degSky2;

        internal void Clear()
        {
            this.amb_header = (AppMain.AMS_AMB_HEADER)null;
            this.obj_3d_list = (AppMain.OBS_ACTION3D_NN_WORK[])null;
            this.obj_3d_list_render = (AppMain.OBS_ACTION3D_NN_WORK[])null;
            Array.Clear((Array)this.obj_work, 0, 16);
            this.nn_work = (AppMain.OBS_ACTION3D_NN_WORK)null;
            this.nn_work_num = 0;
            this.nn_regist_num = 0;
            this.pos.Clear();
            this.mp_header = (AppMain.MP_HEADER)null;
            this.md_header = (AppMain.MD_HEADER)null;
            this.degSky = 0.0f;
            this.degSky2 = 0.0f;
        }
    }

    public class MP_HEADER
    {
        public ushort map_w;
        public ushort map_h;
        public AppMain.MP_BLOCK[] blocks;
    }

    public class MD_HEADER
    {
        public ushort map_w;
        public ushort map_h;
        public AppMain.MD_BLOCK[] blocks;
    }

    public class GMS_MAP_FAR_MGR
    {
        public readonly AppMain.GMS_MAP_FAR_CAMERA camera = new AppMain.GMS_MAP_FAR_CAMERA();
        public AppMain.MTS_TASK_TCB tcb_pre_draw;
        public AppMain.MTS_TASK_TCB tcb_draw;
        public AppMain.MTS_TASK_TCB tcb_post_draw;

        internal void Clear()
        {
            this.tcb_pre_draw = (AppMain.MTS_TASK_TCB)null;
            this.tcb_draw = (AppMain.MTS_TASK_TCB)null;
            this.tcb_post_draw = (AppMain.MTS_TASK_TCB)null;
            this.camera.Clear();
        }
    }

    public class GmkCannonDat
    {
        private const int GME_GMK_RECT_DATA_LEFT = 0;
        private const int GME_GMK_RECT_DATA_TOP = 1;
        private const int GME_GMK_RECT_DATA_RIGHT = 2;
        private const int GME_GMK_RECT_DATA_BOTTOM = 3;
        private const int GME_GMK_RECT_DATA_MAX = 4;
    }

    public class GMS_GMK_CANNONPARTS_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_EFFECT_3DNN_WORK eff_work;

        public GMS_GMK_CANNONPARTS_WORK()
        {
            this.eff_work = new AppMain.GMS_EFFECT_3DNN_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.eff_work.efct_com.obj_work;
        }
    }

    public delegate AppMain.OBS_OBJECT_WORK Del__(
      AppMain.GMS_EVE_RECORD_EVENT eve_rec,
      int x,
      int y,
      byte type);

    public delegate AppMain.OBS_OBJECT_WORK Del__2(
      AppMain.GMS_EVE_RECORD_DECORATE dec_rec,
      int x,
      int y,
      byte type);

    public class GMS_ENDING_WORK
    {
        public int step;
        public int type;
        public uint flag;
        public uint get_ring;
        public uint timer;
    }

    public class GMS_COCKPIT_COM_WORK
    {
        public readonly AppMain.OBS_OBJECT_WORK obj_work;
        public readonly object holder;

        public GMS_COCKPIT_COM_WORK(object holder)
        {
            this.holder = holder;
            this.obj_work = AppMain.OBS_OBJECT_WORK.Create((object)this);
        }

        public GMS_COCKPIT_COM_WORK()
        {
            this.obj_work = AppMain.OBS_OBJECT_WORK.Create((object)this);
        }
    }

    public class GMS_COCKPIT_3DNN_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_COCKPIT_COM_WORK cpit_com = new AppMain.GMS_COCKPIT_COM_WORK();
        public readonly AppMain.OBS_ACTION3D_NN_WORK obj_3d = new AppMain.OBS_ACTION3D_NN_WORK();

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.cpit_com.obj_work;
        }
    }

    public class GMS_BOSS2_PART_ACT_INFO
    {
        public ushort mtn_id;
        public byte is_maintain;
        public byte is_repeat;
        public float mtn_spd;
        public int is_blend;
        public float blend_spd;
        public int is_merge_manual;

        public GMS_BOSS2_PART_ACT_INFO(
          ushort id,
          byte mnt,
          byte rpt,
          float spd,
          int blnd,
          float bspd,
          int mrg)
        {
            this.mtn_id = id;
            this.is_maintain = mnt;
            this.is_repeat = rpt;
            this.mtn_spd = spd;
            this.is_blend = blnd;
            this.blend_spd = bspd;
            this.is_merge_manual = mrg;
        }
    }

    public class GMS_BOSS2_EFF_BOMB_WORK
    {
        public int[] pos = new int[2];
        public int[] area = new int[2];
        public AppMain.OBS_OBJECT_WORK parent_obj;
        public uint interval_timer;
        public uint interval_min;
        public uint interval_max;
    }

    public class GMS_BOSS2_EFFECT_SCATTER_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public AppMain.NNS_QUATERNION spin_quat = new AppMain.NNS_QUATERNION();
        public readonly AppMain.GMS_BS_CMN_NODE_CTRL_OBJECT control_node_work;

        public GMS_BOSS2_EFFECT_SCATTER_WORK()
        {
            this.control_node_work = new AppMain.GMS_BS_CMN_NODE_CTRL_OBJECT((object)this);
        }

        public static explicit operator AppMain.GMS_BS_CMN_NODE_CTRL_OBJECT(
          AppMain.GMS_BOSS2_EFFECT_SCATTER_WORK p)
        {
            return p.control_node_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(
          AppMain.GMS_BOSS2_EFFECT_SCATTER_WORK p)
        {
            return p.control_node_work.efct_com.obj_work;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.control_node_work.efct_com.obj_work;
        }
    }

    private enum DME_STGSLCT_ACT : uint
    {
        ACT_ZONE_BG_LT = 0,
        ACT_ZONE_BG_LB = 1,
        ACT_ZONE_BG_RT = 2,
        ACT_ZONE_BG_RB = 3,
        ACT_TAB_MODE_L = 4,
        ACT_ICON_SONIC = 5,
        ACT_REST_NUM_100 = 6,
        ACT_REST_NUM_10 = 7,
        ACT_REST_NUM_1 = 8,
        ACT_TAB_EMER = 9,
        ACT_ICON_EMER_1 = 10, // 0x0000000A
        ACT_ICON_EMER_2 = 11, // 0x0000000B
        ACT_ICON_EMER_3 = 12, // 0x0000000C
        ACT_ICON_EMER_4 = 13, // 0x0000000D
        ACT_ICON_EMER_5 = 14, // 0x0000000E
        ACT_ICON_EMER_6 = 15, // 0x0000000F
        ACT_ICON_EMER_7 = 16, // 0x00000010
        ACT_TEX_ZONE_UP = 17, // 0x00000011
        ACT_TEX_ZONE_UP_S = 18, // 0x00000012
        ACT_TAB_ZONE_SCR1 = 19, // 0x00000013
        ACT_TAB_ZONE_SCR2 = 20, // 0x00000014
        ACT_TAB_ZONE_SCR3 = 21, // 0x00000015
        ACT_TAB_ZONE_SCR4 = 22, // 0x00000016
        ACT_TAB_ZONE_SCR5 = 23, // 0x00000017
        ACT_TAB_ZONE_SCR6 = 24, // 0x00000018
        ACT_TAB_ZONE_SCR1_1a = 25, // 0x00000019
        ACT_TAB_ZONE_SCR1_2a = 26, // 0x0000001A
        ACT_TAB_ZONE_SCR1_3a = 27, // 0x0000001B
        ACT_TAB_ZONE_SCR2_1a = 28, // 0x0000001C
        ACT_TAB_ZONE_SCR2_2a = 29, // 0x0000001D
        ACT_TAB_ZONE_SCR2_3a = 30, // 0x0000001E
        ACT_TAB_ZONE_SCR3_1a = 31, // 0x0000001F
        ACT_TAB_ZONE_SCR3_2a = 32, // 0x00000020
        ACT_TAB_ZONE_SCR3_3a = 33, // 0x00000021
        ACT_TAB_ZONE_SCR4_1a = 34, // 0x00000022
        ACT_TAB_ZONE_SCR4_2a = 35, // 0x00000023
        ACT_TAB_ZONE_SCR4_3a = 36, // 0x00000024
        ACT_TAB_ZONE_TAB = 37, // 0x00000025
        ACT_TAB_ZONE_TEXT = 38, // 0x00000026
        ACT_TAB_ZONE_TEXT_S = 39, // 0x00000027
        ACT_TAB_ZONE_COVER1 = 40, // 0x00000028
        ACT_TAB_ZONE_COVER2 = 41, // 0x00000029
        ACT_TAB_ZONE_COVER3 = 42, // 0x0000002A
        ACT_ICON_DOWN_1 = 43, // 0x0000002B
        ACT_ICON_DOWN_2 = 44, // 0x0000002C
        ACT_ICON_DOWN_3 = 45, // 0x0000002D
        ACT_ICON_DOWN_4 = 46, // 0x0000002E
        ACT_ICON_DOWN_5 = 47, // 0x0000002F
        ACT_ICON_DOWN_6 = 48, // 0x00000030
        ACT_ICON_L_ARROW = 49, // 0x00000031
        ACT_ICON_R_ARROW = 50, // 0x00000032
        ACT_TAB_STATE_L = 51, // 0x00000033
        ACT_TAB_STATE_C = 52, // 0x00000034
        ACT_TAB_STATE_R = 53, // 0x00000035
        ACT_TAB_STATE_L2 = 54, // 0x00000036
        ACT_TAB_STATE_C2 = 55, // 0x00000037
        ACT_TAB_STATE_R2 = 56, // 0x00000038
        ACT_TAB_STATE_MOVE = 57, // 0x00000039
        ACT_TAB_START = 58, // 0x0000003A
        ACT_TAB_TABLE2 = 58, // 0x0000003A
        ACT_TAB_TABLE1 = 59, // 0x0000003B
        ACT_TAB_TABLE3 = 60, // 0x0000003C
        ACT_TAB_SCR = 61, // 0x0000003D
        ACT_TAB_SCR_BG = 62, // 0x0000003E
        ACT_TAB_TEXT = 63, // 0x0000003F
        ACT_TAB_A_NUM = 64, // 0x00000040
        ACT_TAB_MESS = 65, // 0x00000041
        ACT_TAB_LINE = 66, // 0x00000042
        ACT_TAB_ICON_EMER = 67, // 0x00000043
        ACT_TAB_NUM_SPE_STAGE = 68, // 0x00000044
        ACT_TAB_ICON_SPE_EMER = 69, // 0x00000045
        ACT_TAB_CURSOR_UP = 70, // 0x00000046
        ACT_TAB_CURSOR_DOWN = 71, // 0x00000047
        ACT_TAB_TEX_SCORE = 72, // 0x00000048
        ACT_TAB_TEX_TIME = 73, // 0x00000049
        ACT_TAB_TEX_BOSS = 74, // 0x0000004A
        ACT_TAB_TEX_SPE_STAGE = 75, // 0x0000004B
        ACT_TAB_S_NUM1 = 76, // 0x0000004C
        ACT_TAB_S_NUM2 = 77, // 0x0000004D
        ACT_TAB_S_NUM3 = 78, // 0x0000004E
        ACT_TAB_S_NUM4 = 79, // 0x0000004F
        ACT_TAB_S_NUM5 = 80, // 0x00000050
        ACT_TAB_S_NUM6 = 81, // 0x00000051
        ACT_TAB_S_NUM7 = 82, // 0x00000052
        ACT_TAB_S_NUM8 = 83, // 0x00000053
        ACT_TAB_END = 84, // 0x00000054
        ACT_TAB_S_NUM9 = 84, // 0x00000054
        ACT_NONE = 85, // 0x00000055
        ACT_TAB_COVER2 = 85, // 0x00000055
        ACT_TAB_COVER1 = 86, // 0x00000056
        ACT_TAB_COVER3 = 87, // 0x00000057
        ACT_TEX_BIG_TIME = 88, // 0x00000058
        ACT_TEX_BIG_SCORE = 89, // 0x00000059
        ACT_WIN_TEX_MSG = 90, // 0x0000005A
        ACT_WIN_TEX_MSG2 = 91, // 0x0000005B
        ACT_WIN_TEX_MSG_SSONIC = 92, // 0x0000005C
        ACT_WAVE_BG = 93, // 0x0000005D
        ACT_DOWN_BG = 94, // 0x0000005E
        ACT_BLUE_BG = 95, // 0x0000005F
        ACT_BTN_CANCEL1 = 96, // 0x00000060
        ACT_BTN_LB = 97, // 0x00000061
        ACT_BTN_MENU = 98, // 0x00000062
        ACT_BTN_LB_ARROW = 99, // 0x00000063
        ACT_BTN_RB_ARROW = 100, // 0x00000064
        ACT_BTN_CANCEL2 = 101, // 0x00000065
        ACT_BTN_X = 102, // 0x00000066
        ACT_BTN_Y = 103, // 0x00000067
        ACT_BACK_BTN01_L = 104, // 0x00000068
        ACT_BACK_BTN01_R = 105, // 0x00000069
        ACT_YES_BTN_L = 106, // 0x0000006A
        ACT_YES_BTN_C = 107, // 0x0000006B
        ACT_YES_BTN_R = 108, // 0x0000006C
        ACT_NO_BTN_L = 109, // 0x0000006D
        ACT_NO_BTN_C = 110, // 0x0000006E
        ACT_NO_BTN_R = 111, // 0x0000006F
        ACT_TEX_FIX_BACK = 112, // 0x00000070
        ACT_TEX_BACK1 = 113, // 0x00000071
        ACT_TEX_YES = 114, // 0x00000072
        ACT_TEX_NO = 115, // 0x00000073
        ACT_NUM = 116, // 0x00000074
    }

    private class DMS_STGSLCT_MAIN_WORK
    {
        public readonly AppMain.AMS_FS[] arc_cmn_amb_fs = new AppMain.AMS_FS[5];
        public readonly AppMain.AMS_AMB_HEADER[] arc_cmn_amb = new AppMain.AMS_AMB_HEADER[5];
        public readonly AppMain.A2S_AMA_HEADER[] cmn_ama = new AppMain.A2S_AMA_HEADER[5];
        public readonly AppMain.AMS_AMB_HEADER[] cmn_amb = new AppMain.AMS_AMB_HEADER[5];
        public readonly AppMain.AOS_TEXTURE[] cmn_tex = AppMain.New<AppMain.AOS_TEXTURE>(5);
        public readonly AppMain.AMS_FS[] arc_amb_fs = new AppMain.AMS_FS[2];
        public readonly AppMain.AMS_AMB_HEADER[] arc_amb = new AppMain.AMS_AMB_HEADER[2];
        public readonly AppMain.A2S_AMA_HEADER[] ama = new AppMain.A2S_AMA_HEADER[2];
        public readonly AppMain.AMS_AMB_HEADER[] amb = new AppMain.AMS_AMB_HEADER[2];
        public readonly AppMain.AOS_TEXTURE[] tex = AppMain.New<AppMain.AOS_TEXTURE>(2);
        public readonly AppMain.AOS_TEXTURE win_tex = new AppMain.AOS_TEXTURE();
        public readonly AppMain.AOS_ACTION[] act = new AppMain.AOS_ACTION[116];
        public readonly CTrgAoAction[] trg_zone = AppMain.New<CTrgAoAction>(6);
        public readonly CTrgAoAction[] trg_act = AppMain.New<CTrgAoAction>(7);
        public readonly CTrgAoAction[] trg_act_tab = AppMain.New<CTrgAoAction>(6);
        public readonly CTrgAoAction[] trg_act_lr = AppMain.New<CTrgAoAction>(2);
        public readonly CTrgFlick trg_act_move = new CTrgFlick();
        public readonly CTrgAoAction[] trg_mode = AppMain.New<CTrgAoAction>(2);
        public readonly CTrgAoAction trg_cancel = new CTrgAoAction();
        public readonly CTrgAoAction[] trg_answer = AppMain.New<CTrgAoAction>(2);
        public readonly int[] n_sonic_hi_score = new int[17];
        public readonly int[] s_sonic_hi_score = new int[17];
        public readonly int[] n_sonic_record_time = new int[17];
        public readonly int[] s_sonic_record_time = new int[17];
        public readonly int[] hi_score = new int[24];
        public readonly int[] record_time = new int[24];
        public readonly int[] is_clear_stage = new int[24];
        public readonly uint[] eme_stage_no = new uint[7];
        public readonly float[,] win_act_pos = new float[13, 2];
        public readonly float[] win_size_rate = new float[2];
        public readonly float[][] zone_pos = AppMain.New<float>(6, 2);
        public readonly float[] move_spd = new float[2];
        public readonly float[] act_top_pos_x = new float[24];
        public readonly float[] act_top_pos_y = new float[24];
        public readonly float[] act_move_src = new float[2];
        public readonly float[] act_move_dest = new float[2];
        public readonly float[] act_move_pos_src = new float[24];
        public readonly float[] act_move_pos_dst = new float[24];
        public readonly float[] act_tab_state_move_base_pos = new float[2];
        public readonly float[] obi_pos = new float[2];
        public readonly AppMain.AMS_PARAM_DRAW_PRIMITIVE up_bg_vrtx = new AppMain.AMS_PARAM_DRAW_PRIMITIVE();
        public readonly float[] tex_u = new float[2];
        public readonly float[] tex_v = new float[2];
        public AppMain.AMS_FS win_amb_fs;
        public AppMain.AMS_AMB_HEADER win_amb;
        public AppMain.DMS_STGSLCT_MAIN_WORK._proc_win_input_ proc_win_input;
        public AppMain.DMS_STGSLCT_MAIN_WORK._proc_input_ proc_input;
        public AppMain.DMS_STGSLCT_MAIN_WORK._proc_win_update_ proc_win_update;
        public AppMain.DMS_STGSLCT_MAIN_WORK._proc_menu_update_ proc_menu_update;
        public AppMain.DMS_STGSLCT_MAIN_WORK._proc_draw_ proc_draw;
        public int timer;
        public uint flag;
        public int state;
        public float win_timer;
        public uint disp_flag;
        public int bg_timer;
        public int zone_scr_timer;
        public uint announce_flag;
        public int next_evt;
        public int prev_evt;
        public int is_final_open;
        public uint get_emerald;
        public uint cur_game_mode;
        public uint player_stock;
        public int win_mode;
        public int win_cur_slct;
        public bool win_is_disp_cover;
        public uint cur_zone;
        public uint chng_zone;
        public uint efct_time;
        public uint efct_out_flag;
        public float chaos_eme_pos_y;
        public float mode_tex_pos_y;
        public float mode_tex_frm;
        public int cur_stage;
        public int prev_stage;
        public int cur_vrtcl_stage;
        public int prev_vrtcl_stage;
        public int crsr_idx;
        public int crsr_prev_idx;
        public float crsr_pos_y;
        public float crsr_move_src;
        public float crsr_move_dst;
        public int focus_disp_no;
        public int prev_disp_no;
        public bool is_disp_cover;
        public int decide_zone_efct_dist_x;
        public int decide_zone_efct_dist_y;
        public AppMain.AOS_ACT_COL bg_fade;
        public uint cur_bg_id;
        public uint next_bg_id;
        public uint zone_scr_id;
        public uint mode_tex_move_frm;
        public uint btn_l_disp_frm;
        public uint btn_r_disp_frm;
        public bool is_jp_region;

        public delegate void _proc_win_input_(AppMain.DMS_STGSLCT_MAIN_WORK work);

        public delegate void _proc_input_(AppMain.DMS_STGSLCT_MAIN_WORK work);

        public delegate void _proc_win_update_(AppMain.DMS_STGSLCT_MAIN_WORK work);

        public delegate void _proc_menu_update_(AppMain.DMS_STGSLCT_MAIN_WORK work);

        public delegate void _proc_draw_(AppMain.DMS_STGSLCT_MAIN_WORK work);
    }

    public class CActionDraw
    {
        public CCircularBuffer<AppMain.AOS_ACTION> m_action_array = new CCircularBuffer<AppMain.AOS_ACTION>(100);

        public void Entry(AppMain.A2S_AMA_HEADER ama, uint id, float frame, float x, float y)
        {
            if (!AppMain._am_sample_draw_enable)
                return;
            AppMain.AOS_ACTION act = AppMain.AoActCreate(ama, id, frame);
            AppMain.AoActAcmPush();
            AppMain.AoActAcmInit();
            AppMain.AoActAcmApplyTrans(x, y, 0.0f);
            AppMain.AoActUpdate(act, 0.0f);
            AppMain.AoActSortRegAction(act);
            AppMain.AoActAcmPop();
            this.m_action_array.push_back(act);
        }

        public void Entry(
          AppMain.A2S_AMA_HEADER ama,
          uint id,
          float frame,
          float x,
          float y,
          float scalex,
          float scaley)
        {
            if (!AppMain._am_sample_draw_enable)
                return;
            AppMain.AOS_ACTION act = AppMain.AoActCreate(ama, id, frame);
            AppMain.AoActAcmPush();
            AppMain.AoActAcmInit();
            AppMain.AoActAcmApplyTrans(x, y, 0.0f);
            AppMain.AoActAcmApplyScale(scalex, scaley);
            AppMain.AoActUpdate(act, 0.0f);
            AppMain.AoActSortRegAction(act);
            AppMain.AoActAcmPop();
            this.m_action_array.push_back(act);
        }

        public void Clear()
        {
            for (int index = 0; index < this.m_action_array.size(); ++index)
                AppMain.AoActDelete(this.m_action_array[index]);
            this.m_action_array.clear();
        }

        public void Draw()
        {
            if (AppMain._am_sample_draw_enable)
            {
                AppMain.AoActSortExecute();
                AppMain.AoActSortDraw();
            }
            AppMain.AoActSortUnregAll();
        }

        public void CActionDraw_destructor()
        {
            this.Clear();
        }
    }

    public class SYS_EVT_DATA
    {
        public AppMain.SYS_EVT_DATA._init_func_ init_func;
        public AppMain.SYS_EVT_DATA._exit_func_ exit_func;
        public AppMain.SYS_EVT_DATA._reset_func_ reset_func;
        public AppMain.SYS_EVT_DATA._init_sys_func_ init_sys_func;
        public AppMain.SYS_EVT_DATA._exit_sys_func_ exit_sys_func;
        public short[] next_evt_id;
        public uint attr;

        public SYS_EVT_DATA(
          AppMain.SYS_EVT_DATA._init_func_ f1,
          AppMain.SYS_EVT_DATA._exit_func_ f2,
          AppMain.SYS_EVT_DATA._reset_func_ f3,
          AppMain.SYS_EVT_DATA._init_sys_func_ f4,
          AppMain.SYS_EVT_DATA._exit_sys_func_ f5,
          short[] ar,
          uint at)
        {
            this.init_func = f1;
            this.exit_func = f2;
            this.reset_func = f3;
            this.init_sys_func = f4;
            this.exit_sys_func = f5;
            this.next_evt_id = ar;
            this.attr = at;
        }

        public SYS_EVT_DATA()
        {
        }

        public delegate void _init_func_(object obj);

        public delegate void _exit_func_();

        public delegate void _reset_func_();

        public delegate void _init_sys_func_();

        public delegate void _exit_sys_func_();
    }

    private class SYS_EVT_INFO
    {
        public sbyte[] arg = new sbyte[8];
        public AppMain.SYS_EVT_DATA[] evt_data;
        public int evt_data_num;
        public AppMain.SYS_EVT_DATA cur_evt_data;
        public short cur_evt_id;
        public short old_evt_id;
        public AppMain.SYS_EVT_DATA next_evt_data;
        public short req_evt_id;
        public short req_evt_case;
        public uint flag;
        public uint arg_size;
    }

    public struct DF_HEADER
    {
        public uint block_num;
        public AppMain.DF_BLOCK[] blocks;
    }

    public struct AT_HEADER
    {
        public uint block_num;
        public AppMain.AT_BLOCK[] blocks;
    }

    public struct DI_HEADER
    {
        public uint block_num;
        public AppMain.DI_BLOCK[] blocks;
    }

    public struct MD_BLOCK
    {
        public sbyte ofst_x;
        public sbyte ofst_y;

        public MD_BLOCK(sbyte bitFieldValue)
        {
            int num = (int)bitFieldValue & 15;
            this.ofst_x = num >= 8 ? (sbyte)(num - 16) : (sbyte)num;
            this.ofst_y = (sbyte)((int)bitFieldValue >> 4);
        }
    }

    public struct EV_HEADER
    {
        public ushort map_w;
        public ushort map_h;
    }

    public struct EV_OFFSET
    {
        public uint ofst;
    }

    public struct EV_BLOCK
    {
        public ushort ev_num;
    }

    public struct EV_INFO
    {
        public byte x;
        public byte y;
        public ushort id;
        public ushort flag;
        public sbyte rect_x;
        public sbyte rect_y;
        public byte rect_w;
        public byte rect_h;
        public ushort user;
    }

    public struct RG_HEADER
    {
        public ushort map_w;
        public ushort map_h;
    }

    public struct RG_OFFSET
    {
        public uint ofst;
    }

    public struct RG_BLOCK
    {
        public ushort rg_num;
    }

    public struct RG_INFO
    {
        public byte x;
        public byte y;
    }

    public struct DC_HEADER
    {
        public ushort map_w;
        public ushort map_h;
    }

    public struct DC_OFFSET
    {
        public uint ofst;
    }

    public struct DC_BLOCK
    {
        public ushort dc_num;
    }

    public struct DC_INFO
    {
        public byte x;
        public byte y;
        public ushort id;
    }

    public class GmkPistonData
    {
        public static readonly short[][] tbl_gm_gmk_piston_col_rect = new short[2][]
        {
      new short[8]
      {
        (short) 56,
        (short) 32,
        (short) -28,
        (short) 0,
        (short) -28,
        (short) 32,
        (short) 28,
        (short) 0
      },
      new short[8]
      {
        (short) 56,
        (short) 32,
        (short) -28,
        (short) -32,
        (short) -28,
        (short) 0,
        (short) 28,
        (short) 32
      }
        };
        public const int GME_GMK_TYPE_PISTON_UP = 0;
        public const int GME_GMK_TYPE_PISTON_DOWN = 1;
        public const int GME_GMK_TYPE_MAX = 2;
        public const int GMD_GMK_BOBJ1_RECT_WIDTH = 56;
        public const int GMD_GMK_BOBJ1_RECT_HEIGHT = 32;
        public const int GMD_GMK_BOBJ1_RECT_MARGIN = 32;
    }

    public class GMS_GMK_PISTONROD_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_EFFECT_3DNN_WORK eff_work;
        public uint obj_type;
        public int fulcrum;

        public GMS_GMK_PISTONROD_WORK()
        {
            this.eff_work = new AppMain.GMS_EFFECT_3DNN_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.eff_work.efct_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(
          AppMain.GMS_GMK_PISTONROD_WORK work)
        {
            return work.eff_work.efct_com.obj_work;
        }
    }

    public class GMS_GMK_PRESSWALL_PARTS : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_EFFECT_3DNN_WORK eff_work;
        public int ofst_y;
        public int master_posy;

        public GMS_GMK_PRESSWALL_PARTS()
        {
            this.eff_work = new AppMain.GMS_EFFECT_3DNN_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.eff_work.efct_com.obj_work;
        }
    }

    public class GMS_GMK_SEESAWPARTS_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_EFFECT_3DNN_WORK eff_work;

        public GMS_GMK_SEESAWPARTS_WORK()
        {
            this.eff_work = new AppMain.GMS_EFFECT_3DNN_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.eff_work.efct_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(
          AppMain.GMS_GMK_SEESAWPARTS_WORK work)
        {
            return work.eff_work.efct_com.obj_work;
        }
    }

    public class GMS_GMK_POPSTEAMPARTS_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_EFFECT_3DNN_WORK eff_work;
        public int z_off;

        public GMS_GMK_POPSTEAMPARTS_WORK()
        {
            this.eff_work = new AppMain.GMS_EFFECT_3DNN_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.eff_work.efct_com.obj_work;
        }
    }

    public class GMS_GMK_BWALL_PARTS : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_EFFECT_3DNN_WORK eff_work;
        public short falltimer;
        public ushort vect;

        public GMS_GMK_BWALL_PARTS()
        {
            this.eff_work = new AppMain.GMS_EFFECT_3DNN_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.eff_work.efct_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_GMK_BWALL_PARTS work)
        {
            return work.eff_work.efct_com.obj_work;
        }
    }

    public class GMS_BOSS1_EFF_SHOCKWAVE_SUB_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_EFFECT_3DES_WORK eff_3des;
        public AppMain.GMS_BOSS1_MGR_WORK mgr_work;

        public GMS_BOSS1_EFF_SHOCKWAVE_SUB_WORK()
        {
            this.eff_3des = new AppMain.GMS_EFFECT_3DES_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.eff_3des.efct_com.obj_work;
        }
    }

    public class GMS_BOSS1_EFF_SHOCKWAVE_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_EFFECT_3DES_WORK eff_3des;
        public AppMain.GMS_BOSS1_MGR_WORK mgr_work;
        public uint atk_rect_timer;

        public GMS_BOSS1_EFF_SHOCKWAVE_WORK()
        {
            this.eff_3des = new AppMain.GMS_EFFECT_3DES_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.eff_3des.efct_com.obj_work;
        }
    }

    public class GMS_BOSS1_FLASH_SCREEN_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_EFFECT_COM_WORK efct_com = new AppMain.GMS_EFFECT_COM_WORK();
        public readonly AppMain.GMS_CMN_FLASH_SCR_WORK flash_work = new AppMain.GMS_CMN_FLASH_SCR_WORK();

        public GMS_BOSS1_FLASH_SCREEN_WORK()
        {
            this.efct_com = new AppMain.GMS_EFFECT_COM_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.efct_com.obj_work;
        }
    }

    public class GMS_BS_CMN_CNM_PARAM
    {
        public ushort reg_node_cnt;
    }

    public class GMS_BS_CMN_BMCB_LINK : AppMain.IClearable
    {
        public AppMain.GMS_BS_CMN_BMCB_LINK next;
        public AppMain.GMS_BS_CMN_BMCB_LINK prev;
        public AppMain.MPP_VOID_MOTION_NSSOBJECT_OBJECT bmcb_func;
        public object bmcb_param;

        public void Clear()
        {
            this.next = this.prev = (AppMain.GMS_BS_CMN_BMCB_LINK)null;
            this.bmcb_func = (AppMain.MPP_VOID_MOTION_NSSOBJECT_OBJECT)null;
            this.bmcb_param = (object)null;
        }
    }

    public class GMS_BS_CMN_CNM_NODE_INFO
    {
        public readonly AppMain.NNS_MATRIX node_w_mtx = new AppMain.NNS_MATRIX();
        public int node_index;
        public int enable;
        public uint mode;
        public uint flag;

        public void Assign(AppMain.GMS_BS_CMN_CNM_NODE_INFO p)
        {
            this.node_w_mtx.Assign(p.node_w_mtx);
            this.node_index = p.node_index;
            this.enable = p.enable;
            this.mode = p.mode;
            this.flag = p.flag;
        }
    }

    public class GMS_BOSS1_EFF_SCT_PART_NDC_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_BS_CMN_NODE_CTRL_OBJECT ncd_obj = new AppMain.GMS_BS_CMN_NODE_CTRL_OBJECT();
        public AppMain.NNS_QUATERNION spin_quat;
        public bool is_ironball;

        public GMS_BOSS1_EFF_SCT_PART_NDC_WORK()
        {
            this.ncd_obj = new AppMain.GMS_BS_CMN_NODE_CTRL_OBJECT((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.ncd_obj.efct_com.obj_work;
        }

        public static explicit operator AppMain.GMS_BS_CMN_NODE_CTRL_OBJECT(
          AppMain.GMS_BOSS1_EFF_SCT_PART_NDC_WORK work)
        {
            return work.ncd_obj;
        }
    }

    public class GMS_BS_CMN_SNM_NODE_INFO
    {
        public uint[] reserved = new uint[3];
        public readonly AppMain.NNS_MATRIX node_w_mtx = AppMain.GlobalPool<AppMain.NNS_MATRIX>.Alloc();
        public int node_index;
    }

    public class GMS_BOSS1_1SHOT_TIMER
    {
        public uint timer;
        public bool is_active;
    }

    public class GMS_BOSS1_MTN_SUSPEND_WORK
    {
        public bool is_suspended;
        public uint suspend_timer;
    }

    public class GMS_BOSS1_EFF_BOMB_WORK
    {
        public readonly int[] pos = new int[2];
        public readonly int[] area = new int[2];
        public AppMain.OBS_OBJECT_WORK parent_obj;
        public int bomb_type;
        public uint interval_timer;
        public uint interval_min;
        public uint interval_max;
        public int interval_timer_sound;
    }

    public class GMS_BOSS1_PART_ACT_INFO
    {
        public ushort act_id;
        public byte is_maintain;
        public byte is_repeat;
        public float mtn_spd;
        public bool is_blend;
        public float blend_spd;
        public bool is_merge_manual;

        public GMS_BOSS1_PART_ACT_INFO(
          ushort _act_id,
          bool _is_maintain,
          bool _is_repeat,
          float _mtn_spd,
          bool _is_blend,
          float _blend_spd,
          bool _is_merge_manual)
        {
            this.act_id = _act_id;
            this.is_maintain = _is_maintain ? (byte)1 : (byte)0;
            this.is_repeat = _is_repeat ? (byte)1 : (byte)0;
            this.mtn_spd = _mtn_spd;
            this.is_blend = _is_blend;
            this.blend_spd = _blend_spd;
            this.is_merge_manual = _is_merge_manual;
        }
    }

    public delegate void GMF_BOSS1_BODY_STATE_ENTER_FUNC(AppMain.GMS_BOSS1_BODY_WORK work);

    public delegate void GMF_BOSS1_BODY_STATE_LEAVE_FUNC(AppMain.GMS_BOSS1_BODY_WORK work);

    public class GMS_BOSS1_BODY_STATE_ENTER_INFO
    {
        public AppMain.GMF_BOSS1_BODY_STATE_ENTER_FUNC enter_func;
        public bool is_wrapped;

        public GMS_BOSS1_BODY_STATE_ENTER_INFO(
          AppMain.GMF_BOSS1_BODY_STATE_ENTER_FUNC _enter_func,
          bool _is_wrapped)
        {
            this.enter_func = _enter_func;
            this.is_wrapped = _is_wrapped;
        }
    }

    public class YSDS_HEADER
    {
        public byte[] masic;
        public uint page_num;
        public AppMain.YSDS_PAGE[] pages;

        public YSDS_HEADER(byte[] data)
        {
            using (MemoryStream memoryStream = new MemoryStream(data))
            {
                using (BinaryReader br = new BinaryReader((Stream)memoryStream))
                {
                    this.masic = br.ReadBytes(4);
                    this.page_num = br.ReadUInt32();
                    this.pages = AppMain.New<AppMain.YSDS_PAGE>((int)this.page_num);
                    for (int index = 0; (long)index < (long)this.page_num; ++index)
                    {
                        this.pages[index].time = br.ReadUInt32();
                        this.pages[index].show = br.ReadInt32();
                        this.pages[index].hide = br.ReadInt32();
                        this.pages[index].option = br.ReadUInt32();
                        this.pages[index].line_num = br.ReadUInt32();
                        this.pages[index].line_tbl_ofst = br.ReadUInt32();
                        this.pages[index].lines = AppMain.New<AppMain.YSDS_LINE>((int)this.pages[index].line_num);
                    }
                    for (int index1 = 0; (long)index1 < (long)this.page_num; ++index1)
                    {
                        br.BaseStream.Seek((long)this.pages[index1].line_tbl_ofst, SeekOrigin.Begin);
                        for (int index2 = 0; (long)index2 < (long)this.pages[index1].line_num; ++index2)
                        {
                            this.pages[index1].lines[index2].id = br.ReadUInt32();
                            this.pages[index1].lines[index2].str_ofst = br.ReadUInt32();
                        }
                    }
                    for (int index1 = 0; (long)index1 < (long)this.page_num; ++index1)
                    {
                        for (int index2 = 0; (long)index2 < (long)this.pages[index1].line_num; ++index2)
                        {
                            br.BaseStream.Seek((long)this.pages[index1].lines[index2].str_ofst, SeekOrigin.Begin);
                            this.pages[index1].lines[index2].s = AppMain.readChars(br);
                        }
                    }
                }
            }
        }
    }

    public class YSDS_PAGE
    {
        public uint time;
        public int show;
        public int hide;
        public uint option;
        public uint line_num;
        public uint line_tbl_ofst;
        public AppMain.YSDS_LINE[] lines;
    }

    public class YSDS_LINE
    {
        public uint id;
        public uint str_ofst;
        public string s;
    }

    public enum DRE_TBL_WORK_TYPE
    {
        OBD_TBLWORK_TYPE_ACT,
        OBD_TBLWORK_TYPE_MOVE,
        OBD_TBLWORK_TYPE_SCALE,
        OBD_TBLWORK_TYPE_DIR,
        OBD_TBLWORK_TYPE_MAX,
    }

    public class OBS_ACT_TBL
    {
        public ushort act_id;
        public byte time;
        public byte flag;

        public OBS_ACT_TBL()
        {
        }

        public OBS_ACT_TBL(AppMain.OBS_ACT_TBL obsTbl)
        {
            this.act_id = obsTbl.act_id;
            this.time = obsTbl.time;
            this.flag = obsTbl.flag;
        }

        public AppMain.OBS_ACT_TBL Assign(AppMain.OBS_ACT_TBL obsTbl)
        {
            this.act_id = obsTbl.act_id;
            this.time = obsTbl.time;
            this.flag = obsTbl.flag;
            return this;
        }
    }

    public class OBS_MOVE_TBL
    {
        public AppMain.VecFx32 spd = new AppMain.VecFx32();
        public AppMain.VecFx32 spd_add = new AppMain.VecFx32();
        public byte time;
        public byte flag;

        public OBS_MOVE_TBL()
        {
        }

        public OBS_MOVE_TBL(AppMain.OBS_MOVE_TBL obsTbl)
        {
            this.spd.Assign(obsTbl.spd);
            this.spd_add.Assign(obsTbl.spd_add);
            this.time = obsTbl.time;
            this.flag = obsTbl.flag;
        }

        public AppMain.OBS_MOVE_TBL Assign(AppMain.OBS_MOVE_TBL obsTbl)
        {
            if (this != obsTbl)
            {
                this.spd.Assign(obsTbl.spd);
                this.spd_add.Assign(obsTbl.spd_add);
                this.time = obsTbl.time;
                this.flag = obsTbl.flag;
            }
            return this;
        }
    }

    public class OBS_SCALE_TBL
    {
        public AppMain.VecFx32 scale = new AppMain.VecFx32();
        public byte time;
        public byte flag;

        public OBS_SCALE_TBL()
        {
        }

        public OBS_SCALE_TBL(AppMain.OBS_SCALE_TBL obsTbl)
        {
            this.scale.Assign(obsTbl.scale);
            this.time = obsTbl.time;
            this.flag = obsTbl.flag;
        }

        public AppMain.OBS_SCALE_TBL Assign(AppMain.OBS_SCALE_TBL obsTbl)
        {
            if (this != obsTbl)
            {
                this.scale.Assign(obsTbl.scale);
                this.time = obsTbl.time;
                this.flag = obsTbl.flag;
            }
            return this;
        }
    }

    public class OBS_DIR_TBL
    {
        public AppMain.VecU16 dir = new AppMain.VecU16();
        public byte time;
        public byte flag;

        public OBS_DIR_TBL()
        {
        }

        public OBS_DIR_TBL(AppMain.OBS_DIR_TBL obsTbl)
        {
            this.dir.Assign(obsTbl.dir);
            this.time = obsTbl.time;
            this.flag = obsTbl.flag;
        }

        public AppMain.OBS_DIR_TBL Assign(AppMain.OBS_DIR_TBL obsTbl)
        {
            this.dir.Assign(obsTbl.dir);
            this.time = obsTbl.time;
            this.flag = obsTbl.flag;
            return this;
        }
    }

    public class OBS_TBL_WORK
    {
        public readonly short[] key_timer = new short[4];
        public readonly short[] move_timer = new short[4];
        public AppMain.VecFx32 spd = new AppMain.VecFx32();
        public AppMain.VecFx32 scale = new AppMain.VecFx32();
        public AppMain.VecU16 dir = new AppMain.VecU16();
        public readonly AppMain.OBS_DATA_WORK[] data_work = new AppMain.OBS_DATA_WORK[4];
        public readonly short[] repeat_point = new short[4];
        public uint flag;
        public AppMain.OBS_ACT_TBL act_tbl;
        public AppMain.OBS_MOVE_TBL move_tbl;
        public AppMain.OBS_SCALE_TBL scale_tbl;
        public AppMain.OBS_DIR_TBL dir_tbl;

        public OBS_TBL_WORK()
        {
        }

        public OBS_TBL_WORK(AppMain.OBS_TBL_WORK tblWork)
        {
            Array.Copy((Array)tblWork.key_timer, (Array)this.key_timer, this.key_timer.Length);
            Array.Copy((Array)tblWork.move_timer, (Array)this.move_timer, this.move_timer.Length);
            this.flag = tblWork.flag;
            this.spd.Assign(tblWork.spd);
            this.scale.Assign(tblWork.scale);
            this.dir.Assign(tblWork.dir);
            this.act_tbl = tblWork.act_tbl;
            this.move_tbl = tblWork.move_tbl;
            this.scale_tbl = tblWork.scale_tbl;
            this.dir_tbl = tblWork.dir_tbl;
            Array.Copy((Array)tblWork.data_work, (Array)this.data_work, this.data_work.Length);
            Array.Copy((Array)tblWork.repeat_point, (Array)this.repeat_point, this.repeat_point.Length);
        }

        public AppMain.OBS_TBL_WORK Assign(AppMain.OBS_TBL_WORK tblWork)
        {
            if (this != tblWork)
            {
                Array.Copy((Array)tblWork.key_timer, (Array)this.key_timer, this.key_timer.Length);
                Array.Copy((Array)tblWork.move_timer, (Array)this.move_timer, this.move_timer.Length);
                this.flag = tblWork.flag;
                this.spd.Assign(tblWork.spd);
                this.scale.Assign(tblWork.scale);
                this.dir.Assign(tblWork.dir);
                this.act_tbl = tblWork.act_tbl;
                this.move_tbl = tblWork.move_tbl;
                this.scale_tbl = tblWork.scale_tbl;
                this.dir_tbl = tblWork.dir_tbl;
                Array.Copy((Array)tblWork.data_work, (Array)this.data_work, this.data_work.Length);
                Array.Copy((Array)tblWork.repeat_point, (Array)this.repeat_point, this.repeat_point.Length);
            }
            return this;
        }
    }

    public class NNS_PRIM3D_PN
    {
        public readonly AppMain.NNS_VECTOR Pos = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_VECTOR Nrm = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
    }

    public class NNS_PRIM3D_PNT : AppMain.NNS_PRIM3D_PN
    {
        public AppMain.NNS_TEXCOORD Tex;
    }

    public enum NNE_PRIM_LINE
    {
        NNE_PRIM_LINE_LIST,
        NNE_PRIM_LINE_STRIP,
    }

    private struct NNS_CONFIG_GL
    {
        public int WindowWidth;
        public int WindowHeight;
    }

    public class AMS_VECTOR3I
    {
        public int x;
        public int y;
        public int z;

        public void Assign(AppMain.AMS_VECTOR3I other)
        {
            this.x = other.x;
            this.y = other.y;
            this.z = other.z;
        }

        public void Assign(AppMain.VecFx32 v)
        {
            this.x = v.x;
            this.y = v.y;
            this.z = v.z;
        }
    }

    public struct AMS_VECTOR4I
    {
        public int x;
        public int y;
        public int z;
        public int w;
    }

    private class CMain_PauseMenu : AppMain.ITaskLinkAsv
    {
        private static AppMain.CMain_PauseMenu instance_ = new AppMain.CMain_PauseMenu();
        private static readonly int[] c_return_table = new int[3]
        {
      0,
      2,
      4
        };
        private static readonly int[] c_local_create_table = new int[2]
        {
      2,
      3
        };
        private static AppMain.CMain_PauseMenu.SLocalCreateActionTable[] local_create_action_table = new AppMain.CMain_PauseMenu.SLocalCreateActionTable[17]
        {
      new AppMain.CMain_PauseMenu.SLocalCreateActionTable()
      {
        file = 0,
        tex = 0,
        idx = 0
      },
      new AppMain.CMain_PauseMenu.SLocalCreateActionTable()
      {
        file = 0,
        tex = 0,
        idx = 1
      },
      new AppMain.CMain_PauseMenu.SLocalCreateActionTable()
      {
        file = 0,
        tex = 0,
        idx = 2
      },
      new AppMain.CMain_PauseMenu.SLocalCreateActionTable()
      {
        file = 0,
        tex = 0,
        idx = 3
      },
      new AppMain.CMain_PauseMenu.SLocalCreateActionTable()
      {
        file = 0,
        tex = 0,
        idx = 4
      },
      new AppMain.CMain_PauseMenu.SLocalCreateActionTable()
      {
        file = 0,
        tex = 0,
        idx = 5
      },
      new AppMain.CMain_PauseMenu.SLocalCreateActionTable()
      {
        file = 0,
        tex = 0,
        idx = 6
      },
      new AppMain.CMain_PauseMenu.SLocalCreateActionTable()
      {
        file = 0,
        tex = 0,
        idx = 7
      },
      new AppMain.CMain_PauseMenu.SLocalCreateActionTable()
      {
        file = 0,
        tex = 0,
        idx = 8
      },
      new AppMain.CMain_PauseMenu.SLocalCreateActionTable()
      {
        file = 0,
        tex = 0,
        idx = 9
      },
      new AppMain.CMain_PauseMenu.SLocalCreateActionTable()
      {
        file = 1,
        tex = 1,
        idx = 0
      },
      new AppMain.CMain_PauseMenu.SLocalCreateActionTable()
      {
        file = 1,
        tex = 1,
        idx = 1
      },
      new AppMain.CMain_PauseMenu.SLocalCreateActionTable()
      {
        file = 1,
        tex = 1,
        idx = 3
      },
      new AppMain.CMain_PauseMenu.SLocalCreateActionTable()
      {
        file = 1,
        tex = 1,
        idx = 4
      },
      new AppMain.CMain_PauseMenu.SLocalCreateActionTable()
      {
        file = 1,
        tex = 1,
        idx = 5
      },
      new AppMain.CMain_PauseMenu.SLocalCreateActionTable()
      {
        file = 1,
        tex = 1,
        idx = 9
      },
      new AppMain.CMain_PauseMenu.SLocalCreateActionTable()
      {
        file = 1,
        tex = 1,
        idx = 8
      }
        };
        private static int[] c_local_create_trg_table = new int[3]
        {
      2,
      5,
      8
        };
        private static readonly int[] c_trg_table_select = new int[3]
        {
      0,
      1,
      2
        };
        private static readonly int[][] c_btn_action_table_select = new int[3][]
        {
      new int[3]{ 1, 2, 3 },
      new int[3]{ 4, 5, 6 },
      new int[3]{ 7, 8, 9 }
        };
        private static readonly int[] c_trg_table = new int[2]
        {
      0,
      1
        };
        private static readonly int[][] c_btn_action_table = new int[2][]
        {
      new int[3]{ 1, 2, 3 },
      new int[3]{ 4, 5, 6 }
        };
        private static readonly string[] c_se_name_tbl = new string[4]
        {
      "Ok",
      "Cancel",
      "Window",
      "Pause"
        };
        private readonly bool[] m_flag = new bool[9];
        private readonly AppMain.AMS_FS[] m_fs = new AppMain.AMS_FS[4];
        private readonly object[] m_file = new object[4];
        private readonly AppMain.AOS_TEXTURE[] m_tex = AppMain.New<AppMain.AOS_TEXTURE>(2);
        private AppMain.CMain_PauseMenu.SAction[] m_act = AppMain.New<AppMain.CMain_PauseMenu.SAction>(17);
        private readonly CTrgAoAction[] m_trg = AppMain.New<CTrgAoAction>(3);
        private const uint c_pause_btn_se_frame = 15;
        private const uint c_fade_in_frame = 8;
        private const uint c_fade_out_frame = 8;
        private const uint c_fade_enter_efct_frame = 10;
        public AppMain.AMS_FS pause_amb;
        public AppMain.AMS_FS lang_amb;
        private int m_return;
        private int m_really;
        private AppMain.GSS_SND_SE_HANDLE m_se_handle;
        private AppMain.CProcCount m_procCount;

        private CMain_PauseMenu()
        {
            this.m_procCount = new AppMain.CProcCount((object)this);
        }

        public static AppMain.CMain_PauseMenu CreateInstance()
        {
            return AppMain.CMain_PauseMenu.instance_;
        }

        public override void operator_brackets()
        {
            if (this.m_flag[0])
                this.preUpdate();
            this.m_procCount.operator_brackets();
            if (!this.m_flag[0])
                return;
            this.update();
            this.draw();
        }

        public bool Create()
        {
            return true;
        }

        public void Release()
        {
            if (!this.m_flag[0])
                return;
            if (this.m_flag[3])
            {
                for (int index = 0; index < this.m_file.Length; ++index)
                    this.m_file[0] = (object)null;
                this.m_flag[3] = false;
                this.m_flag[4] = false;
            }
            this.DetachTask();
            this.m_flag.Initialize();
        }

        public void LoadFile()
        {
            this.fileLoadingStart();
        }

        public void CreateTexture()
        {
            this.creatingStart();
        }

        public void ReleaseTexture()
        {
            this.releasingStart();
        }

        public void Start(uint prio)
        {
            this.fadeInStart((int)prio);
        }

        public void Cancel()
        {
            this.m_flag[8] = true;
        }

        public bool IsValid()
        {
            return this.m_flag[6];
        }

        public bool IsEmpty()
        {
            return !this.m_flag[0];
        }

        public bool IsLoadFile()
        {
            return this.m_flag[4];
        }

        public bool IsCreatedTexture()
        {
            return this.m_flag[6];
        }

        public bool IsReleasedTexture()
        {
            return !this.m_flag[5];
        }

        public bool IsPlay()
        {
            return !this.m_flag[7];
        }

        public int GetResult()
        {
            return this.m_return;
        }

        private void preUpdate()
        {
            if (!this.m_flag[7] || this.m_flag[1])
                return;
            for (int index = 0; index < this.m_trg.Length; ++index)
                this.m_trg[index].Update();
        }

        private void update()
        {
            if (!this.m_flag[7])
                return;
            AppMain.AoActAcmPush();
            AppMain.AoActAcmApplyTrans(0.0f, 0.0f, -1000f);
            for (int index = 0; index < this.m_act.Length; ++index)
            {
                this.m_act[index].Update();
                if (index == 16 || index == 15)
                    this.m_act[index].act.sprite.center_y += 5f;
            }
            AppMain.AoActAcmPop();
        }

        private void draw()
        {
            if (!AppMain._am_sample_draw_enable || !this.m_flag[7] || this.m_flag[1])
                return;
            for (int index = 0; index < this.m_act.Length; ++index)
                this.m_act[index].Draw();
        }

        private void fileLoadingStart()
        {
            this.m_file[0] = (object)AppMain.readAMAFile("G_COM/MENU/G_PAUSE.AMA");
            this.pause_amb = AppMain.amFsReadBackground("G_COM/MENU/G_PAUSE.AMB");
            this.m_file[1] = (object)AppMain.readAMAFile("G_COM/MENU/G_PAUSE_L.AMA");
            int language = AppMain.GsEnvGetLanguage();
            this.lang_amb = AppMain.amFsReadBackground(file.c_lang_amb[language]);
            this.m_flag[0] = true;
            this.m_flag[3] = true;
            this.AttachTask("gmPauseMenu.Load", 28928U, 0U, 0U);
            this.m_procCount.SetProc(new AppMain.ITaskAsv.FProc(this.fileLoading));
        }

        private void fileLoading()
        {
            if (!AppMain.amFsIsComplete(this.pause_amb))
                return;
            this.m_file[2] = (object)AppMain.readAMBFile(this.pause_amb);
            AppMain.GsEnvGetLanguage();
            if (!AppMain.amFsIsComplete(this.lang_amb))
                return;
            this.m_file[3] = (object)AppMain.readAMBFile(this.lang_amb);
            this.m_flag[4] = true;
            this.DetachTask();
        }

        private void creatingStart()
        {
            for (int index1 = 0; index1 < AppMain.CMain_PauseMenu.c_local_create_table.Length; ++index1)
            {
                int index2 = AppMain.CMain_PauseMenu.c_local_create_table[index1];
                AppMain.AoTexBuild(this.m_tex[index1], (AppMain.AMS_AMB_HEADER)this.m_file[index2]);
                AppMain.AoTexLoad(this.m_tex[index1]);
            }
            this.m_flag[5] = true;
            this.AttachTask("gmPauseMenu.Build", 28928U, 0U, 0U);
            this.m_procCount.SetProc(new AppMain.ITaskAsv.FProc(this.creating));
        }

        private void creating()
        {
            bool flag = true;
            for (int index = 0; index < this.m_tex.Length; ++index)
            {
                if (!AppMain.AoTexIsLoaded(this.m_tex[index]))
                {
                    flag = false;
                    break;
                }
            }
            if (!flag)
                return;
            this.m_flag[6] = true;
            this.DetachTask();
        }

        private void fadeInStart()
        {
            this.fadeInStart(28928);
        }

        private void fadeInStart(int prio)
        {
            if (!AppMain.CMain_PauseMenu.canGoStageSelect())
            {
                AppMain.CMain_PauseMenu.local_create_action_table[11].idx = 2;
                AppMain.CMain_PauseMenu.local_create_action_table[14].idx = 7;
            }
            else
            {
                AppMain.CMain_PauseMenu.local_create_action_table[11].idx = 1;
                AppMain.CMain_PauseMenu.local_create_action_table[14].idx = 5;
            }
            AppMain.CMain_PauseMenu.local_create_action_table[13].idx = !AppMain.CMain_PauseMenu.isSpecialStage() ? 4 : 6;
            for (int index = 0; index < 17; ++index)
            {
                AppMain.CMain_PauseMenu.SLocalCreateActionTable createActionTable = AppMain.CMain_PauseMenu.local_create_action_table[index];
                AppMain.A2S_AMA_HEADER ama = (AppMain.A2S_AMA_HEADER)this.m_file[createActionTable.file];
                AppMain.CMain_PauseMenu.SAction saction = this.m_act[index];
                saction.act = AppMain.AoActCreate(ama, (uint)createActionTable.idx);
                saction.tex = this.m_tex[createActionTable.tex];
                saction.flag[0] = true;
                saction.flag[1] = true;
                saction.AcmInit();
            }
            for (int index = 0; index < 3; ++index)
            {
                AppMain.CMain_PauseMenu.SAction saction = this.m_act[AppMain.CMain_PauseMenu.c_local_create_trg_table[index]];
                this.m_trg[index].Create(saction.act);
            }
            this.m_flag[7] = true;
            this.m_act[0].flag[1] = false;
            this.m_act[0].scale = new Vector2(0.0f, 0.0f);
            this.m_se_handle = AppMain.GsSoundAllocSeHandle();
            this.AttachTask("gmPauseMenu.Execute", (uint)prio, 0U, 0U);
            this.playSe(0);
            this.m_procCount.SetProc(new AppMain.ITaskAsv.FProc(this.fadeIn));
        }

        private void fadeIn()
        {
            if (15U >= this.m_procCount.GetCount())
                return;
            this.playSe(3);
            this.m_procCount.SetProc(new AppMain.ITaskAsv.FProc(this.fadeIn2));
        }

        private void fadeIn2()
        {
            float num = (float)(this.m_procCount.GetCount() / 8U);
            this.m_act[0].scale = new Vector2(num, num);
            if (8U >= this.m_procCount.GetCount())
                return;
            this.waitStart();
        }

        private void waitStart()
        {
            for (int index = 1; index < 13; ++index)
                this.m_act[index].flag[1] = false;
            this.m_procCount.SetProc(new AppMain.ITaskAsv.FProc(this.wait));
        }

        private void wait()
        {
            bool flag = false;
            for (int index = 0; index < AppMain._am_tp_touch.Length; ++index)
            {
                if (AppMain.amTpIsTouchOn(index))
                {
                    flag = true;
                    break;
                }
            }
            if (flag && 60U >= this.m_procCount.GetCount())
                return;
            this.selectStart();
        }

        private void selectStart()
        {
            for (int index = 0; index < this.m_act.Length; ++index)
            {
                this.m_act[index].flag[0] = true;
                AppMain.AoActSetFrame(this.m_act[index].act, 0.0f);
                this.m_act[index].pos = new Vector3(0.0f, 0.0f, 0.0f);
            }
            for (int index = 1; index < 13; ++index)
                this.m_act[index].flag[1] = false;
            for (int index = 13; index < 17; ++index)
                this.m_act[index].flag[1] = true;
            this.m_return = 6;
            this.m_procCount.SetProc(new AppMain.ITaskAsv.FProc(this.select));
        }

        private void select()
        {
            int trg_idx = -1;
            for (int index1 = 0; index1 < AppMain.CMain_PauseMenu.c_trg_table_select.Length; ++index1)
            {
                CTrgAoAction ctrgAoAction = this.m_trg[AppMain.CMain_PauseMenu.c_trg_table_select[index1]];
                float frame;
                if (ctrgAoAction.GetState(0U)[10] && ctrgAoAction.GetState(0U)[1])
                {
                    frame = 2f;
                    trg_idx = index1;
                }
                else
                    frame = !ctrgAoAction.GetState(0U)[0] ? 0.0f : 3f;
                for (int index2 = 0; index2 < AppMain.CMain_PauseMenu.c_btn_action_table_select[index1].Length; ++index2)
                    AppMain.AoActSetFrame(this.m_act[AppMain.CMain_PauseMenu.c_btn_action_table_select[index1][index2]].act, frame);
            }
            if (-1 != trg_idx)
            {
                int[] numArray = AppMain.CMain_PauseMenu.c_btn_action_table_select[trg_idx];
                for (int index = numArray[0]; index < numArray[2] + 1; ++index)
                    this.m_act[index].flag[0] = false;
                this.m_return = AppMain.CMain_PauseMenu.TrgIdxToReturnIdx(trg_idx);
            }
            else if (this.m_flag[8])
                this.m_return = 4;
            if (0 <= AppMain.GmMainKeyCheckPauseKeyPush())
            {
                this.pauseBtnCancelStart();
            }
            else
            {
                if (AppMain.isBackKeyPressed())
                {
                    this.m_return = 4;
                    AppMain.setBackKeyRequest(false);
                }
                switch (this.m_return)
                {
                    case 4:
                        this.playSe(1);
                        this.enterEfctStart();
                        break;
                    case 6:
                        break;
                    default:
                        this.playSe(0);
                        this.reallyStart();
                        break;
                }
            }
        }

        private void reallyStart()
        {
            for (int index = 0; index < this.m_act.Length; ++index)
            {
                AppMain.CMain_PauseMenu.SAction saction = this.m_act[index];
                saction.flag[0] = true;
                AppMain.AoActSetFrame(saction.act, 0.0f);
                saction.pos = new Vector3(0.0f, 0.0f, 0.0f);
            }
            for (int index = 7; index < 10; ++index)
                this.m_act[index].flag[1] = true;
            for (int index = 13; index < 15; ++index)
            {
                AppMain.CMain_PauseMenu.SAction saction = this.m_act[index];
                float num = 27f / 16f;
                saction.pos = new Vector3(480f, 269f, 0.0f);
                saction.scale = new Vector2(num, num);
            }
            switch (this.m_return)
            {
                case 0:
                    this.m_act[13].flag[1] = false;
                    this.m_act[14].flag[1] = true;
                    this.m_act[10].flag[1] = true;
                    this.m_act[11].flag[1] = true;
                    this.m_act[12].flag[1] = true;
                    this.m_act[15].flag[1] = false;
                    this.m_act[16].flag[1] = false;
                    for (int index = 1; index < 4; ++index)
                        this.m_act[index].pos = new Vector3(0.0f, 194f, 0.0f);
                    for (int index = 4; index < 7; ++index)
                        this.m_act[index].pos = new Vector3(0.0f, 194f, 0.0f);
                    break;
                case 2:
                case 3:
                    this.m_act[13].flag[1] = true;
                    this.m_act[14].flag[1] = false;
                    this.m_act[10].flag[1] = true;
                    this.m_act[11].flag[1] = true;
                    this.m_act[12].flag[1] = true;
                    this.m_act[15].flag[1] = false;
                    this.m_act[16].flag[1] = false;
                    for (int index = 1; index < 4; ++index)
                        this.m_act[index].pos = new Vector3(380f, 194f, 0.0f);
                    for (int index = 4; index < 7; ++index)
                        this.m_act[index].pos = new Vector3(-380f, 194f, 0.0f);
                    break;
            }
            this.m_really = 6;
            this.m_procCount.SetProc(new AppMain.ITaskAsv.FProc(this.really));
        }

        private void really()
        {
            int trg_idx = -1;
            for (int index1 = 0; index1 < AppMain.CMain_PauseMenu.c_trg_table.Length; ++index1)
            {
                CTrgAoAction ctrgAoAction = this.m_trg[AppMain.CMain_PauseMenu.c_trg_table[index1]];
                float frame;
                if (ctrgAoAction.GetState(0U)[10] && ctrgAoAction.GetState(0U)[1])
                {
                    frame = 2f;
                    trg_idx = index1;
                }
                else
                    frame = !ctrgAoAction.GetState(0U)[0] ? 0.0f : 3f;
                for (int index2 = 0; index2 < AppMain.CMain_PauseMenu.c_btn_action_table[index1].Length; ++index2)
                    AppMain.AoActSetFrame(this.m_act[AppMain.CMain_PauseMenu.c_btn_action_table[index1][index2]].act, frame);
            }
            if (-1 != trg_idx)
            {
                int[] numArray = AppMain.CMain_PauseMenu.c_btn_action_table[trg_idx];
                for (int index = numArray[0]; index < numArray[2] + 1; ++index)
                    this.m_act[index].flag[0] = false;
                this.m_really = AppMain.CMain_PauseMenu.TrgIdxToReturnIdx(trg_idx);
            }
            else if (this.m_flag[8])
                this.m_really = 4;
            if (0 <= AppMain.GmMainKeyCheckPauseKeyPush())
            {
                this.m_return = 4;
                this.pauseBtnCancelStart();
            }
            else if (AppMain.isBackKeyPressed())
            {
                this.m_return = 4;
                AppMain.setBackKeyRequest(false);
                this.playSe(1);
                this.selectStart();
            }
            else
            {
                if (6 == this.m_really)
                    return;
                if (this.m_return == this.m_really)
                {
                    this.playSe(0);
                    this.enterEfctStart();
                }
                else
                {
                    this.playSe(1);
                    this.selectStart();
                }
            }
        }

        private void enterEfctStart()
        {
            this.m_procCount.SetProc(new AppMain.ITaskAsv.FProc(this.enterEfct));
        }

        private void enterEfct()
        {
            if (10U >= this.m_procCount.GetCount())
                return;
            this.fadeOutStart();
        }

        private void pauseBtnCancelStart()
        {
            this.playSe(0);
            this.m_procCount.SetProc(new AppMain.ITaskAsv.FProc(this.pauseBtnCancel));
        }

        private void pauseBtnCancel()
        {
            if (15U >= this.m_procCount.GetCount())
                return;
            this.fadeOutStart();
        }

        private void fadeOutStart()
        {
            foreach (AppMain.CMain_PauseMenu.SAction saction in this.m_act)
            {
                saction.flag[0] = true;
                saction.flag[1] = true;
            }
            this.m_act[0].flag[0] = false;
            this.m_act[0].flag[1] = false;
            this.playSe(3);
            this.m_procCount.SetProc(new AppMain.ITaskAsv.FProc(this.fadeOut));
        }

        private void fadeOut()
        {
            float num = 1f - (float)(this.m_procCount.GetCount() / 8U);
            this.m_act[0].scale = new Vector2(num, num);
            if (8U >= this.m_procCount.GetCount())
                return;
            foreach (AppMain.CMain_PauseMenu.SAction saction in this.m_act)
                AppMain.AoActDelete(saction.act);
            AppMain.GsSoundFreeSeHandle(this.m_se_handle);
            this.m_flag[7] = false;
            this.DetachTask();
        }

        private void releasingStart()
        {
            foreach (AppMain.AOS_TEXTURE tex in this.m_tex)
                AppMain.AoTexRelease(tex);
            this.AttachTask("gmPauseMenu.Flush", 28928U, 0U, 0U);
            this.m_procCount.SetProc(new AppMain.ITaskAsv.FProc(this.releasing));
        }

        private void releasing()
        {
            bool flag = true;
            foreach (AppMain.AOS_TEXTURE tex in this.m_tex)
            {
                if (!AppMain.AoTexIsReleased(tex))
                {
                    flag = false;
                    break;
                }
            }
            if (!flag)
                return;
            this.m_flag[5] = false;
            this.m_flag[6] = false;
            this.DetachTask();
        }

        private void playSe(int se)
        {
            AppMain.GmSoundPlaySE(AppMain.CMain_PauseMenu.c_se_name_tbl[se]);
        }

        private static bool canGoStageSelect()
        {
            return AppMain.GsMainSysIsStageClear(0) && !AppMain.GsTrialIsTrial();
        }

        private static bool isSpecialStage()
        {
            return AppMain.GSM_MAIN_STAGE_IS_SPSTAGE();
        }

        private static int TrgIdxToReturnIdx(int trg_idx)
        {
            int num = AppMain.CMain_PauseMenu.c_return_table[trg_idx];
            if (!AppMain.CMain_PauseMenu.canGoStageSelect() && 2 == num)
                num = 3;
            return num;
        }

        private class EReturn
        {
            public const int Retry = 0;
            public const int Option = 1;
            public const int Back = 2;
            public const int MainMenu = 3;
            public const int Cancel = 4;
            public const int Max = 5;
            public const int None = 6;
        }

        private class BFlag
        {
            public const int Create = 0;
            public const int NoUpdate = 1;
            public const int NoDraw = 2;
            public const int LoadFile = 3;
            public const int LoadedFile = 4;
            public const int CreateTexture = 5;
            public const int CreatedTexture = 6;
            public const int Start = 7;
            public const int ReqCancel = 8;
            public const int Max = 9;
            public const int None = 10;
        }

        private class EMemFile
        {
            public const int Ama = 0;
            public const int AmaLang = 1;
            public const int Amb = 2;
            public const int AmbLang = 3;
            public const int Max = 4;
            public const int None = 5;
        }

        private class ETex
        {
            public const int Amb = 0;
            public const int AmbLang = 1;
            public const int Max = 2;
            public const int None = 3;
        }

        private class EAct
        {
            public const int Bgi = 0;
            public const int Btn1Left = 1;
            public const int Btn1Center = 2;
            public const int Btn1Right = 3;
            public const int Btn3Left = 4;
            public const int Btn3Center = 5;
            public const int Btn3Right = 6;
            public const int Btn4Left = 7;
            public const int Btn4Center = 8;
            public const int Btn4Right = 9;
            public const int Retry = 10;
            public const int Back = 11;
            public const int Cancel = 12;
            public const int MsgRetry = 13;
            public const int MsgReturn = 14;
            public const int No = 15;
            public const int Yes = 16;
            public const int Max = 17;
            public const int None = 18;
        }

        private class ETrg
        {
            public const int Btn1 = 0;
            public const int Btn3 = 1;
            public const int Btn4 = 2;
            public const int Max = 3;
            public const int None = 4;
        }

        private class SAction
        {
            public readonly bool[] flag = new bool[2];
            public AppMain.AOS_ACTION act;
            public AppMain.AOS_TEXTURE tex;
            public Vector2 scale;
            public Vector3 pos;
            public AppMain.AOS_ACT_COL color;

            public void AcmInit()
            {
                this.pos = new Vector3(0.0f, 0.0f, 0.0f);
                this.scale = new Vector2(1f, 1f);
                this.color.c = uint.MaxValue;
            }

            public void Update()
            {
                AppMain.AoActAcmPush();
                float frame = this.flag[0] ? 0.0f : 1f;
                AppMain.AoActSetTexture(AppMain.AoTexGetTexList(this.tex));
                if (1.0 != (double)this.scale.X || 1.0 != (double)this.scale.Y)
                    AppMain.AoActAcmApplyScale(this.scale.X, this.scale.Y);
                if (0.0 != (double)this.pos.X || 0.0 != (double)this.pos.Y || 0.0 != (double)this.pos.Z)
                    AppMain.AoActAcmApplyTrans(this.pos.X, this.pos.Y, this.pos.Z);
                if (uint.MaxValue != this.color.c)
                    AppMain.AoActAcmApplyColor(this.color);
                AppMain.AoActUpdate(this.act, frame);
                AppMain.AoActAcmPop();
            }

            public void Draw()
            {
                if (this.flag[1])
                    return;
                AppMain.AoActSortRegAction(this.act);
            }

            public class BFlag
            {
                public const int NoUpdate = 0;
                public const int NoDraw = 1;
                public const int Max = 2;
                public const int None = 3;
            }
        }

        private class ESe
        {
            public const int Enter = 0;
            public const int Cancel = 1;
            public const int Window = 2;
            public const int Pause = 3;
            public const int Max = 4;
            public const int None = 5;
        }

        private class SLocalCreateActionTable
        {
            public int file;
            public int tex;
            public int idx;
        }
    }

    private class GMS_GMK_FLIPPER_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK gimmick_work = new AppMain.GMS_ENEMY_3D_WORK();
        public readonly AppMain.OBS_ACTION3D_NN_WORK obj_3d_parts = new AppMain.OBS_ACTION3D_NN_WORK();

        public GMS_GMK_FLIPPER_WORK()
        {
            this.gimmick_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.gimmick_work.ene_com.obj_work;
        }
    }

    public static class gmGmkBreakWallConstants
    {
        public const int GME_GMK_RECT_DATA_COL_WIDTH = 0;
        public const int GME_GMK_RECT_DATA_COL_HEIGHT = 1;
        public const int GME_GMK_RECT_DATA_COL_OFST_X = 2;
        public const int GME_GMK_RECT_DATA_COL_OFST_Y = 3;
        public const int GME_GMK_RECT_DATA_DEF_LEFT = 4;
        public const int GME_GMK_RECT_DATA_DEF_TOP = 5;
        public const int GME_GMK_RECT_DATA_DEF_RIGHT = 6;
        public const int GME_GMK_RECT_DATA_DEF_BOTTOM = 7;
        public const int GME_GMK_RECT_DATA_MAX = 8;
    }

    public class GMS_GMK_BWALL_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public readonly AppMain.GMS_ENEMY_3D_WORK gmk_work;
        public int obj_type;
        public int wall_type;
        public int hitpass;
        public short hitcheck;
        public ushort broketype;
        public ushort vect;

        public static explicit operator AppMain.GMS_ENEMY_3D_WORK(AppMain.GMS_GMK_BWALL_WORK p)
        {
            return p.gmk_work;
        }

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.gmk_work.ene_com.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(AppMain.GMS_GMK_BWALL_WORK work)
        {
            return work.gmk_work.ene_com.obj_work;
        }

        public GMS_GMK_BWALL_WORK()
        {
            this.gmk_work = new AppMain.GMS_ENEMY_3D_WORK((object)this);
        }
    }

    private class GMS_GMK_BWALL_PARTS_PARAM_TABLE
    {
        public ushort[][] _params;
        public ushort num;

        public GMS_GMK_BWALL_PARTS_PARAM_TABLE(ushort[][] prm, ushort n)
        {
            this._params = prm;
            this.num = n;
        }

        public GMS_GMK_BWALL_PARTS_PARAM_TABLE(ushort[][] prm, int n)
        {
            this._params = prm;
            this.num = (ushort)n;
        }
    }

    public delegate void GMF_BOSS4_BODY_STATE_ENTER_FUNC(AppMain.GMS_BOSS4_BODY_WORK bodeWork);

    public delegate void GMF_BOSS4_BODY_STATE_LEAVE_FUNC(AppMain.GMS_BOSS4_BODY_WORK bodyWork);

    public class GMS_BOSS4_BODY_STATE_ENTER_INFO
    {
        public AppMain.GMF_BOSS4_BODY_STATE_ENTER_FUNC enter_func;
        public bool is_wrapped;

        public GMS_BOSS4_BODY_STATE_ENTER_INFO(
          AppMain.GMF_BOSS4_BODY_STATE_ENTER_FUNC _enter_func,
          bool _is_wrapped)
        {
            this.enter_func = _enter_func;
            this.is_wrapped = _is_wrapped;
        }
    }

    public struct TVXS_HEADER
    {
        public uint tex_num;
        public uint tex_tbl_ofst;

        public TVXS_HEADER(byte[] data, int offset)
        {
            this.tex_num = MppBitConverter.ToUInt32(data, offset + 4);
            this.tex_tbl_ofst = MppBitConverter.ToUInt32(data, offset + 8);
        }

        public static uint SizeBytes
        {
            get
            {
                return 16;
            }
        }
    }

    public struct TVXS_TEXTURE
    {
        public int tex_id;
        public uint vtx_num;
        public uint vtx_tbl_ofst;
        public uint prim_type;

        public TVXS_TEXTURE(byte[] data, int offset)
        {
            this.tex_id = MppBitConverter.ToInt32(data, offset);
            this.vtx_num = MppBitConverter.ToUInt32(data, offset + 4);
            this.vtx_tbl_ofst = MppBitConverter.ToUInt32(data, offset + 8);
            this.prim_type = MppBitConverter.ToUInt32(data, offset + 12);
        }

        public static int SizeBytes
        {
            get
            {
                return 16;
            }
        }
    }

    public enum AOE_ACT_TYPE
    {
        AOD_ACT_TYPE_ACTION,
        AOD_ACT_TYPE_NODE,
        AOD_ACT_TYPE_NUM,
        AOD_ACT_TYPE_NONE,
    }

    public enum AOE_ACT_HIT
    {
        AOD_ACT_HIT_RECT,
        AOD_ACT_HIT_CIRCLE,
        AOD_ACT_HIT_NUM,
        AOD_ACT_HIT_NONE,
    }

    public enum AOE_ACT_CORW
    {
        AOD_ACT_CORW_NONE,
        AOD_ACT_CORW_CENTER,
        AOD_ACT_CORW_LEFT,
        AOD_ACT_CORW_RIGHT,
        AOD_ACT_CORW_LEFT_S,
        AOD_ACT_CORW_RIGHT_S,
        AOD_ACT_CORW_NUM,
    }

    public struct AOS_ACT_RECT
    {
        public float left;
        public float top;
        public float right;
        public float bottom;

        public void Assign(ref AppMain.A2S_SUB_RECT rect)
        {
            this.left = rect.left;
            this.top = rect.top;
            this.right = rect.right;
            this.bottom = rect.bottom;
        }

        public void Clear()
        {
            this.left = this.top = this.right = this.bottom = 0.0f;
        }
    }

    public struct A2S_SUB_RECT
    {
        public float left;
        public float top;
        public float right;
        public float bottom;
    }

    public struct AOS_ACT_CIRCLE
    {
        public float center_x;
        public float center_y;
        public float radius;
        public uint pad;

        public void Assign(ref AppMain.A2S_SUB_CIRCLE c)
        {
            this.center_x = c.center_x;
            this.center_y = c.center_y;
            this.radius = c.radius;
            this.pad = c.pad;
        }
    }

    public struct A2S_SUB_CIRCLE
    {
        public float center_x;
        public float center_y;
        public float radius;
        public uint pad;
    }

    public class AOS_ACT_HITP
    {
        public uint flag;
        public AppMain.AOE_ACT_HIT type;
        public float scale_x;
        public float scale_y;
        public AppMain.AOS_ACT_RECT rect;

        public void Assign(AppMain.AOS_ACT_HITP other)
        {
            this.flag = other.flag;
            this.type = other.type;
            this.scale_x = other.scale_x;
            this.scale_y = other.scale_y;
            this.rect = other.rect;
        }

        public void Clear()
        {
            this.flag = 0U;
            this.type = AppMain.AOE_ACT_HIT.AOD_ACT_HIT_RECT;
            this.scale_x = this.scale_y = 0.0f;
        }

        public void GetCircle(ref AppMain.AOS_ACT_CIRCLE circle)
        {
            circle.center_x = this.rect.left;
            circle.center_y = this.rect.top;
            circle.radius = this.rect.right;
            circle.pad = (uint)this.rect.bottom;
        }

        public void SetCircle(ref AppMain.A2S_SUB_CIRCLE circle)
        {
            this.rect.left = circle.center_x;
            this.rect.top = circle.center_y;
            this.rect.right = circle.radius;
            this.rect.bottom = (float)circle.pad;
        }

        public void SetCircle(ref AppMain.AOS_ACT_CIRCLE circle)
        {
            this.rect.left = circle.center_x;
            this.rect.top = circle.center_y;
            this.rect.right = circle.radius;
            this.rect.bottom = (float)circle.pad;
        }
    }

    public class AOS_ACT_HIT
    {
        public AppMain.AOE_ACT_HIT type;
        public float center_x;
        public float center_y;
        public float rotate;
        public float scale_x;
        public float scale_y;
        public uint[] pad;
        public AppMain.AOS_ACT_RECT rect;
        public AppMain.AOS_ACT_CIRCLE circle;
    }

    public struct _last_key
    {
        public int trs;
        public int mtn;
        public int anm;
        public int mat;
        public int atrs;
        public int amtn;
        public int amat;
        public int usr;
        public int hit;

        public void Clear()
        {
            this.trs = this.mtn = this.anm = this.mat = this.atrs = this.amtn = this.amat = this.usr = this.hit = 0;
        }
    }

    public class AOS_ACT_ACM
    {
        public float trans_x;
        public float trans_y;
        public float trans_z;
        public AppMain.AOS_ACT_COL color;
        public AppMain.AOS_ACT_COL fade;
        public float trans_scale_x;
        public float trans_scale_y;
        public float scale_x;
        public float scale_y;
        public float rotate;

        public void Clear()
        {
            this.trans_x = this.trans_y = this.trans_z = 0.0f;
            this.trans_scale_x = this.trans_scale_y = 0.0f;
            this.scale_x = this.scale_y = 0.0f;
            this.rotate = 0.0f;
            this.color.Clear();
            this.fade.Clear();
        }

        public void Assign(AppMain.AOS_ACT_ACM acm)
        {
            this.trans_x = acm.trans_x;
            this.trans_y = acm.trans_y;
            this.trans_z = acm.trans_z;
            this.color = acm.color;
            this.fade = acm.fade;
            this.trans_scale_x = acm.trans_scale_x;
            this.trans_scale_y = acm.trans_scale_y;
            this.scale_x = acm.scale_x;
            this.scale_y = acm.scale_y;
            this.rotate = acm.rotate;
        }
    }

    public struct AOS_ACT_SORT
    {
        public AppMain.AOS_SPRITE sprite;
        public float z;

        public void Clear()
        {
            this.z = 0.0f;
            this.sprite = (AppMain.AOS_SPRITE)null;
        }
    }

    public class AOS_ACT_DRAW
    {
        public uint count;
        public AppMain.AOS_SPRITE[] sprite;
    }

    public delegate void GSF_TASK_PROCEDURE(AppMain.MTS_TASK_TCB task);

    private struct GSS_TASK_SYS
    {
        public int pause_level;
        public int pause_level_set;
    }

    public delegate object TaskWorkFactoryDelegate();

    public struct SCallSlot
    {
        public MethodInfo m_info;
        public bool m_bNoCast;

        public SCallSlot(MethodInfo info, bool bNoCast)
        {
            this.m_info = info;
            this.m_bNoCast = bNoCast;
        }
    }

    private struct NNS_SCREEN
    {
        public float xad;
        public float yad;
        public float cx;
        public float cy;
        public float ooxad;
        public float ooyad;
        public float dist;
        public float ax;
        public float ay;
        public float aspect;
        public float w;
        public float h;
    }

    private struct NNS_CLIP
    {
        public float f_clip;
        public float n_clip;
        public float x1;
        public float x0;
        public float y1;
        public float y0;
    }

    private enum TXB_MAG_FILTER
    {
        TXB_MAGF_N,
        TXB_MAGF_L,
        TXB_MAGF_A,
        TXB_MAGF_NUM,
    }

    private enum TXB_MIN_FILTER
    {
        TXB_MINF_N,
        TXB_MINF_L,
        TXB_MINF_N_M_N,
        TXB_MINF_N_M_L,
        TXB_MINF_L_M_N,
        TXB_MINF_L_M_L,
        TXB_MINF_A2,
        TXB_MINF_A2_M_N,
        TXB_MINF_A2_M_L,
        TXB_MINF_A4,
        TXB_MINF_A4_M_N,
        TXB_MINF_A4_M_L,
        TXB_MINF_A8,
        TXB_MINF_A8_M_N,
        TXB_MINF_A8_M_L,
        TXB_MINF_NUM,
    }

    public class TXB_TEXFILE : AppMain.NNS_TEXFILE
    {
        public int name_offset;
    }

    public class TXB_TEXFILELIST : AppMain.NNS_TEXFILELIST
    {
        public int tex_list_offset;
    }

    public class GmkSeesawData
    {
        public const int GME_GMK_RECT_DATA_COL_WIDTH = 0;
        public const int GME_GMK_RECT_DATA_COL_HEIGHT = 1;
        public const int GME_GMK_RECT_DATA_COL_OFST_X = 2;
        public const int GME_GMK_RECT_DATA_COL_OFST_Y = 3;
        public const int GME_GMK_RECT_DATA_DEF_LEFT = 0;
        public const int GME_GMK_RECT_DATA_DEF_TOP = 1;
        public const int GME_GMK_RECT_DATA_DEF_RIGHT = 2;
        public const int GME_GMK_RECT_DATA_DEF_BOTTOM = 3;
        public const int GME_GMK_RECT_DATA_MAX = 4;
        public const int GME_GMK_TYPE_SEESAW_0 = 0;
        public const int GME_GMK_TYPE_SEESAW_30 = 1;
        public const int GME_GMK_TYPE_SEESAW_330 = 2;
        public const int GME_GMK_TYPE_MAX = 3;
    }

    private enum DME_MANUAL_DATA_TYPE
    {
        DME_MANUAL_DATA_TYPE_CMN_DATA,
        DME_MANUAL_DATA_TYPE_LANG_DATA,
        DME_MANUAL_DATA_TYPE_MAX,
        DME_MANUAL_DATA_TYPE_NONE,
    }

    public class DMS_MANUAL_MGR
    {
        public AppMain.MTS_TASK_TCB tcb;

        internal void Clear()
        {
            this.tcb = (AppMain.MTS_TASK_TCB)null;
        }
    }

    public class DMS_MANUAL_MAIN_WORK
    {
        public AppMain.A2S_AMA_HEADER[] ama = new AppMain.A2S_AMA_HEADER[2];
        public AppMain.AMS_AMB_HEADER[] amb = new AppMain.AMS_AMB_HEADER[2];
        public AppMain.AOS_ACTION[] act = new AppMain.AOS_ACTION[179];
        public CTrgAoAction trg_return = new CTrgAoAction();
        public AppMain.AMS_FS arc_amb;
        public AppMain.AOS_TEXTURE[] tex;
        public AppMain.DMS_MANUAL_MAIN_WORK._proc_input_ proc_input;
        public AppMain.DMS_MANUAL_MAIN_WORK._proc_update_ proc_update;
        public AppMain.DMS_MANUAL_MAIN_WORK._proc_draw_ proc_draw;
        public float timer;
        public uint flag;
        public float efct_timer;
        public int cur_disp_page;
        public int cur_disp_page_prev;
        public bool is_jp_region;
        public bool is_maingame_load;
        public uint draw_state;
        public AppMain.GSS_SND_SE_HANDLE se_handle;
        public CTrgAoAction[] trg_btn;

        public DMS_MANUAL_MAIN_WORK()
        {
            this.tex = AppMain.New<AppMain.AOS_TEXTURE>(2);
            this.trg_btn = AppMain.New<CTrgAoAction>(2);
        }

        public delegate void _proc_input_(AppMain.DMS_MANUAL_MAIN_WORK work);

        public delegate void _proc_update_(AppMain.DMS_MANUAL_MAIN_WORK work);

        public delegate void _proc_draw_(AppMain.DMS_MANUAL_MAIN_WORK work);
    }

    private enum GSE_REGION
    {
        GSD_REGION_JP = 0,
        GSD_REGION_DEF = 1,
        GSD_REGION_US = 1,
        GSD_REGION_EU = 2,
        GSD_REGION_NUM = 3,
    }

    private enum GSE_DECIDE_KEY
    {
        GSD_DECIDE_KEY_O = 0,
        GSD_DECIDE_KEY_DEF = 1,
        GSD_DECIDE_KEY_X = 1,
        GSD_DECIDE_KEY_NUM = 2,
    }

    private struct CRegionTable
    {
        public string country;
        public AppMain.GSE_REGION region;

        public CRegionTable(string country, AppMain.GSE_REGION region)
        {
            this.country = country;
            this.region = region;
        }
    }

    private struct CLanguageTable
    {
        public string lang;
        public int code;

        public CLanguageTable(string lang, int code)
        {
            this.lang = lang;
            this.code = code;
        }
    }

    public class VecU32
    {
        public uint x;
        public uint y;
        public uint z;

        public VecU32()
          : this(0U, 0U, 0U)
        {
        }

        public VecU32(uint _x, uint _y, uint _z)
        {
            this.x = _x;
            this.y = _y;
            this.z = _z;
        }

        public VecU32(AppMain.VecU32 vecU32)
        {
            this.x = vecU32.x;
            this.y = vecU32.y;
            this.z = vecU32.z;
        }

        public AppMain.VecU32 Assign(AppMain.VecU32 vecU32)
        {
            this.x = vecU32.x;
            this.y = vecU32.y;
            this.z = vecU32.z;
            return this;
        }
    }

    public class OBS_LIGHT
    {
        private readonly AppMain.NNS_LIGHT_TARGET_DIRECTIONAL light_data_ = new AppMain.NNS_LIGHT_TARGET_DIRECTIONAL();
        public const int ELT_LIGHT_PARALLEL = 0;
        public const int ELT_LIGHT_POINT = 1;
        public const int ELT_LIGHT_TARGET_SPOT = 2;
        public const int ELT_LIGHT_ROTATION_SPOT = 3;
        public uint light_type;

        public AppMain.NNS_LIGHT_PARALLEL parallel
        {
            get
            {
                return (AppMain.NNS_LIGHT_PARALLEL)this.light_data_;
            }
        }

        public AppMain.NNS_LIGHT_POINT point
        {
            get
            {
                return (AppMain.NNS_LIGHT_POINT)this.light_data_;
            }
        }

        public AppMain.NNS_LIGHT_TARGET_SPOT target_spot
        {
            get
            {
                return (AppMain.NNS_LIGHT_TARGET_SPOT)this.light_data_;
            }
        }

        public AppMain.NNS_LIGHT_ROTATION_SPOT rotation_spot
        {
            get
            {
                return (AppMain.NNS_LIGHT_ROTATION_SPOT)this.light_data_;
            }
        }

        public AppMain.NNS_LIGHT_TARGET_DIRECTIONAL light_param
        {
            get
            {
                return this.light_data_;
            }
        }
    }

    public delegate void OBJECT_Cam_Delegate(ref int fx1, ref int fx2);

    public delegate void OBJECT_Delegate();

    public delegate void OBJECT_WORK_Delegate(AppMain.OBS_OBJECT_WORK work);

    public class OBS_OBJECT
    {
        public AppMain.VecFx32 glb_scale = new AppMain.VecFx32();
        public AppMain.VecFx32 draw_scale = new AppMain.VecFx32();
        public readonly short[] offset = new short[2];
        public readonly int[] scroll = new int[2];
        public readonly short[] lcd_size = new short[2];
        public readonly short[] clip_lcd_size = new short[2];
        public readonly int[][] camera = AppMain.New<int>(2, 2);
        public readonly int[] clip_camera = new int[2];
        public readonly short[][] cam_scale_center = AppMain.New<short>(2, 2);
        public AppMain.NNS_RGB ambient_color = new AppMain.NNS_RGB();
        public readonly AppMain.OBS_LIGHT[] light = AppMain.New<AppMain.OBS_LIGHT>(AppMain.NNE_LIGHT_MAX);
        public AppMain.VecFx32 scale = new AppMain.VecFx32();
        public AppMain.VecFx32 inv_scale = new AppMain.VecFx32();
        public AppMain.VecFx32 inv_glb_scale = new AppMain.VecFx32();
        public AppMain.VecFx32 inv_draw_scale = new AppMain.VecFx32();
        public int speed;
        public int depth;
        public uint timer;
        public int timer_fx;
        public uint flag;
        public int pause_level;
        public float disp_width;
        public float disp_height;
        public AppMain.OBJECT_Cam_Delegate pp3dCam;
        public int glb_camera_id;
        public int glb_camera_type;
        public uint load_drawflag;
        public uint drawflag;
        public uint def_user_light_flag;
        public sbyte col_through_dot;
        public AppMain.OBS_DATA_WORK[] pData;
        public int data_max;
        public AppMain.OBS_OBJECT_WORK obj_list_head;
        public AppMain.OBS_OBJECT_WORK obj_list_tail;
        public AppMain.OBS_OBJECT_WORK obj_draw_list_head;
        public AppMain.OBS_OBJECT_WORK obj_draw_list_tail;
        public AppMain.OBJECT_Delegate ppPre;
        public AppMain.OBJECT_Delegate ppPost;
        public AppMain.OBJECT_Delegate ppDrawSort;
        public AppMain.OBJECT_WORK_Delegate ppCollision;
        public AppMain.OBJECT_WORK_Delegate ppObjPre;
        public AppMain.OBJECT_WORK_Delegate ppObjPost;
        public AppMain.OBJECT_WORK_Delegate ppRegRecAuto;
    }

    public class OBS_ACTION3D_MTN_LOAD_SETTING
    {
        public bool enable;
        public bool marge;
        public AppMain.OBS_DATA_WORK data_work;
        public string filename;
        public int index;
        public AppMain.AMS_AMB_HEADER archive;

        public void Clear()
        {
            this.enable = false;
            this.marge = false;
            this.data_work = (AppMain.OBS_DATA_WORK)null;
            this.filename = "";
            this.index = 0;
            this.archive = (AppMain.AMS_AMB_HEADER)null;
        }
    }

    public delegate void user_func_delegate(object o);

    public delegate void mplt_cb_func_delegate(
      ref AppMain.NNS_MATRIX m,
      AppMain.NNS_OBJECT nnso,
      object o);

    public delegate void mtn_cb_func_delegate(
      AppMain.AMS_MOTION m,
      AppMain.NNS_OBJECT nnso,
      object p);

    public delegate bool material_cb_func_delegate(AppMain.NNS_DRAWCALLBACK_VAL callback, object o);

    public class AMS_AME_ECB : AppMain.AMS_AME_LIST
    {
        public readonly AppMain.NNS_VECTOR4D translate = new AppMain.NNS_VECTOR4D();
        public readonly AppMain.AMS_AME_BOUNDING bounding = new AppMain.AMS_AME_BOUNDING();
        public int attribute;
        public int priority;
        public AppMain.NNS_QUATERNION rotate;
        public int transparency;
        public float size_rate;
        public AppMain.NNS_OBJECT pObj;
        public AppMain.AMS_AME_ENTRY entry_head;
        public AppMain.AMS_AME_ENTRY entry_tail;
        public int entry_num;
        public uint drawState;
        public uint drawObjState;
        public int skip_update;

        public override void Clear()
        {
            this.next = (AppMain.AMS_AME_LIST)null;
            this.prev = (AppMain.AMS_AME_LIST)null;
            this.attribute = 0;
            this.priority = 0;
            this.translate.Clear();
            this.rotate.Clear();
            this.bounding.Clear();
            this.transparency = 0;
            this.size_rate = 0.0f;
            this.pObj = (AppMain.NNS_OBJECT)null;
            this.entry_head = (AppMain.AMS_AME_ENTRY)null;
            this.entry_tail = (AppMain.AMS_AME_ENTRY)null;
            this.entry_num = 0;
            this.drawState = 0U;
            this.drawObjState = 0U;
            this.skip_update = 0;
        }
    }

    public class OBS_COLLISION_OBJ
    {
        public AppMain.VecFx32 pos = new AppMain.VecFx32();
        public AppMain.VecFx32 check_pos = new AppMain.VecFx32();
        public AppMain.OBS_OBJECT_WORK obj;
        public AppMain.OBS_OBJECT_WORK rider_obj;
        public AppMain.OBS_OBJECT_WORK toucher_obj;
        public short ofst_x;
        public short ofst_y;
        public uint flag;
        public ushort dir;
        public ushort attr;
        public byte[] diff_data;
        public byte[] dir_data;
        public byte[] attr_data;
        public ushort width;
        public ushort height;
        public short check_ofst_x;
        public short check_ofst_y;
        public int left;
        public int top;
        public int right;
        public int bottom;
        public ushort check_dir;
    }

    public delegate void OBS_OBJECT_WORK_Delegate2(object o1, object o2, uint u);

    public delegate int OBS_OBJECT_WORK_Delegate3(AppMain.OBS_OBJECT_WORK objectWork);

    public delegate bool OBS_OBJECT_WORK_Delegate4(AppMain.OBS_OBJECT_WORK objectWork);

    public delegate void OBF_ACT_CALLBACK(object o1, object o2, uint u);

    public class SimplePool<T> where T : class, new()
    {
        private List<T> cache_;

        public SimplePool()
        {
            this.cache_ = new List<T>();
        }

        public T Alloc()
        {
            T obj;
            if (this.cache_.Count > 0)
            {
                int index = this.cache_.Count - 1;
                obj = this.cache_[index];
                this.cache_.RemoveAt(index);
            }
            else
                obj = new T();
            return obj;
        }

        public void Release(T obj)
        {
            this.cache_.Add(obj);
        }
    }

    public class Pool<T> where T : class, new()
    {
        private T[] freeObjects_ = new T[1024];
        private T[] usedObjects_ = new T[1024];
        private int freeObjectsCount_;
        private int usedObjectsCount_;

        public T Alloc()
        {
            T obj;
            if (this.freeObjectsCount_ > 0)
            {
                int index = this.freeObjectsCount_ - 1;
                obj = this.freeObjects_[index];
                this.freeObjects_[index] = default(T);
                --this.freeObjectsCount_;
            }
            else
                obj = new T();
            if (this.usedObjects_.Length == this.usedObjectsCount_)
            {
                T[] objArray = new T[this.usedObjects_.Length * 2];
                Array.Copy((Array)this.usedObjects_, (Array)objArray, this.usedObjects_.Length);
                this.usedObjects_ = objArray;
            }
            this.usedObjects_[this.usedObjectsCount_] = obj;
            ++this.usedObjectsCount_;
            return obj;
        }

        public void Release(T obj)
        {
            if (this.freeObjects_.Length == this.freeObjectsCount_)
            {
                T[] objArray = new T[this.freeObjects_.Length * 2];
                Array.Copy((Array)this.freeObjects_, (Array)objArray, this.freeObjects_.Length);
                this.freeObjects_ = objArray;
            }
            this.freeObjects_[this.freeObjectsCount_] = obj;
            ++this.freeObjectsCount_;
            int num = Array.IndexOf<T>(this.usedObjects_, obj);
            if (num < 0)
                return;
            for (int index = num + 1; index < this.usedObjectsCount_; ++index)
                this.usedObjects_[index - 1] = this.usedObjects_[index];
            --this.usedObjectsCount_;
        }

        public void ReleaseUsedObjects()
        {
            for (int index = 0; index < this.usedObjectsCount_; ++index)
                this.freeObjects_[this.freeObjectsCount_ + index] = this.usedObjects_[index];
            this.freeObjectsCount_ += this.usedObjectsCount_;
            for (int index = 0; index < this.usedObjectsCount_; ++index)
                this.usedObjects_[index] = default(T);
            this.usedObjectsCount_ = 0;
        }

        public void Clear()
        {
            for (int index = 0; index < this.freeObjectsCount_; ++index)
                this.freeObjects_[index] = default(T);
            this.freeObjectsCount_ = 0;
            for (int index = 0; index < this.usedObjectsCount_; ++index)
                this.usedObjects_[index] = default(T);
            this.usedObjectsCount_ = 0;
        }
    }

    public class ArrayPool<T> where T : new()
    {
        private List<T[]> freeArrays_ = new List<T[]>();
        private List<T[]> usedArrays_ = new List<T[]>();

        public T[] AllocArray(int size)
        {
            int index1 = -1;
            int num = this.freeArrays_.Count > 0 ? this.freeArrays_[0].Length : -1;
            for (int index2 = 0; index2 < this.freeArrays_.Count; ++index2)
            {
                int length = this.freeArrays_[index2].Length;
                if (length >= size && length <= num)
                    index1 = index2;
            }
            T[] objArray;
            if (index1 >= 0)
            {
                objArray = this.freeArrays_[index1];
                this.freeArrays_.RemoveAt(index1);
            }
            else
                objArray = new T[size];
            this.usedArrays_.Add(objArray);
            return objArray;
        }

        public void ReleaseArray(T[] array)
        {
            this.freeArrays_.Add(array);
            this.usedArrays_.Remove(array);
        }

        public void ReleaseUsedArrays()
        {
            this.freeArrays_.AddRange((IEnumerable<T[]>)this.usedArrays_);
            this.usedArrays_.Clear();
        }

        public void Clear()
        {
            this.freeArrays_.Clear();
            this.usedArrays_.Clear();
        }
    }

    public class ArrayPoolFast<T> where T : new()
    {
        private List<T[]> freeArrays_ = new List<T[]>();
        private List<T[]> usedArrays_ = new List<T[]>();

        public T[] AllocArray(int size)
        {
            int index1 = -1;
            for (int index2 = 0; index2 < this.freeArrays_.Count; ++index2)
            {
                if (size <= this.freeArrays_[index2].Length)
                {
                    index1 = index2;
                    break;
                }
            }
            T[] objArray;
            if (index1 >= 0)
            {
                objArray = this.freeArrays_[index1];
                this.freeArrays_.RemoveAt(index1);
            }
            else
                objArray = new T[size];
            this.usedArrays_.Add(objArray);
            return objArray;
        }

        public void ReleaseArray(T[] array)
        {
            this.freeArrays_.Add(array);
            this.usedArrays_.Remove(array);
        }

        public void ReleaseUsedArrays()
        {
            this.freeArrays_.AddRange((IEnumerable<T[]>)this.usedArrays_);
            this.usedArrays_.Clear();
        }

        public void Clear()
        {
            this.freeArrays_.Clear();
            this.usedArrays_.Clear();
        }

        public int GetFreeCount()
        {
            return this.freeArrays_.Count;
        }
    }

    public class ArrayPoolMultisize<T> where T : new()
    {
        private List<int> arrayElementCapacity_ = new List<int>();
        private List<AppMain.ArrayPoolFast<T>> Arrays_ = new List<AppMain.ArrayPoolFast<T>>();

        public T[] AllocArray(int size)
        {
            return this.Arrays_[this._GetArrayPoolIDBestForCapacity(size)].AllocArray(size);
        }

        public void ReleaseArray(T[] array)
        {
            this.Arrays_[this._GetArrayPoolIDBestForCapacity(array.Length)].ReleaseArray(array);
        }

        public void ReleaseUsedArrays()
        {
            for (int index = 0; index < this.Arrays_.Count; ++index)
                this.Arrays_[index].ReleaseUsedArrays();
        }

        public void Clear()
        {
            for (int index = 0; index < this.Arrays_.Count; ++index)
                this.Arrays_[index].Clear();
        }

        public void AddCacheWithCapacity(int iCapacity, int iAmount)
        {
            if (this.arrayElementCapacity_.Count > 0 && this.arrayElementCapacity_[this.arrayElementCapacity_.Count - 1] > iCapacity)
                throw new NotSupportedException();
            this.arrayElementCapacity_.Add(iCapacity);
            AppMain.ArrayPoolFast<T> arrayPoolFast = new AppMain.ArrayPoolFast<T>();
            for (int index = 0; index < iAmount; ++index)
                arrayPoolFast.AllocArray(iCapacity);
            arrayPoolFast.ReleaseUsedArrays();
            this.Arrays_.Add(arrayPoolFast);
        }

        private int _GetArrayPoolIDBestForCapacity(int iCapacity)
        {
            for (int index = 0; index < this.arrayElementCapacity_.Count; ++index)
            {
                if (iCapacity <= this.arrayElementCapacity_[index] && this.Arrays_[index].GetFreeCount() > 0)
                    return index;
            }
            if (iCapacity <= this.arrayElementCapacity_[this.arrayElementCapacity_.Count - 1])
                return this.arrayElementCapacity_.Count - 1;
            this.AddCacheWithCapacity(iCapacity, 1);
            return this.arrayElementCapacity_.Count - 1;
        }
    }

    private static class nncalcnodematrix
    {
        public static int nnsSubMotIdx;
        public static AppMain.NNS_MATRIX nnsBaseMtx;
        public static AppMain.NNS_NODE[] nnsNodeList;
        public static AppMain.NNS_OBJECT nnsObj;
        public static AppMain.NNS_MOTION nnsMot;
        public static float nnsFrame;
    }

    private static class nncalcmatrixpalette
    {
        public static float nnsRootScale = 1f;
        public static AppMain.NNS_MATRIX nnsBaseMtx;
        public static AppMain.NNS_MATRIX[] nnsMtxPal;
        public static uint[] nnsNodeStatList;
        public static uint nnsNSFlag;
        public static AppMain.NNS_NODE[] nnsNodeList;
        public static AppMain.NNS_MATRIXSTACK nnsMstk;
    }

    public enum NNE_CIRCUM_COL
    {
        NNE_CIRCUM_COL_NONE,
        NNE_CIRCUM_COL_HIDE,
        NNE_CIRCUM_COL_CLIPHIDE,
        NNE_CIRCUM_COL_INSIDE,
        NNE_CIRCUM_COL_GSINSIDE,
        NNE_CIRCUM_COL_CROSSNEAR,
        NNE_CIRCUM_COL_ERR,
    }

    public enum NNE_MOTIONBLEND
    {
        NNE_MOTIONBLEND_REPLACE_ALL,
        NNE_MOTIONBLEND_ADD_TRANSLATION,
        NNE_MOTIONBLEND_ADD_ALL,
    }

    public class NNS_NODEUSRMOT_CALLBACK_VAL
    {
        public int iNode;
        public float Frame;
        public uint IValue;
        public AppMain.NNS_MOTION pMotion;
        public int iSubmot;
        public uint fSubmotType;
        public uint fSubmotIPType;
        public AppMain.NNS_OBJECT pObject;

        public float FValue
        {
            get
            {
                return BitConverter.ToSingle(BitConverter.GetBytes(this.IValue), 0);
            }
            set
            {
                this.IValue = BitConverter.ToUInt32(BitConverter.GetBytes(value), 0);
            }
        }
    }

    public delegate void NNS_NODEUSRMOT_CALLBACK_FUNC(AppMain.NNS_NODEUSRMOT_CALLBACK_VAL val);

    private class nngGLExtensions
    {
        public static int max_texture_units = 2;
        public static int light_max_exponent = 0;
        public static float max_shininess = 128f;
    }

    private class NNS_SHADER_MANAGER
    {
        public AppMain.NNS_SHADER_NAME Name;
        public AppMain.NNE_SHADERTYPE ShaderType;
        public uint ProgramObject;
        public uint VertexProgram;
        public uint FragmentProgram;
        public int NumParallelLightLocation;
        public int NumPointLightLocation;
        public int NumSpotLightLocation;
        public int PointLightFallOffEndLocation;
        public int PointLightFallOffScaleLocation;
        public int SpotLightFallOffEndLocation;
        public int SpotLightFallOffScaleLocation;
        public int SpotLightAngleScaleLocation;
        public int TexBaseAlphaLocation;
        public int TexDecalAlphaLocation;
        public int TexDecal2AlphaLocation;
        public int TexDecal3AlphaLocation;
        public int TexShininessLevelLocation;
        public int TexDualParaboloidLevelLocation;
        public int TexAddLevelLocation;
        public int TexShadowColorLocation;
        public int TexShadow2ColorLocation;
        public int TexUser1ParamLocation;
        public int TexUser2ParamLocation;
        public int TexUser3ParamLocation;
        public int TexUser4ParamLocation;
        public int TexUser5ParamLocation;
        public int TexUser6ParamLocation;
        public int TexUser7ParamLocation;
        public int TexUser8ParamLocation;
        public int TexNormalSamplerLocation;
        public int TexBaseSamplerLocation;
        public int TexDecalSamplerLocation;
        public int TexDecal2SamplerLocation;
        public int TexDecal3SamplerLocation;
        public int TexSpecularSamplerLocation;
        public int TexShininessSamplerLocation;
        public int TexDualParaboloidSamplerLocation;
        public int TexEnvMaskSamplerLocation;
        public int TexModulateSamplerLocation;
        public int TexAddSamplerLocation;
        public int TexOpacitySamplerLocation;
        public int TexUser1SamplerLocation;
        public int TexUser2SamplerLocation;
        public int TexUser3SamplerLocation;
        public int TexUser4SamplerLocation;
        public int TexUser5SamplerLocation;
        public int TexUser6SamplerLocation;
        public int TexUser7SamplerLocation;
        public int TexUser8SamplerLocation;
        public int TexShadowSamplerLocation;
        public int TexShadow2SamplerLocation;
        public int TexUserSampler2D1Location;
        public int TexUserSampler2D2Location;
        public int TexUserSampler3D1Location;
        public int TexUserSampler3D2Location;
        public int TexUserSamplerCube1Location;
        public int TexUserSamplerCube2Location;
        public int DualParaboloidMatrixLocation;
        public int UserUniformLocation;
        public int PositionMatrixLocation;
        public int NormalMatrixLocation;
    }

    private struct NNS_SPHERE
    {
        private AppMain.NNS_VECTOR c;
        private float r;
    }

    private struct NNS_CAPSULE
    {
        private AppMain.NNS_VECTOR c1;
        private AppMain.NNS_VECTOR c2;
        private float r;
    }

    private class NNS_BOX
    {
        private AppMain.NNS_VECTOR[] v = AppMain.New<AppMain.NNS_VECTOR>(3);
        private AppMain.NNS_VECTOR p;
    }

    private enum NNE_PRINT_ORIENTATION_MODE
    {
        NNE_POM_VERTICAL,
        NNE_POM_HORIZON_LEFT,
        NNE_POM_HORIZON_RIGHT,
    }

    private enum AME_IPHONE_DISPLAY_ORIENTATION
    {
        AME_IPHONE_DISPLAY_ORIENTATION_NORMAL,
        AME_IPHONE_DISPLAY_ORIENTATION_RIGHT,
        AME_IPHONE_DISPLAY_ORIENTATION_HORIZON,
        AME_IPHONE_DISPLAY_ORIENTATION_LEFT,
        AME_IPHONE_DISPLAY_ORIENTATION_NUM,
    }

    private enum AME_IPHONE_TP_TOUCH
    {
        AME_IPHONE_TP_TOUCH_OFF,
        AME_IPHONE_TP_TOUCH_ON,
        AME_IPHONE_TP_TOUCH_NUM,
    }

    private enum AME_IPHONE_TP_VALIDITY
    {
        AME_IPHONE_TP_VALIDITY_INVALID,
        AME_IPHONE_TP_VALIDITY_VALID,
        AME_IPHONE_TP_VALIDITY_NUM,
    }

    private class AMS_IPHONE_TP_DATA
    {
        public int id;
        public ushort touch;
        public ushort validity;
        public ushort x;
        public ushort y;

        internal void Assign(AppMain.AMS_IPHONE_TP_DATA data)
        {
            this.touch = data.touch;
            this.validity = data.validity;
            this.x = data.x;
            this.y = data.y;
        }
    }

    private class AMS_IPHONE_ACCEL_DATA
    {
        public readonly AppMain.NNS_VECTOR core = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public readonly AppMain.NNS_VECTOR sensor = AppMain.GlobalPool<AppMain.NNS_VECTOR>.Alloc();
        public int rot_x;
        public int rot_y;
        public int rot_z;
    }

    private class AMS_IPHONE_TP_CTRL_DATA
    {
        public AppMain.AMS_IPHONE_TP_DATA tpdata = new AppMain.AMS_IPHONE_TP_DATA();
    }

    public class A2S_AMA_NODE
    {
        public int _off;
        public uint flag;
        public uint id;
        public int child_offset;
        public AppMain.A2S_AMA_NODE child;
        public int sibling_offset;
        public AppMain.A2S_AMA_NODE sibling;
        public int parent_offset;
        public AppMain.A2S_AMA_NODE parent;
        public int act_offset;
        public AppMain.A2S_AMA_ACT act;
    }

    public class A2S_AMA_ACT
    {
        public int _off;
        public uint flag;
        public uint id;
        public uint frm_num;
        public uint pad1;
        public AppMain.A2S_SUB_RECT ofst;
        public int mtn_offset;
        public AppMain.A2S_AMA_MTN mtn;
        public int anm_offset;
        public AppMain.A2S_AMA_ANM anm;
        public int acm_offset;
        public AppMain.A2S_AMA_ACM acm;
        public int usr_offset;
        public AppMain.A2S_AMA_USR usr;
        public int hit_offset;
        public AppMain.A2S_AMA_HIT hit;
        public int next_offset;
        public AppMain.A2S_AMA_ACT next;

        public void Assign(AppMain.A2S_AMA_ACT old)
        {
            this.flag = old.flag;
            this.id = old.flag;
            this.frm_num = old.frm_num;
            this.pad1 = old.pad1;
            this.ofst = old.ofst;
            if (old.mtn != null)
            {
                this.mtn = new AppMain.A2S_AMA_MTN();
                this.mtn.Assign(old.mtn);
            }
            if (old.anm != null)
            {
                this.anm = new AppMain.A2S_AMA_ANM();
                this.anm.Assign(old.anm);
            }
            if (old.acm != null)
            {
                this.acm = new AppMain.A2S_AMA_ACM();
                this.acm.Assign(old.acm);
            }
            if (old.usr != null)
            {
                this.usr = new AppMain.A2S_AMA_USR();
                this.usr.Assign(old.usr);
            }
            if (old.hit == null)
                return;
            this.hit = new AppMain.A2S_AMA_HIT();
            this.hit.Assign(old.hit);
        }
    }

    public struct A2S_SUB_COL
    {
        public byte a;
        public byte b;
        public byte g;
        public byte r;
    }

    public class A2S_AMA_MTN
    {
        public uint flag;
        public uint mtn_key_num;
        public uint mtn_frm_num;
        public int mtn_key_tbl_offset;
        public AppMain.A2S_SUB_KEY[] mtn_key_tbl;
        public int mtn_tbl_offset;
        public AppMain.A2S_SUB_MTN[] mtn_tbl;
        public uint trs_key_num;
        public uint trs_frm_num;
        public int trs_key_tbl_offset;
        public AppMain.A2S_SUB_KEY[] trs_key_tbl;
        public int trs_tbl_offset;
        public AppMain.A2S_SUB_TRS[] trs_tbl;

        internal void Assign(AppMain.A2S_AMA_MTN old)
        {
            this.flag = old.flag;
            this.mtn_key_num = old.mtn_key_num;
            this.mtn_frm_num = old.mtn_frm_num;
            if (old.mtn_key_tbl != null)
            {
                this.mtn_key_tbl = new AppMain.A2S_SUB_KEY[old.mtn_key_tbl.Length];
                Array.Copy((Array)old.mtn_key_tbl, (Array)old.mtn_key_tbl, old.mtn_key_tbl.Length);
            }
            if (old.mtn_tbl != null)
            {
                this.mtn_tbl = AppMain.New<AppMain.A2S_SUB_MTN>(old.mtn_tbl.Length);
                for (int index = 0; index < this.mtn_tbl.Length; ++index)
                    this.mtn_tbl[index].Assign(old.mtn_tbl[index]);
            }
            this.trs_key_num = old.trs_key_num;
            this.trs_frm_num = old.trs_frm_num;
            if (old.trs_key_tbl != null)
            {
                this.trs_key_tbl = new AppMain.A2S_SUB_KEY[old.trs_key_tbl.Length];
                Array.Copy((Array)old.trs_key_tbl, (Array)this.trs_key_tbl, old.trs_key_tbl.Length);
            }
            if (old.trs_tbl == null)
                return;
            this.trs_tbl = AppMain.New<AppMain.A2S_SUB_TRS>(old.trs_tbl.Length);
            for (int index = 0; index < this.trs_tbl.Length; ++index)
                this.trs_tbl[index].Assign(old.trs_tbl[index]);
        }
    }

    public class A2S_AMA_ANM
    {
        public uint flag;
        public uint anm_key_num;
        public uint anm_frm_num;
        public int anm_key_tbl_offset;
        public AppMain.A2S_SUB_KEY[] anm_key_tbl;
        public int anm_tbl_offset;
        public AppMain.A2S_SUB_ANM[] anm_tbl;
        public uint mat_key_num;
        public uint mat_frm_num;
        public int mat_key_tbl_offset;
        public AppMain.A2S_SUB_KEY[] mat_key_tbl;
        public int mat_tbl_offset;
        public AppMain.A2S_SUB_MAT[] mat_tbl;

        internal void Assign(AppMain.A2S_AMA_ANM old)
        {
            this.flag = old.flag;
            this.anm_key_num = old.anm_key_num;
            this.anm_frm_num = old.anm_frm_num;
            if (old.anm_key_tbl != null)
            {
                this.anm_key_tbl = new AppMain.A2S_SUB_KEY[old.anm_key_tbl.Length];
                Array.Copy((Array)old.anm_key_tbl, (Array)this.anm_key_tbl, old.anm_key_tbl.Length);
            }
            if (old.anm_tbl != null)
            {
                this.anm_tbl = AppMain.New<AppMain.A2S_SUB_ANM>(old.anm_tbl.Length);
                for (int index = 0; index < this.anm_tbl.Length; ++index)
                    this.anm_tbl[index].Assign(old.anm_tbl[index]);
            }
            this.mat_key_num = old.mat_key_num;
            this.mat_frm_num = old.mat_frm_num;
            if (old.mat_key_tbl != null)
            {
                this.mat_key_tbl = new AppMain.A2S_SUB_KEY[old.mat_key_tbl.Length];
                Array.Copy((Array)old.mat_key_tbl, (Array)this.mat_key_tbl, old.mat_key_tbl.Length);
            }
            if (old.mat_tbl == null)
                return;
            this.mat_tbl = AppMain.New<AppMain.A2S_SUB_MAT>(old.mat_tbl.Length);
            for (int index = 0; (long)index < (long)old.mat_key_num; ++index)
                this.mat_tbl[index].Assign(old.mat_tbl[index]);
        }
    }

    public class A2S_AMA_ACM
    {
        public uint flag;
        public uint acm_key_num;
        public uint acm_frm_num;
        public int acm_key_tbl_offset;
        public AppMain.A2S_SUB_KEY[] acm_key_tbl;
        public int acm_tbl_offset;
        public AppMain.A2S_SUB_ACM[] acm_tbl;
        public uint trs_key_num;
        public uint trs_frm_num;
        public int trs_key_tbl_offset;
        public AppMain.A2S_SUB_KEY[] trs_key_tbl;
        public int trs_tbl_offset;
        public AppMain.A2S_SUB_TRS[] trs_tbl;
        public uint mat_key_num;
        public uint mat_frm_num;
        public int mat_key_tbl_offset;
        public AppMain.A2S_SUB_KEY[] mat_key_tbl;
        public int mat_tbl_offset;
        public AppMain.A2S_SUB_MAT[] mat_tbl;

        internal void Assign(AppMain.A2S_AMA_ACM old)
        {
            this.flag = old.flag;
            this.acm_key_num = old.acm_key_num;
            this.acm_frm_num = old.acm_frm_num;
            if (old.acm_key_tbl != null)
            {
                this.acm_key_tbl = new AppMain.A2S_SUB_KEY[old.acm_key_tbl.Length];
                Array.Copy((Array)old.acm_key_tbl, (Array)this.acm_key_tbl, old.acm_key_tbl.Length);
            }
            if (old.acm_tbl != null)
            {
                this.acm_tbl = new AppMain.A2S_SUB_ACM[old.acm_tbl.Length];
                Array.Copy((Array)old.acm_tbl, (Array)this.acm_tbl, old.acm_tbl.Length);
            }
            this.trs_key_num = old.trs_key_num;
            this.trs_frm_num = old.trs_frm_num;
            if (old.trs_key_tbl != null)
            {
                this.trs_key_tbl = new AppMain.A2S_SUB_KEY[old.trs_key_tbl.Length];
                Array.Copy((Array)old.trs_key_tbl, (Array)this.trs_key_tbl, old.trs_key_tbl.Length);
            }
            if (old.trs_tbl != null)
            {
                this.trs_tbl = AppMain.New<AppMain.A2S_SUB_TRS>(old.trs_tbl.Length);
                for (int index = 0; index < this.trs_tbl.Length; ++index)
                    this.trs_tbl[index].Assign(old.trs_tbl[index]);
            }
            this.mat_key_num = old.mat_key_num;
            this.mat_frm_num = old.mat_frm_num;
            if (old.mat_key_tbl != null)
            {
                this.mat_key_tbl = new AppMain.A2S_SUB_KEY[old.mat_key_tbl.Length];
                Array.Copy((Array)old.mat_key_tbl, (Array)this.mat_key_tbl, old.mat_key_tbl.Length);
            }
            if (old.mat_tbl == null)
                return;
            this.mat_tbl = AppMain.New<AppMain.A2S_SUB_MAT>(old.mat_tbl.Length);
            for (int index = 0; index < this.mat_tbl.Length; ++index)
                this.mat_tbl[index].Assign(old.mat_tbl[index]);
        }
    }

    public class A2S_AMA_USR
    {
        public uint flag;
        public uint usr_key_num;
        public uint usr_frm_num;
        public int usr_key_tbl_offset;
        public AppMain.A2S_SUB_KEY[] usr_key_tbl;
        public int usr_tbl_offset;
        public AppMain.A2S_SUB_USR[] usr_tbl;

        internal void Assign(AppMain.A2S_AMA_USR old)
        {
            this.flag = old.flag;
            this.usr_key_num = old.usr_key_num;
            this.usr_frm_num = old.usr_frm_num;
            if (old.usr_key_tbl != null)
            {
                this.usr_key_tbl = new AppMain.A2S_SUB_KEY[old.usr_key_tbl.Length];
                Array.Copy((Array)old.usr_key_tbl, (Array)this.usr_key_tbl, old.usr_key_tbl.Length);
            }
            if (old.usr_tbl == null)
                return;
            this.usr_tbl = new AppMain.A2S_SUB_USR[old.usr_tbl.Length];
            Array.Copy((Array)old.usr_tbl, (Array)this.usr_tbl, old.usr_tbl.Length);
        }
    }

    public class A2S_AMA_HIT
    {
        public uint flag;
        public uint hit_key_num;
        public uint hit_frm_num;
        public int hit_key_tbl_offset;
        public AppMain.A2S_SUB_KEY[] hit_key_tbl;
        public int hit_tbl_offset;
        public AppMain.A2S_SUB_HIT[] hit_tbl;

        internal void Assign(AppMain.A2S_AMA_HIT old)
        {
            this.flag = old.flag;
            this.hit_key_num = old.hit_key_num;
            this.hit_frm_num = old.hit_frm_num;
            if (old.hit_key_tbl != null)
            {
                this.hit_key_tbl = new AppMain.A2S_SUB_KEY[old.hit_key_tbl.Length];
                Array.Copy((Array)old.hit_key_tbl, (Array)this.hit_key_tbl, old.hit_key_tbl.Length);
            }
            if (old.hit_tbl == null)
                return;
            this.hit_tbl = AppMain.New<AppMain.A2S_SUB_HIT>(old.hit_tbl.Length);
            for (int index = 0; index < this.hit_tbl.Length; ++index)
                this.hit_tbl[index].Assign(old.hit_tbl[index]);
        }
    }

    public struct A2S_SUB_KEY
    {
        public uint frm;
        public uint interpol;
    }

    public class A2S_SUB_MTN
    {
        public float scl_x;
        public float scl_y;
        public float rot;
        public float scl_accele;
        public float rot_accele;

        internal void Assign(AppMain.A2S_SUB_MTN old)
        {
            this.scl_x = old.scl_x;
            this.scl_y = old.scl_y;
            this.rot = old.rot;
            this.scl_accele = old.scl_accele;
            this.rot_accele = old.rot_accele;
        }
    }

    public class A2S_SUB_TRS
    {
        public float trs_x;
        public float trs_y;
        public float trs_z;
        public float trs_accele;

        internal void Assign(AppMain.A2S_SUB_TRS old)
        {
            this.trs_x = old.trs_x;
            this.trs_y = old.trs_y;
            this.trs_z = old.trs_z;
            this.trs_accele = old.trs_accele;
        }
    }

    public class A2S_SUB_ANM
    {
        public int tex_id;
        public uint clamp;
        public uint filter;
        public float texel_accele;
        public AppMain.A2S_SUB_RECT texel;

        internal void Assign(AppMain.A2S_SUB_ANM old)
        {
            this.tex_id = old.tex_id;
            this.clamp = old.clamp;
            this.filter = old.filter;
            this.texel_accele = old.texel_accele;
            this.texel = old.texel;
        }
    }

    public class A2S_SUB_MAT
    {
        public AppMain.A2S_SUB_COL base_;
        public AppMain.A2S_SUB_COL fade;
        public float base_accele;
        public float fade_accele;
        public uint blend;

        internal void Assign(AppMain.A2S_SUB_MAT old)
        {
            this.base_ = old.base_;
            this.fade = old.fade;
            this.base_accele = old.base_accele;
            this.fade_accele = old.fade_accele;
            this.blend = old.blend;
        }
    }

    public struct A2S_SUB_ACM
    {
        public float trs_scl_x;
        public float trs_scl_y;
        public float scl_x;
        public float scl_y;
        public float rot;
        public float trs_scl_accele;
        public float scl_accele;
        public float rot_accele;
    }

    public struct A2S_SUB_USR
    {
        public uint usr_id;
        public float usr_accele;
    }

    public class A2S_SUB_HIT
    {
        public uint flag;
        public uint type;
        public float hit_accele;
        public uint pad;
        public AppMain.A2S_SUB_RECT rect;
        public AppMain.A2S_SUB_CIRCLE circle;

        internal void Assign(AppMain.A2S_SUB_HIT old)
        {
            this.flag = old.flag;
            this.type = old.type;
            this.hit_accele = old.hit_accele;
            this.pad = old.pad;
            this.rect = old.rect;
            this.circle = old.circle;
        }
    }

    public class GMS_MAP_OTHER_MAP_STATE
    {
        public int[] map_block_num = new int[2];
        public int[] map_size = new int[2];
        public float[] scrl_scale = new float[2];
        public float[] cam_ofst = new float[2];
        public float pos_z;
        public uint command_state;
    }

    public class GMS_MAP_SYS_WORK
    {
        public AppMain.GMS_MAP_OTHER_MAP_STATE[] map_state = AppMain.New<AppMain.GMS_MAP_OTHER_MAP_STATE>(5);
        public float[] main_cam_user_disp = new float[2];
        public float[] main_cam_user_target = new float[2];
        public float[] main_cam_user_ofst = new float[2];
        public uint flag;
        public bool auto_resize;
    }

    public class GMS_MAP_PRIM_DRAW_STACK
    {
        public AppMain.AOS_TVX_VERTEX[] vtx;
        public ushort vtx_num;
        public AppMain.MP_BLOCK mp;
        public float dx;
        public float dy;
        public float dz;
    }

    public class GMS_MAP_PRIM_DRAW_WORK
    {
        public AppMain.GMS_MAP_PRIM_DRAW_STACK[] stack = AppMain.New<AppMain.GMS_MAP_PRIM_DRAW_STACK>((int)byte.MaxValue);
        public int tex_id;
        public uint all_vtx_num;
        public uint stack_num;
        public uint op;
    }

    public class GMS_MAP_PRIM_DRAW_TVX_MGR_INDEX
    {
        public ushort tex_id;
        public ushort mgr_id;
    }

    public class GMS_MAP_PRIM_DRAW_TVX_MGR
    {
        public ushort motion_id;
        public ushort time;

        public GMS_MAP_PRIM_DRAW_TVX_MGR(ushort motion_id, ushort time)
        {
            this.motion_id = motion_id;
            this.time = time;
        }
    }

    public class GMS_MAP_PRIM_DRAW_TVX_UV_WORK
    {
        public int mgr_index_tbl_num;
        public DoubleType<uint[], AppMain.GMS_MAP_PRIM_DRAW_TVX_MGR_INDEX[]> mgr_index_tbl_addr;
        public int[] mgr_tbl_num;
        public DoubleType<uint[], AppMain.GMS_MAP_PRIM_DRAW_TVX_MGR[][]> mgr_tbl_addr;
        public DoubleType<uint[], AppMain.NNS_TEXCOORD[][]> uv_mgr_tbl_addr;
        public uint[] frame_index_tbl;
        public uint[] frame_tbl;
        public int[] tex_uv_index_tbl;
    }

    public class GMS_GMK_ANIMAL_PARAM
    {
        public int spd_x;
        public int jump;
        public int gravity;

        public GMS_GMK_ANIMAL_PARAM(int spd_x, int jump, int gravity)
        {
            this.spd_x = spd_x;
            this.jump = jump;
            this.gravity = gravity;
        }
    }

    public class DMS_TITLEOP_ROCK_SETTING
    {
        public AppMain.VecFx32 pos = new AppMain.VecFx32();
        public AppMain.VecFx32 scale = new AppMain.VecFx32();

        public DMS_TITLEOP_ROCK_SETTING(uint x1, uint y1, uint z1, uint x2, uint y2, uint z2)
        {
            this.pos = new AppMain.VecFx32((int)x1, (int)y1, (int)z1);
            this.scale = new AppMain.VecFx32((int)x2, (int)y2, (int)z2);
        }
    }

    public class DMS_TITLEOP_OBJ_3DNN_WORK : AppMain.IOBS_OBJECT_WORK
    {
        public AppMain.OBS_ACTION3D_NN_WORK obj_3d = new AppMain.OBS_ACTION3D_NN_WORK();
        public readonly AppMain.OBS_OBJECT_WORK obj_work;
        public AppMain.DMS_TITLEOP_ROCK_SETTING[] rock_setting;
        public int rock_setting_num;
        public float sky_rot;

        public AppMain.OBS_OBJECT_WORK Cast()
        {
            return this.obj_work;
        }

        public static explicit operator AppMain.OBS_OBJECT_WORK(
          AppMain.DMS_TITLEOP_OBJ_3DNN_WORK work)
        {
            return work.obj_work;
        }

        public static explicit operator AppMain.DMS_TITLEOP_OBJ_3DNN_WORK(
          AppMain.OBS_OBJECT_WORK work)
        {
            return (AppMain.DMS_TITLEOP_OBJ_3DNN_WORK)work.holder;
        }

        public DMS_TITLEOP_OBJ_3DNN_WORK()
        {
            this.obj_work = AppMain.OBS_OBJECT_WORK.Create((object)this);
        }
    }

    public class DMS_TITLEOP_MGR_WORK
    {
        public AppMain.OBS_OBJECT_WORK[] obj_work = new AppMain.OBS_OBJECT_WORK[5];
        public AppMain.AOS_ACTION[] act = new AppMain.AOS_ACTION[7];
        public int frame;
        public uint flag;
        public float finger_frame;

        public void Clear()
        {
            this.frame = 0;
            this.flag = 0U;
            Array.Clear((Array)this.obj_work, 0, this.obj_work.Length);
            Array.Clear((Array)this.act, 0, this.act.Length);
            this.finger_frame = 0.0f;
        }
    }

    public class AOS_WIN_DRAW_WORK
    {
        public int type;
        public AppMain.NNS_TEXLIST texlist;
        public uint tex_id;
        public float x;
        public float y;
        public float w;
        public float h;
    }

    public class OBS_LOAD_INITIAL_WORK
    {
        public readonly AppMain.OBS_ACTION3D_NN_WORK[] obj_3d = new AppMain.OBS_ACTION3D_NN_WORK[(int)byte.MaxValue];
        public readonly AppMain.OBS_ACTION3D_ES_WORK[] obj_3des = new AppMain.OBS_ACTION3D_ES_WORK[(int)byte.MaxValue];
        public int obj_num;
        public int es_num;
    }

    private delegate int pFunc_Delegate(
      AppMain.OBS_COLLISION_OBJ pColObj,
      int lPosX,
      int lPosY,
      ushort ucSuf,
      ushort[] pDir,
      uint[] pAttr);

    private static class nnclip
    {
        public static uint[] nnsNodeStatList;
        public static AppMain.NNS_NODE[] nnsNodeList;
    }

    [StructLayout(LayoutKind.Explicit)]
    public class NNS_CLIP_PLANE_XZ
    {
        [FieldOffset(0)]
        public float nx;
        [FieldOffset(0)]
        public float mul;
        [FieldOffset(4)]
        public float nz;
        [FieldOffset(4)]
        public float ofs;
    }

    [StructLayout(LayoutKind.Explicit)]
    public class NNS_CLIP_PLANE_YZ
    {
        [FieldOffset(0)]
        public float ny;
        [FieldOffset(0)]
        public float mul;
        [FieldOffset(4)]
        public float nz;
        [FieldOffset(4)]
        public float ofs;
    }

    public class NNS_CLIP_PLANE
    {
        public AppMain.NNS_CLIP_PLANE_YZ Top = new AppMain.NNS_CLIP_PLANE_YZ();
        public AppMain.NNS_CLIP_PLANE_YZ Bottom = new AppMain.NNS_CLIP_PLANE_YZ();
        public AppMain.NNS_CLIP_PLANE_XZ Right = new AppMain.NNS_CLIP_PLANE_XZ();
        public AppMain.NNS_CLIP_PLANE_XZ Left = new AppMain.NNS_CLIP_PLANE_XZ();
    }

    private struct NNS_OBJECT_MEASURE
    {
        private int nObj;
        private int nSubobj;
        private int nNode;
        private int nMtx;
        private int nVtx;
        private int nPrim;
        private int nMeshset;
        private int nMaterial;
        private int nTex;
    }

    private struct NNS_PLIABLEOBJ
    {
        private uint flag;
        private AppMain.NNS_OBJECT pObject;
        private uint Size;
        private object pBuffer;
        private uint pIdx;
    }

    private enum AMD_CORE
    {
        AMD_CORE_1A,
        AMD_CORE_1B,
        AMD_CORE_2A,
        AMD_CORE_2B,
        AMD_CORE_3A,
        AMD_CORE_3B,
    }

    public delegate void AMF_THREAD_PROC();

    public class AMS_MOTION_BUF
    {
        public int motion_id;
        public float frame;
        public AppMain.ArrayPointer<AppMain.NNS_TRS> mbuf;
    }

    public class AMS_MOTION_FILE
    {
        public object file;
        public int motion_num;
        public AppMain.ArrayPointer<AppMain.NNS_MOTION> motion;
    }

    private enum AME_AME_USER_ATTRIBUTE : uint
    {
        AME_AME_ATTR_INCLUSIVE = 0,
        AME_AME_ATTR_EXCLUSIVE = 1,
        AME_AME_ATTR_USER_MASK = 65535, // 0x0000FFFF
        AME_AME_ATTR_GROUP_00 = 65536, // 0x00010000
        AME_AME_ATTR_GROUP_01 = 131072, // 0x00020000
        AME_AME_ATTR_GROUP_02 = 262144, // 0x00040000
        AME_AME_ATTR_GROUP_03 = 524288, // 0x00080000
        AME_AME_ATTR_GROUP_04 = 1048576, // 0x00100000
        AME_AME_ATTR_GROUP_05 = 2097152, // 0x00200000
        AME_AME_ATTR_GROUP_06 = 4194304, // 0x00400000
        AME_AME_ATTR_GROUP_07 = 8388608, // 0x00800000
        AME_AME_ATTR_GROUP_08 = 16777216, // 0x01000000
        AME_AME_ATTR_GROUP_09 = 33554432, // 0x02000000
        AME_AME_ATTR_GROUP_0a = 67108864, // 0x04000000
        AME_AME_ATTR_GROUP_0b = 134217728, // 0x08000000
        AME_AME_ATTR_GROUP_0c = 268435456, // 0x10000000
        AME_AME_ATTR_GROUP_0d = 536870912, // 0x20000000
        AME_AME_ATTR_GROUP_0e = 1073741824, // 0x40000000
        AME_AME_ATTR_GROUP_0f = 2147483648, // 0x80000000
        AME_AME_ATTR_GROUP_ALL = 4294901760, // 0xFFFF0000
        AME_AME_ATTR_GROUP_MASK = 4294901760, // 0xFFFF0000
    }

    public class AMS_FRUSTUM
    {
        private Matrix viewMatrix;
        private float width;
        private float height;
        private float nearClip;
        private float farClip;
        private float lrNormalX;
        private float lrNormalZ;
        private float tbNormalY;
        private float tbNormalZ;
    }

    public class AMS_AME_LIST
    {
        public AppMain.AMS_AME_LIST next;
        public AppMain.AMS_AME_LIST prev;

        public virtual void Clear()
        {
            this.next = (AppMain.AMS_AME_LIST)null;
            this.prev = (AppMain.AMS_AME_LIST)null;
        }
    }

    public class AMS_AME_RUNTIME : AppMain.AMS_AME_LIST
    {
        public readonly AppMain.AMS_AME_LIST child_head = new AppMain.AMS_AME_LIST();
        public readonly AppMain.AMS_AME_LIST child_tail = new AppMain.AMS_AME_LIST();
        public readonly AppMain.AMS_AME_LIST work_head = (AppMain.AMS_AME_LIST)new AppMain.AMS_AME_RUNTIME_WORK();
        public readonly AppMain.AMS_AME_LIST work_tail = (AppMain.AMS_AME_LIST)new AppMain.AMS_AME_RUNTIME_WORK();
        public readonly AppMain.AMS_AME_LIST active_head = (AppMain.AMS_AME_LIST)new AppMain.AMS_AME_RUNTIME_WORK();
        public readonly AppMain.AMS_AME_LIST active_tail = (AppMain.AMS_AME_LIST)new AppMain.AMS_AME_RUNTIME_WORK();
        public int state;
        public float amount;
        public uint count;
        public AppMain.AMS_AME_ECB ecb;
        public AppMain.AMS_AME_NODE node;
        public AppMain.AMS_AME_RUNTIME parent_runtime;
        public AppMain.AMS_AME_RUNTIME spawn_runtime;
        public AppMain.AMS_AME_RUNTIME_WORK work;
        public int child_num;
        public short work_num;
        public short active_num;
        public AppMain.NNS_TEXLIST texlist;

        public new void Clear()
        {
            this.next = (AppMain.AMS_AME_LIST)null;
            this.prev = (AppMain.AMS_AME_LIST)null;
            this.state = 0;
            this.amount = 0.0f;
            this.count = 0U;
            this.ecb = (AppMain.AMS_AME_ECB)null;
            this.node = (AppMain.AMS_AME_NODE)null;
            this.parent_runtime = (AppMain.AMS_AME_RUNTIME)null;
            this.spawn_runtime = (AppMain.AMS_AME_RUNTIME)null;
            this.work = (AppMain.AMS_AME_RUNTIME_WORK)null;
            this.child_head.Clear();
            this.child_tail.Clear();
            this.child_num = 0;
            this.work_head.Clear();
            this.work_tail.Clear();
            this.active_head.Clear();
            this.active_tail.Clear();
            this.work_num = (short)0;
            this.active_num = (short)0;
            this.texlist = (AppMain.NNS_TEXLIST)null;
        }
    }

    public class AMS_AME_RUNTIME_WORK : AppMain.AMS_AME_LIST
    {
        public readonly AppMain.NNS_VECTOR4D position = new AppMain.NNS_VECTOR4D();
        public readonly AppMain.NNS_VECTOR4D velocity = new AppMain.NNS_VECTOR4D();
        public readonly AppMain.NNS_QUATERNION[] rotate = new AppMain.NNS_QUATERNION[1];
        public readonly byte[] dummy = new byte[64];
        public float time;
        public uint flag;

        public override void Clear()
        {
            this.time = 0.0f;
            this.flag = 0U;
            this.position.Clear();
            this.velocity.Clear();
            this.rotate[0].Clear();
            Array.Clear((Array)this.dummy, 0, 64);
            this.next = (AppMain.AMS_AME_LIST)null;
            this.prev = (AppMain.AMS_AME_LIST)null;
        }

        public static explicit operator AppMain.AMS_AME_RUNTIME_WORK_MODEL(
          AppMain.AMS_AME_RUNTIME_WORK work)
        {
            return new AppMain.AMS_AME_RUNTIME_WORK_MODEL(work);
        }

        public static explicit operator AppMain.AMS_AME_RUNTIME_WORK_DIRECTIONAL(
          AppMain.AMS_AME_RUNTIME_WORK work)
        {
            return new AppMain.AMS_AME_RUNTIME_WORK_DIRECTIONAL(work);
        }

        public static explicit operator AppMain.AMS_AME_RUNTIME_WORK_OMNI(
          AppMain.AMS_AME_RUNTIME_WORK work)
        {
            return new AppMain.AMS_AME_RUNTIME_WORK_OMNI(work);
        }

        public static explicit operator AppMain.AMS_AME_RUNTIME_WORK_SIMPLE_SPRITE(
          AppMain.AMS_AME_RUNTIME_WORK work)
        {
            return new AppMain.AMS_AME_RUNTIME_WORK_SIMPLE_SPRITE(work);
        }

        public static explicit operator AppMain.AMS_AME_RUNTIME_WORK_SPRITE(
          AppMain.AMS_AME_RUNTIME_WORK work)
        {
            return new AppMain.AMS_AME_RUNTIME_WORK_SPRITE(work);
        }

        public static explicit operator AppMain.AMS_AME_RUNTIME_WORK_LINE(
          AppMain.AMS_AME_RUNTIME_WORK work)
        {
            return new AppMain.AMS_AME_RUNTIME_WORK_LINE(work);
        }

        public static explicit operator AppMain.AMS_AME_RUNTIME_WORK_PLANE(
          AppMain.AMS_AME_RUNTIME_WORK work)
        {
            return new AppMain.AMS_AME_RUNTIME_WORK_PLANE(work);
        }

        public static explicit operator AppMain.AMS_AME_RUNTIME_WORK_SURFACE(
          AppMain.AMS_AME_RUNTIME_WORK work)
        {
            return new AppMain.AMS_AME_RUNTIME_WORK_SURFACE(work);
        }

        public static explicit operator AppMain.AMS_AME_RUNTIME_WORK_CIRCLE(
          AppMain.AMS_AME_RUNTIME_WORK work)
        {
            return new AppMain.AMS_AME_RUNTIME_WORK_CIRCLE(work);
        }
    }

    public struct Vector4D_Buf
    {
        private readonly byte[] data_;
        private readonly int offset_;

        public Vector4D_Buf(byte[] data, int offset)
        {
            this.data_ = data;
            this.offset_ = offset;
        }

        public float x
        {
            get
            {
                return BitConverter.ToSingle(this.data_, this.offset_);
            }
            set
            {
                MppBitConverter.GetBytes(value, this.data_, this.offset_);
            }
        }

        public float y
        {
            get
            {
                return BitConverter.ToSingle(this.data_, this.offset_ + 4);
            }
            set
            {
                MppBitConverter.GetBytes(value, this.data_, this.offset_ + 4);
            }
        }

        public float z
        {
            get
            {
                return BitConverter.ToSingle(this.data_, this.offset_ + 8);
            }
            set
            {
                MppBitConverter.GetBytes(value, this.data_, this.offset_ + 8);
            }
        }

        public float w
        {
            get
            {
                return BitConverter.ToSingle(this.data_, this.offset_ + 12);
            }
            set
            {
                MppBitConverter.GetBytes(value, this.data_, this.offset_ + 12);
            }
        }

        public void Assign(AppMain.Vector4D_Buf v)
        {
            this.x = v.x;
            this.y = v.y;
            this.z = v.z;
            this.w = v.w;
        }

        public void Assign(AppMain.NNS_VECTOR4D v)
        {
            this.x = v.x;
            this.y = v.y;
            this.z = v.z;
            this.w = v.w;
        }

        public void Assign(AppMain.NNS_VECTOR v)
        {
            this.x = v.x;
            this.y = v.y;
            this.z = v.z;
        }

        public static int SizeBytes
        {
            get
            {
                return 16;
            }
        }
    }

    public struct Vector4D_Quat
    {
        private readonly AppMain.NNS_QUATERNION[] quat_;

        public Vector4D_Quat(AppMain.NNS_QUATERNION[] quat)
        {
            this.quat_ = quat;
        }

        public float x
        {
            get
            {
                return this.quat_[0].x;
            }
        }

        public float y
        {
            get
            {
                return this.quat_[0].y;
            }
        }

        public float z
        {
            get
            {
                return this.quat_[0].z;
            }
        }

        public float w
        {
            get
            {
                return this.quat_[0].w;
            }
        }

        public void Assign(float x, float y, float z, float w)
        {
            this.quat_[0] = new AppMain.NNS_QUATERNION(x, y, z, w);
        }

        public void Assign(AppMain.NNS_VECTOR4D v)
        {
            this.quat_[0] = new AppMain.NNS_QUATERNION(v.x, v.y, v.z, v.w);
        }

        public static explicit operator AppMain.NNS_QUATERNION(AppMain.Vector4D_Quat v)
        {
            return v.quat_[0];
        }
    }

    public struct AMS_RGBA8888_Buf
    {
        private readonly byte[] data_;
        private readonly int offset_;

        public AMS_RGBA8888_Buf(byte[] data, int offset)
        {
            this.data_ = data;
            this.offset_ = offset;
        }

        public byte r
        {
            get
            {
                return this.data_[this.offset_];
            }
            set
            {
                this.data_[this.offset_] = value;
            }
        }

        public byte g
        {
            get
            {
                return this.data_[this.offset_ + 1];
            }
            set
            {
                this.data_[this.offset_ + 1] = value;
            }
        }

        public byte b
        {
            get
            {
                return this.data_[this.offset_ + 2];
            }
            set
            {
                this.data_[this.offset_ + 2] = value;
            }
        }

        public byte a
        {
            get
            {
                return this.data_[this.offset_ + 3];
            }
            set
            {
                this.data_[this.offset_ + 3] = value;
            }
        }

        public uint color
        {
            get
            {
                return BitConverter.ToUInt32(this.data_, this.offset_);
            }
            set
            {
                MppBitConverter.GetBytes(value, this.data_, this.offset_);
            }
        }

        public static int SizeBytes
        {
            get
            {
                return 4;
            }
        }
    }

    public struct AMS_AME_RUNTIME_WORK_MODEL
    {
        private AppMain.Vector4D_Buf rotate_axis_;
        private AppMain.Vector4D_Buf scale_;
        private AppMain.AMS_RGBA8888_Buf color_;
        private AppMain.AMS_AME_RUNTIME_WORK rtm_work_;

        public AMS_AME_RUNTIME_WORK_MODEL(AppMain.AMS_AME_RUNTIME_WORK rtm_work)
        {
            this.rtm_work_ = rtm_work;
            this.rotate_axis_ = new AppMain.Vector4D_Buf(rtm_work.dummy, 0);
            this.scale_ = new AppMain.Vector4D_Buf(rtm_work.dummy, AppMain.Vector4D_Buf.SizeBytes);
            this.color_ = new AppMain.AMS_RGBA8888_Buf(rtm_work.dummy, AppMain.Vector4D_Buf.SizeBytes + AppMain.Vector4D_Buf.SizeBytes);
        }

        public AppMain.AMS_AME_LIST next
        {
            get
            {
                return this.rtm_work_.next;
            }
            set
            {
                this.rtm_work_.next = value;
            }
        }

        public AppMain.AMS_AME_LIST prev
        {
            get
            {
                return this.rtm_work_.prev;
            }
            set
            {
                this.rtm_work_.prev = value;
            }
        }

        public float time
        {
            get
            {
                return this.rtm_work_.time;
            }
            set
            {
                this.rtm_work_.time = value;
            }
        }

        public uint flag
        {
            get
            {
                return this.rtm_work_.flag;
            }
            set
            {
                this.rtm_work_.flag = value;
            }
        }

        public AppMain.NNS_VECTOR4D position
        {
            get
            {
                return this.rtm_work_.position;
            }
            set
            {
                this.rtm_work_.position.Assign(value);
            }
        }

        public AppMain.NNS_VECTOR4D velocity
        {
            get
            {
                return this.rtm_work_.velocity;
            }
            set
            {
                this.rtm_work_.velocity.Assign(value);
            }
        }

        public AppMain.NNS_QUATERNION rotate
        {
            get
            {
                return this.rtm_work_.rotate[0];
            }
            set
            {
                this.rtm_work_.rotate[0] = value;
            }
        }

        public AppMain.Vector4D_Buf rotate_axis
        {
            get
            {
                return this.rotate_axis_;
            }
        }

        public void set_rotate_axis(float x, float y, float z, float w)
        {
            this.rotate_axis_.x = x;
            this.rotate_axis_.y = y;
            this.rotate_axis_.z = z;
            this.rotate_axis_.w = w;
        }

        public AppMain.Vector4D_Buf scale
        {
            get
            {
                return this.scale_;
            }
        }

        public void set_scale(float x, float y, float z, float w)
        {
            this.scale_.x = x;
            this.scale_.y = y;
            this.scale_.z = z;
            this.scale_.w = w;
        }

        public void set_scale(AppMain.NNS_VECTOR4D v)
        {
            this.scale_.Assign(v);
        }

        public void set_scale(AppMain.NNS_VECTOR v)
        {
            this.scale_.Assign(v);
        }

        public AppMain.AMS_RGBA8888_Buf color
        {
            get
            {
                return this.color_;
            }
        }

        public void set_color(byte r, byte g, byte b, byte a)
        {
            this.color_.r = r;
            this.color_.g = g;
            this.color_.b = b;
            this.color_.a = a;
        }

        public void set_color(uint c)
        {
            this.color_.color = c;
        }

        public float scroll_u
        {
            get
            {
                return BitConverter.ToSingle(this.rtm_work_.dummy, AppMain.Vector4D_Buf.SizeBytes + AppMain.Vector4D_Buf.SizeBytes + AppMain.AMS_RGBA8888_Buf.SizeBytes);
            }
            set
            {
                int offset = AppMain.Vector4D_Buf.SizeBytes + AppMain.Vector4D_Buf.SizeBytes + AppMain.AMS_RGBA8888_Buf.SizeBytes;
                MppBitConverter.GetBytes(value, this.rtm_work_.dummy, offset);
            }
        }

        public float scroll_v
        {
            get
            {
                return BitConverter.ToSingle(this.rtm_work_.dummy, AppMain.Vector4D_Buf.SizeBytes + AppMain.Vector4D_Buf.SizeBytes + AppMain.AMS_RGBA8888_Buf.SizeBytes + 4);
            }
            set
            {
                int offset = AppMain.Vector4D_Buf.SizeBytes + AppMain.Vector4D_Buf.SizeBytes + AppMain.AMS_RGBA8888_Buf.SizeBytes + 4;
                MppBitConverter.GetBytes(value, this.rtm_work_.dummy, offset);
            }
        }

        public static explicit operator AppMain.AMS_AME_LIST(
          AppMain.AMS_AME_RUNTIME_WORK_MODEL work)
        {
            return (AppMain.AMS_AME_LIST)work.rtm_work_;
        }

        public static implicit operator AppMain.AMS_AME_RUNTIME_WORK(
          AppMain.AMS_AME_RUNTIME_WORK_MODEL work)
        {
            return work.rtm_work_;
        }
    }

    public struct AMS_AME_RUNTIME_WORK_DIRECTIONAL
    {
        private AppMain.AMS_AME_RUNTIME_WORK rtm_work_;

        public AMS_AME_RUNTIME_WORK_DIRECTIONAL(AppMain.AMS_AME_RUNTIME_WORK rtm_work)
        {
            this.rtm_work_ = rtm_work;
        }

        public AppMain.AMS_AME_LIST next
        {
            get
            {
                return this.rtm_work_.next;
            }
            set
            {
                this.rtm_work_.next = value;
            }
        }

        public AppMain.AMS_AME_LIST prev
        {
            get
            {
                return this.rtm_work_.prev;
            }
            set
            {
                this.rtm_work_.prev = value;
            }
        }

        public float time
        {
            get
            {
                return this.rtm_work_.time;
            }
            set
            {
                this.rtm_work_.time = value;
            }
        }

        public uint flag
        {
            get
            {
                return this.rtm_work_.flag;
            }
            set
            {
                this.rtm_work_.flag = value;
            }
        }

        public AppMain.NNS_VECTOR4D position
        {
            get
            {
                return this.rtm_work_.position;
            }
            set
            {
                this.rtm_work_.position.Assign(value);
            }
        }

        public AppMain.NNS_VECTOR4D velocity
        {
            get
            {
                return this.rtm_work_.velocity;
            }
            set
            {
                this.rtm_work_.velocity.Assign(value);
            }
        }

        public AppMain.NNS_QUATERNION rotate
        {
            get
            {
                return this.rtm_work_.rotate[0];
            }
            set
            {
                this.rtm_work_.rotate[0] = value;
            }
        }

        public float spread
        {
            get
            {
                return BitConverter.ToSingle(this.rtm_work_.dummy, 0);
            }
            set
            {
                MppBitConverter.GetBytes(value, this.rtm_work_.dummy, 0);
            }
        }

        public static explicit operator AppMain.AMS_AME_LIST(
          AppMain.AMS_AME_RUNTIME_WORK_DIRECTIONAL work)
        {
            return (AppMain.AMS_AME_LIST)work.rtm_work_;
        }
    }

    public struct AMS_AME_RUNTIME_WORK_OMNI
    {
        private AppMain.AMS_AME_RUNTIME_WORK rtm_work_;

        public AMS_AME_RUNTIME_WORK_OMNI(AppMain.AMS_AME_RUNTIME_WORK rtm_work)
        {
            this.rtm_work_ = rtm_work;
        }

        public AppMain.AMS_AME_LIST next
        {
            get
            {
                return this.rtm_work_.next;
            }
            set
            {
                this.rtm_work_.next = value;
            }
        }

        public AppMain.AMS_AME_LIST prev
        {
            get
            {
                return this.rtm_work_.prev;
            }
            set
            {
                this.rtm_work_.prev = value;
            }
        }

        public float time
        {
            get
            {
                return this.rtm_work_.time;
            }
            set
            {
                this.rtm_work_.time = value;
            }
        }

        public uint flag
        {
            get
            {
                return this.rtm_work_.flag;
            }
            set
            {
                this.rtm_work_.flag = value;
            }
        }

        public AppMain.NNS_VECTOR4D position
        {
            get
            {
                return this.rtm_work_.position;
            }
            set
            {
                this.rtm_work_.position.Assign(value);
            }
        }

        public AppMain.NNS_VECTOR4D velocity
        {
            get
            {
                return this.rtm_work_.velocity;
            }
            set
            {
                this.rtm_work_.velocity.Assign(value);
            }
        }

        public AppMain.NNS_QUATERNION rotate
        {
            get
            {
                return this.rtm_work_.rotate[0];
            }
            set
            {
                this.rtm_work_.rotate[0] = value;
            }
        }

        public float offset
        {
            get
            {
                return BitConverter.ToSingle(this.rtm_work_.dummy, 0);
            }
            set
            {
                MppBitConverter.GetBytes(value, this.rtm_work_.dummy, 0);
            }
        }

        public float offset_chaos
        {
            get
            {
                return BitConverter.ToSingle(this.rtm_work_.dummy, 4);
            }
            set
            {
                MppBitConverter.GetBytes(value, this.rtm_work_.dummy, 4);
            }
        }

        public static explicit operator AppMain.AMS_AME_LIST(
          AppMain.AMS_AME_RUNTIME_WORK_OMNI work)
        {
            return (AppMain.AMS_AME_LIST)work.rtm_work_;
        }
    }

    public struct AMS_AME_RUNTIME_WORK_SIMPLE_SPRITE
    {
        private AppMain.Vector4D_Quat st_;
        private AppMain.Vector4D_Buf size_;
        private AppMain.AMS_RGBA8888_Buf color_;
        private AppMain.AMS_AME_RUNTIME_WORK rtm_work_;

        public AMS_AME_RUNTIME_WORK_SIMPLE_SPRITE(AppMain.AMS_AME_RUNTIME_WORK rtm_work)
        {
            this.rtm_work_ = rtm_work;
            this.st_ = new AppMain.Vector4D_Quat(rtm_work.rotate);
            this.size_ = new AppMain.Vector4D_Buf(rtm_work.dummy, 0);
            this.color_ = new AppMain.AMS_RGBA8888_Buf(rtm_work.dummy, AppMain.Vector4D_Buf.SizeBytes);
        }

        public AppMain.AMS_AME_LIST next
        {
            get
            {
                return this.rtm_work_.next;
            }
            set
            {
                this.rtm_work_.next = value;
            }
        }

        public AppMain.AMS_AME_LIST prev
        {
            get
            {
                return this.rtm_work_.prev;
            }
            set
            {
                this.rtm_work_.prev = value;
            }
        }

        public float time
        {
            get
            {
                return this.rtm_work_.time;
            }
            set
            {
                this.rtm_work_.time = value;
            }
        }

        public uint flag
        {
            get
            {
                return this.rtm_work_.flag;
            }
            set
            {
                this.rtm_work_.flag = value;
            }
        }

        public AppMain.NNS_VECTOR4D position
        {
            get
            {
                return this.rtm_work_.position;
            }
            set
            {
                this.rtm_work_.position.Assign(value);
            }
        }

        public AppMain.NNS_VECTOR4D velocity
        {
            get
            {
                return this.rtm_work_.velocity;
            }
            set
            {
                this.rtm_work_.velocity.Assign(value);
            }
        }

        public AppMain.Vector4D_Quat st
        {
            get
            {
                return this.st_;
            }
        }

        public void set_st(float x, float y, float z, float w)
        {
            this.st.Assign(x, y, z, w);
        }

        public AppMain.Vector4D_Buf size
        {
            get
            {
                return this.size_;
            }
        }

        public void set_size(float x, float y, float z, float w)
        {
            this.size_.x = x;
            this.size_.y = y;
            this.size_.z = z;
            this.size_.w = w;
        }

        public void set_size(AppMain.NNS_VECTOR4D v)
        {
            this.size_.Assign(v);
        }

        public AppMain.AMS_RGBA8888_Buf color
        {
            get
            {
                return this.color_;
            }
        }

        public void set_color(byte r, byte g, byte b, byte a)
        {
            this.color_.r = r;
            this.color_.g = g;
            this.color_.b = b;
            this.color_.a = a;
        }

        public void set_color(uint c)
        {
            this.color_.color = c;
        }

        public float tex_time
        {
            get
            {
                return BitConverter.ToSingle(this.rtm_work_.dummy, AppMain.Vector4D_Buf.SizeBytes + AppMain.AMS_RGBA8888_Buf.SizeBytes);
            }
            set
            {
                int offset = AppMain.Vector4D_Buf.SizeBytes + AppMain.AMS_RGBA8888_Buf.SizeBytes;
                MppBitConverter.GetBytes(value, this.rtm_work_.dummy, offset);
            }
        }

        public int tex_no
        {
            get
            {
                return BitConverter.ToInt32(this.rtm_work_.dummy, AppMain.Vector4D_Buf.SizeBytes + AppMain.AMS_RGBA8888_Buf.SizeBytes + 4);
            }
            set
            {
                int offset = AppMain.Vector4D_Buf.SizeBytes + AppMain.AMS_RGBA8888_Buf.SizeBytes + 4;
                MppBitConverter.GetBytes(value, this.rtm_work_.dummy, offset);
            }
        }

        public static explicit operator AppMain.AMS_AME_LIST(
          AppMain.AMS_AME_RUNTIME_WORK_SIMPLE_SPRITE work)
        {
            return (AppMain.AMS_AME_LIST)work.rtm_work_;
        }

        public static implicit operator AppMain.AMS_AME_RUNTIME_WORK(
          AppMain.AMS_AME_RUNTIME_WORK_SIMPLE_SPRITE work)
        {
            return work.rtm_work_;
        }
    }

    public struct AMS_AME_RUNTIME_WORK_SPRITE
    {
        private AppMain.Vector4D_Quat st_;
        private AppMain.Vector4D_Buf size_;
        private AppMain.AMS_RGBA8888_Buf color_;
        private AppMain.AMS_AME_RUNTIME_WORK rtm_work_;

        public AMS_AME_RUNTIME_WORK_SPRITE(AppMain.AMS_AME_RUNTIME_WORK rtm_work)
        {
            this.rtm_work_ = rtm_work;
            this.st_ = new AppMain.Vector4D_Quat(rtm_work.rotate);
            this.size_ = new AppMain.Vector4D_Buf(rtm_work.dummy, 0);
            this.color_ = new AppMain.AMS_RGBA8888_Buf(rtm_work.dummy, AppMain.Vector4D_Buf.SizeBytes);
        }

        public AppMain.AMS_AME_LIST next
        {
            get
            {
                return this.rtm_work_.next;
            }
            set
            {
                this.rtm_work_.next = value;
            }
        }

        public AppMain.AMS_AME_LIST prev
        {
            get
            {
                return this.rtm_work_.prev;
            }
            set
            {
                this.rtm_work_.prev = value;
            }
        }

        public float time
        {
            get
            {
                return this.rtm_work_.time;
            }
            set
            {
                this.rtm_work_.time = value;
            }
        }

        public uint flag
        {
            get
            {
                return this.rtm_work_.flag;
            }
            set
            {
                this.rtm_work_.flag = value;
            }
        }

        public AppMain.NNS_VECTOR4D position
        {
            get
            {
                return this.rtm_work_.position;
            }
            set
            {
                this.rtm_work_.position.Assign(value);
            }
        }

        public AppMain.NNS_VECTOR4D velocity
        {
            get
            {
                return this.rtm_work_.velocity;
            }
            set
            {
                this.rtm_work_.velocity.Assign(value);
            }
        }

        public AppMain.Vector4D_Quat st
        {
            get
            {
                return this.st_;
            }
        }

        public void set_st(float x, float y, float z, float w)
        {
            this.st_.Assign(x, y, z, w);
        }

        public AppMain.Vector4D_Buf size
        {
            get
            {
                return this.size_;
            }
        }

        public void set_size(float x, float y, float z, float w)
        {
            this.size_.x = x;
            this.size_.y = y;
            this.size_.z = z;
            this.size_.w = w;
        }

        public void set_size(AppMain.NNS_VECTOR4D v)
        {
            this.size_.Assign(v);
        }

        public AppMain.AMS_RGBA8888_Buf color
        {
            get
            {
                return this.color_;
            }
        }

        public void set_color(byte r, byte g, byte b, byte a)
        {
            this.color_.r = r;
            this.color_.g = g;
            this.color_.b = b;
            this.color_.a = a;
        }

        public void set_color(uint c)
        {
            this.color_.color = c;
        }

        public float twist
        {
            get
            {
                return BitConverter.ToSingle(this.rtm_work_.dummy, AppMain.Vector4D_Buf.SizeBytes + AppMain.AMS_RGBA8888_Buf.SizeBytes);
            }
            set
            {
                int offset = AppMain.Vector4D_Buf.SizeBytes + AppMain.AMS_RGBA8888_Buf.SizeBytes;
                MppBitConverter.GetBytes(value, this.rtm_work_.dummy, offset);
            }
        }

        public float twist_speed
        {
            get
            {
                return BitConverter.ToSingle(this.rtm_work_.dummy, AppMain.Vector4D_Buf.SizeBytes + AppMain.AMS_RGBA8888_Buf.SizeBytes + 4);
            }
            set
            {
                int offset = AppMain.Vector4D_Buf.SizeBytes + AppMain.AMS_RGBA8888_Buf.SizeBytes + 4;
                MppBitConverter.GetBytes(value, this.rtm_work_.dummy, offset);
            }
        }

        public float tex_time
        {
            get
            {
                return BitConverter.ToSingle(this.rtm_work_.dummy, AppMain.Vector4D_Buf.SizeBytes + AppMain.AMS_RGBA8888_Buf.SizeBytes + 8);
            }
            set
            {
                int offset = AppMain.Vector4D_Buf.SizeBytes + AppMain.AMS_RGBA8888_Buf.SizeBytes + 8;
                MppBitConverter.GetBytes(value, this.rtm_work_.dummy, offset);
            }
        }

        public int tex_no
        {
            get
            {
                return BitConverter.ToInt32(this.rtm_work_.dummy, AppMain.Vector4D_Buf.SizeBytes + AppMain.AMS_RGBA8888_Buf.SizeBytes + 12);
            }
            set
            {
                int offset = AppMain.Vector4D_Buf.SizeBytes + AppMain.AMS_RGBA8888_Buf.SizeBytes + 12;
                MppBitConverter.GetBytes(value, this.rtm_work_.dummy, offset);
            }
        }

        public static explicit operator AppMain.AMS_AME_LIST(
          AppMain.AMS_AME_RUNTIME_WORK_SPRITE work)
        {
            return (AppMain.AMS_AME_LIST)work.rtm_work_;
        }

        public static implicit operator AppMain.AMS_AME_RUNTIME_WORK(
          AppMain.AMS_AME_RUNTIME_WORK_SPRITE work)
        {
            return work.rtm_work_;
        }
    }

    public struct AMS_AME_RUNTIME_WORK_LINE
    {
        private AppMain.Vector4D_Quat st_;
        private AppMain.AMS_RGBA8888_Buf inside_color_;
        private AppMain.AMS_RGBA8888_Buf outside_color_;
        private AppMain.AMS_AME_RUNTIME_WORK rtm_work_;

        public AMS_AME_RUNTIME_WORK_LINE(AppMain.AMS_AME_RUNTIME_WORK rtm_work)
        {
            this.rtm_work_ = rtm_work;
            this.st_ = new AppMain.Vector4D_Quat(rtm_work.rotate);
            this.inside_color_ = new AppMain.AMS_RGBA8888_Buf(rtm_work.dummy, 0);
            this.outside_color_ = new AppMain.AMS_RGBA8888_Buf(rtm_work.dummy, AppMain.AMS_RGBA8888_Buf.SizeBytes);
        }

        public AppMain.AMS_AME_LIST next
        {
            get
            {
                return this.rtm_work_.next;
            }
            set
            {
                this.rtm_work_.next = value;
            }
        }

        public AppMain.AMS_AME_LIST prev
        {
            get
            {
                return this.rtm_work_.prev;
            }
            set
            {
                this.rtm_work_.prev = value;
            }
        }

        public float time
        {
            get
            {
                return this.rtm_work_.time;
            }
            set
            {
                this.rtm_work_.time = value;
            }
        }

        public uint flag
        {
            get
            {
                return this.rtm_work_.flag;
            }
            set
            {
                this.rtm_work_.flag = value;
            }
        }

        public AppMain.NNS_VECTOR4D position
        {
            get
            {
                return this.rtm_work_.position;
            }
            set
            {
                this.rtm_work_.position.Assign(value);
            }
        }

        public AppMain.NNS_VECTOR4D velocity
        {
            get
            {
                return this.rtm_work_.velocity;
            }
            set
            {
                this.rtm_work_.velocity.Assign(value);
            }
        }

        public AppMain.Vector4D_Quat st
        {
            get
            {
                return this.st_;
            }
        }

        public void set_st(float x, float y, float z, float w)
        {
            this.st_.Assign(x, y, z, w);
        }

        public AppMain.AMS_RGBA8888_Buf inside_color
        {
            get
            {
                return this.inside_color_;
            }
        }

        public void set_inside_color(byte r, byte g, byte b, byte a)
        {
            this.inside_color_.r = r;
            this.inside_color_.g = g;
            this.inside_color_.b = b;
            this.inside_color_.a = a;
        }

        public void set_inside_color(uint c)
        {
            this.inside_color_.color = c;
        }

        public AppMain.AMS_RGBA8888_Buf outside_color
        {
            get
            {
                return this.outside_color_;
            }
        }

        public void set_outside_color(byte r, byte g, byte b, byte a)
        {
            this.outside_color_.r = r;
            this.outside_color_.g = g;
            this.outside_color_.b = b;
            this.outside_color_.a = a;
        }

        public void set_outside_color(uint c)
        {
            this.outside_color_.color = c;
        }

        public float inside_width
        {
            get
            {
                return BitConverter.ToSingle(this.rtm_work_.dummy, AppMain.AMS_RGBA8888_Buf.SizeBytes + AppMain.AMS_RGBA8888_Buf.SizeBytes);
            }
            set
            {
                int offset = AppMain.AMS_RGBA8888_Buf.SizeBytes + AppMain.AMS_RGBA8888_Buf.SizeBytes;
                MppBitConverter.GetBytes(value, this.rtm_work_.dummy, offset);
            }
        }

        public float outside_width
        {
            get
            {
                return BitConverter.ToSingle(this.rtm_work_.dummy, AppMain.AMS_RGBA8888_Buf.SizeBytes + AppMain.AMS_RGBA8888_Buf.SizeBytes + 4);
            }
            set
            {
                int offset = AppMain.AMS_RGBA8888_Buf.SizeBytes + AppMain.AMS_RGBA8888_Buf.SizeBytes + 4;
                MppBitConverter.GetBytes(value, this.rtm_work_.dummy, offset);
            }
        }

        public float length
        {
            get
            {
                return BitConverter.ToSingle(this.rtm_work_.dummy, AppMain.AMS_RGBA8888_Buf.SizeBytes + AppMain.AMS_RGBA8888_Buf.SizeBytes + 8);
            }
            set
            {
                int offset = AppMain.AMS_RGBA8888_Buf.SizeBytes + AppMain.AMS_RGBA8888_Buf.SizeBytes + 8;
                MppBitConverter.GetBytes(value, this.rtm_work_.dummy, offset);
            }
        }

        public float tex_time
        {
            get
            {
                return BitConverter.ToSingle(this.rtm_work_.dummy, AppMain.Vector4D_Buf.SizeBytes + AppMain.AMS_RGBA8888_Buf.SizeBytes + 12);
            }
            set
            {
                int offset = AppMain.Vector4D_Buf.SizeBytes + AppMain.AMS_RGBA8888_Buf.SizeBytes + 12;
                MppBitConverter.GetBytes(value, this.rtm_work_.dummy, offset);
            }
        }

        public int tex_no
        {
            get
            {
                return BitConverter.ToInt32(this.rtm_work_.dummy, AppMain.Vector4D_Buf.SizeBytes + AppMain.AMS_RGBA8888_Buf.SizeBytes + 16);
            }
            set
            {
                int offset = AppMain.Vector4D_Buf.SizeBytes + AppMain.AMS_RGBA8888_Buf.SizeBytes + 16;
                MppBitConverter.GetBytes(value, this.rtm_work_.dummy, offset);
            }
        }

        public static explicit operator AppMain.AMS_AME_LIST(
          AppMain.AMS_AME_RUNTIME_WORK_LINE work)
        {
            return (AppMain.AMS_AME_LIST)work.rtm_work_;
        }

        public static implicit operator AppMain.AMS_AME_RUNTIME_WORK(
          AppMain.AMS_AME_RUNTIME_WORK_LINE work)
        {
            return work.rtm_work_;
        }
    }

    public struct AMS_AME_RUNTIME_WORK_PLANE
    {
        private AppMain.Vector4D_Buf rotate_axis_;
        private AppMain.Vector4D_Buf st_;
        private AppMain.Vector4D_Buf size_;
        private AppMain.AMS_RGBA8888_Buf color_;
        private AppMain.AMS_AME_RUNTIME_WORK rtm_work_;

        public AMS_AME_RUNTIME_WORK_PLANE(AppMain.AMS_AME_RUNTIME_WORK rtm_work)
        {
            this.rtm_work_ = rtm_work;
            this.rotate_axis_ = new AppMain.Vector4D_Buf(rtm_work.dummy, 0);
            this.st_ = new AppMain.Vector4D_Buf(rtm_work.dummy, AppMain.Vector4D_Buf.SizeBytes);
            this.size_ = new AppMain.Vector4D_Buf(rtm_work.dummy, AppMain.Vector4D_Buf.SizeBytes + AppMain.Vector4D_Buf.SizeBytes);
            this.color_ = new AppMain.AMS_RGBA8888_Buf(rtm_work.dummy, AppMain.Vector4D_Buf.SizeBytes * 3);
        }

        public AppMain.AMS_AME_LIST next
        {
            get
            {
                return this.rtm_work_.next;
            }
            set
            {
                this.rtm_work_.next = value;
            }
        }

        public AppMain.AMS_AME_LIST prev
        {
            get
            {
                return this.rtm_work_.prev;
            }
            set
            {
                this.rtm_work_.prev = value;
            }
        }

        public float time
        {
            get
            {
                return this.rtm_work_.time;
            }
            set
            {
                this.rtm_work_.time = value;
            }
        }

        public uint flag
        {
            get
            {
                return this.rtm_work_.flag;
            }
            set
            {
                this.rtm_work_.flag = value;
            }
        }

        public AppMain.NNS_VECTOR4D position
        {
            get
            {
                return this.rtm_work_.position;
            }
            set
            {
                this.rtm_work_.position.Assign(value);
            }
        }

        public AppMain.NNS_VECTOR4D velocity
        {
            get
            {
                return this.rtm_work_.velocity;
            }
            set
            {
                this.rtm_work_.velocity.Assign(value);
            }
        }

        public AppMain.NNS_QUATERNION rotate
        {
            get
            {
                return this.rtm_work_.rotate[0];
            }
            set
            {
                this.rtm_work_.rotate[0] = value;
            }
        }

        public AppMain.Vector4D_Buf rotate_axis
        {
            get
            {
                return this.rotate_axis_;
            }
        }

        public void set_rotate_axis(float x, float y, float z, float w)
        {
            this.rotate_axis_.x = x;
            this.rotate_axis_.y = y;
            this.rotate_axis_.z = z;
            this.rotate_axis_.w = w;
        }

        public AppMain.Vector4D_Buf st
        {
            get
            {
                return this.st_;
            }
        }

        public void set_st(float x, float y, float z, float w)
        {
            this.st_.x = x;
            this.st_.y = y;
            this.st_.z = z;
            this.st_.w = w;
        }

        public AppMain.Vector4D_Buf size
        {
            get
            {
                return this.size_;
            }
        }

        public void set_size(float x, float y, float z, float w)
        {
            this.size_.x = x;
            this.size_.y = y;
            this.size_.z = z;
            this.size_.w = w;
        }

        public void set_size(AppMain.NNS_VECTOR4D v)
        {
            this.size_.Assign(v);
        }

        public AppMain.AMS_RGBA8888_Buf color
        {
            get
            {
                return this.color_;
            }
        }

        public void set_color(byte r, byte g, byte b, byte a)
        {
            this.color_.r = r;
            this.color_.g = g;
            this.color_.b = b;
            this.color_.a = a;
        }

        public void set_color(uint c)
        {
            this.color_.color = c;
        }

        public float tex_time
        {
            get
            {
                return BitConverter.ToSingle(this.rtm_work_.dummy, AppMain.Vector4D_Buf.SizeBytes * 3 + AppMain.AMS_RGBA8888_Buf.SizeBytes);
            }
            set
            {
                int offset = AppMain.Vector4D_Buf.SizeBytes * 3 + AppMain.AMS_RGBA8888_Buf.SizeBytes;
                MppBitConverter.GetBytes(value, this.rtm_work_.dummy, offset);
            }
        }

        public int tex_no
        {
            get
            {
                return BitConverter.ToInt32(this.rtm_work_.dummy, AppMain.Vector4D_Buf.SizeBytes * 3 + AppMain.AMS_RGBA8888_Buf.SizeBytes + 4);
            }
            set
            {
                int offset = AppMain.Vector4D_Buf.SizeBytes * 3 + AppMain.AMS_RGBA8888_Buf.SizeBytes + 4;
                MppBitConverter.GetBytes(value, this.rtm_work_.dummy, offset);
            }
        }

        public static explicit operator AppMain.AMS_AME_LIST(
          AppMain.AMS_AME_RUNTIME_WORK_PLANE work)
        {
            return (AppMain.AMS_AME_LIST)work.rtm_work_;
        }
    }

    public struct AMS_AME_RUNTIME_WORK_SURFACE
    {
        private AppMain.AMS_AME_RUNTIME_WORK rtm_work_;

        public AMS_AME_RUNTIME_WORK_SURFACE(AppMain.AMS_AME_RUNTIME_WORK rtm_work)
        {
            this.rtm_work_ = rtm_work;
        }

        public AppMain.AMS_AME_LIST next
        {
            get
            {
                return this.rtm_work_.next;
            }
            set
            {
                this.rtm_work_.next = value;
            }
        }

        public AppMain.AMS_AME_LIST prev
        {
            get
            {
                return this.rtm_work_.prev;
            }
            set
            {
                this.rtm_work_.prev = value;
            }
        }

        public float time
        {
            get
            {
                return this.rtm_work_.time;
            }
            set
            {
                this.rtm_work_.time = value;
            }
        }

        public uint flag
        {
            get
            {
                return this.rtm_work_.flag;
            }
            set
            {
                this.rtm_work_.flag = value;
            }
        }

        public AppMain.NNS_VECTOR4D position
        {
            get
            {
                return this.rtm_work_.position;
            }
            set
            {
                this.rtm_work_.position.Assign(value);
            }
        }

        public AppMain.NNS_VECTOR4D velocity
        {
            get
            {
                return this.rtm_work_.velocity;
            }
            set
            {
                this.rtm_work_.velocity.Assign(value);
            }
        }

        public AppMain.NNS_QUATERNION rotate
        {
            get
            {
                return this.rtm_work_.rotate[0];
            }
            set
            {
                this.rtm_work_.rotate[0] = value;
            }
        }

        public float width
        {
            get
            {
                return BitConverter.ToSingle(this.rtm_work_.dummy, 0);
            }
            set
            {
                MppBitConverter.GetBytes(value, this.rtm_work_.dummy, 0);
            }
        }

        public float height
        {
            get
            {
                return BitConverter.ToSingle(this.rtm_work_.dummy, 4);
            }
            set
            {
                MppBitConverter.GetBytes(value, this.rtm_work_.dummy, 4);
            }
        }

        public float offset
        {
            get
            {
                return BitConverter.ToSingle(this.rtm_work_.dummy, 8);
            }
            set
            {
                MppBitConverter.GetBytes(value, this.rtm_work_.dummy, 8);
            }
        }

        public float offset_chaos
        {
            get
            {
                return BitConverter.ToSingle(this.rtm_work_.dummy, 12);
            }
            set
            {
                MppBitConverter.GetBytes(value, this.rtm_work_.dummy, 12);
            }
        }

        public static explicit operator AppMain.AMS_AME_LIST(
          AppMain.AMS_AME_RUNTIME_WORK_SURFACE work)
        {
            return (AppMain.AMS_AME_LIST)work.rtm_work_;
        }
    }

    public struct AMS_AME_RUNTIME_WORK_CIRCLE
    {
        private AppMain.AMS_AME_RUNTIME_WORK rtm_work_;

        public AMS_AME_RUNTIME_WORK_CIRCLE(AppMain.AMS_AME_RUNTIME_WORK rtm_work)
        {
            this.rtm_work_ = rtm_work;
        }

        public AppMain.AMS_AME_LIST next
        {
            get
            {
                return this.rtm_work_.next;
            }
            set
            {
                this.rtm_work_.next = value;
            }
        }

        public AppMain.AMS_AME_LIST prev
        {
            get
            {
                return this.rtm_work_.prev;
            }
            set
            {
                this.rtm_work_.prev = value;
            }
        }

        public float time
        {
            get
            {
                return this.rtm_work_.time;
            }
            set
            {
                this.rtm_work_.time = value;
            }
        }

        public uint flag
        {
            get
            {
                return this.rtm_work_.flag;
            }
            set
            {
                this.rtm_work_.flag = value;
            }
        }

        public AppMain.NNS_VECTOR4D position
        {
            get
            {
                return this.rtm_work_.position;
            }
            set
            {
                this.rtm_work_.position.Assign(value);
            }
        }

        public AppMain.NNS_VECTOR4D velocity
        {
            get
            {
                return this.rtm_work_.velocity;
            }
            set
            {
                this.rtm_work_.velocity.Assign(value);
            }
        }

        public AppMain.NNS_QUATERNION rotate
        {
            get
            {
                return this.rtm_work_.rotate[0];
            }
            set
            {
                this.rtm_work_.rotate[0] = value;
            }
        }

        public float spread
        {
            get
            {
                return BitConverter.ToSingle(this.rtm_work_.dummy, 0);
            }
            set
            {
                MppBitConverter.GetBytes(value, this.rtm_work_.dummy, 0);
            }
        }

        public float radius
        {
            get
            {
                return BitConverter.ToSingle(this.rtm_work_.dummy, 4);
            }
            set
            {
                MppBitConverter.GetBytes(value, this.rtm_work_.dummy, 4);
            }
        }

        public float offset
        {
            get
            {
                return BitConverter.ToSingle(this.rtm_work_.dummy, 8);
            }
            set
            {
                MppBitConverter.GetBytes(value, this.rtm_work_.dummy, 8);
            }
        }

        public float offset_chaos
        {
            get
            {
                return BitConverter.ToSingle(this.rtm_work_.dummy, 12);
            }
            set
            {
                MppBitConverter.GetBytes(value, this.rtm_work_.dummy, 12);
            }
        }

        public static explicit operator AppMain.AMS_AME_LIST(
          AppMain.AMS_AME_RUNTIME_WORK_CIRCLE work)
        {
            return (AppMain.AMS_AME_LIST)work.rtm_work_;
        }
    }

    public class AMS_AME_ENTRY : AppMain.AMS_AME_LIST
    {
        public AppMain.AMS_AME_RUNTIME runtime;
        public uint reserved;
    }

    public class AMS_AME_CREATE_PARAM : AppMain.IClearable
    {
        public AppMain.AMS_AME_ECB ecb;
        public AppMain.AMS_AME_RUNTIME runtime;
        public AppMain.AMS_AME_NODE node;
        public AppMain.AMS_AME_RUNTIME_WORK work;
        public AppMain.NNS_VECTOR4D position;
        public AppMain.NNS_VECTOR4D velocity;
        public AppMain.NNS_VECTOR4D parent_position;
        public AppMain.NNS_VECTOR4D parent_velocity;

        public void Clear()
        {
            this.ecb = (AppMain.AMS_AME_ECB)null;
            this.runtime = (AppMain.AMS_AME_RUNTIME)null;
            this.node = (AppMain.AMS_AME_NODE)null;
            this.work = (AppMain.AMS_AME_RUNTIME_WORK)null;
            this.position = (AppMain.NNS_VECTOR4D)null;
            this.velocity = (AppMain.NNS_VECTOR4D)null;
            this.parent_position = (AppMain.NNS_VECTOR4D)null;
            this.parent_velocity = (AppMain.NNS_VECTOR4D)null;
        }
    }

    public delegate int AmeDelegateFunc(object o);

    public delegate void AmeFieldFunc(
      AppMain.AMS_AME_ECB ecb,
      AppMain.AMS_AME_NODE node,
      AppMain.AMS_AME_RUNTIME_WORK work);

    public class AMS_AME_CUSTOM_PARAM
    {
        private object _pInitFieldFunc;
        public AppMain.AmeDelegateFunc pUpdateFunc;
        public AppMain.AmeDelegateFunc pDrawFunc;

        public AppMain.AmeDelegateFunc pInitFunc
        {
            get
            {
                return (AppMain.AmeDelegateFunc)this._pInitFieldFunc;
            }
            set
            {
                this._pInitFieldFunc = (object)value;
            }
        }

        public AppMain.AmeFieldFunc pFieldFunc
        {
            get
            {
                return (AppMain.AmeFieldFunc)this._pInitFieldFunc;
            }
            set
            {
                this._pInitFieldFunc = (object)value;
            }
        }
    }

    public class GMS_PLY_EFCT_TRAIL_COLOR
    {
        public readonly AppMain.NNS_RGBA start_col;
        public readonly AppMain.NNS_RGBA end_col;

        public GMS_PLY_EFCT_TRAIL_COLOR(AppMain.NNS_RGBA s_col, AppMain.NNS_RGBA e_col)
        {
            this.start_col = s_col;
            this.end_col = e_col;
        }

        public GMS_PLY_EFCT_TRAIL_COLOR()
        {
            this.start_col = new AppMain.NNS_RGBA();
            this.end_col = new AppMain.NNS_RGBA();
        }
    }

    public class GMS_PLY_EFCT_TRAIL_SETTING
    {
        public float start_size;
        public float end_size;
        public float life;
        public float vanish_time;

        public GMS_PLY_EFCT_TRAIL_SETTING(
          float start_size,
          float end_size,
          float life,
          float vanish_time)
        {
            this.start_size = start_size;
            this.end_size = end_size;
            this.life = life;
            this.vanish_time = vanish_time;
        }
    }

    public class GMS_GMK_PULLEY_REGISTER
    {
        public ushort type;
        public ushort flip;
        public AppMain.VecFx32 vec;
    }

    public class GMS_GMK_PULLEY_MANAGER
    {
        public readonly AppMain.GMS_GMK_PULLEY_REGISTER[] reg = AppMain.New<AppMain.GMS_GMK_PULLEY_REGISTER>(32);
        public uint tex_id;
        public AppMain.NNS_TEXLIST texlist;
        public uint num;
        public uint rsv;
    }

    public class GmkPopSteamData
    {
        public const int GME_GMK_RECT_DATA_DEF_LEFT = 0;
        public const int GME_GMK_RECT_DATA_DEF_TOP = 1;
        public const int GME_GMK_RECT_DATA_DEF_RIGHT = 2;
        public const int GME_GMK_RECT_DATA_DEF_BOTTOM = 3;
        public const int GME_GMK_RECT_DATA_MAX = 4;
        public const int GME_GMK_TYPE_MAX = 4;
    }

    public class GMS_GMK_ITEM_MAT_CB_PARAM
    {
        public uint draw_id;
    }

    public class GMS_EFCT_ZONE_CREATE_PARAM
    {
        public readonly AppMain.GMS_EFFECT_CREATE_PARAM create_param;
        public int model_dwork_no;
        public int mdl_ambtex_idx;

        public GMS_EFCT_ZONE_CREATE_PARAM()
        {
            this.create_param = new AppMain.GMS_EFFECT_CREATE_PARAM();
        }

        public GMS_EFCT_ZONE_CREATE_PARAM(
          AppMain.GMS_EFFECT_CREATE_PARAM create_param,
          int model_dwork_no,
          int mdl_ambtex_idx)
        {
            this.create_param = create_param;
            this.mdl_ambtex_idx = mdl_ambtex_idx;
            this.model_dwork_no = model_dwork_no;
        }
    }

    public class GMS_EFCT_ZONE_CREATE_INFO
    {
        public AppMain.GMS_EFCT_ZONE_CREATE_PARAM[] zone_create_param;
        public int num;

        public GMS_EFCT_ZONE_CREATE_INFO(
          AppMain.GMS_EFCT_ZONE_CREATE_PARAM[] zone_create_param,
          int num)
        {
            this.zone_create_param = zone_create_param;
            this.num = num;
        }
    }

    public class DMS_STFRL_FS_DATA_MGR
    {
        public readonly AppMain.AMS_AMB_HEADER[] arc_cmn_amb_fs = new AppMain.AMS_AMB_HEADER[2];
        public AppMain.AMS_AMB_HEADER arc_list_font_amb_fs;
        public AppMain.AMS_AMB_HEADER arc_scr_amb_fs;
        public AppMain.AMS_AMB_HEADER arc_end_amb_fs;
        public AppMain.AMS_AMB_HEADER arc_end_jp_amb_fs;
        public AppMain.AMS_FS staff_list_fs;

        public void Clear()
        {
            this.arc_list_font_amb_fs = (AppMain.AMS_AMB_HEADER)null;
            this.arc_scr_amb_fs = (AppMain.AMS_AMB_HEADER)null;
            this.arc_end_amb_fs = (AppMain.AMS_AMB_HEADER)null;
            this.arc_end_jp_amb_fs = (AppMain.AMS_AMB_HEADER)null;
            Array.Clear((Array)this.arc_cmn_amb_fs, 0, this.arc_cmn_amb_fs.Length);
            this.staff_list_fs = (AppMain.AMS_FS)null;
        }
    }

    public class DMS_STFRL_DATA_MGR
    {
        public readonly AppMain.AMS_AMB_HEADER[] arc_cmn_amb = new AppMain.AMS_AMB_HEADER[2];
        public AppMain.AMS_AMB_HEADER arc_font_amb;
        public AppMain.AMS_AMB_HEADER arc_scr_amb;
        public AppMain.AMS_AMB_HEADER arc_end_amb;
        public AppMain.AMS_AMB_HEADER arc_end_jp_amb;
        public AppMain.YSDS_HEADER stf_list_ysd;

        public void Clear()
        {
            this.arc_font_amb = (AppMain.AMS_AMB_HEADER)null;
            this.arc_scr_amb = (AppMain.AMS_AMB_HEADER)null;
            this.arc_end_amb = (AppMain.AMS_AMB_HEADER)null;
            this.arc_end_jp_amb = (AppMain.AMS_AMB_HEADER)null;
            Array.Clear((Array)this.arc_cmn_amb, 0, 2);
            this.stf_list_ysd = (AppMain.YSDS_HEADER)null;
        }
    }

    private enum DME_STFRL_ACT
    {
        ACT_LIGHT_BG_LT,
        ACT_LIGHT_BG_LB,
        ACT_LIGHT_BG_RT,
        ACT_LIGHT_BG_RB,
        ACT_METAL_SONIC,
        ACT_M_SONIC_EYE,
        ACT_BLACK_BG,
        ACT_WHITE_BG,
        ACT_TEX_TRYAGAIN,
        ACT_TEX_CONTINUED,
        ACT_TEX_WIN_MSG,
        ACT_NUM,
        ACT_NONE,
    }

    public class DMS_STFRL_MAIN_WORK
    {
        public readonly AppMain.DMS_STFRL_DATA_MGR arc_data = new AppMain.DMS_STFRL_DATA_MGR();
        public readonly AppMain.AMS_AMB_HEADER[] arc_cmn_amb_fs = new AppMain.AMS_AMB_HEADER[2];
        public readonly AppMain.AOS_TEXTURE font_tex = new AppMain.AOS_TEXTURE();
        public readonly AppMain.AOS_TEXTURE[] scr_tex = AppMain.New<AppMain.AOS_TEXTURE>(3);
        public readonly AppMain.AOS_TEXTURE end_tex = new AppMain.AOS_TEXTURE();
        public readonly AppMain.AOS_TEXTURE end_jp_tex = new AppMain.AOS_TEXTURE();
        public readonly AppMain.A2S_AMA_HEADER[] cmn_ama = new AppMain.A2S_AMA_HEADER[2];
        public readonly AppMain.AMS_AMB_HEADER[] cmn_amb = new AppMain.AMS_AMB_HEADER[2];
        public readonly AppMain.AOS_TEXTURE[] cmn_tex = AppMain.New<AppMain.AOS_TEXTURE>(2);
        public readonly AppMain.AOS_ACTION[] act = new AppMain.AOS_ACTION[11];
        public readonly float[] win_size_rate = new float[2];
        public readonly bool[] data_disp_yet = new bool[3];
        public readonly bool[] check_file_load = new bool[3];
        public readonly AppMain.DMS_STFRL_RING_WORK[] ring_work = new AppMain.DMS_STFRL_RING_WORK[3];
        public AppMain.AMS_AMB_HEADER arc_list_font_amb;
        public AppMain.AMS_AMB_HEADER arc_scr_amb_fs;
        public AppMain.AMS_AMB_HEADER arc_end_amb_fs;
        public AppMain.AMS_AMB_HEADER arc_end_jp_amb_fs;
        public AppMain.AMS_FS arc_list_font_amb_fs;
        public object staff_list_fs;
        public AppMain.A2S_AMA_HEADER end_ama;
        public AppMain.AMS_AMB_HEADER end_amb;
        public AppMain.A2S_AMA_HEADER end_jp_ama;
        public AppMain.AMS_AMB_HEADER end_jp_amb;
        public object stf_list_ysd;
        public AppMain.DMS_STFRL_MAIN_WORK._proc_input_ proc_input;
        public AppMain.DMS_STFRL_MAIN_WORK._proc_update_ proc_update;
        public AppMain.DMS_STFRL_MAIN_WORK._proc_data_load_ proc_data_load;
        public AppMain.DMS_STFRL_MAIN_WORK._proc_draw_ proc_draw;
        public float timer;
        public uint flag;
        public float efct_timer;
        public float fade_timer;
        public float win_timer;
        public float disp_frm_time;
        public uint disp_mode;
        public bool is_eme_comp;
        public uint win_mode;
        public uint announce_flag;
        public float sonic_set_frame;
        public float list_disp_pos_x;
        public AppMain.AOS_ACT_COL list_col;
        public float sonic_move_spd;
        public int end_act_frm;
        public int continue_act_frm;
        public int load_data_num;
        public bool is_full_staffroll;
        public uint draw_state;
        public uint cur_disp_scr_id;
        public uint disp_list_page_num;
        public uint cur_disp_list_page;
        public uint prev_disp_list_page;
        public uint disp_page_time;
        public uint cur_disp_image;
        public uint[] page_line_type;
        public uint cur_page_list_alpha_data;
        public uint cur_page_scr_alpha_data;
        public AppMain.AOS_ACT_COL question_act_alpha;
        public AppMain.DMS_STFRL_SONIC_WORK sonic_work;
        public AppMain.DMS_STFRL_BOSS_BODY_WORK body_work;
        public AppMain.DMS_STFRL_BOSS_EGG_WORK egg_work;
        public AppMain.GSS_SND_SCB bgm_scb;
        public AppMain.GSS_SND_SE_HANDLE se_handle;

        public delegate void _proc_input_(AppMain.DMS_STFRL_MAIN_WORK work);

        public delegate void _proc_update_(AppMain.DMS_STFRL_MAIN_WORK work);

        public delegate void _proc_data_load_(AppMain.DMS_STFRL_MAIN_WORK work);

        public delegate void _proc_draw_(AppMain.DMS_STFRL_MAIN_WORK work);
    }

    public class DMS_STFRL_MGR
    {
        public AppMain.MTS_TASK_TCB tcb;
    }
    #endregion
}
